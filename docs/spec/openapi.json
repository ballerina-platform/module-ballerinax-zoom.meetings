{
  "openapi": "3.0.0",
  "info": {
    "title": "Meetings",
    "description": "The Zoom Meeting APIs allow developers to interface with Zoom Meetings and Webinars programmatically.",
    "termsOfService": "https://zoom.us/docs/en-us/zoom_api_license_and_tou.html",
    "contact": {
      "name": "Zoom Developers",
      "url": "https://developer.zoom.us/"
    },
    "version": "2"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "https://swagger.io"
  },
  "servers": [
    {
      "url": "https://api.zoom.us/v2"
    }
  ],
  "paths": {
    "/archive_files": {
      "get": {
        "tags": [
          "Archiving"
        ],
        "summary": "List archived files",
        "description": "Get an account's archived meeting or webinar files. \n\n Zoom's [archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-indicators) lets account administrators set up an automated mechanism to record, collect, and archive meeting data to a third-party platform of their choice to satisfy FINRA or other compliance requirements. \n\n **Prerequisites:** \n* The [**Meeting and Webinar Archiving** feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars) enabled for your account by [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003).\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `recording:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `archiving:read:list_archived_files:admin`,`archiving:read:list_archived_files:master`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listArchivedFiles",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
            },
            "x-ballerina-name": "nextPageToken"
          },
          {
            "name": "from",
            "in": "query",
            "description": "The query start date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `to` query parameter value cannot exceed seven days",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-03-11T05:41:36Z"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The query end date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `from` query parameter value cannot exceed seven days",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-03-18T05:41:36Z"
            }
          },
          {
            "name": "query_date_type",
            "in": "query",
            "description": "The type of query date.\n* `meeting_start_time` \n* `archive_complete_time` \n\n This value defaults to `meeting_start_time`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "meeting_start_time",
              "default": "meeting_start_time",
              "enum": [
                "meeting_start_time",
                "archive_complete_time"
              ]
            },
            "x-ballerina-name": "queryDateType"
          },
          {
            "name": "group_id",
            "in": "query",
            "description": "Deprecated. Please use 'group_ids' for querying",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "pvFIYKSDTum9iCDOOtQL4w",
              "deprecated": true
            },
            "x-ballerina-name": "groupId"
          },
          {
            "name": "group_ids",
            "in": "query",
            "description": "The group IDs. To get a group ID, use the [List groups](/docs/api/rest/reference/scim-api/methods/#operation/groupSCIM2List) API.\n(The maximum number of supported groups for filtering is 7.)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "CVCF1k8ZR3e52ChmEzlNxA,lwQiDh2kS0WaawetgMjtfw"
            },
            "x-ballerina-name": "groupIds"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \n Archived files returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse200"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2001` <br>\n Account does not exist: {accountId} <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "recording:read:admin",
              "archiving:read:list_archived_files:admin",
              "archiving:read:list_archived_files:master"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "Recording:Read"
          ],
          "x-macro-scopes": [
            "recording:read:admin"
          ],
          "x-granular-scopes": [
            "archiving:read:list_archived_files:admin",
            "archiving:read:list_archived_files:master"
          ]
        }
      }
    },
    "/archive_files/statistics": {
      "get": {
        "tags": [
          "Archiving"
        ],
        "summary": "Get archived file statistics",
        "description": "Get statistics about an account's archived meeting or webinar files. \n\n Zoom's [archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-indicators) lets account administrators set up an automated mechanism to record, collect, and archive meeting data to a third-party platform of their choice to satisfy FINRA and other compliance requirements. \n\n **Prerequisites:** \n* The [**Meeting and Webinar Archiving** feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars) enabled for your account by [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003).\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `recording:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `archiving:read:archived_file_statistics:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "getArchivedFileStatistics",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The query start date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `to` query parameter value cannot exceed seven days",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-03-11T05:41:36Z"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The query end date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `from` query parameter value cannot exceed seven days",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-03-18T05:41:36Z"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \n The statistics of Archived files returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse2001"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2001` <br>\n Account does not exist: {accountId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "recording:read:admin",
              "archiving:read:archived_file_statistics:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "recording:read:admin"
          ],
          "x-granular-scopes": [
            "archiving:read:archived_file_statistics:admin"
          ]
        }
      }
    },
    "/archive_files/{fileId}": {
      "patch": {
        "tags": [
          "Archiving"
        ],
        "summary": "Update an archived file's auto-delete status",
        "description": "Update an archived file's auto-delete status. \n\n **Prerequisites:** \n* [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003) must enable the [**Meeting and Webinar Archiving** feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars) for your account.\n* Open the disabling auto-delete feature in OP. Contact [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003) to open.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `recording:write`,`recording:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `archiving:update:archived_file_auto_delete_status`,`archiving:update:archived_file_auto_delete_status:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateArchivedFile",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "Archived file ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "a5983951-044e-473f-9acd-5c398c0a8cce"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArchiveFilesfileIdBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\n auto-delete status updated  \n\n "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "recording:write",
              "recording:write:admin",
              "archiving:update:archived_file_auto_delete_status",
              "archiving:update:archived_file_auto_delete_status:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "Recording:Edit"
          ],
          "x-macro-scopes": [
            "recording:write",
            "recording:write:admin"
          ],
          "x-granular-scopes": [
            "archiving:update:archived_file_auto_delete_status",
            "archiving:update:archived_file_auto_delete_status:admin"
          ]
        }
      }
    },
    "/past_meetings/{meetingUUID}/archive_files": {
      "get": {
        "tags": [
          "Archiving"
        ],
        "summary": "Get a meeting's archived files",
        "description": "Return a specific meeting instance's [archived files](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-indicators). \n\n **Prerequisites:** \n* The [**Meeting and Webinar Archiving** feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars) enabled for your account by [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003).\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `recording:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `archiving:read:archived_files:admin`,`archiving:read:archived_files`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getArchivedFiles",
        "parameters": [
          {
            "name": "meetingUUID",
            "in": "path",
            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a UUID. After a meeting ends, a new UUID is generated for the next meeting instance.\n\nIf the meeting UUID begins with a `/` character or contains a `//` character, you **must** [double encode](/docs/api/using-zoom-apis/#meeting-id-and-uuid) the meeting UUID when using the meeting UUID for other API calls",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "4444AAAiAAAAAiAiAiiAii=="
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n\n Meeting archived files returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse2002"
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting {meetingUUId} does not exist. <br> <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "recording:read",
              "archiving:read:archived_files:admin",
              "archiving:read:archived_files"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "recording:read"
          ],
          "x-granular-scopes": [
            "archiving:read:archived_files:admin",
            "archiving:read:archived_files"
          ]
        }
      },
      "delete": {
        "tags": [
          "Archiving"
        ],
        "summary": "Delete a meeting's archived files",
        "description": "Delete all of a meeting's archived files. \n\n **Prerequisites:** \n* The [**Meeting and Webinar Archiving** feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars) enabled for your account by [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003).\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `recording:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `archiving:delete:archived_files:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteArchivedFiles",
        "parameters": [
          {
            "name": "meetingUUID",
            "in": "path",
            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a UUID. For example, after a meeting ends, a new UUID is generated for the next meeting instance.\n\nIf the meeting UUID begins with a `/` character or contains a `//` character, you **must** double-encode the meeting UUID when using the meeting UUID for other API calls",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "4444AAAiAAAAAiAiAiiAii=="
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \n Meeting archived file deleted"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n Only available for Paid account. <br>\n**Error Code:** `200` <br>\n Not available for this account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {0} <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "recording:write:admin",
              "archiving:delete:archived_files:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "recording:write:admin"
          ],
          "x-granular-scopes": [
            "archiving:delete:archived_files:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/recordings": {
      "get": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "Get meeting recordings",
        "description": "Returns all of a meeting's [recordings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0062627#h_7420acb5-1897-4061-87b4-5b76e99c03b4). Use the `download_url` property listed in the response to download the recording files.  To access a password-protected cloud recording, send the `download_access_token` or the user's [OAuth access token](/docs/integrations/oauth/) as a Bearer token in the Authorization header. For example: \n\n `curl -H 'Authorization: Bearer <ACCESS_TOKEN>' https://{{base-domain}}/rec/archive/download/xyz` \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `recording:read`,`phone_recording:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `cloud_recording:read:list_recording_files:admin`,`cloud_recording:read:list_recording_files`,`cloud_recording:read:list_recording_files:master`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "recordingGet",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "To get a meeting's cloud recordings, provide the meeting ID or UUID. If providing the meeting ID instead of UUID, the response will be for the latest meeting instance. \n\nTo get a webinar's cloud recordings, provide the webinar's ID or UUID. If providing the webinar ID instead of UUID, the response will be for the latest webinar instance. \n\nIf a UUID starts with `/` or contains `//` (example: `/ajXp112QmuoKj4854875==`), **[double encode](/docs/api/using-zoom-apis/#meeting-id-and-uuid) the UUID** before making an API request. ",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "atsXxhSEQWit9t+U02HXNQ=="
            }
          },
          {
            "name": "include_fields",
            "in": "query",
            "description": "Include fields in the response. Currently, only accepts `download_access_token` to get this token field and value for downloading the meeting's recordings. The `download_access_token` requires **View the recording content** enabled for the role authorizing the account. Use the format `include_fields=download_access_token`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "download_access_token"
            },
            "x-ballerina-name": "includeFields"
          },
          {
            "name": "ttl",
            "in": "query",
            "description": "The `download_access_token` Time to Live (TTL) value. This parameter is only valid if the `include_fields` query parameter contains the value `download_access_token`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 604800,
              "minimum": 0,
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nRecording object returned. \n\n**Error Code:** `200`   \n \nYou do not have the right permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse2003"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1010` <br>\n User not found on this account: {accountId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User \"{userId}\" does not exist or does not belong to this account. <br>\n**Error Code:** `3301` <br>\n There is no recording for this meeting. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "recording:read",
              "phone_recording:read:admin",
              "cloud_recording:read:list_recording_files:admin",
              "cloud_recording:read:list_recording_files",
              "cloud_recording:read:list_recording_files:master"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "recording:read",
            "phone_recording:read:admin"
          ],
          "x-granular-scopes": [
            "cloud_recording:read:list_recording_files:admin",
            "cloud_recording:read:list_recording_files",
            "cloud_recording:read:list_recording_files:master"
          ]
        }
      },
      "delete": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "Delete meeting or webinar recordings",
        "description": "Delete all of a meeting's or webinar's recording files.  \n\n**Prerequisites**:\n* Cloud Recording should be enabled on the user's account.  \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `recording:write:admin`,`recording:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `cloud_recording:delete:meeting_recording`,`cloud_recording:delete:meeting_recording:admin`,`cloud_recording:delete:meeting_recording:master`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "recordingDelete",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "To get a meeting's cloud recordings, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID, the response will be for the latest meeting instance. \n\nTo get a webinar's cloud recordings, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID, the response will be for the latest webinar instance. \n\nIf a UUID starts with `/` or contains `//`, like `/ajXp112QmuoKj4854875==`, you must **double encode** the UUID before making an API request. ",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "atsXxhSEQWit9t+U02HXNQ=="
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "The recording delete actions:  \n `trash` - Move recording to trash.  \n `delete` - Delete recording permanently",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "delete",
              "default": "trash",
              "enum": [
                "trash",
                "delete"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nRecordings deleted. \n\n**Error Code:** `200`   \n \nYou do not have the right permission"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1010` <br>\n User does not belong to this account: {accountId}. <br>\n**Error Code:** `3310` <br>\n This recording was selected for a simulive webinar. You cannot delete or trash it. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User {userId} does not exist or does not belong to this account.<br> <br>\n**Error Code:** `3301` <br>\n There is no recording for this meeting. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "recording:write:admin",
              "recording:write",
              "cloud_recording:delete:meeting_recording",
              "cloud_recording:delete:meeting_recording:admin",
              "cloud_recording:delete:meeting_recording:master"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "recording:write:admin",
            "recording:write"
          ],
          "x-granular-scopes": [
            "cloud_recording:delete:meeting_recording",
            "cloud_recording:delete:meeting_recording:admin",
            "cloud_recording:delete:meeting_recording:master"
          ]
        }
      }
    },
    "/meetings/{meetingId}/recordings/analytics_details": {
      "get": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "Get a meeting or webinar recording's analytics details",
        "description": "Retrieve a meeting or webinar recording's [analytics details](https://support.zoom.us/hc/en-us/articles/205347605-Managing-cloud-recordings#h_0b665029-ce74-4849-9794-d1aa0320d163). **Maximum duration:** 1 month.\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `cloud_recording:read:recording_analytics_details`,`cloud_recording:read:recording_analytics_details:master`,`cloud_recording:read:recording_analytics_details:admin`",
        "operationId": "analytics_details",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "To get a meeting's cloud recordings, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID, the response will be for the latest meeting instance. \n\nTo get a webinar's cloud recordings, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID, the response will be for the latest webinar instance. \n\nIf a UUID starts with `/` or contains `//`, like `/ajXp112QmuoKj4854875==`, you must **double encode** the UUID before making an API request. ",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "atsXxhSEQWit9t+U02HXNQ=="
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
            },
            "x-ballerina-name": "nextPageToken"
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start date for the monthly range to query. The maximum range can be a month. If you do not provide this value, this defaults to the current date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-06-30"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The end date for the monthly range to query. The maximum range can be a month",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-07-30"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type of analytics details: \n* `by_view` &mdash; by_view. \n* `by_download` &mdash; by_download",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "by_view",
              "enum": [
                "by_view",
                "by_download"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nAnalytics Detail listed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse2004"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1010` <br>\n User not found on this account: {accountId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User \"{userId}\" does not exist or does not belong to this account. <br>\n**Error Code:** `3301` <br>\n There is no recording for this meeting. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "cloud_recording:read:recording_analytics_details",
              "cloud_recording:read:recording_analytics_details:master",
              "cloud_recording:read:recording_analytics_details:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-granular-scopes": [
            "cloud_recording:read:recording_analytics_details",
            "cloud_recording:read:recording_analytics_details:master",
            "cloud_recording:read:recording_analytics_details:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/recordings/analytics_summary": {
      "get": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "Get a meeting or webinar recording's analytics summary",
        "description": "Retrieve meeting recording's [analytics summary](https://support.zoom.us/hc/en-us/articles/205347605-Managing-cloud-recordings#h_0b665029-ce74-4849-9794-d1aa0320d163). **Maximum duration:** 1 month.\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `cloud_recording:read:recording_analytics_summary`,`cloud_recording:read:recording_analytics_summary:master`,`cloud_recording:read:recording_analytics_summary:admin`",
        "operationId": "analytics_summary",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "To get a meeting's cloud recordings, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID, the response will be for the latest meeting instance. \n\nTo get a webinar's cloud recordings, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID, the response will be for the latest webinar instance. \n\nIf a UUID starts with `/` or contains `//`, like `/ajXp112QmuoKj4854875==`, you must **double encode** the UUID before making an API request. ",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "atsXxhSEQWit9t+U02HXNQ=="
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start date for the monthly range to query. The maximum range can be a month. If you do not provide this value, this defaults to the current date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-06-30"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The end date for the monthly range to query. The maximum range can be a month",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-07-30"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nAnalytics Summary listed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse2005"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1010` <br>\n User not found on this account: {accountId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User \"{userId}\" does not exist or does not belong to this account. <br>\n**Error Code:** `3301` <br>\n There is no recording for this meeting. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "cloud_recording:read:recording_analytics_summary",
              "cloud_recording:read:recording_analytics_summary:master",
              "cloud_recording:read:recording_analytics_summary:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-granular-scopes": [
            "cloud_recording:read:recording_analytics_summary",
            "cloud_recording:read:recording_analytics_summary:master",
            "cloud_recording:read:recording_analytics_summary:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/recordings/registrants": {
      "get": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "List recording registrants",
        "description": "Get a list of registrants of a past meeting's [on-demand cloud recordings](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-recordings). Users must [register](/api-reference/zoom-api/methods#operation/meetingRecordingRegistrantCreate) to view the recordings. \n\n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `recording:read:admin`,`recording:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `cloud_recording:read:list_recording_registrants`,`cloud_recording:read:list_recording_registrants:admin`,`cloud_recording:read:list_recording_registrants:master`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "meetingRecordingRegistrants",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Query by the registrant's status. \n* `pending` - The registration is pending. \n* `approved` - The registrant is approved. \n* `denied` - The registration is denied",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "pending",
              "default": "approved",
              "enum": [
                "pending",
                "approved",
                "denied"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1,
              "default": 1
            },
            "x-ballerina-name": "pageNumber"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
            },
            "x-ballerina-name": "nextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \n Registrants returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingCloudRecordingRegistration"
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "recording:read:admin",
              "recording:read",
              "cloud_recording:read:list_recording_registrants",
              "cloud_recording:read:list_recording_registrants:admin",
              "cloud_recording:read:list_recording_registrants:master"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "recording:read:admin",
            "recording:read"
          ],
          "x-granular-scopes": [
            "cloud_recording:read:list_recording_registrants",
            "cloud_recording:read:list_recording_registrants:admin",
            "cloud_recording:read:list_recording_registrants:master"
          ]
        }
      },
      "post": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "Create a recording registrant",
        "description": "Register a user to gain access to **On-demand cloud recordings** of a previous meeting.\n\nCloud recordings of past Zoom meetings can be made [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings). Users should be [registered](/api-reference/zoom-api/methods#operation/meetingRecordingRegistrantCreate) to view these recordings.\n\n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `recording:write:admin`,`recording:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `cloud_recording:write:recording_registrant`,`cloud_recording:write:recording_registrant:master`,`cloud_recording:write:recording_registrant:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingRecordingRegistrantCreate",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordingsRegistrantsBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nRegistration submitted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse201"
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "recording:write:admin",
              "recording:write",
              "cloud_recording:write:recording_registrant",
              "cloud_recording:write:recording_registrant:master",
              "cloud_recording:write:recording_registrant:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "recording:write:admin",
            "recording:write"
          ],
          "x-granular-scopes": [
            "cloud_recording:write:recording_registrant",
            "cloud_recording:write:recording_registrant:master",
            "cloud_recording:write:recording_registrant:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/recordings/registrants/questions": {
      "get": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "Get registration questions",
        "description": "Retrieve a list of questions that are displayed for users to complete when registering to view the recording of a specific meeting.  \n \nFor [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings) meeting recordings, you can include fields with questions that will be shown to registrants when they register to view the recording.\n\n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `recording:read:admin`,`recording:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `cloud_recording:read:registration_questions`,`cloud_recording:read:registration_questions:master`,`cloud_recording:read:registration_questions:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "recordingRegistrantsQuestionsGet",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "To get a meeting's cloud recordings, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID, the response will be for the latest meeting instance. \n\nTo get a webinar's cloud recordings, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID, the response will be for the latest webinar instance. \n\nIf a UUID starts with `/` or contains `//`, like `/ajXp112QmuoKj4854875==`, you must **double encode** the UUID before making an API request. ",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "atsXxhSEQWit9t+U02HXNQ=="
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nRecording registrant question object returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordingRegistrantQuestions"
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "recording:read:admin",
              "recording:read",
              "cloud_recording:read:registration_questions",
              "cloud_recording:read:registration_questions:master",
              "cloud_recording:read:registration_questions:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "recording:read:admin",
            "recording:read"
          ],
          "x-granular-scopes": [
            "cloud_recording:read:registration_questions",
            "cloud_recording:read:registration_questions:master",
            "cloud_recording:read:registration_questions:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "Update registration questions",
        "description": "Update registration questions for users to answer while registering to view a recording.\n\nFor [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings) meeting recordings, you can include fields with questions that will be shown to registrants when they register to view the recording.\n\n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `recording:write:admin`,`recording:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `cloud_recording:update:registration_questions:admin`,`cloud_recording:update:registration_questions`,`cloud_recording:update:registration_questions:master`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "recordingRegistrantQuestionUpdate",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "To get a meeting's cloud recordings, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID, the response will be for the latest meeting instance. \n\nTo get a webinar's cloud recordings, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance. \n\nIf a UUID starts with `/` or contains `//`, like `/ajXp112QmuoKj4854875==`, you must **double encode** the UUID before making an API request. ",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "atsXxhSEQWit9t+U02HXNQ=="
            }
          }
        ],
        "requestBody": {
          "description": "Recording registrant questions",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrantsQuestionsBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `200`  \n \nRecording registrant questions updated"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "recording:write:admin",
              "recording:write",
              "cloud_recording:update:registration_questions:admin",
              "cloud_recording:update:registration_questions",
              "cloud_recording:update:registration_questions:master"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "recording:write:admin",
            "recording:write"
          ],
          "x-granular-scopes": [
            "cloud_recording:update:registration_questions:admin",
            "cloud_recording:update:registration_questions",
            "cloud_recording:update:registration_questions:master"
          ]
        }
      }
    },
    "/meetings/{meetingId}/recordings/registrants/status": {
      "put": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "Update a registrant's status",
        "description": "Update a registrant's status.\nA registrant can either be approved or denied from viewing the [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings) recording. \n\n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `recording:write:admin`,`recording:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `cloud_recording:update:registrant_status`,`cloud_recording:update:registrant_status:master`,`cloud_recording:update:registrant_status:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "meetingRecordingRegistrantStatus",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrantsStatusBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nRegistrant status updated"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "recording:write:admin",
              "recording:write",
              "cloud_recording:update:registrant_status",
              "cloud_recording:update:registrant_status:master",
              "cloud_recording:update:registrant_status:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "recording:write:admin",
            "recording:write"
          ],
          "x-granular-scopes": [
            "cloud_recording:update:registrant_status",
            "cloud_recording:update:registrant_status:master",
            "cloud_recording:update:registrant_status:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/recordings/settings": {
      "get": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "Get meeting recording settings",
        "description": "Retrieve settings applied to a meeting's [Cloud Recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).  \n   \n \nResponse includes recording content access information, which requires the current user to have the `View the recording content` permission to access it.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `recording:read:admin`,`recording:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `cloud_recording:read:recording_settings`,`cloud_recording:read:recording_settings:admin`,`cloud_recording:read:recording_settings:master`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "recordingSettingUpdate",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting ID lets you get cloud recording of a meeting or webinar.\n* Meeting - Provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID, the response is for the latest meeting instance. \n\n* Webinar - Provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID, the response is for the latest webinar instance. \n\nIf a UUID starts with `/` or contains `//` (example: `/ajXp112QmuoKj4854875==`), you must **double encode** the UUID before making an API request. ",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "atsXxhSEQWit9t+U02HXNQ=="
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`    Meeting recording settings returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordingSettings"
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "recording:read:admin",
              "recording:read",
              "cloud_recording:read:recording_settings",
              "cloud_recording:read:recording_settings:admin",
              "cloud_recording:read:recording_settings:master"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "recording:read:admin",
            "recording:read"
          ],
          "x-granular-scopes": [
            "cloud_recording:read:recording_settings",
            "cloud_recording:read:recording_settings:admin",
            "cloud_recording:read:recording_settings:master"
          ]
        }
      },
      "patch": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "Update meeting recording settings",
        "description": "Update settings applied to a meeting's [cloud recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).\nThe request contains the recording content access information, which requires the current user to have the `view recording content` and `recording editing` permissions to access.      \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `recording:write:admin`,`recording:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `cloud_recording:update:recording_settings`,`cloud_recording:update:recording_settings:master`,`cloud_recording:update:recording_settings:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "recordingSettingsUpdate",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "To get cloud recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID, the response is for the latest meeting instance. \n\nTo get cloud recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID, the response is for the latest webinar instance. \n\nIf a UUID starts with &quot;/&quot; or contains &quot;//&quot; (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **double encode** the UUID before making an API request. ",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "atsXxhSEQWit9t+U02HXNQ=="
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordingSettings1"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`    Meeting recording setting's updated"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "recording:write:admin",
              "recording:write",
              "cloud_recording:update:recording_settings",
              "cloud_recording:update:recording_settings:master",
              "cloud_recording:update:recording_settings:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "recording:write:admin",
            "recording:write"
          ],
          "x-granular-scopes": [
            "cloud_recording:update:recording_settings",
            "cloud_recording:update:recording_settings:master",
            "cloud_recording:update:recording_settings:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/recordings/{recordingId}": {
      "delete": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "Delete a recording file for a meeting or webinar",
        "description": "Delete a specific recording file from a meeting or webinar. Note: To use this API, you must enable the **The host can delete cloud recordings** setting. Find this setting in the **Recording** tab of the **Settings** interface in the [Zoom web portal](https://zoom.us/).\n\n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `recording:write:admin`,`recording:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `cloud_recording:delete:recording_file`,`cloud_recording:delete:recording_file:admin`,`cloud_recording:delete:recording_file:master`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "recordingDeleteOne",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "To get a meeting's cloud recordings, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID, the response will be for the latest meeting instance. \n\nTo get a webinar's cloud recordings, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID, the response will be for the latest webinar instance. \n\nIf a UUID starts with `/` or contains `//`, like `/ajXp112QmuoKj4854875==`, you must **double encode** the UUID before making an API request. ",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "atsXxhSEQWit9t+U02HXNQ=="
            }
          },
          {
            "name": "recordingId",
            "in": "path",
            "description": "The recording ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "a2f19f96-9294-4f51-8134-6f0eea108eb2"
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "The recording delete actions. \n `trash` - Move recording to trash.  \n `delete` - Delete recording permanently",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "delete",
              "default": "trash",
              "enum": [
                "trash",
                "delete"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nRecording deleted. \n\n**Error Code:** `200`  \n \nYou do not have the right permissions"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1010` <br>\n User does not belong to this account: {accountId}.<br> <br>\n**Error Code:** `3303` <br>\n You can not delete an uncompleted meeting. <br>\n**Error Code:** `3310` <br>\n This recording was selected for a simulive webinar. You cannot delete or trash it. <br>\n**Error Code:** `3310` <br>\n Unable to delete this file because this recording is being used for Zoom IQ for Sales. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User {userId} does not exist or does not belong to this account.<br> <br>\n**Error Code:** `3301` <br>\n There is no recording for this meeting. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "recording:write:admin",
              "recording:write",
              "cloud_recording:delete:recording_file",
              "cloud_recording:delete:recording_file:admin",
              "cloud_recording:delete:recording_file:master"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "recording:write:admin",
            "recording:write"
          ],
          "x-granular-scopes": [
            "cloud_recording:delete:recording_file",
            "cloud_recording:delete:recording_file:admin",
            "cloud_recording:delete:recording_file:master"
          ]
        }
      }
    },
    "/meetings/{meetingId}/recordings/{recordingId}/status": {
      "put": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "Recover a single recording",
        "description": "Recover a single recording file from the meeting.\n \nZoom lets users recover recordings from trash for up to 30 days from the deletion date.\n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `recording:write:admin`,`recording:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `cloud_recording:update:recover_single_recording`,`cloud_recording:update:recover_single_recording:master`,`cloud_recording:update:recover_single_recording:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "recordingStatusUpdateOne",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "To get a meeting's cloud recordings, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID, the response will be for the latest meeting instance. \n\nTo get a webinar's cloud recordings, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID, the response will be for the latest webinar instance. \n\nIf a UUID starts with `/` or contains `//`, like `/ajXp112QmuoKj4854875==`, you must **double encode** the UUID before making an API request. ",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "atsXxhSEQWit9t+U02HXNQ=="
            }
          },
          {
            "name": "recordingId",
            "in": "path",
            "description": "The recording ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "a2f19f96-9294-4f51-8134-6f0eea108eb2"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordingIdStatusBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n  Meeting recording recovered.\n\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1010` <br>\n User does not belong to this account: {accountId}. <br>\n**Error Code:** `3309` <br>\n Not enough cloud storage available. Either purchase additional storage or delete cloud recordings to free up storage. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User {userId} does not exist or does not belong to this account.<br> <br>\n**Error Code:** `3301` <br>\n There is no recording for this meeting. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "recording:write:admin",
              "recording:write",
              "cloud_recording:update:recover_single_recording",
              "cloud_recording:update:recover_single_recording:master",
              "cloud_recording:update:recover_single_recording:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "recording:write:admin",
            "recording:write"
          ],
          "x-granular-scopes": [
            "cloud_recording:update:recover_single_recording",
            "cloud_recording:update:recover_single_recording:master",
            "cloud_recording:update:recover_single_recording:admin"
          ]
        }
      }
    },
    "/meetings/{meetingUUID}/recordings/status": {
      "put": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "Recover meeting recordings",
        "description": "Recover all deleted [cloud recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording) of a specific meeting.  \nZoom lets users recover recordings from trash for up to 30 days from the deletion date. \n\n \n**Prerequisites**:  \n \n* A Pro user with Cloud Recording enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `recording:write:admin`,`recording:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `cloud_recording:update:recover_meeting_recordings`,`cloud_recording:update:recover_meeting_recordings:master`,`cloud_recording:update:recover_meeting_recordings:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "recordingStatusUpdate",
        "parameters": [
          {
            "name": "meetingUUID",
            "in": "path",
            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a UUID. For example, after a meeting ends, a new UUID is generated for the next meeting instance.\n\nIf the meeting UUID begins with a `/` character or contains a `//` character, you **must** double-encode the meeting UUID when using the meeting UUID for other API calls",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "4444AAAiAAAAAiAiAiiAii=="
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordingIdStatusBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nRecordings recovered. \n\n**Error Code:** `200`  \n \nYou do not have the right permissions"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1010` <br>\n User does not belong to this account: {accountId}. <br>\n**Error Code:** `3309` <br>\n Not enough cloud storage available. Either purchase additional storage or delete cloud recordings to free up storage. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId}.<br> <br>\n**Error Code:** `3301` <br>\n There is no recording for this meeting. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "recording:write:admin",
              "recording:write",
              "cloud_recording:update:recover_meeting_recordings",
              "cloud_recording:update:recover_meeting_recordings:master",
              "cloud_recording:update:recover_meeting_recordings:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "recording:write:admin",
            "recording:write"
          ],
          "x-granular-scopes": [
            "cloud_recording:update:recover_meeting_recordings",
            "cloud_recording:update:recover_meeting_recordings:master",
            "cloud_recording:update:recover_meeting_recordings:admin"
          ]
        }
      }
    },
    "/users/{userId}/recordings": {
      "get": {
        "tags": [
          "Cloud Recording"
        ],
        "summary": "List all recordings",
        "description": "Lists all [cloud recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording) for a user.  \n\nFor user-level apps, pass the [`me` value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword) instead of the `userId` parameter.  To access a user's passcode protected cloud recording, send the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) as a bearer token in the authorization header.  \n\nExample:  `curl -H \"Authorization: Bearer <ACCESS_TOKEN>\" https://{{base-domain}}/rec/archive/download/xyz`  \n\n**Prerequisites:**  \n* Must have a Pro or a higher plan.  \n* Must enable Cloud Recording on the user's account.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `recording:read:admin`,`recording:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `cloud_recording:read:list_user_recordings`,`cloud_recording:read:list_user_recordings:master`,`cloud_recording:read:list_user_recordings:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "recordingsList",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user's ID or email address. For user-level apps, pass the `me` value",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
            },
            "x-ballerina-name": "nextPageToken"
          },
          {
            "name": "mc",
            "in": "query",
            "description": "The query metadata of the recording if using an on-premise meeting connector for the meeting",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "false",
              "default": "false"
            }
          },
          {
            "name": "trash",
            "in": "query",
            "description": "The query trash.\n* `true` - List recordings from trash.  \n* `false` - Do not list recordings from the trash.  \n\nThe default value is `false`. If you set it to `true`, you can use the `trash_type` property to indicate the type of Cloud recording that you need to retrieve. ",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": false,
              "default": false
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start date in 'yyyy-mm-dd' UTC format for the date range where you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. \n\nFor example, if you make the API request on June 30, 2020, without providing the `from` and `to` parameters, by default the value of 'from' field will be `2020-06-30` and the value of the 'to' field will be `2020-07-01`. \n\n**Note**: The `trash` files cannot be filtered by date range and thus, the `from` and `to` fields should not be used for trash files",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-06-30"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The end date in 'yyyy-mm-dd' 'yyyy-mm-dd' UTC format. ",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-06-30"
            }
          },
          {
            "name": "trash_type",
            "in": "query",
            "description": "The type of cloud recording to retrieve from the trash. \n \n *   `meeting_recordings`: List all meeting recordings from the trash.  \n *  `recording_file`: List all individual recording files from the trash. ",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "meeting_recordings",
              "default": "meeting_recordings"
            },
            "x-ballerina-name": "trashType"
          },
          {
            "name": "meeting_id",
            "in": "query",
            "description": "The meeting ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 6840331990
            },
            "x-ballerina-name": "meetingId"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nList of recording objects returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse2006"
                }
              }
            }
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User {userId} does not exist, or does not belong to this account. <br>\n**Error Code:** `3301` <br>\n There is no recording for this session. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "recording:read:admin",
              "recording:read",
              "cloud_recording:read:list_user_recordings",
              "cloud_recording:read:list_user_recordings:master",
              "cloud_recording:read:list_user_recordings:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "Recording:Read"
          ],
          "x-macro-scopes": [
            "recording:read:admin",
            "recording:read"
          ],
          "x-granular-scopes": [
            "cloud_recording:read:list_user_recordings",
            "cloud_recording:read:list_user_recordings:master",
            "cloud_recording:read:list_user_recordings:admin"
          ]
        }
      }
    },
    "/devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "List devices",
        "description": "This API lets you list devices. \n\n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:read:admin`,`device:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "listDevices",
        "parameters": [
          {
            "name": "search_text",
            "in": "query",
            "description": "Filter devices by name or serial number",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "poly"
            },
            "x-ballerina-name": "searchText"
          },
          {
            "name": "platform_os",
            "in": "query",
            "description": "Filter devices by platform operating system",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "win",
              "enum": [
                "win",
                "mac",
                "ipad",
                "iphone",
                "android",
                "linux"
              ]
            },
            "x-ballerina-name": "platformOs"
          },
          {
            "name": "is_enrolled_in_zdm",
            "in": "query",
            "description": "Filter devices by enrollment of ZDM (Zoom Device Management)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true,
              "default": true
            },
            "x-ballerina-name": "isEnrolledInZdm"
          },
          {
            "name": "device_type",
            "in": "query",
            "description": "Filter devices by device type.  \n  Device Type:  \n `-1` - All Zoom Room device(0,1,2,3,4,6).  \n `0` - Zoom Rooms Computer.  \n `1` - Zoom Rooms Controller.  \n `2` - Zoom Rooms Scheduling Display.  \n `3` - Zoom Rooms Control System.  \n `4` -  Zoom Rooms Whiteboard.  \n `5` - Zoom Phone Appliance.  \n `6` - Zoom Rooms Computer (with Controller)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 0,
              "default": -1,
              "enum": [
                -1,
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "x-ballerina-name": "deviceType"
          },
          {
            "name": "device_vendor",
            "in": "query",
            "description": "Filter devices by vendor",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "poly"
            },
            "x-ballerina-name": "deviceVendor"
          },
          {
            "name": "device_model",
            "in": "query",
            "description": "Filter devices by model",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "ep5"
            },
            "x-ballerina-name": "deviceModel"
          },
          {
            "name": "device_status",
            "in": "query",
            "description": "Filter devices by status.   \n  Device Status:  \n `0` - offline.  \n `1` - online.  \n `-1` - unlink",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 0,
              "default": -1,
              "enum": [
                -1,
                0,
                1
              ]
            },
            "x-ballerina-name": "deviceStatus"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
            },
            "x-ballerina-name": "nextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nDevice detail returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse2007"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `30055008` <br>\nno permission.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "device:read:admin",
              "device:write:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "ZoomRooms:Read",
            "ZoomRooms:Edit"
          ],
          "x-macro-scopes": [
            "device:read:admin",
            "device:write:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Add a new device",
        "description": "Add a new device to Zoom account. \n\n**Scope:** `device:write:admin`   \n \n **[Rate Limit Label](https://developers.zoom.us/docs/api/rest/rate-limits/):** `Medium`\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "addDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DevicesBody"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "**HTTP Status:** `202` **Accepted**\nRequest processed successfully"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `30055001` <br>\n zoom room does not exist.  <br>\n**Error Code:** `30055002` <br>\n required param can not be empty or null. <br>\n**Error Code:** `30055003` <br>\n device type does not support. <br>\n**Error Code:** `30055004` <br>\n model or vendor not exist. <br>\n**Error Code:** `30055005` <br>\n tag length can not be more than 64. <br>\n**Error Code:** `30055006` <br>\n device has already exist. <br>\n**Error Code:** `30055007` <br>\n invalid mac address. <br>\n**Error Code:** `30055008` <br>\n no permission. <br>\n**Error Code:** `30055009` <br>\n email does not have plan. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "device:write:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "ZoomRooms:Edit"
          ],
          "x-macro-scopes": [
            "device:write:admin"
          ]
        }
      }
    },
    "/devices/groups": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Get ZDM group info",
        "description": "Get Zoom Device Manager (ZDM) group information for an account.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:read:list_groups:admin`,`device:read:list_groups:master`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "Getzdmgroupinfo",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The total number of records returned from a single API call.\nDefault - 30.\nMax -100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period token is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            },
            "x-ballerina-name": "nextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  Version detail returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse2008"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `30051037` <br>\n Invalid parameters. <br>\n"
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `30055008` <br>\n No permission. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "device:read:admin",
              "device:read:list_groups:admin",
              "device:read:list_groups:master"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "MoileDeviceManagement:Read",
            "PbxAdmin:Read"
          ],
          "x-macro-scopes": [
            "device:read:admin"
          ],
          "x-granular-scopes": [
            "device:read:list_groups:admin",
            "device:read:list_groups:master"
          ]
        }
      }
    },
    "/devices/zpa/assignment": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Assign a device to a user or commonarea",
        "description": "Assign a device to a user or common area, or move a device to another user or common area, or remove a device.\n\n**Prerequisites:**\n* Device must be enrolled in Zoom Device Management (ZDM).\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:write:zpa_device:admin`,`device:write:zpa_device:master`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "Assigndevicetoauser/commonarea",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZpaAssignmentBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**   Request processed successfully"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `30055003` <br>\n Device vendor does not support. <br>\n**Error Code:** `30055007` <br>\n Mac address is wrong. <br>\n**Error Code:** `30051039` <br>\n Device not exists. <br>\n**Error Code:** `30055002` <br>\n AUTO RECEPTIONIST user can not assign to device. <br>\n**Error Code:** `30055009` <br>\n User not have phone plan. <br>\n**Error Code:** `30052024` <br>\n Extension number not exists. <br>\n**Error Code:** `30055002` <br>\n Missing required input. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "device:write:admin",
              "device:write:zpa_device:admin",
              "device:write:zpa_device:master"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "MobileDeviceManagement:Edit",
            "PbxAdmin:Edit"
          ],
          "x-macro-scopes": [
            "device:write:admin"
          ],
          "x-granular-scopes": [
            "device:write:zpa_device:admin",
            "device:write:zpa_device:master"
          ]
        }
      }
    },
    "/devices/zpa/settings": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Get Zoom Phone Appliance settings by user ID",
        "description": "Get a user's Zoom Phone Appliance (ZPA) device profile settings. For user-level apps, pass the `me` value instead of the `userId` parameter.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:read:user_setting:admin`,`device:read:user_setting:master`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "GetZpaDeviceListProfileSettingOfaUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "The user's ID or email address. For user-level apps, pass `me` as the value for `user_id`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "DYHrdpjrS3uaOf7dPkkg8w"
            },
            "x-ballerina-name": "userId"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  Version detail returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse2009"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  Not Found \n\n **Error Code:** `30051037` <br>\n invalid parameters. <br>\n**Error Code:** `30052016` <br>\n User does not exist: {userId}. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n "
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `403` <br>\n Access Restricted <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "device:read:admin",
              "device:read:user_setting:admin",
              "device:read:user_setting:master"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "MoileDeviceManagement:Read",
            "PbxAdmin:Read"
          ],
          "x-macro-scopes": [
            "device:read:admin"
          ],
          "x-granular-scopes": [
            "device:read:user_setting:admin",
            "device:read:user_setting:master"
          ]
        }
      }
    },
    "/devices/zpa/upgrade": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Upgrade ZPA firmware or app",
        "description": "Upgrade ZPA firmware or app by Zoom Device Manager (ZDM) group ID. \n\n**Prerequisites:**  \n \n* Account owner or admin permissions. \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:write:zpa_os_app:admin`,`device:write:zpa_os_app:master`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "UpgradeZpas/app",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZpaUpgradeBody"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The upgrade request has been accepted and is currently being processed"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `30052029` <br>\n Missing required input: firmware_versions. <br>\n**Error Code:** `30055020` <br>\n Upgrade type dose not exist. <br>\n**Error Code:** `30055018` <br>\n Zdm group id dose not exist. <br>\n**Error Code:** `30052030` <br>\n Missing required input: app_version. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "device:write:admin",
              "device:write:zpa_os_app:admin",
              "device:write:zpa_os_app:master"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "MobileDeviceManagement:Edit",
            "PbxAdmin:Edit"
          ],
          "x-macro-scopes": [
            "device:write:admin"
          ],
          "x-granular-scopes": [
            "device:write:zpa_os_app:admin",
            "device:write:zpa_os_app:master"
          ]
        }
      }
    },
    "/devices/zpa/vendors/{vendor}/mac_addresses/{macAddress}": {
      "delete": {
        "tags": [
          "Devices"
        ],
        "summary": "Delete ZPA device by vendor and mac address",
        "description": "Remove a ZPA device from the device manager, by vendor and mac address.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:delete:zpa_device:admin`,`device:delete:zpa_device:master`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "DeleteZpaDeviceByVendorAndMacAddress",
        "parameters": [
          {
            "name": "vendor",
            "in": "path",
            "description": "The device's manufacturer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "Poly"
            }
          },
          {
            "name": "macAddress",
            "in": "path",
            "description": "The device's mac address",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "64167ffc0ed7"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content** Device deleted successfully"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `30052026` <br>\n Device is not ZPA. <br>\n**Error Code:** `30055003` <br>\n Device vendor does not support. <br>\n**Error Code:** `30055007` <br>\n Mac address is wrong. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `30051039` <br>\n Zdm device not found. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "device:write:admin",
              "device:delete:zpa_device:admin",
              "device:delete:zpa_device:master"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "MobileDeviceManagement:Edit",
            "PbxAdmin:Edit"
          ],
          "x-macro-scopes": [
            "device:write:admin"
          ],
          "x-granular-scopes": [
            "device:delete:zpa_device:admin",
            "device:delete:zpa_device:master"
          ]
        }
      }
    },
    "/devices/zpa/zdm_groups/{zdmGroupId}/versions": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Get ZPA version info",
        "description": "Get ZPA firmware and app version information that can be upgraded for devices.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:read:list_zpa_versions:admin`,`device:read:list_zpa_versions:master`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "GetZpaVersioninfo",
        "parameters": [
          {
            "name": "zdmGroupId",
            "in": "path",
            "description": "The Zoom Device Management (ZDM) group ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ff49588c-92c4-4406-99e6-1942d8a61a7b"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  Version detail returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20010"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `30051037` <br>\n * AccountId is empty. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `30052027` <br>\n * ZdmGroup not found. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "device:read:admin",
              "device:read:list_zpa_versions:admin",
              "device:read:list_zpa_versions:master"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "MoileDeviceManagement:Read",
            "PbxAdmin:Read"
          ],
          "x-macro-scopes": [
            "device:read:admin"
          ],
          "x-granular-scopes": [
            "device:read:list_zpa_versions:admin",
            "device:read:list_zpa_versions:master"
          ]
        }
      }
    },
    "/devices/{deviceId}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Get device detail",
        "description": "Retrieve a device's details.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:read:admin`,`device:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "getDevice",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device's unique identifier",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "F1C6E9DF-429E-4FA1-85DA-AC95464F3D18"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK** \n \nDevice detail returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20011"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `30055008` <br>\n No permission. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `30055012` <br>\n No found unified deviceId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "device:read:admin",
              "device:write:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "ZoomRooms:Read",
            "ZoomRooms:Edit"
          ],
          "x-macro-scopes": [
            "device:read:admin",
            "device:write:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "summary": "Delete device",
        "description": "Delete a device from a Zoom account. \n\n**Prerequisites:**\n* Device must be enrolled in ZMD (Zoom Device Management)\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "deleteDevice",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "Unique identifier of the device",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "F1C6E9DF-429E-4FA1-85DA-AC95464F3D18"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content** Device deleted successfully"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `30055008` <br>\n no permission. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `30055012` <br>\n no found unified deviceId. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "device:write:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "MobileDeviceManagement:Edit"
          ],
          "x-macro-scopes": [
            "device:write:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Devices"
        ],
        "summary": "Change device ",
        "description": "Change device name. \n\n**Prerequisites:**\n* Device must be enrolled in ZMD (Zoom Device Management)\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:write:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "updateDevice",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "Unique identifier of the device",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "F1C6E9DF-429E-4FA1-85DA-AC95464F3D18"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DevicesdeviceIdBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content** \n \nRequest processed successfully"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `30055001` <br>\n zoom room does not exist. . <br>\n**Error Code:** `30055002` <br>\n required param can not be empty or null. <br>\n**Error Code:** `30055003` <br>\n device type does not support. <br>\n**Error Code:** `30055011` <br>\n device is not enrolled. <br>\n**Error Code:** `30055013` <br>\n device not support this app. <br>\n**Error Code:** `30055014` <br>\n room not support this app. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `30055012` <br>\n Device does not exist: {deviceId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "device:write:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "ZoomRooms:Edit"
          ],
          "x-macro-scopes": [
            "device:write:admin"
          ]
        }
      }
    },
    "/devices/{deviceId}/assign_group": {
      "patch": {
        "tags": [
          "Devices"
        ],
        "summary": "Assign a device to a group",
        "description": "Assign a device to a new group.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:write:group:admin`,`device:write:group:master`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "assginGroup",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "12as-asdas-sas-12asd-as01"
            }
          },
          {
            "name": "group_id",
            "in": "query",
            "description": "The group's ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "12as-asdas-sas-12asd-as01"
            },
            "x-ballerina-name": "groupId"
          }
        ],
        "responses": {
          "204": {
            "description": "Request processed successfully"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `30052010` <br>\n Group does not exist. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  No permission. \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `30055012` <br>\n Device does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "device:write:admin",
              "device:write:group:admin",
              "device:write:group:master"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "MobileDeviceManagement:Edit"
          ],
          "x-macro-scopes": [
            "device:write:admin"
          ],
          "x-granular-scopes": [
            "device:write:group:admin",
            "device:write:group:master"
          ]
        }
      }
    },
    "/devices/{deviceId}/assignment": {
      "patch": {
        "tags": [
          "Devices"
        ],
        "summary": "Change device association",
        "description": "Change a device's association from one Zoom Room to another. **Prerequisites:** Device must be enrolled in ZDM (Zoom Device Management). \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `device:update:zdm_device_assignment:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "changeDeviceAssociation",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device's unique identifier",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "F1C6E9DF-429E-4FA1-85DA-AC95464F3D18"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceIdAssignmentBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nRequest processed successfully"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `8500` <br>\n Device not enrolled in Zoom Device Management. <br>\n**Error Code:** `8501` <br>\n Device does not support this app. <br>\n**Error Code:** `8502` <br>\n Room does not support this app. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1012` <br>\n Room does not exist: {roomId}. <br>\n**Error Code:** `8503` <br>\n Device does not exist: {deviceId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "device:write:admin",
              "device:update:zdm_device_assignment:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "ZoomRooms:Edit"
          ],
          "x-macro-scopes": [
            "device:write:admin"
          ],
          "x-granular-scopes": [
            "device:update:zdm_device_assignment:admin"
          ]
        }
      }
    },
    "/h323/devices": {
      "get": {
        "tags": [
          "H323 Devices"
        ],
        "summary": "List H.323/SIP devices",
        "description": "A H.323 or SIP device can make a video call to a [Room Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector) to join a Zoom cloud meeting. A Room Connector can also call out to a H.323 or SIP device to join a Zoom cloud meeting. Use this API to list all H.323/SIP Devices on a Zoom account.  \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `h323:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `h323_device:read:list_devices:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "deviceList",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1,
              "default": 1
            },
            "x-ballerina-name": "pageNumber"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
            },
            "x-ballerina-name": "nextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nList of H.323/SIP devices returned.  \n \n**Error Code:** `200`  \n \nNo permission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/H323SIPDeviceList"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n "
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "h323:read:admin",
              "h323_device:read:list_devices:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "h323:read:admin"
          ],
          "x-granular-scopes": [
            "h323_device:read:list_devices:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "H323 Devices"
        ],
        "summary": "Create a H.323/SIP device",
        "description": "A H.323 or SIP device can make a video call to a [Room Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector) to join a Zoom cloud meeting. A Room Connector can also call out to a H.323 or SIP device to join a Zoom cloud meeting. Use this API to add a H.323/SIP device to your Zoom account  \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `h323:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `h323_device:write:device:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deviceCreate",
        "requestBody": {
          "description": "H.323/SIP device",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TheH323SIPDeviceObject"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`  \n \nH.323/SIP device created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse2011"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n No permission. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n "
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2020` <br>\n H.323 device's display name {displayName} is already in use. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "h323:write:admin",
              "h323_device:write:device:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "h323:write:admin"
          ],
          "x-granular-scopes": [
            "h323_device:write:device:admin"
          ]
        }
      }
    },
    "/h323/devices/{deviceId}": {
      "delete": {
        "tags": [
          "H323 Devices"
        ],
        "summary": "Delete a H.323/SIP device",
        "description": "A H.323 or SIP device can make a video call to a [Room Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector) to join a Zoom cloud meeting. A Room Connector can also call out to a H.323 or SIP device to join a Zoom cloud meeting. Use this API to delete a H.323/SIP device from your Zoom account.  \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `h323:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `h323_device:delete:device:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deviceDelete",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "abceHewahkrehwiK"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "You do not have the permission to delete this device"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n "
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "h323:write:admin",
              "h323_device:delete:device:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "h323:write:admin"
          ],
          "x-granular-scopes": [
            "h323_device:delete:device:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "H323 Devices"
        ],
        "summary": "Update a H.323/SIP device",
        "description": "Edit information for a H.323/SIP device from your Zoom account.  \n\n A H.323 or SIP device can make a video call to a [Room Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector) to join a Zoom cloud meeting. A Room Connector can also call out to a H.323 or SIP device to join a Zoom cloud meeting.\n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `h323:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `h323_device:update:device:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deviceUpdate",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "abceHewahkrehwiK"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TheH323SIPDeviceObject1"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nH.323/SIP device updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n "
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2020` <br>\n H.323 device's display name {displayName} is already in use. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "h323:write:admin",
              "h323_device:update:device:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "h323:write:admin"
          ],
          "x-granular-scopes": [
            "h323_device:update:device:admin"
          ]
        }
      }
    },
    "/live_meetings/{meetingId}/chat/messages/{messageId}": {
      "delete": {
        "tags": [
          "Meetings"
        ],
        "summary": "Delete a live meeting message",
        "description": "Delete a message in a live meeting, based on ID. \n\n**Prerequisites:** \n* Have Zoom enable the DLP for the in-meeting chat feature to use this API.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write`,`meeting:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:delete:live_meeting_chat_message`,`meeting:delete:live_meeting_chat_message:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "deleteMeetingChatMessageById",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, store it as a long-format integer and **not** an integer. Meeting IDs can be more than 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          },
          {
            "name": "messageId",
            "in": "path",
            "description": "The live meeting chat message's unique identifier (UUID), in base64-encoded format",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "MS17MDQ5NjE4QjYtRjk4Ny00REEwLUFBQUItMTg3QTY0RjU2MzhFfQ=="
            }
          },
          {
            "name": "file_ids",
            "in": "query",
            "description": "The live webinar chat file's universally unique identifier, in base64-encoded format. Separate multiple values with commas",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "MS17RDk0QTY3QUQtQkFGQy04QTJFLTI2RUEtNkYxQjRBRTU1MTk5fQ==,MS17NDQ0OEU5MjMtM0JFOS1CMDA1LTQ0NDAtQjdGOTU0Rjk5MTkyfQ=="
            },
            "x-ballerina-name": "fileIds"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nMeeting chat message deleted"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n DLP is not enabled on this account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write",
              "meeting:write:admin",
              "meeting:delete:live_meeting_chat_message",
              "meeting:delete:live_meeting_chat_message:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write",
            "meeting:write:admin"
          ],
          "x-granular-scopes": [
            "meeting:delete:live_meeting_chat_message",
            "meeting:delete:live_meeting_chat_message:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Meetings"
        ],
        "summary": "Update a live meeting message",
        "description": "Update a message in a live meeting, based on ID. **Prerequisites:** * Have Zoom enable the DLP for the in-meeting chat feature to use this API.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write`,`meeting:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:update:live_meeting_chat_message`,`meeting:update:live_meeting_chat_message:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "updateMeetingChatMessageById",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, store it as a long-format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          },
          {
            "name": "messageId",
            "in": "path",
            "description": "The live meeting chat message's unique identifier (UUID), in base64-encoded format",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "MS17MDQ5NjE4QjYtRjk4Ny00REEwLUFBQUItMTg3QTY0RjU2MzhFfQ=="
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessagesmessageIdBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\n Meeting chat message updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n DLP is not enabled on this account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write",
              "meeting:write:admin",
              "meeting:update:live_meeting_chat_message",
              "meeting:update:live_meeting_chat_message:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write",
            "meeting:write:admin"
          ],
          "x-granular-scopes": [
            "meeting:update:live_meeting_chat_message",
            "meeting:update:live_meeting_chat_message:admin"
          ]
        }
      }
    },
    "/live_meetings/{meetingId}/events": {
      "patch": {
        "tags": [
          "Meetings"
        ],
        "summary": "Use in-meeting controls",
        "description": "Control [in-meeting](https://support.zoom.us/hc/en-us/articles/360021921032-In-Meeting-Controls) features. In-meeting controls include starting and stopping a recording, pausing and resuming a recording, and inviting participants.\n\n**Note:** This API's recording control only works for cloud recordings, **not** for local recordings.\n\n**Prerequisites:**\n* The meeting **must** be a live meeting **except** inviting participants to the meeting through [call out (phone)](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0062038)/[call out (room system)](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065721).\n* Recording control: [Cloud recording](https://support.zoom.us/hc/en-us/articles/360060231472-Enabling-cloud-recording) must be enabled on the account.\n* The user calling this API must be the host or an alternative meeting host.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write`,`meeting:write:admin`,`meeting:master`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:update:in_meeting_controls`,`meeting:update:in_meeting_controls:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "inMeetingControl",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The live meeting's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "93398114182"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingIdEventsBody"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "**HTTP Status:** `202` **Accepted**\nRequest processed successfully"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n * Meeting id does not exist.<br>\n* Invalid meeting id.<br>\n* Meeting does not exist.<br>\n* No permission.<br>\n* This API is not available for this account, please contact Zoom support. <br>\n**Error Code:** `3309` <br>\n Not enough cloud storage available. Either purchase additional storage or delete cloud recordings to free up storage. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting {meetingId} is not found or has expired. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write",
              "meeting:write:admin",
              "meeting:master",
              "meeting:update:in_meeting_controls",
              "meeting:update:in_meeting_controls:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write",
            "meeting:write:admin",
            "meeting:master"
          ],
          "x-granular-scopes": [
            "meeting:update:in_meeting_controls",
            "meeting:update:in_meeting_controls:admin"
          ]
        }
      }
    },
    "/live_meetings/{meetingId}/rtms_app/status": {
      "patch": {
        "tags": [
          "Meetings"
        ],
        "summary": "Update participant Real-Time Media Streams (RTMS) app status",
        "description": "Update the Real-Time Media Streams (RTMS) status for a specific participant in an ongoing meeting. Zoom lets individuals control their own RTMS during a meeting.\n\n**Prerequisites:**\n* The meeting must be in progress.\n* Contact [Developer Support](https://developers.zoom.us/support/) to enable RTMS features.\n* The **Allow apps to access meeting content** setting enabled in the Zoom web portal.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:admin`,`meeting:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:update:participant_rtms_app_status`,`meeting:update:participant_rtms_app_status:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "meetingRTMSStatusUpdate",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID.\n\nWhen storing this value in your database, store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          }
        ],
        "requestBody": {
          "description": "Meeting",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RtmsAppStatusBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` Participant's RTMS app status updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid meeting ID. <br>\n**Error Code:** `3000` <br>\n Meeting {meetingId} has not started. <br>\n**Error Code:** `2310` <br>\n Failed to perform RTMS app operation. <br>\n**Error Code:** `13277` <br>\n Unable to stop the RTMS app for user '{participant_user_id}' because it has not been started. <br>\n**Error Code:** `2312` <br>\n User does not exist: {participant_user_id}. <br>\n"
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `2308` <br>\n User '{participant_user_id}' is not allowed to start the RTMS app. Only the meeting host or an alternative host can perform this action. <br>\n**Error Code:** `2309` <br>\n User '{participant_user_id}' is not allowed to start the RTMS app. Only the webinar host, alternative host, or panelist can perform this action. <br>\n**Error Code:** `13273` <br>\n End-to-end encrypted meetings currently do not support the RTMS app feature. <br>\n**Error Code:** `13267` <br>\n RTMS app disabled. To use this feature, enable the **Allow apps to access meeting content** setting in the **Settings** page of the Zoom web portal. <br>\n**Error Code:** `13262` <br>\n The app '{client_id}' is not authorized to access meeting content. Please add it in the **Allow apps to access meeting content** setting in the **Settings** page of the Zoom web portal. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write:admin",
              "meeting:write",
              "meeting:update:participant_rtms_app_status",
              "meeting:update:participant_rtms_app_status:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write:admin",
            "meeting:write"
          ],
          "x-granular-scopes": [
            "meeting:update:participant_rtms_app_status",
            "meeting:update:participant_rtms_app_status:admin"
          ]
        }
      }
    },
    "/meetings/meeting_summaries": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "List an account's meeting summaries",
        "description": "Generates a list of all meeting summaries for an account.\n\n**Prerequisites**\n* Host user type must be Pro or higher plan.\n* The Meeting Summary with AI Companion feature enabled in the host's account.\n* E2ee meetings do not have summary feature enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting_summary:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:list_summaries:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "Listmeetingsummaries",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
            },
            "x-ballerina-name": "nextPageToken"
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to retrieve the creation date range of the meeting summaries",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2023-10-19T07:00:00Z"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The end date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to retrieve the creation date range of the meeting summaries",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2023-10-20T07:00:00Z"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`\n\nSuccessfully listed meeting summaries of an account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20012"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n**Error Code:** `3000` <br>\n Meeting summary disabled. To enable this feature, enable the **Meeting Summary with AI Companion** setting in the Zoom web portal's **Settings** interface. <br>\n**Error Code:** `200` <br>\n Only available for Paid account. <br>\n"
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `2305` <br>\n Not allowed to list an account's meeting summaries. To use this feature, disable the **Only share meeting summaries by email** setting in the **Account Settings** page of the Zoom web portal. <br>\n**Error Code:** `2305` <br>\n Access to meeting summaries is restricted to specific IP address ranges. To allow access, go to the **Settings** page in the Zoom web portal and update the **IP address access control** setting. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting_summary:read:admin",
              "meeting:read:list_summaries:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "SmartMeetingSummaryMgt:Read"
          ],
          "x-macro-scopes": [
            "meeting_summary:read:admin"
          ],
          "x-granular-scopes": [
            "meeting:read:list_summaries:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "Get a meeting",
        "description": "Retrieve the given meeting's details.\n\n**Prerequisites**:\n* Host user must have a Zoom Meetings Basic license or higher.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read`,`meeting:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:meeting`,`meeting:read:meeting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meeting",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, store it as a long format integer and **not** an integer. Meeting IDs can be more than 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          },
          {
            "name": "occurrence_id",
            "in": "query",
            "description": "Meeting occurrence ID. Provide this field to view meeting details of a particular occurrence of the [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1648194360000"
            },
            "x-ballerina-name": "occurrenceId"
          },
          {
            "name": "show_previous_occurrences",
            "in": "query",
            "description": "Set this field's value to `true` to view meeting details of all previous occurrences of a [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings). ",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            },
            "x-ballerina-name": "showPreviousOccurrences"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nMeeting object returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20013"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3000` <br>\n Cannot access webinar info. <br>\n**Error Code:** `3161` <br>\n Your user account is not allowed meeting hosting and scheduling capabilities. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:read",
              "meeting:read:admin",
              "meeting:read:meeting",
              "meeting:read:meeting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting:read",
            "meeting:read:admin"
          ],
          "x-granular-scopes": [
            "meeting:read:meeting",
            "meeting:read:meeting:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Meetings"
        ],
        "summary": "Delete a meeting",
        "description": "Delete a meeting.\n\n**Prerequisites**:\n* For recurring meetings, the `occurrence_id` is required to delete a specific occurrence. If not provided, the entire recurring series will be deleted.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:admin`,`meeting:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:delete:meeting`,`meeting:delete:meeting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingDelete",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          },
          {
            "name": "occurrence_id",
            "in": "query",
            "description": "The meeting or webinar occurrence ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1648194360000"
            },
            "x-ballerina-name": "occurrenceId"
          },
          {
            "name": "schedule_for_reminder",
            "in": "query",
            "description": "`true`: Notify host and alternative host about the meeting cancellation via email.\n`false`: Do not send any email notification",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            },
            "x-ballerina-name": "scheduleForReminder"
          },
          {
            "name": "cancel_meeting_reminder",
            "in": "query",
            "description": "`true`: Notify registrants about the meeting cancellation via email. \n\n`false`: Do not send any email notification to meeting registrants. \n\nThe default value of this field is `false`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            },
            "x-ballerina-name": "cancelMeetingReminder"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code**: `204`   \n \nMeeting deleted"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid parameter: `occurrence_id`. <br>\n**Error Code:** `3000` <br>\n Cannot access webinar information. <br>\n**Error Code:** `3018` <br>\n Not allowed to delete PMI. <br>\n**Error Code:** `3037` <br>\n Not allowed to delete PAC. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write:admin",
              "meeting:write",
              "meeting:delete:meeting",
              "meeting:delete:meeting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write:admin",
            "meeting:write"
          ],
          "x-granular-scopes": [
            "meeting:delete:meeting",
            "meeting:delete:meeting:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Meetings"
        ],
        "summary": "Update a meeting",
        "description": "Update meeting details.\n\n**Prerequisites**\n* The `start_time` value must be a future date. If the value is omitted or a date is in the past, the API ignores this value and does not update any recurring meetings.\n* The `recurrence` object is required only when updating the entire series of a recurring meeting with `type=8`.\n* This API has a rate limit of **100 requests per day**. You can update a meeting for a maximum of 100 times within a 24-hour period.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write`,`meeting:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:update:meeting:admin`,`meeting:update:meeting`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingUpdate",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, store it as a long format integer and **not** an integer. Meeting IDs can be greater than 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          },
          {
            "name": "occurrence_id",
            "in": "query",
            "description": "Meeting occurrence ID. Support change of agenda, `start_time`, duration, or settings {`host_video`, `participant_video`, `join_before_host`, `mute_upon_entry`, `waiting_room`, `watermark`, `auto_recording`}",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1648194360000"
            },
            "x-ballerina-name": "occurrenceId"
          }
        ],
        "requestBody": {
          "description": "Meeting",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingsmeetingIdBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nMeeting updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3161` <br>\n Your user account is not allowed meeting hosting and scheduling capabilities. <br>\n**Error Code:** `300` <br>\n The value that you entered in the `schedule_for` field is invalid. Enter a valid value and try again. <br>\n**Error Code:** `300` <br>\n Invalid `enforce_login_domains`. Separate multiple domains with semicolons. <br>\n**Error Code:** `3000` <br>\n Cannot access webinar info. <br>\n**Error Code:** `3000` <br>\n Instant meetings do not support the `schedule_for` parameter, and you can't schedule an instant meeting for another user. <br>\n**Error Code:** `3000` <br>\n Users in '{userId}' have been blocked from joining meetings and webinars. To unblock them, go to the **Settings** page in the Zoom web portal and update **Block users in specific domains from joining meetings and webinars**. <br>\n**Error Code:** `3000` <br>\n You cannot schedule a meeting for {userId} <br>\n**Error Code:** `3000` <br>\n Prescheduling is only available for scheduled meetings (type 2) and recurring meetings with no fixed time (type 3). <br>\n**Error Code:** `3000` <br>\n Unable to schedule for a user outside of your account for a meeting with continuous chat. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write",
              "meeting:write:admin",
              "meeting:update:meeting:admin",
              "meeting:update:meeting"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write",
            "meeting:write:admin"
          ],
          "x-granular-scopes": [
            "meeting:update:meeting:admin",
            "meeting:update:meeting"
          ]
        }
      }
    },
    "/meetings/{meetingId}/batch_polls": {
      "post": {
        "tags": [
          "Meetings"
        ],
        "summary": "Perform batch poll creation",
        "description": "Polls allow the meeting host to survey attendees. Create batch [polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) for a meeting.  \n   \n \n\n**Prerequisites**:  \n \n* Host user type must be **Pro** or higher plan.\n* Polling feature must be enabled in the host's account.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:admin`,`meeting:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:batch_polls`,`meeting:write:batch_polls:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createBatchPolls",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "93398114182"
            }
          }
        ],
        "requestBody": {
          "description": "The batch meeting poll object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingIdBatchPollsBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nMeeting Poll Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse2012"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid Meeting ID. <br>\n**Error Code:** `3000` <br>\n Cannot access meeting information. <br>\n**Error Code:** `4400` <br>\n You can only add a maximum of 50 polls.  <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n**Error Code:** `4400` <br>\n Meeting polls disabled. To enable this feature, enable the \"Meeting Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface.  <br>\n**Error Code:** `4400` <br>\n Advanced meeting polls disabled. To enable this feature, enable the \"Allow host to create advanced polls and quizzes\" setting in the Zoom web portal's \"Settings\" interface. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write:admin",
              "meeting:write",
              "meeting:write:batch_polls",
              "meeting:write:batch_polls:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write:admin",
            "meeting:write"
          ],
          "x-granular-scopes": [
            "meeting:write:batch_polls",
            "meeting:write:batch_polls:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/batch_registrants": {
      "post": {
        "tags": [
          "Meetings"
        ],
        "summary": "Perform batch registration",
        "description": "Register up to 30 registrants at once for a meeting that requires [registration](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).   \n \n\n**Prerequisites:**  \n \n* The meeting host must be a Licensed user.\n* The meeting must require registration and should be of type `2`, i.e., they should be scheduled meetings. Instant meetings and Recurring meetings are not supported by this API.  \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write`,`meeting:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:batch_registrants`,`meeting:write:batch_registrants:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "addBatchRegistrants",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "Unique identifier of the meeting (Meeting Number)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "91498058927"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingIdBatchRegistrantsBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `200` **OK**   \n \nRegistrants added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse2013"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3038` <br>\n Meeting is over, you can not register now. If you have any questions, please contact the Meeting host. <br>\n**Error Code:** `303` <br>\n This API can only be used for scheduled meeting(meeting type: 2). Batch registration is not supported for other meeting types. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n**Error Code:** `3043` <br>\n Meeting has reached maximum attendee capacity. <br>\n**Error Code:** `404` <br>\n Registration has not been enabled for this meeting: {meetingId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write",
              "meeting:write:admin",
              "meeting:write:batch_registrants",
              "meeting:write:batch_registrants:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write",
            "meeting:write:admin"
          ],
          "x-granular-scopes": [
            "meeting:write:batch_registrants",
            "meeting:write:batch_registrants:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/invitation": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "Get meeting invitation",
        "description": "Retrieve the meeting invitation note for a specific meeting.\r\n\r\n**Prerequisites**:\r\n* Host user must have a Zoom Meetings Basic license or higher.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read`,`meeting:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:invitation`,`meeting:read:invitation:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingInvitation",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer, not a simple integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nMeeting invitation returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingInvitation"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:read",
              "meeting:read:admin",
              "meeting:read:invitation",
              "meeting:read:invitation:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting:read",
            "meeting:read:admin"
          ],
          "x-granular-scopes": [
            "meeting:read:invitation",
            "meeting:read:invitation:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/invite_links": {
      "post": {
        "tags": [
          "Meetings"
        ],
        "summary": "Create a meeting's invite links",
        "description": "Create a batch of invitation links for a meeting.\n\n**Prerequisites**:\n* The `ttl` value, in seconds, defines the invite link's expiration time. It must be between `0` or no expiration and `7776000` or 90 days, and has a default value of `7200` or 2 hours.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:admin`,`meeting:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:invite_links`,`meeting:write:invite_links:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingInviteLinksCreate",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteLinks"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nMeeting invitation links created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteLinks1"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid meeting ID. <br>\n**Error Code:** `3000` <br>\n Cannot access webinar information. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId} <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write:admin",
              "meeting:write",
              "meeting:write:invite_links",
              "meeting:write:invite_links:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write:admin",
            "meeting:write"
          ],
          "x-granular-scopes": [
            "meeting:write:invite_links",
            "meeting:write:invite_links:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/jointoken/live_streaming": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "Get a meeting's join token for live streaming",
        "description": "Get a meeting's join token to allow live streaming. The join token allows a recording bot implemented using Zoom meeting SDK to connect to a Zoom meeting &quot;hosted by the issuer of the token&quot;, and can call the streaming method automatically. It supports both regular live streaming, and raw streaming. \n\n**Prerequisites:** \n* A Pro or higher plan for the meeting host. \n* The **Allow livestreaming of meetings** user setting enabled in the Zoom web portal.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting_token:read:admin:live_streaming`,`meeting_token:read:live_streaming`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:live_streaming_token`,`meeting:read:live_streaming_token:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingLiveStreamingJoinToken",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nMeeting live streaming token returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20014"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid meeting ID. <br>\n**Error Code:** `3000` <br>\n Cannot access webinar information. <br>\n**Error Code:** `124` <br>\n This API only supports OAuth2 authorization. <br>\n**Error Code:** `3000` <br>\n Not allowed to start live streaming. To use this feature, enable the \"Allow livestreaming of meetings\" setting in the \"Settings\" page of the Zoom web portal. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `300` <br>\n Meeting ID does not exist. <br>\n**Error Code:** `3001` <br>\n Meeting does not exist: {meetingId} <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting_token:read:admin:live_streaming",
              "meeting_token:read:live_streaming",
              "meeting:read:live_streaming_token",
              "meeting:read:live_streaming_token:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting_token:read:admin:live_streaming",
            "meeting_token:read:live_streaming"
          ],
          "x-granular-scopes": [
            "meeting:read:live_streaming_token",
            "meeting:read:live_streaming_token:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/jointoken/local_archiving": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "Get a meeting's archive token for local archiving",
        "description": "Get a meeting's archive token to allow local archiving. The archive token allows a meeting SDK app or bot to get archive permission to access the meeting's raw audio and video media stream in real-time. \n\n**Prerequisites:** \n* A Pro or higher plan for the meeting host. \n* The **Archive meetings and webinars** account setting enabled in the Zoom web portal.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting_token:read:admin:local_archiving`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:local_archiving_token:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingLocalArchivingArchiveToken",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nMeeting local archiving token returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20015"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid meeting ID. <br>\n**Error Code:** `3000` <br>\n Cannot access webinar information. <br>\n**Error Code:** `124` <br>\n This API only supports OAuth2 authorization. <br>\n**Error Code:** `3000` <br>\n Not allowed to start local archiving. To use this feature, enable the \"Archive meetings and webinars\" setting in the \"Settings\" page of the Zoom web portal. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `300` <br>\n Meeting ID does not exist. <br>\n**Error Code:** `3001` <br>\n Meeting does not exist: {meetingId} <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting_token:read:admin:local_archiving",
              "meeting:read:local_archiving_token:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting_token:read:admin:local_archiving"
          ],
          "x-granular-scopes": [
            "meeting:read:local_archiving_token:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/jointoken/local_recording": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "Get a meeting's join token for local recording",
        "description": "Get a meeting's join token to allow for local recording. The join token lets a recording bot implemented using Zoom Meeting SDK to connect to a Zoom meeting. The recording bot can then automatically start locally recording. This supports both regular and raw local recording types. \n\n**Prerequisites:** \n* The **Local recording** user setting enabled in the Zoom web portal.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting_token:read:admin:local_recording`,`meeting_token:read:local_recording`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:local_recording_token`,`meeting:read:local_recording_token:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingLocalRecordingJoinToken",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          },
          {
            "name": "bypass_waiting_room",
            "in": "query",
            "description": "Whether to bypass the waiting room",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            },
            "x-ballerina-name": "bypassWaitingRoom"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nMeeting local recording token returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20016"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid meeting ID. <br>\n**Error Code:** `3000` <br>\n Cannot access webinar information. <br>\n**Error Code:** `124` <br>\n This API only supports OAuth2 authorization. <br>\n**Error Code:** `3000` <br>\n Not allowed to start local recording. To use this feature, enable the **Local Recording** setting in the **Settings** page of the Zoom web portal. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `300` <br>\n Meeting ID does not exist. <br>\n**Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting_token:read:admin:local_recording",
              "meeting_token:read:local_recording",
              "meeting:read:local_recording_token",
              "meeting:read:local_recording_token:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting_token:read:admin:local_recording",
            "meeting_token:read:local_recording"
          ],
          "x-granular-scopes": [
            "meeting:read:local_recording_token",
            "meeting:read:local_recording_token:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/livestream": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "Get livestream details",
        "description": "Zoom allows users to [livestream a meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform. Get a meeting's livestream configuration details such as Stream URL, Stream Key and Page URL.  \n   \n \n**Prerequisites:**  \n \n* Meeting host must be a licensed user with a Pro or higher plan.  \n \n* Live streaming details must have been [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5) for the meeting.  \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:admin`,`meeting:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:livestream`,`meeting:read:livestream:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getMeetingLiveStreamDetails",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "Unique identifier of the meeting",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "93398114182"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nLive Stream details returned.\n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20017"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid meeting id. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:read:admin",
              "meeting:read",
              "meeting:read:livestream",
              "meeting:read:livestream:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting:read:admin",
            "meeting:read"
          ],
          "x-granular-scopes": [
            "meeting:read:livestream",
            "meeting:read:livestream:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Meetings"
        ],
        "summary": "Update a livestream",
        "description": "Update a meeting's livestream information. Zoom allows users to [livestream a meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform.\n\n**Prerequisites:** \n* Meeting host must have a Pro license.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:admin`,`meeting:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:update:livestream`,`meeting:update:livestream:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingLiveStreamUpdate",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          }
        ],
        "requestBody": {
          "description": "Meeting",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingIdLivestreamBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nMeeting livestream updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3000` <br>\n Cannot access webinar info. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write:admin",
              "meeting:write",
              "meeting:update:livestream",
              "meeting:update:livestream:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write:admin",
            "meeting:write"
          ],
          "x-granular-scopes": [
            "meeting:update:livestream",
            "meeting:update:livestream:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/livestream/status": {
      "patch": {
        "tags": [
          "Meetings"
        ],
        "summary": "Update livestream status",
        "description": "Zoom allows users to [livestream a meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform. Update the status of a meeting's livestream.  \n\n**Prerequisites:**\n* Meeting host must have a Pro license.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:admin`,`meeting:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:update:livestream_status`,`meeting:update:livestream_status:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingLiveStreamStatusUpdate",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          }
        ],
        "requestBody": {
          "description": "Meeting",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LivestreamStatusBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br> Meeting livestream updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3000` <br>\n Cannot access webinar info. <br>\n**Error Code:** `3161` <br>\n Your user account is not allowed meeting hosting and scheduling capabilities. <br>\n**Error Code:** `4400` <br>\n End-to-end encrypted meetings currently do not support the livestreaming feature. <br>\n**Error Code:** `300` <br>\n Invalid meeting ID. <br>\n**Error Code:** `4927` <br>\n Meeting {meetingId} has not started. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write:admin",
              "meeting:write",
              "meeting:update:livestream_status",
              "meeting:update:livestream_status:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write:admin",
            "meeting:write"
          ],
          "x-granular-scopes": [
            "meeting:update:livestream_status",
            "meeting:update:livestream_status:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/meeting_summary": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "Get a meeting summary",
        "description": "Display information about a meeting summary.\n\n**Prerequisites**\n* Host user type must have a Pro or higher plan.\n* Enable the **Meeting Summary with AI Companion** feature in the host's account.\n* E2ee meetings do not have summary feature enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting_summary:read`,`meeting_summary:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:summary`,`meeting:read:summary:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "Getameetingsummary",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's universally unique ID (UUID). When you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the meeting UUID before making an API request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "aDYlohsHRtCd4ii1uC2+hA=="
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` Meeting summary object returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20018"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n Only available for Paid account. <br>\n**Error Code:** `300` <br>\n Invalid meeting ID. <br>\n"
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `2305` <br>\n Not allowed to list an account's meeting summaries. To use this feature, disable the **Only share meeting summaries by email** setting in the **Account Settings** page of the Zoom web portal. <br>\n**Error Code:** `2305` <br>\n Access to meeting summaries is restricted to specific IP address ranges. To allow access, go to the **Settings** page in the Zoom web portal and update the **IP address access control** setting. <br>\n**Error Code:** `2305` <br>\n The meeting summary has been moved to Trash and cannot be accessed. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting_summary:read",
              "meeting_summary:read:admin",
              "meeting:read:summary",
              "meeting:read:summary:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "SmartMeetingSummaryMgt:Read"
          ],
          "x-macro-scopes": [
            "meeting_summary:read",
            "meeting_summary:read:admin"
          ],
          "x-granular-scopes": [
            "meeting:read:summary",
            "meeting:read:summary:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/open_apps": {
      "post": {
        "tags": [
          "Meetings"
        ],
        "summary": "Add a meeting app",
        "description": "Add an auto-open app in a meeting. This endpoint lets a developer auto-open an app in a specific meeting. This is only for configuring an app to automatically open before a given session. This can't open the app while a meeting or webinar is in session.\r\n\r\n**Prerequisites**:\r\n* The meeting must not be a live meeting.\r\n* The **Zoom Apps Quick Launch Button** setting enabled in the Zoom web portal.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write`,`meeting:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:open_app`,`meeting:write:open_app:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingAppAdd",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          }
        ],
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` App added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse2014"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid meeting ID. <br>\n**Error Code:** `3000` <br>\n You can only add up to 3 apps. <br>\n**Error Code:** `3000` <br>\n Meeting {meetingId} has started. <br>\n**Error Code:** `3000` <br>\n Zoom Apps disabled. To use this feature, enable the 'Zoom Apps Quick Launch Button' setting in the 'Settings' page of the Zoom web portal. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId} <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write",
              "meeting:write:admin",
              "meeting:write:open_app",
              "meeting:write:open_app:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write",
            "meeting:write:admin"
          ],
          "x-granular-scopes": [
            "meeting:write:open_app",
            "meeting:write:open_app:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Meetings"
        ],
        "summary": "Delete a meeting app",
        "description": "Delete a meeting auto-open app.\r\n\r\n**Prerequisites**:\r\n* The meeting must not be a live meeting.\r\n* The **Zoom Apps Quick Launch Button** setting enabled in the Zoom web portal.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write`,`meeting:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:delete:open_app`,`meeting:delete:open_app:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingAppDelete",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `201` App deleted"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid meeting ID. <br>\n**Error Code:** `3000` <br>\n Meeting {meetingId} has started. <br>\n**Error Code:** `3000` <br>\n Zoom Apps disabled. To use this feature, enable the **Zoom Apps Quick Launch Button** setting in the **Settings** page of the Zoom web portal. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId} <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write",
              "meeting:write:admin",
              "meeting:delete:open_app",
              "meeting:delete:open_app:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write",
            "meeting:write:admin"
          ],
          "x-granular-scopes": [
            "meeting:delete:open_app",
            "meeting:delete:open_app:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/polls": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "List meeting polls",
        "description": "Polls allow the meeting host to survey attendees. List all [polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) of a meeting.  \n   \n \n\n**Prerequisites**:  \n \n* Host user type must be **Pro** or higher plan.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:admin`,`meeting:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:list_polls`,`meeting:read:list_polls:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingPolls",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          },
          {
            "name": "anonymous",
            "in": "query",
            "description": "Whether to query for polls with the **Anonymous** option enabled: \n* `true` &mdash; Query for polls with the **Anonymous** option enabled. \n* `false` &mdash; Do not query for polls with the **Anonymous** option enabled",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:**   \n \nList polls of a Meeting  returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PollList"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `4400` <br>\n Meeting polls disabled. To enable this feature, enable the \"Meeting Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Meeting Poll not found <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:read:admin",
              "meeting:read",
              "meeting:read:list_polls",
              "meeting:read:list_polls:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting:read:admin",
            "meeting:read"
          ],
          "x-granular-scopes": [
            "meeting:read:list_polls",
            "meeting:read:list_polls:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Meetings"
        ],
        "summary": "Create a meeting poll",
        "description": "Polls allow the meeting host to survey attendees. Create a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) for a meeting.  \n   \n \n\n**Prerequisites**:  \n \n* Host user type must be **Pro** or higher plan.\n* Polling feature must be enabled in the host's account.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:admin`,`meeting:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:poll`,`meeting:write:poll:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingPollCreate",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          }
        ],
        "requestBody": {
          "description": "The meeting poll object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingIdPollsBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nMeeting Poll Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse2015"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `4400` <br>\n * Meeting polls disabled. To enable this feature, enable the \"Meeting Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface. \n* Advanced meeting polls disabled. To enable this feature, enable the \"Allow host to create advanced polls and quizzes\" setting in the Zoom web portal's \"Settings\" interface. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Meeting not found <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write:admin",
              "meeting:write",
              "meeting:write:poll",
              "meeting:write:poll:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write:admin",
            "meeting:write"
          ],
          "x-granular-scopes": [
            "meeting:write:poll",
            "meeting:write:poll:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/polls/{pollId}": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "Get a meeting poll",
        "description": "Retrieves information about a specific meeting [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings). \n\n**Prerequisites**:\n* Host must have Pro or higher plan.\n* Enable the **Meeting Polls/Quizzes** setting in the Zoom web portal.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:admin`,`meeting:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:poll`,`meeting:read:poll:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingPollGet",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, store it as a `long` format integer, not a simple integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          },
          {
            "name": "pollId",
            "in": "path",
            "description": "The poll ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "QalIoKWLTJehBJ8e1xRrbQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nMeeting Poll object returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20019"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `4400` <br>\n Meeting polls disabled. To enable this feature, enable the \"Meeting Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Meeting Poll not found. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:read:admin",
              "meeting:read",
              "meeting:read:poll",
              "meeting:read:poll:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting:read:admin",
            "meeting:read"
          ],
          "x-granular-scopes": [
            "meeting:read:poll",
            "meeting:read:poll:admin"
          ]
        }
      },
      "put": {
        "tags": [
          "Meetings"
        ],
        "summary": "Update a meeting poll",
        "description": "Polls allow the meeting host to survey attendees. Update information of a specific meeting [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings).\n\n**Prerequisites**:\n* Host user type must be **Pro** or higher plan.\n* The **Meeting Polls/Quizzes** setting enabled in the Zoom web portal.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:admin`,`meeting:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:update:poll`,`meeting:update:poll:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingPollUpdate",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          },
          {
            "name": "pollId",
            "in": "path",
            "description": "The poll ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "QalIoKWLTJehBJ8e1xRrbQ"
            }
          }
        ],
        "requestBody": {
          "description": "The meeting poll",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PollspollIdBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nMeeting Poll Updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `4400` <br>\n Meeting polls disabled. To enable this feature, enable the \"Meeting Polls/Quizzes\" setting in the Zoom web portal's \"Settings\" interface.  <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n**Error Code:** `4400` <br>\n Advanced meeting polls disabled. To enable this feature, enable the **Allow host to create advanced polls and quizzes** setting in the Zoom web portal's **Settings** interface. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Meeting Poll not found <br>\n**Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write:admin",
              "meeting:write",
              "meeting:update:poll",
              "meeting:update:poll:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write:admin",
            "meeting:write"
          ],
          "x-granular-scopes": [
            "meeting:update:poll",
            "meeting:update:poll:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Meetings"
        ],
        "summary": "Delete a meeting poll",
        "description": "Polls allow the meeting host to survey attendees. Delete a meeting [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings).  \n \n**Prerequisites**:  \n \n* Host user type must be **Pro**.\n* Polling feature should be enabled in the host's account.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:admin`,`meeting:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:delete:poll`,`meeting:delete:poll:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingPollDelete",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          },
          {
            "name": "pollId",
            "in": "path",
            "description": "The poll ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "QalIoKWLTJehBJ8e1xRrbQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nMeeting Poll deleted"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `4400` <br>\n Meeting polls disabled. To enable this feature, enable the **Meeting Polls/Quizzes** setting in the Zoom web portal's **Settings** interface. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Meeting poll not found. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write:admin",
              "meeting:write",
              "meeting:delete:poll",
              "meeting:delete:poll:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write:admin",
            "meeting:write"
          ],
          "x-granular-scopes": [
            "meeting:delete:poll",
            "meeting:delete:poll:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/registrants": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "List meeting registrants",
        "description": "List users that have registered for a meeting. A host or a user with admin permission can require [registration for a Zoom meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).\n\n**Prerequisites**:\n* Host user type must be **Pro** or higher plan.\n* Registration must be enabled for the meeting.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:admin`,`meeting:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:list_registrants`,`meeting:read:list_registrants:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "meetingRegistrants",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, store it as a long format integer, not an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          },
          {
            "name": "occurrence_id",
            "in": "query",
            "description": "The meeting or webinar occurrence ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1648194360000"
            },
            "x-ballerina-name": "occurrenceId"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Query by the registrant's status. \n* `pending` - The registration is pending. \n* `approved` - The registrant is approved. \n* `denied` - The registration is denied",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "pending",
              "default": "approved",
              "enum": [
                "pending",
                "approved",
                "denied"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1,
              "default": 1
            },
            "x-ballerina-name": "pageNumber"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
            },
            "x-ballerina-name": "nextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nSuccessfully listed meeting registrants",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationList"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Cannot access webinar info. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:read:admin",
              "meeting:read",
              "meeting:read:list_registrants",
              "meeting:read:list_registrants:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting:read:admin",
            "meeting:read"
          ],
          "x-granular-scopes": [
            "meeting:read:list_registrants",
            "meeting:read:list_registrants:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Meetings"
        ],
        "summary": "Add a meeting registrant",
        "description": "Create and submit a user's registration to a meeting. See [Customizing webinar registration](https://support.zoom.us/hc/en-us/articles/202835649-Customizing-webinar-registration) for details on how to set the requirements for these fields. Note that there is a maximum limit of 4,999 registrants per meeting and users will see an error if the meeting's capacity is reached. \n\n **Prerequisites:** \n* The host must be a **Licensed** user type.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:admin`,`meeting:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:registrant`,`meeting:write:registrant:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingRegistrantCreate",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          },
          {
            "name": "occurrence_ids",
            "in": "query",
            "description": "A comma-separated list of meeting occurrence IDs. You can get this value with the [Get a meeting](/docs/api-reference/zoom-api/methods#operation/meeting) API",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1648194360000,1648367160000"
            },
            "x-ballerina-name": "occurrenceIds"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingIdRegistrantsBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nMeeting registration created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse2016"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3043` <br>\n Meeting has reached maximum attendee capacity. <br>\n**Error Code:** `3000` <br>\n Cannot access meeting info. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write:admin",
              "meeting:write",
              "meeting:write:registrant",
              "meeting:write:registrant:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write:admin",
            "meeting:write"
          ],
          "x-granular-scopes": [
            "meeting:write:registrant",
            "meeting:write:registrant:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/registrants/questions": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "List registration questions ",
        "description": "List registration questions that will be displayed to users while [registering for a meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).\n\n**Prerequisites**:\n* Host user type must be **Pro** or higher plan.\n* Registration must be enabled for the meeting.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read`,`meeting:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:list_registration_questions`,`meeting:read:list_registration_questions:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingRegistrantsQuestionsGet",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, store it as a long format integer, not a simple integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nMeeting Registrant Question object returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20020"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:read",
              "meeting:read:admin",
              "meeting:read:list_registration_questions",
              "meeting:read:list_registration_questions:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting:read",
            "meeting:read:admin"
          ],
          "x-granular-scopes": [
            "meeting:read:list_registration_questions",
            "meeting:read:list_registration_questions:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Meetings"
        ],
        "summary": "Update registration questions",
        "description": "Update registration questions that will be displayed to users while [registering for a meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).\n\n**Prerequisites**:\n* Host user type must be **Pro** or higher plan.\n* Registration must be enabled for the meeting.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write`,`meeting:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:update:registration_question`,`meeting:update:registration_question:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingRegistrantQuestionUpdate",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          }
        ],
        "requestBody": {
          "description": "Meeting Registrant Questions",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrantsQuestionsBody1"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nMeeting Registrant Questions Updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write",
              "meeting:write:admin",
              "meeting:update:registration_question",
              "meeting:update:registration_question:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write",
            "meeting:write:admin"
          ],
          "x-granular-scopes": [
            "meeting:update:registration_question",
            "meeting:update:registration_question:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/registrants/status": {
      "put": {
        "tags": [
          "Meetings"
        ],
        "summary": "Update registrant's status",
        "description": "Update a meeting registrant's status by either approving, cancelling or denying a registrant from joining the meeting.\n\n**Prerequisites**:\n* Host user type must be **Pro** or higher plan.\n* Registration must be enabled for the meeting.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:admin`,`meeting:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:update:registrant_status`,`meeting:update:registrant_status:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "meetingRegistrantStatus",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, store it as a `long` format integer, not as a simple integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          },
          {
            "name": "occurrence_id",
            "in": "query",
            "description": "The meeting or webinar occurrence ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1648194360000"
            },
            "x-ballerina-name": "occurrenceId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrantsStatusBody1"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nRegistrant status updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3000` <br>\n Cannot access webinar information. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write:admin",
              "meeting:write",
              "meeting:update:registrant_status",
              "meeting:update:registrant_status:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write:admin",
            "meeting:write"
          ],
          "x-granular-scopes": [
            "meeting:update:registrant_status",
            "meeting:update:registrant_status:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/registrants/{registrantId}": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "Get a meeting registrant",
        "description": "Retrieve details on a specific user who has registered for the meeting. A host or a user with administrative permissions can require [registration for Zoom meetings](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).\n\n**Prerequisites:** \n* The account must have a Meeting plan\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:admin`,`meeting:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:registrant`,`meeting:read:registrant:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingRegistrantGet",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          },
          {
            "name": "registrantId",
            "in": "path",
            "description": "The registrant ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "9tboDiHUQAeOnbmudzWa5g"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingRegistrant"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3000` <br>\n Cannot access webinar info. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:read:admin",
              "meeting:read",
              "meeting:read:registrant",
              "meeting:read:registrant:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting:read:admin",
            "meeting:read"
          ],
          "x-granular-scopes": [
            "meeting:read:registrant",
            "meeting:read:registrant:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Meetings"
        ],
        "summary": "Delete a meeting registrant",
        "description": "Delete a meeting registrant.\n\n**Prerequisites**:\n* Host user type must be Pro or higher plan.\n* Registration must be enabled for the meeting.\n* For recurring meetings:\n  * The `registration_type` must be 2 or 3 to require the `occurrence_id` field.\n  * If the `registration_type` is 1, the `occurrence_id` is not needed, as registrants can attend any occurrence.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:admin`,`meeting:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:delete:registrant`,`meeting:delete:registrant:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingregistrantdelete",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 91498058927
            }
          },
          {
            "name": "registrantId",
            "in": "path",
            "description": "The meeting registrant ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "9tboDiHUQAeOnbmudzWa5g"
            }
          },
          {
            "name": "occurrence_id",
            "in": "query",
            "description": "The meeting occurrence ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "approved"
            },
            "x-ballerina-name": "occurrenceId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP status code:** `204`   \n \nOK"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n Only available for paid users: {userId}. <br>\n**Error Code:** `300` <br>\n The value that you entered for the Registrant ID field is invalid. Enter a valid value and try again. <br>\n**Error Code:** `300` <br>\n Registration has not been enabled for this meeting: {meetingId}. <br>\n**Error Code:** `3000` <br>\n Cannot access webinar info. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write:admin",
              "meeting:write",
              "meeting:delete:registrant",
              "meeting:delete:registrant:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write:admin",
            "meeting:write"
          ],
          "x-granular-scopes": [
            "meeting:delete:registrant",
            "meeting:delete:registrant:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/sip_dialing": {
      "post": {
        "tags": [
          "Meetings"
        ],
        "summary": "Get a meeting SIP URI with passcode",
        "description": "Get a meeting's SIP URI. The URI consists of the meeting ID, and may include the user-supplied passcode and participant identifier code. The API return data also includes additional fields to indicate whether the API caller has a valid Cloud Room Connector subscription, the participant identifier code from the URI, and the SIP URI validity period in seconds. \n\n**Prerequisites**:\n* The SIP URI is valid for 2 hours, or 7200 seconds, by default. After this period, the URI will expire and the API must be called again to retrieve a new one.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:sip_dialing`,`meeting:write:admin:sip_dialing`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:sip_dialing`,`meeting:write:sip_dialing:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "getSipDialingWithPasscode",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingIdSipDialingBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nMeeting's encoded SIP URI returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20021"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid meeting ID. <br>\n**Error Code:** `3000` <br>\n The meeting's SIP URI does not exist: {meetingId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `300` <br>\n Meeting ID does not exist. <br>\n**Error Code:** `3001` <br>\n Meeting does not exist: {meetingId} <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write:sip_dialing",
              "meeting:write:admin:sip_dialing",
              "meeting:write:sip_dialing",
              "meeting:write:sip_dialing:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write:sip_dialing",
            "meeting:write:admin:sip_dialing"
          ],
          "x-granular-scopes": [
            "meeting:write:sip_dialing",
            "meeting:write:sip_dialing:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/status": {
      "put": {
        "tags": [
          "Meetings"
        ],
        "summary": "Update meeting status",
        "description": "Update the status of a meeting.\n\n**Prerequisites**:\n* Host user must have a Zoom Meetings Basic license or higher.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:admin`,`meeting:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:update:status`,`meeting:update:status:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingStatus",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a `long` format integer and not an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingIdStatusBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nMeeting updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3000` <br>\n Cannot access webinar info. <br>\n**Error Code:** `3063` <br>\n Can not end on-premise user's meeting: {meetingId}. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write:admin",
              "meeting:write",
              "meeting:update:status",
              "meeting:update:status:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write:admin",
            "meeting:write"
          ],
          "x-granular-scopes": [
            "meeting:update:status",
            "meeting:update:status:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/survey": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "Get a meeting survey",
        "description": "Display information about a [meeting survey](https://support.zoom.us/hc/en-us/articles/4404969060621-Post-meeting-survey-and-reporting).  **Prerequisites:** * The host has a **Pro** license. * The [**Meeting Survey**](https://support.zoom.us/hc/en-us/articles/4404939095053-Enabling-meeting-surveys) feature is enabled on the host's account. * The meeting must be a scheduled meeting. Instant meetings do not have survey features enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read`,`meeting:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:survey`,`meeting:read:survey:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingSurveyGet",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, store it as a long-format integer and **not** a simple integer. Meeting IDs can be more than 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \n Meeting survey object returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingSurveyObject"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid meeting ID. <br>\n**Error Code:** `3000` <br>\n Cannot access webinar information. <br>\n**Error Code:** `3000` <br>\n Meeting survey disabled. To enable this feature, enable the \"Meeting Survey\" setting in the Zoom web portal's \"Settings\" interface. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `300` <br>\n Meeting ID does not exist. <br>\n**Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:read",
              "meeting:read:admin",
              "meeting:read:survey",
              "meeting:read:survey:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting:read",
            "meeting:read:admin"
          ],
          "x-granular-scopes": [
            "meeting:read:survey",
            "meeting:read:survey:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Meetings"
        ],
        "summary": "Delete a meeting survey",
        "description": "Delete a [meeting survey](https://support.zoom.us/hc/en-us/articles/4404969060621-Post-meeting-survey-and-reporting). \n\n **Prerequisites:** \n* The host must be a **Pro** user type. \n* The [**Meeting Survey**](https://support.zoom.us/hc/en-us/articles/4404939095053-Enabling-meeting-surveys) feature enabled in the host's account. \n* The meeting must be a scheduled meeting. Instant meetings do not have survey features enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write`,`meeting:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:delete:survey`,`meeting:delete:survey:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingSurveyDelete",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \n Meeting survey deleted"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid meeting ID. <br>\n**Error Code:** `3000` <br>\n * Cannot access webinar information. <br>\n * Meeting survey disabled. To enable this feature, enable the **Meeting Survey** setting in the Zoom web portal's **Settings** interface. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `300` <br>\n Meeting ID does not exist. <br>\n**Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write",
              "meeting:write:admin",
              "meeting:delete:survey",
              "meeting:delete:survey:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write",
            "meeting:write:admin"
          ],
          "x-granular-scopes": [
            "meeting:delete:survey",
            "meeting:delete:survey:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Meetings"
        ],
        "summary": "Update a meeting survey",
        "description": "Update a [meeting survey](https://support.zoom.us/hc/en-us/articles/4404969060621-Post-meeting-survey-and-reporting).  **Prerequisites:** * The host must be a **Pro** user type. * The [**Meeting Survey**](https://support.zoom.us/hc/en-us/articles/4404939095053-Enabling-meeting-surveys) feature is enabled in the host's account. * The meeting must be a scheduled meeting. Instant meetings do not have survey features enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write`,`meeting:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:update:survey`,`meeting:update:survey:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingSurveyUpdate",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, store it as a long-format integer and **not** a simple integer. Meeting IDs can be over 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingSurveyObject1"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \n Meeting survey updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid meeting ID. <br>\n**Error Code:** `300` <br>\n Invalid third party survey: {third_party_survey}. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n**Error Code:** `3000` <br>\n Cannot access Webinar information. <br>\n**Error Code:** `3000` <br>\n Meeting survey disabled. To enable this feature, enable the **Meeting Survey** setting in the Zoom web portal's **Settings** interface. <br>\n**Error Code:** `3000` <br>\n Not allowed host to use a 3rd-party survey link. To use this feature, enable the \"Allow host to use a 3rd-party survey link\" setting in the \"Account Settings\" page of the Zoom web portal. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `300` <br>\n Meeting ID does not exist. <br>\n**Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write",
              "meeting:write:admin",
              "meeting:update:survey",
              "meeting:update:survey:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write",
            "meeting:write:admin"
          ],
          "x-granular-scopes": [
            "meeting:update:survey",
            "meeting:update:survey:admin"
          ]
        }
      }
    },
    "/meetings/{meetingId}/token": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "Get meeting's token",
        "description": "Get a meeting's [closed caption token (caption URL)](https://support.zoom.us/hc/en-us/articles/115002212983-Using-a-third-party-closed-captioning-service). This token lets you use a third-party service to stream text to their closed captioning software to the Zoom meeting. \n\n**Prerequisites:** \n* The **Closed captioning** setting enabled in the Zoom web portal. \n* The **Allow use of caption API Token to integrate with third-party closed captioning services** setting enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read`,`meeting:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:token`,`meeting:read:token:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "meetingToken",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID. \n\n When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The meeting token type. \n* `closed_caption_token` - The third-party closed caption API token. \n\nThis defaults to `closed_caption_token`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "closed_caption_token",
              "default": "closed_caption_token",
              "enum": [
                "closed_caption_token"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nMeeting token returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20022"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid meeting ID. <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n**Error Code:** `3000` <br>\n Cannot access webinar information. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `300` <br>\n Meeting ID does not exist. <br>\n**Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:read",
              "meeting:read:admin",
              "meeting:read:token",
              "meeting:read:token:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting:read",
            "meeting:read:admin"
          ],
          "x-granular-scopes": [
            "meeting:read:token",
            "meeting:read:token:admin"
          ]
        }
      }
    },
    "/past_meetings/{meetingId}": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "Get past meeting details",
        "description": "Get information about a past meeting.\n\n**Prerequisites**:\n* The meeting must have ended before you can retrieve the data.\n* You cannot access a meeting that occurred more than one year ago.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:admin`,`meeting:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:past_meeting`,`meeting:read:past_meeting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "pastMeetingDetails",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** [double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) the meeting UUID before making an API request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nMeeting information returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20023"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Cannot access meeting information. <br>\n**Error Code:** `200` <br>\n Only available for paid account: {accountId} <br>\n**Error Code:** `12702` <br>\n Can not access a meeting a year ago. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:read:admin",
              "meeting:read",
              "meeting:read:past_meeting",
              "meeting:read:past_meeting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting:read:admin",
            "meeting:read"
          ],
          "x-granular-scopes": [
            "meeting:read:past_meeting",
            "meeting:read:past_meeting:admin"
          ]
        }
      }
    },
    "/past_meetings/{meetingId}/instances": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "List past meeting instances",
        "description": "Return a list of past meeting instances.\n\n**Prerequisites**\n* The meeting must have already occurred at least once. This endpoint only returns instances of meetings that have ended.\n* You cannot retrieve instances for meetings that occurred more than 15 months ago.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:admin`,`meeting:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:list_past_instances`,`meeting:read:list_past_instances:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "pastMeetings",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The past meeting's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 93398114182
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \n List of ended meeting instances returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingInstances"
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:read:admin",
              "meeting:read",
              "meeting:read:list_past_instances",
              "meeting:read:list_past_instances:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting:read:admin",
            "meeting:read"
          ],
          "x-granular-scopes": [
            "meeting:read:list_past_instances",
            "meeting:read:list_past_instances:admin"
          ]
        }
      }
    },
    "/past_meetings/{meetingId}/participants": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "Get past meeting participants",
        "description": "Retrieve information on participants from a past meeting. Note the API doesn't return results if there's only one participant in a meeting.  \n   \n \n**Prerequisites:**  \n \n* Paid account on a Pro or higher plan.\n\n  \n    \n   **Note**: Please double encode your UUID when using this API if the UUID begins with a '/'or contains '//' in it.\n\n**NOTE:** After meetings with hundreds of participants, the attendance data takes some time to be generated. If you receive a duration of 0 for users' time in the meeting, you may have called the endpoint before the data is fully processed. Implement a short delay or retry logic before fetching participant data.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:admin`,`meeting:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:list_past_participants`,`meeting:read:list_past_participants:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "pastMeetingParticipants",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the meeting UUID before making an API request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
            },
            "x-ballerina-name": "nextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nMeeting participants' report returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20024"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n Only available for paid account: {accountId} <br>\n**Error Code:** `12702` <br>\n Can not access a meeting a year ago. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting does not exist: {meetingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:read:admin",
              "meeting:read",
              "meeting:read:list_past_participants",
              "meeting:read:list_past_participants:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting:read:admin",
            "meeting:read"
          ],
          "x-granular-scopes": [
            "meeting:read:list_past_participants",
            "meeting:read:list_past_participants:admin"
          ]
        }
      }
    },
    "/past_meetings/{meetingId}/polls": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "List past meeting's poll results",
        "description": "[Polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) allow the meeting host to survey attendees. List poll results of a meeting.  \n   \n \n\n**Prerequisites**:  \n \n* Host user type must be **Pro**.\n* Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:admin`,`meeting:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:list_poll_results`,`meeting:read:list_poll_results:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listPastMeetingPolls",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the meeting UUID before making an API request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nPolls returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20025"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `12702` <br>\n Can not access a meeting a year ago. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:read:admin",
              "meeting:read",
              "meeting:read:list_poll_results",
              "meeting:read:list_poll_results:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting:read:admin",
            "meeting:read"
          ],
          "x-granular-scopes": [
            "meeting:read:list_poll_results",
            "meeting:read:list_poll_results:admin"
          ]
        }
      }
    },
    "/past_meetings/{meetingId}/qa": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "List past meetings' Q&A",
        "description": "List Q&amp;A of a specific meeting.\n\nThe question &amp; answer (Q&amp;A) feature for Zoom Meetings lets attendees ask questions during a meeting and lets the other attendees answer those questions.\n\n**Prerequisites**:\n* Q&A must be enabled for the meeting.\n* The meeting must have ended before you can retrieve the data.\n* You cannot retrieve Q&A data for meetings that occurred more than 15 months ago.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:admin`,`meeting:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:past_qa`,`meeting:read:past_qa:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listPastMeetingQA",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the meeting UUID before making an API request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nQ&amp;A returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20026"
                }
              }
            }
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `1010` <br>\n User does not belong to this account:{accountId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting ID is invalid or not end. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:read:admin",
              "meeting:read",
              "meeting:read:past_qa",
              "meeting:read:past_qa:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting:read:admin",
            "meeting:read"
          ],
          "x-granular-scopes": [
            "meeting:read:past_qa",
            "meeting:read:past_qa:admin"
          ]
        }
      }
    },
    "/users/{userId}/meeting_templates": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "List meeting templates",
        "description": "List available [meeting templates](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates) for a user. For user-level apps, pass [the `me` value](/docs/api/rest/using-zoom-apis/#the-me-keyword) instead of the `userId` parameter.\n\n**Prerequisites**:\n* Host user must have a Zoom Meetings Basic license or higher.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read`,`meeting:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:list_templates`,`meeting:read:list_templates:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listMeetingTemplates",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID retrievable from the [List users](/api-reference/zoom-api/methods#operation/users) API",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "30R7kT7bTIKSNUFEuH_Qlg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**   \n ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20027"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:read",
              "meeting:read:admin",
              "meeting:read:list_templates",
              "meeting:read:list_templates:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting:read",
            "meeting:read:admin"
          ],
          "x-granular-scopes": [
            "meeting:read:list_templates",
            "meeting:read:list_templates:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Meetings"
        ],
        "summary": "Create a meeting template from an existing meeting",
        "description": "Create a meeting template from an existing meeting.\n\n**Prerequisites**:\n* Host user must have a Zoom Meetings Basic license or higher.\n* You can only create up to 40 meeting templates.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:admin`,`meeting:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:template`,`meeting:write:template:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "meetingTemplateCreate",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID retrievable from the [List users](/docs/api/rest/reference/user/methods/#operation/users) API",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "30R7kT7bTIKSNUFEuH_Qlg"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIdMeetingTemplatesBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`  \n \nMeeting template created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse2017"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n You can only create up to 40 meeting templates. <br>\n**Error Code:** `3001` <br>\n Meeting does not exist: {meetingId} <br>\n**Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n**Error Code:** `3000` <br>\n Cannot access webinar information. <br>\n**Error Code:** `3000` <br>\n Meeting template name already exists: {templateName}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write:admin",
              "meeting:write",
              "meeting:write:template",
              "meeting:write:template:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write:admin",
            "meeting:write"
          ],
          "x-granular-scopes": [
            "meeting:write:template",
            "meeting:write:template:admin"
          ]
        }
      }
    },
    "/users/{userId}/meetings": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "List meetings",
        "description": "List a meeting host user's scheduled meetings. For user-level apps, pass [the `me` value](/docs/api/rest/using-zoom-apis/#the-me-keyword) instead of the `userId` parameter.\n\n**Prerequisites:**\n* This API **only** supports scheduled meetings. This API does not return information about instant meetings.\n* This API only returns a user's [unexpired meetings](https://support.zoom.us/hc/en-us/articles/201362373-Meeting-ID#h_c73f9b08-c1c0-4a1a-b538-e01ebb98e844).\n* When `type` is set to `upcoming`, `upcoming_meetings`, or `previous_meetings`, only a maximum of 6 months of meeting data will be returned. \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:admin`,`meeting:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:list_meetings`,`meeting:read:list_meetings:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "meetings",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user's user ID or email address. For user-level apps, pass the `me` value",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type of meeting. \n* `scheduled` - All valid previous (unexpired) meetings, live meetings, and upcoming scheduled meetings. \n* `live` - All the ongoing meetings. \n* `upcoming` - All upcoming meetings, including live meetings. \n* `upcoming_meetings` - All upcoming meetings, including live meetings. \n* `previous_meetings` - All the previous meetings",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "scheduled",
              "default": "scheduled",
              "enum": [
                "scheduled",
                "live",
                "upcoming",
                "upcoming_meetings",
                "previous_meetings"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
            },
            "x-ballerina-name": "nextPageToken"
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number of the current page in the returned records",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "x-ballerina-name": "pageNumber"
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2023-01-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The end date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2023-01-16"
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "The timezone to assign to the `from` and `to` value. For a list of supported timezones and their formats, see our [timezone list](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "America/Los_Angeles"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nList of meeting objects returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20028"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3161` <br>\n Meeting hosting and scheduling capabilities are not allowed for your user account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:read:admin",
              "meeting:read",
              "meeting:read:list_meetings",
              "meeting:read:list_meetings:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting:read:admin",
            "meeting:read"
          ],
          "x-granular-scopes": [
            "meeting:read:list_meetings",
            "meeting:read:list_meetings:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Meetings"
        ],
        "summary": "Create a meeting",
        "description": "[Create a meeting](https://support.zoom.us/hc/en-us/articles/201362413-Scheduling-meetings) for a user. For user-level apps, pass [the `me` value](/docs/api/rest/using-zoom-apis/#the-me-keyword) instead of the `userId` parameter.\n\n**Prerequisites:**\n* A meeting's `start_url` value is the URL a host or an alternative host can use to start a meeting. The `start_url` value's expiration time is **two hours** for all regular users.\n* For `custCreate` meeting hosts - users created with the `custCreate` parameter via the [**Create users**](/docs/api/users/#tag/users/POST/users) API - the expiration time of the `start_url` parameter is **90 days** from the generation of the `start_url`.\n* For security reasons, the recommended way to programmatically get the updated `start_url` value after expiry is to call the [**Get a meeting**](/docs/api/meetings/#tag/meetings/GET/meetings/{meetingId}) API. Refer to the `start_url` value in the response.\n* **100 requests per day**. The rate limit is applied against the `userId` of the **meeting host** used to make the request.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:admin`,`meeting:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:write:meeting`,`meeting:write:meeting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "meetingCreate",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user's user ID or email address. For user-level apps, pass the `me` value",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Meeting object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIdMeetingsBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`  \n \nMeeting created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse2018"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3161` <br>\n Your user account is not allowed meeting hosting and scheduling capabilities. <br>\n**Error Code:** `3000` <br>\n Instant meetings do not support the `schedule_for` parameter, and you can't schedule an instant meeting for another user. <br>\n**Error Code:** `3000` <br>\n Users in '{userId}' have been blocked from joining meetings and webinars. To unblock them, go to the **Settings** page in the Zoom web portal and update **Block users in specific domains from joining meetings and webinars**. <br>\n**Error Code:** `3000` <br>\n You cannot schedule a meeting for {userId} <br>\n**Error Code:** `300` <br>\n The value that you entered in the `schedule_for` field is invalid. Enter a valid value and try again. <br>\n**Error Code:** `300` <br>\n Invalid `enforce_login_domains`. Separate multiple domains with semicolons. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:write:admin",
              "meeting:write",
              "meeting:write:meeting",
              "meeting:write:meeting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "meeting:write:admin",
            "meeting:write"
          ],
          "x-granular-scopes": [
            "meeting:write:meeting",
            "meeting:write:meeting:admin"
          ]
        }
      }
    },
    "/users/{userId}/upcoming_meetings": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "List upcoming meetings",
        "description": "List a Zoom user's upcoming meetings. For user-level apps, pass [the `me` value](/docs/api/rest/using-zoom-apis/#the-me-keyword) instead of the `userId` parameter.\n\n**Notes**:\n* This API includes the meetings that Zoom users schedule and the meetings they are invited to join.\n* This API only includes upcoming meetings within the next 24 hours.\n\n**Prerequisites**:\n* To retrieve data for Zoom meetings that the user has been invited to from a third-party calendar (Google, Exchange, Office 365, Apple iCloud), the [**Calendar and Contacts Integration**](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0069503) must be enabled in the Zoom Web Portal.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read`,`meeting:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `meeting:read:list_upcoming_meetings`,`meeting:read:list_upcoming_meetings:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listUpcomingMeeting",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user's user ID or email address. For user-level apps, pass [the `me` value](/docs/api/rest/using-zoom-apis/#the-me-keyword)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "30R7kT7bTIKSNUFEuH_Qlg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` List of upcoming meeting objects returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20029"
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n User does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "meeting:read",
              "meeting:read:admin",
              "meeting:read:list_upcoming_meetings",
              "meeting:read:list_upcoming_meetings:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "meeting:read",
            "meeting:read:admin"
          ],
          "x-granular-scopes": [
            "meeting:read:list_upcoming_meetings",
            "meeting:read:list_upcoming_meetings:admin"
          ]
        }
      }
    },
    "/users/{userId}/pac": {
      "get": {
        "tags": [
          "PAC"
        ],
        "summary": "List a user's PAC accounts",
        "description": "Retrieve a list of a user's [personal audio conference (PAC)](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) accounts. For user-level apps, pass [the `me` value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword) instead of the `userId` parameter. \n\n PAC allows Pro or higher account holders to host meetings through PSTN (phone dial-in) only. \n\n **Prerequisites** \n* A Pro or higher plan with an [Audio Conferencing](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) subscription. \n* The [**Personal Audio Conference**](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference#h_01F5BPM447M6QDJXX50RSFXKJ3) setting enabled in the user's profile.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `pac:read:admin`,`pac:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `pac:read:list_pac_accounts`,`pac:read:list_pac_accounts:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "userPACs",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user's user ID or email address. For user-level apps, pass the `me` value",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \n PAC account list returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20030"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2024` <br>\n User does not have PAC enabled. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: $userId <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "pac:read:admin",
              "pac:read",
              "pac:read:list_pac_accounts",
              "pac:read:list_pac_accounts:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "pac:read:admin",
            "pac:read"
          ],
          "x-granular-scopes": [
            "pac:read:list_pac_accounts",
            "pac:read:list_pac_accounts:admin"
          ]
        }
      }
    },
    "/report/activities": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get sign In / sign out activity report",
        "description": "Retrieve a list of sign in / sign out activity logs [report](https://support.zoom.us/hc/en-us/articles/201363213-Getting-Started-with-Reports) of users under a Zoom account.  \n \n**Prerequisites**  \n \n* Pro or higher plan.  \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:user_activities:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "reportSignInSignOutActivities",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Start date for which you would like to view the activity logs report. Using the `from` and `to` parameters, specify a monthly date range for the report as the API only provides one month worth of data in one request. The specified date range should fall within the last six months",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2019-09-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End date up to which you would like to view the activity logs report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2019-09-20"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records to be returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Next page token is used to paginate through large result sets",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "b43YBRLJFg3V4vsSpxvGdKIGtNbxn9h9If2"
            },
            "x-ballerina-name": "nextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nSuccess",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20031"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nNo permission.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin",
              "report:read:user_activities:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "UsageReport:Read"
          ],
          "x-macro-scopes": [
            "report:read:admin"
          ],
          "x-granular-scopes": [
            "report:read:user_activities:admin"
          ]
        }
      }
    },
    "/report/billing": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get billing reports",
        "description": "Get department billing reports of a Zoom account.\n\n**Prerequisites:**  \n \n* Pro or a higher account with Department Billing option enabled. Contact Zoom Support team for details.\n\n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:billing:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "getBillingReport",
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nBilling report returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20032"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nNo permission.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin",
              "report:read:billing:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "UsageReport:Read"
          ],
          "x-macro-scopes": [
            "report:read:admin"
          ],
          "x-granular-scopes": [
            "report:read:billing:admin"
          ]
        }
      }
    },
    "/report/billing/invoices": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get billing invoice reports",
        "description": "Get department billing invoices reports for a specific billing period. Provide the `billing_id` of the billing period for which you would like to retrieve the invoices. Retrieve this ID from the **Get Billing Reports** API. \n\n**Prerequisites:**  \n \n* Pro or a higher account with Department Billing option enabled. Contact the Zoom Support team to enable this feature.\n\n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:billing_invoice:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "getBillingInvoicesReports",
        "parameters": [
          {
            "name": "billing_id",
            "in": "query",
            "description": "The billing report's unique identifier. Retrieve this ID from the response of **Get Billing Reports** API request. \n\n",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "indfhgfhfho"
            },
            "x-ballerina-name": "billingId"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nBilling Invoice reports returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20033"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid parameter \"billing_id\" <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `5010` <br>\n Report does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin",
              "report:read:billing_invoice:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "UsageReport:Read"
          ],
          "x-macro-scopes": [
            "report:read:admin"
          ],
          "x-granular-scopes": [
            "report:read:billing_invoice:admin"
          ]
        }
      }
    },
    "/report/cloud_recording": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get cloud recording usage report",
        "description": "Retrieve cloud recording usage report for a specified period. You can only get cloud recording reports that is one day earlier than the current date and for the most recent period of 6 months. The date gap between from and to dates should be smaller or equal to 30 days.   \n \n**Prerequisites**  \n \n* Pro or higher plan.  \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "reportCloudRecording",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-01-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End date",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-01-28"
            }
          },
          {
            "name": "group_id",
            "in": "query",
            "description": "The group ID. To get a group ID, use the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API. \n\n **Note:** The API response will only contain users who are members of the queried group ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "TaVA8QKik_1233"
            },
            "x-ballerina-name": "groupId"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nCloud Recording Report Returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20034"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nNo permission.<br>\n’\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": [
            "report:read:admin"
          ]
        }
      }
    },
    "/report/daily": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get daily usage report",
        "description": "Retrieve daily report to access the account-wide usage of Zoom services for each day in a given month. It lists the number of new users, meetings, participants, and meeting minutes.  \n \n**Prerequisites**  \n \n* Pro or higher plan.  \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "reportDaily",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "Year for this report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 2022
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "Month for this report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 3
            }
          },
          {
            "name": "group_id",
            "in": "query",
            "description": "The group ID. To get a group ID, use the [**List groups**](/docs/api/users/#tag/groups/GET/groups) API. \n\n **Note:** The API response will only contain users who are members of the queried group ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "TaVA8QKik_1233"
            },
            "x-ballerina-name": "groupId"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nDaily report retrieved.  \n \nThis is only available for paid accounts:{accountId}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20035"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Daily report can only be provided for a month that falls within the recent 6 months. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "report:read:admin"
          ]
        }
      }
    },
    "/report/history_meetings": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get history meeting and webinar list",
        "description": "Retrieve a list of history meetings and webinars.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:list_history_meetings:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "Gethistorymeetingandwebinarlist",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The start date in `yyyy-mm-dd` format. The date range defined by the `from` and `to` parameters should only be one month, as the report includes only one month worth of data at once",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2024-12-23"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The end date `yyyy-MM-dd` format",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2024-12-24"
            }
          },
          {
            "name": "date_type",
            "in": "query",
            "description": "The type of date to query.\n* `start_time` - Query by meeting's start time. \n* `end_time` - Query by meeting's end time. \n\nThis value defaults to `start_time`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "end_time",
              "enum": [
                "start_time",
                "end_time"
              ]
            },
            "x-ballerina-name": "dateType"
          },
          {
            "name": "meeting_type",
            "in": "query",
            "description": "The meeting type to query. \n- `all` - rerturn meetings and webinars \n- `meeting` - only return meetings \n- `webinar` - only return webinars",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "meeting",
              "enum": [
                "meeting",
                "webinar",
                "all"
              ]
            },
            "x-ballerina-name": "meetingType"
          },
          {
            "name": "report_type",
            "in": "query",
            "description": "Query meetings that have this type of report.\n- `all` - all meetings\n- `poll` - meetings with poll data \n- `survey` - meetings with survey data \n- `qa` - meetings with Q&A data \n- `resource` - meetings with resource link data \n- `reaction` - meetings with reaction data",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "poll",
              "enum": [
                "all",
                "poll",
                "survey",
                "qa",
                "resource",
                "reaction"
              ]
            },
            "x-ballerina-name": "reportType"
          },
          {
            "name": "search_key",
            "in": "query",
            "description": "The keywords of meeting topic or meeting ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "my meeting"
            },
            "x-ballerina-name": "searchKey"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records to be returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
            },
            "x-ballerina-name": "nextPageToken"
          },
          {
            "name": "group_id",
            "in": "query",
            "description": "The group ID. To get a group ID, use the [**List groups**](/docs/api/rest/reference/user/methods/#operation/groups) API. \n\n **Note:** The API response will only contain users who are members of the queried group ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "TaVA8QKik_1233"
            },
            "x-ballerina-name": "groupId"
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP Status Code: 200 Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20036"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n The next page token is invalid or expired. <br>\n**Error Code:** `300` <br>\n Invalid parameter: {0}. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n "
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `12703` <br>\n No permission for the group: {0}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin",
              "report:read:list_history_meetings:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "UsageReport:Read"
          ],
          "x-macro-scopes": [
            "report:read:admin"
          ],
          "x-granular-scopes": [
            "report:read:list_history_meetings:admin"
          ]
        }
      }
    },
    "/report/meeting_activities": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get a meeting activities report",
        "description": "Retrieve a list of a meeting activity logs. Contact Zoom Support to enable the meeting audit trail log feature on your account.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:meeting_activity_log:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "reportMeetingactivitylogs",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The start date in 'yyyy-MM-dd'format. The date range defined by the `from` and `to` parameters should only be one month, as the report includes only one month's worth of data at once",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-03-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The end date 'yyyy-MM-dd' format",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-03-04"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records to be returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "b43YBRLJFg3V4vsSpxvGdKIGtNbxn9h9If2"
            },
            "x-ballerina-name": "nextPageToken"
          },
          {
            "name": "meeting_number",
            "in": "query",
            "description": "The meeting's number",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "4221901192"
            },
            "x-ballerina-name": "meetingNumber"
          },
          {
            "name": "search_key",
            "in": "query",
            "description": "An operator's name or email",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Eileen"
            },
            "x-ballerina-name": "searchKey"
          },
          {
            "name": "activity_type",
            "in": "query",
            "description": "Activity type. \n-1 - All activities. \n0 - Meeting created. \n1 - Meeting started. \n2 - User joined. \n3 - User left. \n4 - Remote control. \n5 - In-meeting chat. \n9 - Meeting ended",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "All Activities",
              "default": "All Activities",
              "enum": [
                "All Activities",
                "Meeting Created",
                "Meeting Started",
                "User Join",
                "User Left",
                "Remote Control",
                "In-Meeting Chat",
                "Meeting Ended"
              ]
            },
            "x-ballerina-name": "activityType"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  Success. Only available for Paid or ZMP account {accountId}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20037"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  No permission. \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1010` <br>\n User does not belong to this account {accountId}.<br> <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin",
              "report:read:meeting_activity_log:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "UsageReport:Read"
          ],
          "x-macro-scopes": [
            "report:read:admin"
          ],
          "x-granular-scopes": [
            "report:read:meeting_activity_log:admin"
          ]
        }
      }
    },
    "/report/meetings/{meetingId}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get meeting detail reports",
        "description": "Get a detailed report for a past meeting.   \n \n**Prerequisites:**  \n \n* Pro or a higher plan.  \n \n \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:meeting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "reportMeetingDetails",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** [double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) the meeting UUID before making an API request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/MeetingId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nMeeting details returned.  \n \nThis is only available for paid account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20038"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `12702` <br>\nCan not access meeting a year ago.<br>\n\n**Error Code:** `200` <br>\nNo permission.<br>\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nMeeting {meetingId} not found or has expired.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin",
              "report:read:meeting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "UsageReport:Read"
          ],
          "x-macro-scopes": [
            "report:read:admin"
          ],
          "x-granular-scopes": [
            "report:read:meeting:admin"
          ]
        }
      }
    },
    "/report/meetings/{meetingId}/participants": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get meeting participant reports",
        "description": "Return a report of a past meeting with two or more participants, including the host. To return a report for past meeting with only **one** participant, use the [**List meeting participants**](/docs/api-reference/zoom-api/ma#operation/dashboardMeetingParticipants) API. \n\n**Note:** \n\nThis API may return empty values for participants' `user_name`, `ip_address`, `location`, and `email` responses when the account calling this API: \n* Does **not** have a signed HIPAA business associate agreement (BAA). \n* Is a [**legacy** HIPAA BAA account](/docs/api-reference/other-references/legacy-business-associate-agreements). \n\n**Prerequisites:** \n* A Pro or a higher plan.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:list_meeting_participants:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "reportMeetingParticipants",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the meeting UUID before making an API request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
            },
            "x-ballerina-name": "nextPageToken"
          },
          {
            "name": "include_fields",
            "in": "query",
            "description": "Provide `registrant_id` as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [meeting registrant](/docs/api-reference/zoom-api/methods#operation/meetingRegistrants)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "registrant_id",
              "enum": [
                "registrant_id"
              ]
            },
            "x-ballerina-name": "includeFields"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nMeeting participants report returned.  \n \nOnly available for Paid or ZMP account: {accountId}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20039"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1010` <br>\n User does not belong to this account:{accountId}.<br> <br>\n**Error Code:** `12702` <br>\n Can not access meeting a year ago.<br> <br>\n**Error Code:** `200` <br>\n No permission.<br> <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Meeting  {MeetingId} not found or has expired.<br> <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin",
              "report:read:list_meeting_participants:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "UsageReport:Read"
          ],
          "x-macro-scopes": [
            "report:read:admin"
          ],
          "x-granular-scopes": [
            "report:read:list_meeting_participants:admin"
          ]
        }
      }
    },
    "/report/meetings/{meetingId}/polls": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get meeting poll reports",
        "description": "Use this API to get a report of [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings) results for a past meeting. \n\n **Prerequisites:** \n* A Pro or a higher plan.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:list_meeting_polls:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "reportMeetingPolls",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** [double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) the meeting UUID before making an API request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/MeetingId1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` \n* Meeting polls report returned. \n* This is only available for paid account: {accountId}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20040"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `12702` <br>\nCan not access meeting a year ago.\n\n**Error Code:** `200` <br>\nNo permission.<br>\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nMeeting \"{meetingId}\" not found or has expired.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin",
              "report:read:list_meeting_polls:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "UsageReport:Read"
          ],
          "x-macro-scopes": [
            "report:read:admin"
          ],
          "x-granular-scopes": [
            "report:read:list_meeting_polls:admin"
          ]
        }
      }
    },
    "/report/meetings/{meetingId}/qa": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get meeting Q&A report",
        "description": "Retrieve a report on questions asked and answered by participants from past meetings.   \n   \n\n\n \n**Prerequisites:**  \n \n* Pro plan or higher.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:meeting_qna:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "reportMeetingQA",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the meeting UUID before making an API request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nMeeting Q&amp;A report returned.  \n \nOnly available for Paid or ZMP account: {accountId}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20041"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n No permission.<br> <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId}.<br> <br>\n**Error Code:** `3001` <br>\n Meeting {meetingId} not found or has expired.<br> <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin",
              "report:read:meeting_qna:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "UsageReport:Read"
          ],
          "x-macro-scopes": [
            "report:read:admin"
          ],
          "x-granular-scopes": [
            "report:read:meeting_qna:admin"
          ]
        }
      }
    },
    "/report/meetings/{meetingId}/survey": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get meeting survey report",
        "description": "Retrieve a report on past [meeting survey](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0057559).  \n   \n \n**Prerequisites:**  \n \n* Pro or a higher plan.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:meeting_survey:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "reportMeetingSurvey",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the meeting UUID before making an API request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nMeeting survey report returned.   \n \nOnly available for Paid or ZMP account: {accountId}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20042"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1010` <br>\n User does not belong to this account:{accountId}.<br> <br>\n**Error Code:** `12702` <br>\n Can not access a webinar a year ago.<br> <br>\n**Error Code:** `200` <br>\n No permission.<br> <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar  {webinarId} not found or has expired.<br> <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin",
              "report:read:meeting_survey:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "UsageReport:Read"
          ],
          "x-macro-scopes": [
            "report:read:admin"
          ],
          "x-granular-scopes": [
            "report:read:meeting_survey:admin"
          ]
        }
      }
    },
    "/report/operationlogs": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get operation logs report",
        "description": "The [Operations Logs](https://support.zoom.us/hc/en-us/articles/360032748331-Operation-Logs) report allows you to audit admin and user activity, such as adding a new user, changing account settings, and deleting recordings.  \n \nUse this API to retrieve operation logs report for a specified period of time.  \n \n**Prerequisites:**  \n \n* Pro or higher plan.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:operation_logs:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "reportOperationLogs",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-01-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End date",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-01-28"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
            },
            "x-ballerina-name": "nextPageToken"
          },
          {
            "name": "category_type",
            "in": "query",
            "description": "**Optional**  \n \nFilter your response by a category type to see reports for a specific category.\nThe value for this field can be one of the following:  \n  `all`  \n `user`  \n `user_settings`  \n `account`  \n `billing`  \n `im`  \n `recording`  \n `phone_contacts`  \n `webinar`  \n `sub_account`  \n `role`  \n `zoom_rooms`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "user",
              "enum": [
                "all",
                "user",
                "user_settings",
                "account",
                "billing",
                "im",
                "recording",
                "phone_contacts",
                "webinar",
                "sub_account",
                "role",
                "zoom_rooms"
              ]
            },
            "x-ballerina-name": "categoryType"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nOperation Logs Report Returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20043"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nNo permission.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin",
              "report:read:operation_logs:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "UsageReport:Read"
          ],
          "x-macro-scopes": [
            "report:read:admin"
          ],
          "x-granular-scopes": [
            "report:read:operation_logs:admin"
          ]
        }
      }
    },
    "/report/telephone": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get telephone reports",
        "description": "The [telephone report](https://support.zoom.us/hc/en-us/articles/206514816-Telephone-reports) allows you to view who dialed into meetings via phone (Audio Conferencing or SIP Connected Audio) and which number they dialed into and other details. Use this API to get telephone report for a specified period of time.\n\n**Prerequisites:**  \n \n* Pro or higher plan.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:telephone:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "reportTelephone",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Audio types:  \n `1` - Toll-free Call-in &amp; Call-out.  \n `2` - Toll   \n \n`3` - SIP Connected Audio",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "3",
              "default": "1",
              "enum": [
                "1",
                "2",
                "3"
              ]
            }
          },
          {
            "name": "query_date_type",
            "in": "query",
            "description": "The type of date to query. \n* `start_time` &mdash; Query by call start time. \n* `end_time` &mdash; Query by call end time. \n* `meeting_start_time` &mdash; Query by meeting start time. \n* `meeting_end_time` &mdash; Query by meeting end time. \n\nThis value defaults to `start_time`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "start_time",
              "default": "start_time",
              "enum": [
                "start_time",
                "end_time",
                "meeting_start_time",
                "meeting_end_time"
              ]
            },
            "x-ballerina-name": "queryDateType"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-01-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End date",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-01-28"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number of the current page in the returned records. This field is **not** available if the `query_date_type` parameter is the `meeting_start_time` or `meeting_end_time` value. \n\nThis field is deprecated. Use the `next_page_token` query parameter for pagination",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1,
              "default": 1
            },
            "x-ballerina-name": "pageNumber"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "b43YBRLJFg3V4vsSpxvGdKIGtNbxn9h9If2"
            },
            "x-ballerina-name": "nextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nTelephone report returned.  \n \nThis is only available for paid account: {accountId}.  \n \nThe requested report cannot be generated for this account because this account has not subscribed to toll-free audio conference plan.  \n \nEnable the **Toll Report** feature to perform this action. Contact the Zoom Support team for help",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20044"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n The next page token is invalid or expired. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n "
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin",
              "report:read:telephone:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "UsageReport:Read"
          ],
          "x-macro-scopes": [
            "report:read:admin"
          ],
          "x-granular-scopes": [
            "report:read:telephone:admin"
          ]
        }
      }
    },
    "/report/upcoming_events": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get upcoming events report",
        "description": "Use this API to list upcoming meeting and/or webinar events within a specified period of time. The report's time range is limited to one month.\n\n**Prerequisites:** \n* A Pro or higher plan\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:upcoming_meetings_webinars:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "reportUpcomingEvents",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-01-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End date",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-01-28"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
            },
            "x-ballerina-name": "nextPageToken"
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type of event to query. \n* `meeting` &mdash; A meeting event. \n* `webinar` &mdash; A webinar event. \n* `all` &mdash; Both meeting and webinar events.\n\nThis value defaults to `all`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "meeting",
              "default": "all",
              "enum": [
                "meeting",
                "webinar",
                "all"
              ]
            }
          },
          {
            "name": "group_id",
            "in": "query",
            "description": "The group ID. To get a group ID, use the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API. \n\n **Note:** The API response will only contain meetings where the host is a member of the queried group ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "TaVA8QKik_1233"
            },
            "x-ballerina-name": "groupId"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nUpcoming events report returned.  \n \n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20045"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nThis is only available for the paid account: {accountId} <br>\n\n**Error Code:** `300` <br>\nThe next page token is invalid or expired.\n\n**Error Code:** `200` <br>\nNo permission.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin",
              "report:read:upcoming_meetings_webinars:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "UsageReport:Read"
          ],
          "x-macro-scopes": [
            "report:read:admin"
          ],
          "x-granular-scopes": [
            "report:read:upcoming_meetings_webinars:admin"
          ]
        }
      }
    },
    "/report/users": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get active or inactive host reports",
        "description": "Retrieve a host report for a specified period of time within the last six months.  \nThe report time range is limited to a month. \n\nYou can specify the type of report and date range using the query parameters.  \n\n\n* The **Active Hosts** report displays a list of meetings, participants, and meeting minutes.\nAn **active host** is defined as any user who has hosted at least one meeting during the during the month specified in the `from` and `to` range.\n\n\n* The **Inactive Hosts** report pulls a list of users who were not active during a specific period of time.   \nAn **inactive host** is defined as any user who has not hosted any meetings during the specified period of time for the report. to be inactive.  \n\n\n\n\n \n \n \n**Prerequisites:**  \n \n* Pro or higher plan.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:list_users:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "reportUsers",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Active or inactive hosts.  \n `active` - Active hosts.   \n `inactive` - Inactive hosts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "active",
              "enum": [
                "active",
                "inactive"
              ]
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the `from` and `to` parameters should only be one month as the report includes only one month worth of data at once",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-01-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End date",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-01-28"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "The page number of the current page in the returned records",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1,
              "default": 1
            },
            "x-ballerina-name": "pageNumber"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "b43YBRLJFg3V4vsSpxvGdKIGtNbxn9h9If2"
            },
            "x-ballerina-name": "nextPageToken"
          },
          {
            "name": "group_id",
            "in": "query",
            "description": "The group ID. To get a group ID, use the [**List groups**](/docs/api/rest/reference/user/methods/#operation/groups) API. \n\n **Note:** The API response will only contain users who are members of the queried group ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "TaVA8QKik_1233"
            },
            "x-ballerina-name": "groupId"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nActive or inactive hosts report returned.  \n \nOnly available for Paid or ZMP account: {accountId}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20046"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n No permission. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin",
              "report:read:list_users:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "UsageReport:Read"
          ],
          "x-macro-scopes": [
            "report:read:admin"
          ],
          "x-granular-scopes": [
            "report:read:list_users:admin"
          ]
        }
      }
    },
    "/report/users/{userId}/meetings": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get meeting reports",
        "description": "Retrieve [report](https://support.zoom.us/hc/en-us/articles/216378603-Meeting-Reporting) on past meetings and webinars for a specified time period. The time range for the report is limited to a month and the month must fall within the past six months.\n\nMeetings and webinars are returned only if they have two or more unique participants.    \n   \n \n**Prerequisites:**  \n \n* Pro or higher plan.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:user:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "reportMeetings",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID or email address of the user. For user-level apps, pass the `me` value",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/UserId"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-01-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End date",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2022-01-28"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
            },
            "x-ballerina-name": "nextPageToken"
          },
          {
            "name": "type",
            "in": "query",
            "description": "The meeting type to query for: \n* `past` &mdash; All past meetings. \n* `pastOne` &mdash; A single past user meeting. \n* `pastJoined` &mdash; All past meetings the account's users hosted or joined",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "past",
              "default": "past",
              "enum": [
                "past",
                "pastOne",
                "pastJoined"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nActive or inactive hosts report returned.  \n \n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20047"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `200` <br>\nThis is only available for paid account:{accountId}.<br>\n\n**Error Code:** `300` <br>\nThe next page token is invalid or expired.\n\n**Error Code:** `200` <br>\nNo permission.<br>\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser {userId} not exist or not belong to this account.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin",
              "report:read:user:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "UsageReport:Read"
          ],
          "x-macro-scopes": [
            "report:read:admin"
          ],
          "x-granular-scopes": [
            "report:read:user:admin"
          ]
        }
      }
    },
    "/report/webinars/{webinarId}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get webinar detail reports",
        "description": "Retrieve a [report](https://support.zoom.us/hc/en-us/articles/201393719-Webinar-Reporting) containing past webinar details.    \n   \n \n**Prerequisites:**  \n \n* Pro or higher plan with Webinar add-on.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:webinar:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "reportWebinarDetails",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID or universally unique ID (UUID). \n* If you provide a webinar ID, the API will return a response for the latest webinar instance. \n* If you provide a webinar UUID that begins with a `/` character or contains the `//` characters, you **must** [double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) the webinar UUID before making an API request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ABCDE12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nWebinar details returned.  \n \nThis is only available for paid account:{accountId}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20048"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser does not belong to this account:{accountId}.<br>\n\n**Error Code:** `12702` <br>\nCan not access a webinar a year ago.<br>\n\n**Error Code:** `200` <br>\nNo permission.<br>\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nMeeting  {meetingId} not found or has expired.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin",
              "report:read:webinar:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "UsageReport:Read"
          ],
          "x-macro-scopes": [
            "report:read:admin"
          ],
          "x-granular-scopes": [
            "report:read:webinar:admin"
          ]
        }
      }
    },
    "/report/webinars/{webinarId}/participants": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get webinar participant reports",
        "description": "Get a detailed report on each webinar attendee. You can get webinar participant reports for the last 6 months. \n\n **Prerequisites:** \n* A Pro or a higher plan with Webinar add-on enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:list_webinar_participants:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "reportWebinarParticipants",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID or universally unique ID (UUID). \n* If you provide a webinar ID, the API will return a response for the latest webinar instance. \n* If you provide a webinar UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the webinar UUID before making an API request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ABCDE12345"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
            },
            "x-ballerina-name": "nextPageToken"
          },
          {
            "name": "include_fields",
            "in": "query",
            "description": "The additional query parameters to include. \n* `registrant_id` - Include the registrant's ID in the API response. The registrant ID is the webinar participant's unique ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "registrant_id",
              "enum": [
                "registrant_id"
              ]
            },
            "x-ballerina-name": "includeFields"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` \n* Meeting participants report returned.  \n \nOnly available for Paid or ZMP account: {accountId}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20049"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1010` <br>\n User does not belong to this account: {accountId} <br>\n**Error Code:** `12702` <br>\n Can not access a webinar a year ago.<br> <br>\n**Error Code:** `200` <br>\n No permission.<br> <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar \"{webinarId}\" not found or has expired <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin",
              "report:read:list_webinar_participants:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "UsageReport:Read"
          ],
          "x-macro-scopes": [
            "report:read:admin"
          ],
          "x-granular-scopes": [
            "report:read:list_webinar_participants:admin"
          ]
        }
      }
    },
    "/report/webinars/{webinarId}/polls": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get webinar poll reports",
        "description": "Retrieve a report on past [webinar polls](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).  \n   \n \n**Prerequisites:**  \n \n* Pro or a higher plan with Webinar add-on enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:list_webinar_polls:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "reportWebinarPolls",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID or universally unique ID (UUID). \n* If you provide a webinar ID, the API will return a response for the latest webinar instance. \n* If you provide a webinar UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the webinar UUID before making an API request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ABCDE12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nWebinar polls report returned.  \n \nMissing webinar subscription plan.  \n \nOnly available for Paid or ZMP account: {accountId}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20050"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `1010` <br>\nUser does not belong to this account:{accountId}.<br>\n\n**Error Code:** `12702` <br>\nCan not access a webinar a year ago.<br>\n\n**Error Code:** `200` <br>\nNo permission.<br>\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `3001` <br>\nWebinar  {webinarId} not found or has expired.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin",
              "report:read:list_webinar_polls:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "UsageReport:Read"
          ],
          "x-macro-scopes": [
            "report:read:admin"
          ],
          "x-granular-scopes": [
            "report:read:list_webinar_polls:admin"
          ]
        }
      }
    },
    "/report/webinars/{webinarId}/qa": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get webinar Q&A report",
        "description": "Retrieve a report on questions asked by participants and answered by panelists, co-hosts and hosts from past webinars.   \n\n\n   \n \n**Prerequisites:**  \n \n* Pro or a higher plan with the Webinar add-on enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:webinar_qna:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "reportWebinarQA",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID or universally unique ID (UUID). \n* If you provide a webinar ID, the API will return a response for the latest webinar instance. \n* If you provide a webinar UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the webinar UUID before making an API request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ABCDE12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   Webinar Q&A report returned. Only available for Paid or ZMP account: {accountId}.   A report can't be generated for this account because this account is not subscribed to a webinar plan",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20051"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n No permission.<br> <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId}.<br> <br>\n**Error Code:** `3001` <br>\n Webinar  {webinarId} not found or has expired.<br> <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin",
              "report:read:webinar_qna:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "UsageReport:Read"
          ],
          "x-macro-scopes": [
            "report:read:admin"
          ],
          "x-granular-scopes": [
            "report:read:webinar_qna:admin"
          ]
        }
      }
    },
    "/report/webinars/{webinarId}/survey": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get webinar survey report",
        "description": "Retrieve a report on past [webinar survey](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0057559).  \n   \n \n**Prerequisites:**  \n \n* Pro or a higher plan with Webinar add-on enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `report:read:webinar_survey:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "reportWebinarSurvey",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID or universally unique ID (UUID). \n* If you provide a webinar ID, the API returns a response for the latest webinar instance. \n* If you provide a webinar UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the webinar UUID before making an API request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ABCDE12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nWebinar survey report returned.  \n \nMissing webinar subscription plan.  \n \nOnly available for Paid or ZMP account: {accountId}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20052"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1010` <br>\n User does not belong to this account:{accountId}.<br> <br>\n**Error Code:** `12702` <br>\n Can not access a webinar a year ago.<br> <br>\n**Error Code:** `200` <br>\n No permission.<br> <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar  {webinarId} not found or has expired.<br> <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "report:read:admin",
              "report:read:webinar_survey:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "UsageReport:Read"
          ],
          "x-macro-scopes": [
            "report:read:admin"
          ],
          "x-granular-scopes": [
            "report:read:webinar_survey:admin"
          ]
        }
      }
    },
    "/sip_phones": {
      "get": {
        "tags": [
          "SIP Phone"
        ],
        "summary": "List SIP phones",
        "description": "List SIP phones on an account. \n\nZoom's Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a Softphone registration to supported premise based PBX system. End users will have the ability to have Softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. \n \n**Prerequisites**:\n* Currently only supported on Cisco and Avaya PBX systems. \n* User must enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.  \n  \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `sip_phone:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `sip_phone:read:list_sip_phones:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listSipPhones",
        "parameters": [
          {
            "name": "page_number",
            "in": "query",
            "description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1,
              "default": 1
            },
            "x-ballerina-name": "pageNumber"
          },
          {
            "name": "search_key",
            "in": "query",
            "description": "A user's user name or email address. If this parameter is provided, only the SIP phone system integration enabled for that specific user will be returned. Otherwise, all SIP phones on an account will be returned",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "jchill@example.com"
            },
            "x-ballerina-name": "searchKey"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3"
            },
            "x-ballerina-name": "nextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nSIP Phones listed successfully.\n\n**Error Code:** `200`  \n \nPermission missing: Enable SIP Phone Integration by contacting a Zoom Admin first",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20053"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "deprecated": true,
        "security": [
          {
            "openapi_oauth": [
              "sip_phone:read:admin",
              "sip_phone:read:list_sip_phones:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "SipPhone:Read"
          ],
          "x-macro-scopes": [
            "sip_phone:read:admin"
          ],
          "x-granular-scopes": [
            "sip_phone:read:list_sip_phones:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "SIP Phone"
        ],
        "summary": "Enable SIP phone",
        "description": "Enable a user to use SIP phone.  \n \nZoom's Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. \n   \n \n**Prerequisites**:\n* Currently only supported on Cisco and Avaya PBX systems. \n* The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.  \n  \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `sip_phone:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `sip_phone:write:sip_phone:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createSIPPhone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SipPhonesBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`  \n \nSIP Phone Created\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse2019"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n Permission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.<br> <br>\n**Error Code:** `300` <br>\n SIP Phone with the same email already exists. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User {userId} not exist or not belong to this account. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "deprecated": true,
        "security": [
          {
            "openapi_oauth": [
              "sip_phone:write:admin",
              "sip_phone:write:sip_phone:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "SipPhone:Edit"
          ],
          "x-macro-scopes": [
            "sip_phone:write:admin"
          ],
          "x-granular-scopes": [
            "sip_phone:write:sip_phone:admin"
          ]
        }
      }
    },
    "/sip_phones/phones": {
      "get": {
        "tags": [
          "SIP Phone"
        ],
        "summary": "List SIP phones",
        "description": "List SIP phones on an account. \n\nZoom's Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a Softphone registration to supported premise based PBX system. End users will have the ability to have Softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. \n \n**Prerequisites**:\n* Currently only supported on Cisco and Avaya PBX systems. \n* User must enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.  \n  \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `sip_phone:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `sip_phone:read:list_sip_phones:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "ListSIPPhonePhones",
        "parameters": [
          {
            "name": "search_key",
            "in": "query",
            "description": "A user's user name or email address. If this parameter is provided, only the SIP phone system integration enabled for that specific user will be returned. Otherwise, all SIP phones on an account will be returned",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "jchill@example.com"
            },
            "x-ballerina-name": "searchKey"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. This tokan's expiration period is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3"
            },
            "x-ballerina-name": "nextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nSIP phones listed successfully.\n\n**Error Code:** `200`  \n \nPermission missing. Enable SIP phone integration by contacting a Zoom admin first",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20054"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Invalid access token. <br>\n"
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `3306` <br>\n No permission. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "sip_phone:read:admin",
              "sip_phone:read:list_sip_phones:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "SipPhone:Read"
          ],
          "x-macro-scopes": [
            "sip_phone:read:admin"
          ],
          "x-granular-scopes": [
            "sip_phone:read:list_sip_phones:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "SIP Phone"
        ],
        "summary": "Enable SIP phone",
        "description": "Enable a user to use a SIP phone.  \n\nZoom's Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. \n   \n \n**Prerequisites**:\n* Currently only supported on Cisco and Avaya PBX systems. \n* The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.  \n  \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `sip_phone:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `sip_phone:write:sip_phone:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "EnableSIPPhonePhones",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SipPhonesPhonesBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`  \n \nSIP phone created\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20110"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n Permission missing. Enable SIP phone integration by contacting a Zoom admin first.<br> <br>\n**Error Code:** `300` <br>\n SIP phone with the same email already exists. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Invalid access token. <br>\n"
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `3306` <br>\n No permission. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User {email} not exist or not belong to this account. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "sip_phone:write:admin",
              "sip_phone:write:sip_phone:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "SipPhone:Edit"
          ],
          "x-macro-scopes": [
            "sip_phone:write:admin"
          ],
          "x-granular-scopes": [
            "sip_phone:write:sip_phone:admin"
          ]
        }
      }
    },
    "/sip_phones/phones/{phoneId}": {
      "delete": {
        "tags": [
          "SIP Phone"
        ],
        "summary": "Delete SIP phone",
        "description": "Delete a Zoom account's SIP phone. \n\n **Prerequisites**: \n* Currently only supported on Cisco and Avaya PBX systems. \n* The user must enable **SIP Phone Integration** by contacting the [Zoom Sales](https://zoom.us/contactsales) team.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `sip_phone:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `sip_phone:delete:sip_phone:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteSIPPhonePhones",
        "parameters": [
          {
            "name": "phoneId",
            "in": "path",
            "description": "The SIP phone ID. It can be retrieved from the **List SIP phones** API",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "123456"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   SIP phone deleted"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Invalid access token. <br>\n"
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `3336` <br>\n No permission. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2305` <br>\n SIP phone does not exist: {phone_id}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "sip_phone:write:admin",
              "sip_phone:delete:sip_phone:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "SipPhone:Edit"
          ],
          "x-macro-scopes": [
            "sip_phone:write:admin"
          ],
          "x-granular-scopes": [
            "sip_phone:delete:sip_phone:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "SIP Phone"
        ],
        "summary": "Update SIP phone",
        "description": "Update the information of a specific SIP phone on a Zoom account.  \n\nZoom's Phone System Integration (PSI), also referred as SIP phones, lets an organization leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users can have softphone functionality within a single client while maintaining a comparable interface to a Zoom Phone. \n   \n \n**Prerequisites**:\n* Currently only supported on Cisco and Avaya PBX systems. \n* The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.  \n  \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `sip_phone:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `sip_phone:update:sip_phone:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "UpdateSIPPhonePhones",
        "parameters": [
          {
            "name": "phoneId",
            "in": "path",
            "description": "The SIP phone ID. Retrieve this with the **List SIP phones** API",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "123456"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhonesphoneIdBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**Status Code:** `204` SIP phone updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Invalid access token. <br>\n"
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `3336` <br>\n No permission. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2305` <br>\n SIP phone does not exist: {phone_id}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "sip_phone:write:admin",
              "sip_phone:update:sip_phone:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "SipPhone:Edit"
          ],
          "x-macro-scopes": [
            "sip_phone:write:admin"
          ],
          "x-granular-scopes": [
            "sip_phone:update:sip_phone:admin"
          ]
        }
      }
    },
    "/sip_phones/{phoneId}": {
      "delete": {
        "tags": [
          "SIP Phone"
        ],
        "summary": "Delete SIP phone",
        "description": "Delete a Zoom account's SIP phone. \n\n **Prerequisites**: \n* Currently only supported on Cisco and Avaya PBX systems. \n* The user must enable **SIP Phone Integration** by contacting the [Zoom Sales](https://zoom.us/contactsales) team.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `sip_phone:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `sip_phone:delete:sip_phone:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteSIPPhone",
        "parameters": [
          {
            "name": "phoneId",
            "in": "path",
            "description": "The SIP phone ID. It can be retrieved from the List SIP phones API",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "123456"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   SIP phone deleted"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "deprecated": true,
        "security": [
          {
            "openapi_oauth": [
              "sip_phone:write:admin",
              "sip_phone:delete:sip_phone:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "SipPhone:Edit"
          ],
          "x-macro-scopes": [
            "sip_phone:write:admin"
          ],
          "x-granular-scopes": [
            "sip_phone:delete:sip_phone:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "SIP Phone"
        ],
        "summary": "Update SIP phone",
        "description": "Update information of a specific SIP phone on a Zoom account.  n Zoom's Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a Softphone registration to supported premise based PBX system. End users will have the ability to have Softphone functionality within a single client while maintaining a comparable interface to Zoom Phone.   **Prerequisites**:* Currently only supported on Cisco and Avaya PBX systems. * The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.    \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `sip_phone:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `sip_phone:update:sip_phone:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateSIPPhone",
        "parameters": [
          {
            "name": "phoneId",
            "in": "path",
            "description": "The SIP phone ID. This can be retrieved from the List SIP phones API",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "123456"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SipPhonesphoneIdBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**Status Code:** `204` SIP phone updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "deprecated": true,
        "security": [
          {
            "openapi_oauth": [
              "sip_phone:write:admin",
              "sip_phone:update:sip_phone:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "SipPhone:Edit"
          ],
          "x-macro-scopes": [
            "sip_phone:write:admin"
          ],
          "x-granular-scopes": [
            "sip_phone:update:sip_phone:admin"
          ]
        }
      }
    },
    "/tsp": {
      "get": {
        "tags": [
          "TSP"
        ],
        "summary": "Get account's TSP information",
        "description": "Get information on Telephony Service Provider on an account level.  \n   \n \n**Prerequisites:**  \n \n* A Pro or a higher plan.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tsp:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tsp:read:tsp:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "tsp",
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nTSP account detail returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20055"
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "tsp:read:admin",
              "tsp:read:tsp:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "tsp:read:admin"
          ],
          "x-granular-scopes": [
            "tsp:read:tsp:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "TSP"
        ],
        "summary": "Update account's TSP information",
        "description": "Update information of the Telephony Service Provider (TSP) set up on an account.  \n \n**Prerequisites**:  \n \nTSP account option should be enabled.  \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tsp:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tsp:update:tsp:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "tspUpdate",
        "requestBody": {
          "description": "TSP Account",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TspBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nTSP Account updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid parameter: `tsp_bridge`. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "tsp:write:admin",
              "tsp:update:tsp:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "tsp:write:admin"
          ],
          "x-granular-scopes": [
            "tsp:update:tsp:admin"
          ]
        }
      }
    },
    "/users/{userId}/tsp": {
      "get": {
        "tags": [
          "TSP"
        ],
        "summary": "List user's TSP accounts",
        "description": "List all of a user's TSP accounts. A user can have a maximum of two TSP accounts.     \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tsp:read:admin`,`tsp:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tsp:read:list_tsp_accounts`,`tsp:read:list_tsp_accounts:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "userTSPs",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID or email address of the user. For user-level apps, pass the `me` value",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nTSP account list returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20056"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2024` <br>\n Account has not enabled TSP. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: $userId.<br> <br>\n**Error Code:** `1120` <br>\n No valid invitation to join the Zoom account was found for this user.<br>\r\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired, making the `userId` invalid. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "tsp:read:admin",
              "tsp:read",
              "tsp:read:list_tsp_accounts",
              "tsp:read:list_tsp_accounts:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "tsp:read:admin",
            "tsp:read"
          ],
          "x-granular-scopes": [
            "tsp:read:list_tsp_accounts",
            "tsp:read:list_tsp_accounts:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "TSP"
        ],
        "summary": "Add a user's TSP account",
        "description": "Add a user's TSP account.  \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tsp:write:admin`,`tsp:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tsp:write:tsp_account`,`tsp:write:tsp_account:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "userTSPCreate",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user's user ID or email address. For user-level apps, pass the `me` value",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TSPAccountsList"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`  \n \nTSP account added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20111"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2024` <br>\n This account has not enabled TSP.<br> <br>\n**Error Code:** `300` <br>\n Media link is required for AT&T TSP accounts.<br> <br>\n**Error Code:** `300` <br>\n You can add a maximum of two TSP configs. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: $userId.<br> <br>\n**Error Code:** `1120` <br>\n No valid invitation to join the Zoom account was found for this user.<br>\r\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired, making the `userId` invalid. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "tsp:write:admin",
              "tsp:write",
              "tsp:write:tsp_account",
              "tsp:write:tsp_account:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "tsp:write:admin",
            "tsp:write"
          ],
          "x-granular-scopes": [
            "tsp:write:tsp_account",
            "tsp:write:tsp_account:admin"
          ]
        }
      }
    },
    "/users/{userId}/tsp/settings": {
      "patch": {
        "tags": [
          "TSP"
        ],
        "summary": "Set global dial-in URL for a TSP user",
        "description": "A global dial-in page can provide a list of global access numbers to use to conduct audio conferencing. Call this API to set the URL for a global dial-in page of a user whose Zoom account has TSP and special TSP with third-party audio conferencing options enabled.\n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tsp:write:admin`,`tsp:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tsp:update:tsp_settings`,`tsp:update:tsp_settings:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "tspUrlUpdate",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user's user ID or email address",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "6dfgdfgdg444447b0egga"
            }
          }
        ],
        "requestBody": {
          "description": "The user's global dial-in URL",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TSPGlobalDialInURLSetting"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**Status Code:** `204` **No Content**   \n \nURL set successfully"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2000` <br>\n Not TSP special account.<br>\n\nThs error means that the account does not have special TSP privileges. Contact Zoom Developer Support for details.<br> <br>\n**Error Code:** `2024` <br>\n Account has not enabled TSP. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User {userId} does not exist, or doesn't belong to this account. <br>\n**Error Code:** `1120` <br>\n Invite does not exist.\n\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired, making the `userId` invalid. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "tsp:write:admin",
              "tsp:write",
              "tsp:update:tsp_settings",
              "tsp:update:tsp_settings:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "tsp:write:admin",
            "tsp:write"
          ],
          "x-granular-scopes": [
            "tsp:update:tsp_settings",
            "tsp:update:tsp_settings:admin"
          ]
        }
      }
    },
    "/users/{userId}/tsp/{tspId}": {
      "get": {
        "tags": [
          "TSP"
        ],
        "summary": "Get a user's TSP account",
        "description": "Retrieve details of a specific TSP account enabled for a specific user.  \n\nEach user can have a maximum of two TSP accounts. \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tsp:read:admin`,`tsp:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tsp:read:tsp_account`,`tsp:read:tsp_account:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "userTSP",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID or email address of the user. For user-level apps, pass the `me` value",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tspId",
            "in": "path",
            "description": "TSP account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "1",
              "enum": [
                "1",
                "2"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nTSP account retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TSPAccount"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n The TSP ID provided does not exist.<br> <br>\n**Error Code:** `300` <br>\n TSP config does not exist.<br> <br>\n**Error Code:** `2024` <br>\n Account has not enabled TSP. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: $userId.<br> <br>\n**Error Code:** `1120` <br>\n No valid invitation to join the Zoom account was found for this user.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired, making the `userId` invalid. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "tsp:read:admin",
              "tsp:read",
              "tsp:read:tsp_account",
              "tsp:read:tsp_account:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "tsp:read:admin",
            "tsp:read"
          ],
          "x-granular-scopes": [
            "tsp:read:tsp_account",
            "tsp:read:tsp_account:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "TSP"
        ],
        "summary": "Delete a user's TSP account",
        "description": "Delete a user's TSP account.  \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tsp:write:admin`,`tsp:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tsp:delete:tsp_account`,`tsp:delete:tsp_account:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "userTSPDelete",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user's user ID or email address. For user-level apps, pass the `me` value",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tspId",
            "in": "path",
            "description": "TSP account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "1",
              "enum": [
                "1",
                "2"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**Status Code:** `204` **No Content**  \n \nTSP account deleted"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2024` <br>\n This account has not enabled TSP.<br> <br>\n**Error Code:** `300` <br>\n The provided TSP ID does not exist.<br> <br>\n**Error Code:** `300` <br>\n TSP config does not exist.<br> <br>\n**Error Code:** `300` <br>\n At least one TSP config must be available. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: $userId.<br> <br>\n**Error Code:** `1120` <br>\n No valid invitation to join the Zoom account was found for this user.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired, making the `userId` invalid. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "tsp:write:admin",
              "tsp:write",
              "tsp:delete:tsp_account",
              "tsp:delete:tsp_account:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "tsp:write:admin",
            "tsp:write"
          ],
          "x-granular-scopes": [
            "tsp:delete:tsp_account",
            "tsp:delete:tsp_account:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "TSP"
        ],
        "summary": "Update a TSP account",
        "description": "Update a user's TSP account.  \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tsp:write:admin`,`tsp:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tsp:update:tsp_account`,`tsp:update:tsp_account:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "userTSPUpdate",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID or email address of the user. For user-level apps, pass the `me` value",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tspId",
            "in": "path",
            "description": "TSP account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "1",
              "enum": [
                "1",
                "2"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "TSP account",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TSPAccount1"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:**`204` **No Content**  \n \nTSP account updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2024` <br>\n Account has not enabled TSP.<br> <br>\n**Error Code:** `300` <br>\n The TSP ID provided does not exist.<br> <br>\n**Error Code:** `300` <br>\n TSP config does not exist.<br> <br>\n**Error Code:** `300` <br>\n At least one TSP config must be available.<br> <br>\n**Error Code:** `300` <br>\n Media link is required for AT&T TSP accounts. <br>\n**Error Code:** `300` <br>\n Invalid parameter: `tsp_bridge`. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: $userId.<br> <br>\n**Error Code:** `1120` <br>\n A valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - making the `userId` invalid. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "tsp:write:admin",
              "tsp:write",
              "tsp:update:tsp_account",
              "tsp:update:tsp_account:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "tsp:write:admin",
            "tsp:write"
          ],
          "x-granular-scopes": [
            "tsp:update:tsp_account",
            "tsp:update:tsp_account:admin"
          ]
        }
      }
    },
    "/tracking_fields": {
      "get": {
        "tags": [
          "Tracking Field"
        ],
        "summary": "List tracking fields",
        "description": "List all the [tracking fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) on your Zoom account. Tracking fields let you analyze usage by various fields within an organization.\r\n\r\n**Prerequisites:**\r\n* A Business, Education, API or higher plan.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tracking_fields:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tracking_field:read:list_tracking_fields:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "trackingfieldList",
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` List of Tracking Fields returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20057"
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "tracking_fields:read:admin",
              "tracking_field:read:list_tracking_fields:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "ScheduleTrackingFields:Read"
          ],
          "x-macro-scopes": [
            "tracking_fields:read:admin"
          ],
          "x-granular-scopes": [
            "tracking_field:read:list_tracking_fields:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Tracking Field"
        ],
        "summary": "Create a tracking field",
        "description": "Use this API to create a new [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). Tracking fields let you analyze usage by various fields within an organization. When scheduling a meeting, tracking fields will be included in the meeting options. \n\n**Prerequisites:** \n* A Business, Education, API or higher plan.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tracking_fields:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tracking_field:write:tracking_field:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "trackingfieldCreate",
        "requestBody": {
          "description": "Tracking Field",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackingField"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`  \n \nTracking Field created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20112"
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "tracking_fields:write:admin",
              "tracking_field:write:tracking_field:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "ScheduleTrackingFields:Edit"
          ],
          "x-macro-scopes": [
            "tracking_fields:write:admin"
          ],
          "x-granular-scopes": [
            "tracking_field:write:tracking_field:admin"
          ]
        }
      }
    },
    "/tracking_fields/{fieldId}": {
      "get": {
        "tags": [
          "Tracking Field"
        ],
        "summary": "Get a tracking field",
        "description": "Use this API to return information about a [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). \n\n**Prerequisites:** \n* A Business, Education, API or higher plan.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tracking_fields:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tracking_field:read:tracking_field:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "trackingfieldGet",
        "parameters": [
          {
            "name": "fieldId",
            "in": "path",
            "description": "The tracking field ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "a32CJji-weJ92"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` Tracking field object returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingField1"
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `5110` <br>\n Tracking field does not exist: {fieldId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "tracking_fields:read:admin",
              "tracking_field:read:tracking_field:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "ScheduleTrackingFields:Read"
          ],
          "x-macro-scopes": [
            "tracking_fields:read:admin"
          ],
          "x-granular-scopes": [
            "tracking_field:read:tracking_field:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Tracking Field"
        ],
        "summary": "Delete a tracking field",
        "description": "Delete a [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). \n\n**Prerequisites:** \n* A Business, Education, API or higher plan.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tracking_fields:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tracking_field:delete:tracking_field:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "trackingfieldDelete",
        "parameters": [
          {
            "name": "fieldId",
            "in": "path",
            "description": "The tracking field ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "a32CJji-weJ92"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` Tracking Field deleted"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `5110` <br>\n Tracking field does not exist: {fieldId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "tracking_fields:write:admin",
              "tracking_field:delete:tracking_field:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "ScheduleTrackingFields:Edit"
          ],
          "x-macro-scopes": [
            "tracking_fields:write:admin"
          ],
          "x-granular-scopes": [
            "tracking_field:delete:tracking_field:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Tracking Field"
        ],
        "summary": "Update a tracking field",
        "description": "Update a [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). \n\n**Prerequisites:** \n* A Business, Education, API or higher plan.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tracking_fields:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `tracking_field:update:tracking_field:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "trackingfieldUpdate",
        "parameters": [
          {
            "name": "fieldId",
            "in": "path",
            "description": "The tracking field ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "a32CJji-weJ92"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackingField2"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` Tracking field updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n Tracking field {field} already exists. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `5110` <br>\n Tracking field does not exist: {fieldId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "tracking_fields:write:admin",
              "tracking_field:update:tracking_field:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "ScheduleTrackingFields:Edit"
          ],
          "x-macro-scopes": [
            "tracking_fields:write:admin"
          ],
          "x-granular-scopes": [
            "tracking_field:update:tracking_field:admin"
          ]
        }
      }
    },
    "/live_webinars/{webinarId}/chat/messages/{messageId}": {
      "delete": {
        "tags": [
          "Webinars"
        ],
        "summary": "Delete a live webinar message",
        "description": "Deletes a message in a live webinar based on ID. \n\n**Prerequisites:** \n* Have Zoom enable the DLP for the in-meeting chat feature to use this API.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write`,`webinar:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:delete:live_webinar_chat_message`,`webinar:delete:live_webinar_chat_message:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "deleteWebinarChatMessageById",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          },
          {
            "name": "messageId",
            "in": "path",
            "description": "The live webinar chat message's unique identifier (UUID), in base64-encoded format",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "MS17MDQ5NjE4QjYtRjk4Ny00REEwLUFBQUItMTg3QTY0RjU2MzhFfQ=="
            }
          },
          {
            "name": "file_ids",
            "in": "query",
            "description": "The live webinar chat file's universally unique identifier (UUID), in base64-encoded format. Separate multiple values with commas",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "MS17RDk0QTY3QUQtQkFGQy04QTJFLTI2RUEtNkYxQjRBRTU1MTk5fQ==,MS17NDQ0OEU5MjMtM0JFOS1CMDA1LTQ0NDAtQjdGOTU0Rjk5MTkyfQ=="
            },
            "x-ballerina-name": "fileIds"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nWebinar chat message deleted"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `300` <br>\n DLP is not enabled on this account. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write",
              "webinar:write:admin",
              "webinar:delete:live_webinar_chat_message",
              "webinar:delete:live_webinar_chat_message:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write",
            "webinar:write:admin"
          ],
          "x-granular-scopes": [
            "webinar:delete:live_webinar_chat_message",
            "webinar:delete:live_webinar_chat_message:admin"
          ]
        }
      }
    },
    "/past_webinars/{webinarId}/absentees": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "Get webinar absentees",
        "description": "List absentees of a webinar.  \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:admin`,`webinar:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:list_absentees`,`webinar:read:list_absentees:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "webinarAbsentees",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID or universally unique ID (UUID). \n* If you provide a webinar ID, the API will return a response for the latest webinar instance. \n* If you provide a webinar UUID that begins with a `/` character or contains the `//` characters, you **must** [double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) the webinar UUID before making an API request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ABCDE12345"
            }
          },
          {
            "name": "occurrence_id",
            "in": "query",
            "description": "The meeting or webinar occurrence ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1648194360000"
            },
            "x-ballerina-name": "occurrenceId"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
            },
            "x-ballerina-name": "nextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nSuccess.  \n **Error Code:** `200`  \n \nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationList1"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n The request could not be completed because you have provided an invalid occurrence ID: {occurrenceId}<br> <br>\n**Error Code:** `1010` <br>\n User does not belong to this account:{accountId}.<br> <br>\n**Error Code:** `3000` <br>\n This Webinar has not registration required: {webinarUUID} <br>\n**Error Code:** `200` <br>\n No permission. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar {webinarUUID} not found or expired. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests  For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:read:admin",
              "webinar:read",
              "webinar:read:list_absentees",
              "webinar:read:list_absentees:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar:read:admin",
            "webinar:read"
          ],
          "x-granular-scopes": [
            "webinar:read:list_absentees",
            "webinar:read:list_absentees:admin"
          ]
        }
      }
    },
    "/past_webinars/{webinarId}/instances": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "List past webinar instances",
        "description": "List past webinar instances.  \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:admin`,`webinar:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:list_past_instances`,`webinar:read:list_past_instances:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "pastWebinars",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nList of past webinar instances returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebinarInstances"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:read:admin",
              "webinar:read",
              "webinar:read:list_past_instances",
              "webinar:read:list_past_instances:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar:read:admin",
            "webinar:read"
          ],
          "x-granular-scopes": [
            "webinar:read:list_past_instances",
            "webinar:read:list_past_instances:admin"
          ]
        }
      }
    },
    "/past_webinars/{webinarId}/participants": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "List webinar participants",
        "description": "Retrieve a list of all the participants who attended a webinar hosted in the past. \n\n**Prerequisites:** \n* A Pro or higher plan with a webinar add-on.\n\n**NOTE:** After meetings with hundreds of participants, the attendance data takes some time to be generated. If you receive a duration of 0 for users' time in the meeting, you may have called the endpoint before the data is fully processed. Implement a short delay or retry logic before fetching participant data.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:admin`,`webinar:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:list_past_participants:admin`,`webinar:read:list_past_participants`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listWebinarParticipants",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID or universally unique ID (UUID). \n* If you provide a webinar ID, the API returns a response for the latest webinar instance. \n* If you provide a webinar UUID that begins with a `/` character or contains the `//` characters, you **must** [double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) the webinar UUID before making an API request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ABCDE12345"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
            },
            "x-ballerina-name": "nextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nParticipants list returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20058"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `300` <br>\n The next page token is invalid or expired. <br>\n**Error Code:** `200` <br>\n Only available for Paid or ZMP account: {accountId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:read:admin",
              "webinar:read",
              "webinar:read:list_past_participants:admin",
              "webinar:read:list_past_participants"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar:read:admin",
            "webinar:read"
          ],
          "x-granular-scopes": [
            "webinar:read:list_past_participants:admin",
            "webinar:read:list_past_participants"
          ]
        }
      }
    },
    "/past_webinars/{webinarId}/polls": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "List past webinar poll results",
        "description": "The polling feature for webinar lets you create single-choice or multiple-choice polling questions for your webinars. This API endpoint retrieves the results for webinar polls of a specific webinar.\n\n**Prerequisites:**  \n \n* [Webinar license](https://zoom.us/webinar)  \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:admin`,`webinar:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:list_past_polls`,`webinar:read:list_past_polls:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listPastWebinarPollResults",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID or universally unique ID (UUID). \n* If you provide a webinar ID, the API returns a response for the latest webinar instance. \n* If you provide a webinar UUID that begins with a `/` character or contains the `//` characters, you **must** [double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) the webinar UUID before making an API request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ABCDE12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nPolls returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20059"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n No permission. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar ID is invalid or not end. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:read:admin",
              "webinar:read",
              "webinar:read:list_past_polls",
              "webinar:read:list_past_polls:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar:read:admin",
            "webinar:read"
          ],
          "x-granular-scopes": [
            "webinar:read:list_past_polls",
            "webinar:read:list_past_polls:admin"
          ]
        }
      }
    },
    "/past_webinars/{webinarId}/qa": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "List Q&As of a past webinar",
        "description": "List the Q&amp;A of a specific past webinar. \n\nThe [question and answer (Q&amp;A)](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer) feature for webinars lets attendees ask questions during the webinar and for the panelists, co-hosts and host to answer their questions. \n\n**Prerequisites**  \n \n* [Webinar license](https://zoom.us/webinar)  \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:admin`,`webinar:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:past_qa`,`webinar:read:past_qa:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listPastWebinarQA",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID or universally unique ID (UUID). \n* If you provide a webinar ID, the API returns a response for the latest webinar instance. \n* If you provide a webinar UUID that begins with a `/` character or contains the `//` characters, you **must** [double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) the webinar UUID before making an API request",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "ABCDE12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nQ&amp;A returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20060"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n No permission. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar ID is invalid or not end. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:read:admin",
              "webinar:read",
              "webinar:read:past_qa",
              "webinar:read:past_qa:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar:read:admin",
            "webinar:read"
          ],
          "x-granular-scopes": [
            "webinar:read:past_qa",
            "webinar:read:past_qa:admin"
          ]
        }
      }
    },
    "/users/{userId}/webinar_templates": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "List webinar templates",
        "description": "Display a list of a user's [webinar templates](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates). For user-level apps, pass [the `me` value](/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter. When you schedule a webinar, save the settings for that webinar as a template for scheduling future webinars.  To use a template when scheduling a webinar, use the `id` value in this API response in the `template_id` field of the [**Create a webinar**](/docs/api-reference/zoom-api/methods#operation/webinarCreate) API. **Prerequisites:** * A Pro or a higher account with the [Zoom Webinar plan](https://zoom.us/pricing/webinar).\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read`,`webinar:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:list_templates`,`webinar:read:list_templates:admin`",
        "operationId": "listWebinarTemplates",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user's ID. To get a user's ID, use the [**List users**](/docs/api-reference/zoom-api/ma#operation/users) API. For user-level apps, pass the `me` value instead of the user ID value",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "abcD3ojfdbjfg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  List of existing templates returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20061"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `300` <br>\n You can only create up to 40 webinar templates. <br>\n**Error Code:** `3000` <br>\n Webinar template name already exists {name}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests  For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:read",
              "webinar:read:admin",
              "webinar:read:list_templates",
              "webinar:read:list_templates:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar:read",
            "webinar:read:admin"
          ],
          "x-granular-scopes": [
            "webinar:read:list_templates",
            "webinar:read:list_templates:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Webinars"
        ],
        "summary": "Create a webinar template",
        "description": "Use this API to create a webinar template from an existing webinar. \n\n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:admin`,`webinar:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:template`,`webinar:write:template:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "webinarTemplateCreate",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID retrievable from the [List users](/api-reference/zoom-api/methods#operation/users) API",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "30R7kT7bTIKSNUFEuH_Qlg"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIdWebinarTemplatesBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`  \n \nWebinar template created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20113"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n**Error Code:** `300` <br>\n You can only create up to 40 webinar templates. <br>\n**Error Code:** `3000` <br>\n Cannot access meeting info. <br>\n**Error Code:** `3000` <br>\n Webinar template name already exists: {templateName}. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write:admin",
              "webinar:write",
              "webinar:write:template",
              "webinar:write:template:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write:admin",
            "webinar:write"
          ],
          "x-granular-scopes": [
            "webinar:write:template",
            "webinar:write:template:admin"
          ]
        }
      }
    },
    "/users/{userId}/webinars": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "List webinars",
        "description": "List all the webinars scheduled by or on behalf a webinar host. For user-level apps, pass [the `me` value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword) instead of the `userId` parameter. \n\n Zoom users with a [webinar plan](https://zoom.us/webinar) have access to creating and managing webinars. Webinars let a host broadcast a Zoom meeting to up to 10,000 attendees. \n\n**Note** This API only returns a user's [unexpired webinars](https://support.zoom.us/hc/en-us/articles/201362373-Meeting-ID#h_c73f9b08-c1c0-4a1a-b538-e01ebb98e844). \n\n **Prerequisites** \n* A Pro or higher plan with the webinar add-on.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:admin`,`webinar:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:list_webinars`,`webinar:read:list_webinars:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "webinars",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user's user ID or email address. For user-level apps, pass the `me` value",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type of webinar. \n* `scheduled` - All valid previous (unexpired) webinars, live webinars, and upcoming scheduled webinars. \n* `upcoming` - All upcoming webinars, including live webinars",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "scheduled",
              "default": "scheduled",
              "enum": [
                "scheduled",
                "upcoming"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "**Deprecated** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1,
              "default": 1
            },
            "x-ballerina-name": "pageNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nList of webinar objects returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20062"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests  For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:read:admin",
              "webinar:read",
              "webinar:read:list_webinars",
              "webinar:read:list_webinars:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar:read:admin",
            "webinar:read"
          ],
          "x-granular-scopes": [
            "webinar:read:list_webinars",
            "webinar:read:list_webinars:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Webinars"
        ],
        "summary": "Create a webinar",
        "description": "Schedule a webinar for a user who is a webinar host. For user-level apps, pass [the `me` value](/docs/api/using-zoom-apis/#the-me-keyword) instead of the `userId` parameter. \n\n Webinars allow a host to broadcast a Zoom meeting to up to 10,000 attendees. \n\n**Rate limit:**\nUp to a maximum of **100 requests per day**. The rate limit is applied to the `userId` of the **webinar host** used to make the request. \n\n**Prerequisites:** \n* A Pro or higher plan with a [Webinar plan](https://zoom.us/webinar) add-on.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write`,`webinar:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:webinar`,`webinar:write:webinar:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarCreate",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID or email address of the user. For user-level apps, pass the `me` value",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIdWebinarsBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`  \n \nWebinar created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20114"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for user {userID} in order to perform this action. <br>\n**Error Code:** `300` <br>\n The value that you entered for the `schedule_for` field is invalid. Enter a valid value and try again. <br>\n**Error Code:** `300` <br>\n Can not schedule simulive webinar for others. <br>\n**Error Code:** `300` <br>\n Account hasn't enabled simulive webinar. <br>\n**Error Code:** `300` <br>\n Record file does not exist. <br>\n**Error Code:** `3000` <br>\n You cannot schedule a meeting for {userId}. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User {userId} does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write",
              "webinar:write:admin",
              "webinar:write:webinar",
              "webinar:write:webinar:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write",
            "webinar:write:admin"
          ],
          "x-granular-scopes": [
            "webinar:write:webinar",
            "webinar:write:webinar:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "Get a webinar",
        "description": "Get details for a scheduled Zoom webinar.\n  \n   \n \n**Prerequisites:**\n* Pro or higher plan with a Webinar add-on.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:admin`,`webinar:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:webinar`,`webinar:read:webinar:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinar",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID or universally unique ID (UUID)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "95204914252"
            }
          },
          {
            "name": "occurrence_id",
            "in": "query",
            "description": "Unique identifier for an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences. When you create a recurring Webinar using [**Create a webinar**](/docs/api-reference/zoom-api/methods#operation/webinarCreate) API, you can retrieve the Occurrence ID from the response of the API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1648538280000"
            },
            "x-ballerina-name": "occurrenceId"
          },
          {
            "name": "show_previous_occurrences",
            "in": "query",
            "description": "Set the value of this field to `true` if you would like to view Webinar details of all previous occurrences of a recurring Webinar",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            },
            "x-ballerina-name": "showPreviousOccurrences"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nSuccess",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20063"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for user {userId} to perform this action. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:read:admin",
              "webinar:read",
              "webinar:read:webinar",
              "webinar:read:webinar:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar:read:admin",
            "webinar:read"
          ],
          "x-granular-scopes": [
            "webinar:read:webinar",
            "webinar:read:webinar:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Webinars"
        ],
        "summary": "Delete a webinar",
        "description": "Delete a webinar. \n\n\n**Prerequisites:**  \n \n* Pro or higher plan with the webinar add-on.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:admin`,`webinar:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:delete:webinar`,`webinar:delete:webinar:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarDelete",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          },
          {
            "name": "occurrence_id",
            "in": "query",
            "description": "The meeting or webinar occurrence ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1648194360000"
            },
            "x-ballerina-name": "occurrenceId"
          },
          {
            "name": "cancel_webinar_reminder",
            "in": "query",
            "description": "`true` - Notify panelists and registrants about the webinar cancellation via email. \n\n`false` - Do not send any email notification to webinar registrants and panelists. \n\nThe default value of this field is `false`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            },
            "x-ballerina-name": "cancelWebinarReminder"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\n Webinar deleted"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3000` <br>\n Your request could not be processed because webinars created via event directory can not be updated or deleted using this method. <br>\n**Error Code:** `3000` <br>\n You cannot update or delete simulive webinars that have started using this method. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `3000` <br>\n Webinar occurrence does not exist. <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write:admin",
              "webinar:write",
              "webinar:delete:webinar",
              "webinar:delete:webinar:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write:admin",
            "webinar:write"
          ],
          "x-granular-scopes": [
            "webinar:delete:webinar",
            "webinar:delete:webinar:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Webinars"
        ],
        "summary": "Update a webinar",
        "description": "Make updates to a scheduled webinar. \n\n**100 requests per day**. The rate limit is applied to the `userId` of the **webinar host** used to make the request. \n\n**Prerequisites** \n* A Pro or higher plan with a webinar add-on.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write`,`webinar:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:update:webinar`,`webinar:update:webinar:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarUpdate",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          },
          {
            "name": "occurrence_id",
            "in": "query",
            "description": "Webinar occurrence ID. Support change of agenda, start time, duration, and settings `host_video`, `panelist_video`, `hd_video, watermark`, `auto_recording`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1648538280000"
            },
            "x-ballerina-name": "occurrenceId"
          }
        ],
        "requestBody": {
          "description": "Webinar",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebinarswebinarIdBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nWebinar updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3003` <br>\n Users in **{domains}** have been blocked from joining meetings and webinars. To unblock them, go to the **Settings** page in the Zoom web portal and update the **Block users in specific domains from joining meetings and webinars** setting. <br>\n**Error Code:** `3000` <br>\n You cannot update or delete simulive webinars that have started using this method. <br>\n**Error Code:** `300` <br>\n The value that you entered for the `schedule_for` field is invalid. Enter a valid value and try again. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {userId}. <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write",
              "webinar:write:admin",
              "webinar:update:webinar",
              "webinar:update:webinar:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write",
            "webinar:write:admin"
          ],
          "x-granular-scopes": [
            "webinar:update:webinar",
            "webinar:update:webinar:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/batch_registrants": {
      "post": {
        "tags": [
          "Webinars"
        ],
        "summary": "Perform batch registration",
        "description": "Register up to 30 registrants at once for a scheduled webinar that requires [registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-webinar-with-registration).   \n \n\n**Prerequisites:**  \n \n* The webinar host must be a licensed user.\n* The webinar should be type `5`, a scheduled webinar. Other types of webinars are not supported by this API.  \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write`,`webinar:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:batch_registrants`,`webinar:write:batch_registrants:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "addBatchWebinarRegistrants",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's unique identifier",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "97871060099"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebinarIdBatchRegistrantsBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `200` **OK**   \n \nRegistrants added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20115"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n**Error Code:** `300` <br>\n This API can only be used for scheduled webinars (type 5). Batch registration is not supported for other webinar types. <br>\n**Error Code:** `3038` <br>\n The webinar is over. You cannot register now. If you have any questions, contact the webinar's host. <br>\n**Error Code:** `3000` <br>\n You have reached the limit for the number of attendees you can add. Contact Zoom Support for more information. <br>\n**Error Code:** `3000` <br>\n The Zoom REST API does not support paid registration. <br>\n**Error Code:** `3043` <br>\n Webinar has reached maximum attendee capacity. <br>\n**Error Code:** `3000` <br>\n Registration has not been enabled for this webinar: {webinarId}. <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write",
              "webinar:write:admin",
              "webinar:write:batch_registrants",
              "webinar:write:batch_registrants:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write",
            "webinar:write:admin"
          ],
          "x-granular-scopes": [
            "webinar:write:batch_registrants",
            "webinar:write:batch_registrants:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/branding": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "Get webinar's session branding",
        "description": "Get the webinar's [session branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding) information. Session branding lets hosts visually customize a webinar by setting a webinar wallpaper that displays behind video tiles. Session branding also lets hosts set the virtual background for and apply name tags to hosts, alternative hosts, panelists, interpreters, and speakers.  **Prerequisites:** * A Pro or higher plan with the Webinar add-on. * The **Webinar Session Branding** setting enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read`,`webinar:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:branding`,`webinar:read:branding:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getWebinarBranding",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nWebinar session branding returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20064"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3000` <br>\n You cannot enable session branding for this webinar. <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:read",
              "webinar:read:admin",
              "webinar:read:branding",
              "webinar:read:branding:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar:read",
            "webinar:read:admin"
          ],
          "x-granular-scopes": [
            "webinar:read:branding",
            "webinar:read:branding:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/branding/name_tags": {
      "post": {
        "tags": [
          "Webinars"
        ],
        "summary": "Create a webinar's branding name tag",
        "description": "Create a webinar's [session branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding) name tag. There's a limit of 20 name tags per webinar. **Prerequisites:** \n*  The **Webinar Session Branding** setting enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write`,`webinar:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:branding_name_tag`,`webinar:write:branding_name_tag:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "createWebinarBrandingNameTag",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrandingNameTagsBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nName tag created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20116"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n**Error Code:** `3000` <br>\n This webinar does not have session branding enabled. <br>\n**Error Code:** `3000` <br>\n You have reached the limit for the number of name tags you can add for this webinar. The limit is 20. <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write",
              "webinar:write:admin",
              "webinar:write:branding_name_tag",
              "webinar:write:branding_name_tag:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write",
            "webinar:write:admin"
          ],
          "x-granular-scopes": [
            "webinar:write:branding_name_tag",
            "webinar:write:branding_name_tag:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Webinars"
        ],
        "summary": "Delete a webinar's branding name tag",
        "description": "Delete a webinar's [session branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding) name tag. \n\n **Prerequisites:** \n* The **Webinar Session Branding** setting enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write`,`webinar:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:delete:branding_name_tag`,`webinar:delete:branding_name_tag:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteWebinarBrandingNameTag",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          },
          {
            "name": "name_tag_ids",
            "in": "query",
            "description": "A comma-separated list of the name tag IDs to delete",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "zazQjwDuQkS3Q2EprNd7jQ,AsfE0cx2TFSfqqKbE0BUZg"
            },
            "x-ballerina-name": "nameTagIds"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \n* No content. \n* Name tag(s) deleted"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid parameter: `name_tag_ids`. <br>\n**Error Code:** `3000` <br>\n This webinar does not have session branding enabled. <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write",
              "webinar:write:admin",
              "webinar:delete:branding_name_tag",
              "webinar:delete:branding_name_tag:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write",
            "webinar:write:admin"
          ],
          "x-granular-scopes": [
            "webinar:delete:branding_name_tag",
            "webinar:delete:branding_name_tag:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/branding/name_tags/{nameTagId}": {
      "patch": {
        "tags": [
          "Webinars"
        ],
        "summary": "Update a webinar's branding name tag",
        "description": "Update a webinar's [session branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding) name tag. **Prerequisites:** \n*  The **Webinar Session Branding** setting enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write`,`webinar:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:update:branding_name_tag`,`webinar:update:branding_name_tag:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "updateWebinarBrandingNameTag",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          },
          {
            "name": "nameTagId",
            "in": "path",
            "description": "The name tag's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "J0sFXN2PSOCGrqTqLRwgAQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NameTagsnameTagIdBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \n* No content. \n* Name tag updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3000` <br>\n This webinar does not have session branding enabled. <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n**Error Code:** `300` <br>\n Name Tag does not exist. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write",
              "webinar:write:admin",
              "webinar:update:branding_name_tag",
              "webinar:update:branding_name_tag:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write",
            "webinar:write:admin"
          ],
          "x-granular-scopes": [
            "webinar:update:branding_name_tag",
            "webinar:update:branding_name_tag:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/branding/virtual_backgrounds": {
      "post": {
        "tags": [
          "Webinars"
        ],
        "summary": "Upload a webinar's branding virtual background",
        "description": "Upload a webinar's session branding [virtual background](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background). Hosts and panelists can select and use these virtual backgrounds during the webinar. Branding virtual background files have these restrictions: \n* A webinar cannot exceed more than 10 virtual background files. \n* You can only upload image files that are in JPG/JPEG, GIF or PNG format. \n* The virtual background file size cannot exceed 15 megabytes (MB). \n\n **Prerequisites:** \n*  The **Webinar Session Branding** setting enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write`,`webinar:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:branding_virtual_background`,`webinar:write:branding_virtual_background:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "uploadWebinarBrandingVB",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BrandingVirtualBackgroundsBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`    Virtual background uploaded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20117"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3000` <br>\n This webinar does not have session branding enabled. <br>\n**Error Code:** `120` <br>\n You may only upload JPG/JPEG, GIF, or PNG image files. <br>\n**Error Code:** `120` <br>\n No file uploaded. Verify that a file has been uploaded. <br>\n**Error Code:** `120` <br>\n File size cannot exceed 15M. <br>\n**Error Code:** `120` <br>\n A maximum of 10 files are allowed for a webinar. <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write",
              "webinar:write:admin",
              "webinar:write:branding_virtual_background",
              "webinar:write:branding_virtual_background:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write",
            "webinar:write:admin"
          ],
          "x-granular-scopes": [
            "webinar:write:branding_virtual_background",
            "webinar:write:branding_virtual_background:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Webinars"
        ],
        "summary": "Delete a webinar's branding virtual backgrounds",
        "description": "Delete a webinar's session branding [virtual background](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background). \n\n **Prerequisites:** \n* The **Webinar Session Branding** setting enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write`,`webinar:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:delete:branding_virtual_background`,`webinar:delete:branding_virtual_background:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteWebinarBrandingVB",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of the virtual background file IDs to delete",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "zazQjwDuQkS3Q2EprNd7jQ,AsfE0cx2TFSfqqKbE0BUZg"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \n* No content. \n* Virtual background file(s) deleted"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid parameter: `ids`. <br>\n**Error Code:** `3000` <br>\n This webinar does not have session branding enabled. <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write",
              "webinar:write:admin",
              "webinar:delete:branding_virtual_background",
              "webinar:delete:branding_virtual_background:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write",
            "webinar:write:admin"
          ],
          "x-granular-scopes": [
            "webinar:delete:branding_virtual_background",
            "webinar:delete:branding_virtual_background:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Webinars"
        ],
        "summary": "Set webinar's default branding virtual background",
        "description": "Set a webinar's default session branding [virtual background](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background). \n\n **Prerequisites:** \n* The **Webinar Session Branding** setting enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write`,`webinar:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:update:branding_virtual_background`,`webinar:update:branding_virtual_background:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "setWebinarBrandingVB",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "The virtual background file ID to update",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "zazQjwDuQkS3Q2EprNd7jQ"
            }
          },
          {
            "name": "set_default_for_all_panelists",
            "in": "query",
            "description": "Whether to set the virtual background file as the new default for all panelists. This includes panelists not currently assigned a default virtual background",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            },
            "x-ballerina-name": "setDefaultForAllPanelists"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`    * No content. * Virtual background updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid parameter: {id} <br>\n**Error Code:** `3000` <br>\n This webinar does not have session branding enabled. <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write",
              "webinar:write:admin",
              "webinar:update:branding_virtual_background",
              "webinar:update:branding_virtual_background:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write",
            "webinar:write:admin"
          ],
          "x-granular-scopes": [
            "webinar:update:branding_virtual_background",
            "webinar:update:branding_virtual_background:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/branding/wallpaper": {
      "post": {
        "tags": [
          "Webinars"
        ],
        "summary": "Upload a webinar's branding wallpaper",
        "description": "Upload a webinar's session branding wallpaper file. Webinar branding wallpaper files have these requirements: \n* A webinar can only have one wallpaper file. \n* You can only upload image files that are in JPG/JPEG, GIF, or PNG format. \n* Image files must be 16:9 ratio. The recommended image size is 1920 x 1080 pixels. \n* The wallpaper file size cannot exceed 15 megabytes. \n\n **Prerequisites:** \n*  The **Webinar Session Branding** setting enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write`,`webinar:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:branding_wallpaper`,`webinar:write:branding_wallpaper:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "uploadWebinarBrandingWallpaper",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BrandingWallpaperBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nWebinar wallpaper uploaded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20118"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3000` <br>\n This webinar does not have session branding enabled. <br>\n**Error Code:** `120` <br>\n No file uploaded. Verify that a file has been uploaded. <br>\n**Error Code:** `120` <br>\n File size cannot exceed 15M. <br>\n**Error Code:** `120` <br>\n You can only upload JPG/JPEG, GIF, or PNG image files. <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write",
              "webinar:write:admin",
              "webinar:write:branding_wallpaper",
              "webinar:write:branding_wallpaper:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write",
            "webinar:write:admin"
          ],
          "x-granular-scopes": [
            "webinar:write:branding_wallpaper",
            "webinar:write:branding_wallpaper:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Webinars"
        ],
        "summary": "Delete a webinar's branding wallpaper",
        "description": "Delete a webinar's session branding wallpaper file. \n\n **Prerequisites:** \n* The **Webinar Session Branding** setting enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write`,`webinar:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:delete:branding_wallpaper`,`webinar:delete:branding_wallpaper:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteWebinarBrandingWallpaper",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \n* No content. \n* Webinar wallpaper deleted"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `3000` <br>\n This webinar does not have session branding enabled. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests  For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write",
              "webinar:write:admin",
              "webinar:delete:branding_wallpaper",
              "webinar:delete:branding_wallpaper:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write",
            "webinar:write:admin"
          ],
          "x-granular-scopes": [
            "webinar:delete:branding_wallpaper",
            "webinar:delete:branding_wallpaper:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/invite_links": {
      "post": {
        "tags": [
          "Webinars"
        ],
        "summary": "Create webinar's invite links",
        "description": "Create a batch of invitation links for a webinar.\n\n**Prerequisites:**\n\n* Business, Education or API Plan with the Webinar add-on.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:admin`,`webinar:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:invite_links`,`webinar:write:invite_links:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarInviteLinksCreate",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "requestBody": {
          "description": "Webinar invite link object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteLinks2"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` Webinar Invite Links Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteLinks1"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid Webinar Id. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write:admin",
              "webinar:write",
              "webinar:write:invite_links",
              "webinar:write:invite_links:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write:admin",
            "webinar:write"
          ],
          "x-granular-scopes": [
            "webinar:write:invite_links",
            "webinar:write:invite_links:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/jointoken/live_streaming": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "Get a webinar's join token for live streaming",
        "description": "Retrieve a webinar's archive token to allow live streaming. The join token lets a recording bot implemented using Zoom meeting SDK connect to a Zoom meeting **hosted by the issuer of the token**, and can call the streaming method automatically. It supports both regular live streaming and raw streaming. \n\n **Prerequisites:** \n* A Pro or higher plan with a Webinar add-on. \n* The **Allow livestreaming of webinars** user setting enabled in the Zoom web portal.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar_token:read:admin:live_streaming`,`webinar_token:read:live_streaming`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:live_streaming_token`,`webinar:read:live_streaming_token:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarLiveStreamingJoinToken",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nWebinar live streaming token returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20065"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `124` <br>\n This API only supports OAuth2 authorization. <br>\n**Error Code:** `3000` <br>\n Not allowed to start live streaming. To use this feature, enable the **Allow livestreaming of webinars** setting in the **Settings** page of the Zoom web portal. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests  For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar_token:read:admin:live_streaming",
              "webinar_token:read:live_streaming",
              "webinar:read:live_streaming_token",
              "webinar:read:live_streaming_token:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar_token:read:admin:live_streaming",
            "webinar_token:read:live_streaming"
          ],
          "x-granular-scopes": [
            "webinar:read:live_streaming_token",
            "webinar:read:live_streaming_token:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/jointoken/local_archiving": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "Get a webinar's archive token for local archiving",
        "description": "Use this API to get a webinar's archive token to allow local archiving. The archive token allows a meeting SDK app or bot to get archive permission to access the webinar's raw audio and video media stream in real-time. \n\n **Prerequisites:** \n* A Pro or higher plan with a Webinar Add-on. \n* The **Archive meetings and webinars** account setting enabled in the Zoom web portal.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar_token:read:admin:local_archiving`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:local_archiving_token:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarLocalArchivingArchiveToken",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nWebinar local archiving token returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20066"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `124` <br>\n This API only supports OAuth2 authorization. <br>\n**Error Code:** `3000` <br>\n Not allowed to start local archiving. To use this feature, enable the **Archive meetings and webinars** setting in the **Settings** page of the Zoom web portal. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests  For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar_token:read:admin:local_archiving",
              "webinar:read:local_archiving_token:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar_token:read:admin:local_archiving"
          ],
          "x-granular-scopes": [
            "webinar:read:local_archiving_token:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/jointoken/local_recording": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "Get a webinar's join token for local recording",
        "description": "Retrieve a webinar's join token to allow for local recording. The join token lets a recording bot implemented using Zoom Meeting SDK connect to a Zoom webinar. The recording bot can then automatically start locally recording. This supports both regular and raw local recording. \n\n **Prerequisites:** \n* A Pro or higher plan with a Webinar add-on. \n* The **Local recording** user setting enabled in the Zoom web portal.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar_token:read:admin:local_recording`,`webinar_token:read:local_recording`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:local_recording_token`,`webinar:read:local_recording_token:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarLocalRecordingJoinToken",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nWebinar local recording token returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20067"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `124` <br>\n This API only supports OAuth2 authorization. <br>\n**Error Code:** `3000` <br>\n Not allowed to start local recording. To use this feature, enable the **Local Recording** setting in the **Settings** page of the Zoom web portal. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar_token:read:admin:local_recording",
              "webinar_token:read:local_recording",
              "webinar:read:local_recording_token",
              "webinar:read:local_recording_token:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar_token:read:admin:local_recording",
            "webinar_token:read:local_recording"
          ],
          "x-granular-scopes": [
            "webinar:read:local_recording_token",
            "webinar:read:local_recording_token:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/livestream": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "Get live stream details",
        "description": "Get a webinar's live stream configuration details, such as Stream URL, Stream Key and Page URL.\n\nZoom allows users to [live stream a webinar](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform.\n\n \n**Prerequisites:**  \n \n* Pro or higher plan with the webinar add-on.  \n \n* Live streaming details must have been [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5) for the webinar.  \n\n\n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:admin`,`webinar:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:livestream`,`webinar:read:livestream:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getWebinarLiveStreamDetails",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's unique ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "95204914252"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**   Live stream details returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20068"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n The current user has not enabled the custom live streaming feature of the webinar. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests  For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:read:admin",
              "webinar:read",
              "webinar:read:livestream",
              "webinar:read:livestream:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar:read:admin",
            "webinar:read"
          ],
          "x-granular-scopes": [
            "webinar:read:livestream",
            "webinar:read:livestream:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Webinars"
        ],
        "summary": "Update a live stream",
        "description": "Update a webinar's live stream information. \n   \n \n**Prerequisites:**  \n \n* Pro or higher plan with the webinar add-on.  \n \n* Live streaming details must be [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5) for the webinar.  \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:admin`,`webinar:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:update:livestream`,`webinar:update:livestream:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarLiveStreamUpdate",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "requestBody": {
          "description": "Webinar",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebinarIdLivestreamBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nMeeting live stream updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n The current user has not enabled the custom live streaming feature of the webinar. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write:admin",
              "webinar:write",
              "webinar:update:livestream",
              "webinar:update:livestream:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write:admin",
            "webinar:write"
          ],
          "x-granular-scopes": [
            "webinar:update:livestream",
            "webinar:update:livestream:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/livestream/status": {
      "patch": {
        "tags": [
          "Webinars"
        ],
        "summary": "Update live stream status",
        "description": "Let users [live stream a webinar](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service) to a custom platform. Update the status of a webinar's live stream.  \n   \n \n**Prerequisites:**  \n \n* Pro or higher plan with a Webinar Add-on.  \n \n* Live streaming details must be [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5) for the webinar.  \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:admin`,`webinar:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:update:livestream_status`,`webinar:update:livestream_status:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarLiveStreamStatusUpdate",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "requestBody": {
          "description": "Webinar",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LivestreamStatusBody1"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nMeeting live stream updated.\n\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `3000` <br>\n The current webinar is not configured with a custom streaming service. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n**Error Code:** `200` <br>\n Webinar {webinarId} has not started. <br>\n**Error Code:** `3000` <br>\n The current webinar is not configured with a custom streaming service. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write:admin",
              "webinar:write",
              "webinar:update:livestream_status",
              "webinar:update:livestream_status:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write:admin",
            "webinar:write"
          ],
          "x-granular-scopes": [
            "webinar:update:livestream_status",
            "webinar:update:livestream_status:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/panelists": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "List panelists",
        "description": "List all of a webinar's panelists.  \n\nWebinar panelists can view and send video, screen share, annotate, and do much more compared to webinar attendees. \n\n\n**Prerequisites:**  \n \n* Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).  \n  \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:admin`,`webinar:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:list_panelists`,`webinar:read:list_panelists:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "webinarPanelists",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nWebinar plan subscription missing. Enable webinar for this user once the subscription is added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20069"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:read:admin",
              "webinar:read",
              "webinar:read:list_panelists",
              "webinar:read:list_panelists:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar:read:admin",
            "webinar:read"
          ],
          "x-granular-scopes": [
            "webinar:read:list_panelists",
            "webinar:read:list_panelists:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Webinars"
        ],
        "summary": "Add panelists",
        "description": "Panelists in a webinar can view and send video, screen share, annotate, and do much more compared to attendees in a webinar.  \n [Add panelists](https://support.zoom.us/hc/en-us/articles/115005657826-Inviting-Panelists-to-a-Webinar#h_7550d59e-23f5-4703-9e22-e76bded1ed70) to a scheduled webinar.  \n   \n \n**Prerequisites:**\n* Pro or a higher plan with the [Webinar Add-on](https://zoom.us/webinar).  \n  \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:admin`,`webinar:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:panelist`,`webinar:write:panelist:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "webinarPanelistCreate",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebinarIdPanelistsBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`  \n \nPanelist created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20119"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3000` <br>\n You have reached the limit for the number of panelists you can add. Contact Zoom Support for more information. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write:admin",
              "webinar:write",
              "webinar:write:panelist",
              "webinar:write:panelist:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write:admin",
            "webinar:write"
          ],
          "x-granular-scopes": [
            "webinar:write:panelist",
            "webinar:write:panelist:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Webinars"
        ],
        "summary": "Remove all panelists",
        "description": "Remove all the panelists from a webinar.  \n \n**Prerequisites:**  \n \n* Pro or a higher plan with the [webinar add-on](https://zoom.us/webinar).  \n  \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:admin`,`webinar:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:delete:panelist`,`webinar:delete:panelist:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarPanelistsDelete",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nPanelists removed"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write:admin",
              "webinar:write",
              "webinar:delete:panelist",
              "webinar:delete:panelist:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write:admin",
            "webinar:write"
          ],
          "x-granular-scopes": [
            "webinar:delete:panelist",
            "webinar:delete:panelist:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/panelists/{panelistId}": {
      "delete": {
        "tags": [
          "Webinars"
        ],
        "summary": "Remove a panelist",
        "description": "[Remove](https://support.zoom.us/hc/en-us/articles/115005657826-Inviting-Panelists-to-a-Webinar#h_de31f237-a91c-4fb2-912b-ecfba8ec5ffb) a single panelist from a webinar.  \n  Retrieve the `panelistId` by calling **List Panelists API**.  \n   \n \n**Prerequisites:**  \n \n* Pro or a higher plan with the [webinar add-on](https://zoom.us/webinar).  \n  \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:admin`,`webinar:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:delete:panelist`,`webinar:delete:panelist:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarPanelistDelete",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          },
          {
            "name": "panelistId",
            "in": "path",
            "description": "The panelist's ID or email",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "Tg2b6GhcQKKbV7nSCbDKug"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nPanelist removed"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write:admin",
              "webinar:write",
              "webinar:delete:panelist",
              "webinar:delete:panelist:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write:admin",
            "webinar:write"
          ],
          "x-granular-scopes": [
            "webinar:delete:panelist",
            "webinar:delete:panelist:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/polls": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "List a webinar's polls ",
        "description": "Lists all the [polls](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars) of a webinar.  \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:admin`,`webinar:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:list_polls`,`webinar:read:list_polls:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarPolls",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          },
          {
            "name": "anonymous",
            "in": "query",
            "description": "Whether to query for polls with the **Anonymous** option enabled: \n* `true` &mdash; Query for polls with the **Anonymous** option enabled. \n* `false` &mdash; Do not query for polls with the **Anonymous** option enabled",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nList polls of a Webinar  returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PollList1"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `4400` <br>\n Webinar polls disabled. To enable this feature, enable the **Webinar Polls/Quizzes** setting in the Zoom web portal's **Settings** interface. <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:read:admin",
              "webinar:read",
              "webinar:read:list_polls",
              "webinar:read:list_polls:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar:read:admin",
            "webinar:read"
          ],
          "x-granular-scopes": [
            "webinar:read:list_polls",
            "webinar:read:list_polls:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Webinars"
        ],
        "summary": "Create a webinar's poll",
        "description": "Creates a [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars) for a webinar.  \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:admin`,`webinar:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:poll`,`webinar:write:poll:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarPollCreate",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "requestBody": {
          "description": "The Webinar poll object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebinarIdPollsBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`  \n \nWebinar Poll Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20120"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `4400` <br>\n Webinar polls disabled. To enable this feature, enable the **Webinar Polls/Quizzes** setting in the Zoom web portal's **Settings** interface. <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write:admin",
              "webinar:write",
              "webinar:write:poll",
              "webinar:write:poll:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write:admin",
            "webinar:write"
          ],
          "x-granular-scopes": [
            "webinar:write:poll",
            "webinar:write:poll:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/polls/{pollId}": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "Get a webinar poll",
        "description": "Returns a webinar's [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars) details.  \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:admin`,`webinar:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:poll`,`webinar:read:poll:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarPollGet",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          },
          {
            "name": "pollId",
            "in": "path",
            "description": "The poll ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "QalIoKWLTJehBJ8e1xRrbQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nWebinar Poll object returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20070"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `4400` <br>\n Webinar polls disabled. To enable this feature, enable the **Webinar Polls/Quizzes** setting in the Zoom web portal's **Settings** interface. <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:read:admin",
              "webinar:read",
              "webinar:read:poll",
              "webinar:read:poll:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar:read:admin",
            "webinar:read"
          ],
          "x-granular-scopes": [
            "webinar:read:poll",
            "webinar:read:poll:admin"
          ]
        }
      },
      "put": {
        "tags": [
          "Webinars"
        ],
        "summary": "Update a webinar poll",
        "description": "Updates a webinar's [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).  \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:admin`,`webinar:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:update:poll`,`webinar:update:poll:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarPollUpdate",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          },
          {
            "name": "pollId",
            "in": "path",
            "description": "The poll ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "QalIoKWLTJehBJ8e1xRrbQ"
            }
          }
        ],
        "requestBody": {
          "description": "The webinar poll",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PollspollIdBody1"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nWebinar Poll Updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `4400` <br>\n Webinar polls disabled. To enable this feature, enable the **Webinar Polls/Quizzes** setting in the Zoom web portal's **Settings** interface.  <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write:admin",
              "webinar:write",
              "webinar:update:poll",
              "webinar:update:poll:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write:admin",
            "webinar:write"
          ],
          "x-granular-scopes": [
            "webinar:update:poll",
            "webinar:update:poll:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Webinars"
        ],
        "summary": "Delete a webinar poll",
        "description": "Delete a webinar's [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).  \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:admin`,`webinar:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:delete:poll`,`webinar:delete:poll:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarPollDelete",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          },
          {
            "name": "pollId",
            "in": "path",
            "description": "The poll ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "QalIoKWLTJehBJ8e1xRrbQ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nWebinar Poll deleted"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `4400` <br>\n Webinar polls disabled. To enable this feature, enable the **Webinar Polls/Quizzes** setting in the Zoom web portal's **Settings** interface. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n**Error Code:** `4400` <br>\n Invalid poll IDs. <br>\n**Error Code:** `4400` <br>\n Cannot update or delete the poll within the Survey Library. <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write:admin",
              "webinar:write",
              "webinar:delete:poll",
              "webinar:delete:poll:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write:admin",
            "webinar:write"
          ],
          "x-granular-scopes": [
            "webinar:delete:poll",
            "webinar:delete:poll:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/registrants": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "List webinar registrants",
        "description": "List all users that have registered for a given webinar. Zoom users with a [webinar plan](https://zoom.us/webinar) have access to creating and managing webinars. The webinar functionality lets a host broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a [webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form before receiving the link to join the webinar.  \n\n\n**Prerequisites**\n* Pro or higher plan with a Webinar add-on.  \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:admin`,`webinar:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:list_registrants`,`webinar:read:list_registrants:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "webinarRegistrants",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          },
          {
            "name": "occurrence_id",
            "in": "query",
            "description": "The meeting or webinar occurrence ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1648194360000"
            },
            "x-ballerina-name": "occurrenceId"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Query by the registrant's status. \n* `pending` - The registration is pending. \n* `approved` - The registrant is approved. \n* `denied` - The registration is denied",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "pending",
              "default": "approved",
              "enum": [
                "pending",
                "approved",
                "denied"
              ]
            }
          },
          {
            "name": "tracking_source_id",
            "in": "query",
            "description": "The tracking source ID for the registrants. Useful if you share the webinar registration page in multiple locations. See [Creating source tracking links for webinar registration](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-source-tracking-links-for-webinar-registration) for details",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "5516482804110"
            },
            "x-ballerina-name": "trackingSourceId"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            },
            "x-ballerina-name": "pageSize"
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "**Deprecated** This field will be deprecated. We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 1,
              "default": 1
            },
            "x-ballerina-name": "pageNumber"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"
            },
            "x-ballerina-name": "nextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationList2"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:read:admin",
              "webinar:read",
              "webinar:read:list_registrants",
              "webinar:read:list_registrants:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar:read:admin",
            "webinar:read"
          ],
          "x-granular-scopes": [
            "webinar:read:list_registrants",
            "webinar:read:list_registrants:admin"
          ]
        }
      },
      "post": {
        "tags": [
          "Webinars"
        ],
        "summary": "Add a webinar registrant",
        "description": "Create and submit a user's registration for a webinar. Zoom users with a [Webinar plan](https://zoom.us/webinar) have access to creating and managing webinars. Webinars allow hosts to broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a [webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form before receiving the link to join the webinar. \n\n**Prerequisites:** \n* A Pro or higher plan with the Webinar add-on.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:admin`,`webinar:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:registrant`,`webinar:write:registrant:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarRegistrantCreate",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          },
          {
            "name": "occurrence_ids",
            "in": "query",
            "description": "A comma-separated list of webinar occurrence IDs. Get this value with the [Get a webinar](/docs/api/rest/reference/zoom-api/methods/#operation/webinar) API. Make sure the `registration_type` is 3 if updating multiple occurrences with this API",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1648538280000"
            },
            "x-ballerina-name": "occurrenceIds"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebinarIdRegistrantsBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nWebinar registration created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20121"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3000` <br>\n This webinar does not have registration as required: {webinarId}. <br>\n**Error Code:** `3027` <br>\n Host cannot register. <br>\n**Error Code:** `3034` <br>\n If you have been invited, please input your work email address. <br>\n**Error Code:** `3038` <br>\n Webinar is over, you cannot register now. If you have any questions, contact the webinar host. <br>\n**Error Code:** `3000` <br>\n You have reached the limit for the number of attendees you can add. Contact Zoom Support for more information. <br>\n**Error Code:** `3000` <br>\n The Zoom REST API does not support paid registration. <br>\n**Error Code:** `3000` <br>\n You have been invited as a panelist for the webinar, please check your email to find more information about this webinar. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write:admin",
              "webinar:write",
              "webinar:write:registrant",
              "webinar:write:registrant:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write:admin",
            "webinar:write"
          ],
          "x-granular-scopes": [
            "webinar:write:registrant",
            "webinar:write:registrant:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/registrants/questions": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "List registration questions",
        "description": "List registration questions and fields that are to be answered by users while registering for a webinar. \n\n Scheduling a [webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form with fields and questions before they can receive the link to join the webinar.  \n  \n**Prerequisites:**  \n  \n* Pro or higher plan with the webinar add-on.\n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:admin`,`webinar:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:list_registration_questions`,`webinar:read:list_registration_questions:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarRegistrantsQuestionsGet",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   Webinar registrant question object returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20071"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n**Error Code:** `3000` <br>\n Registration has not been enabled for this webinar: {webinarId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests  For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:read:admin",
              "webinar:read",
              "webinar:read:list_registration_questions",
              "webinar:read:list_registration_questions:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar:read:admin",
            "webinar:read"
          ],
          "x-granular-scopes": [
            "webinar:read:list_registration_questions",
            "webinar:read:list_registration_questions:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Webinars"
        ],
        "summary": "Update registration questions",
        "description": "Update registration questions and fields of a scheduled webinar for users to answer during webinar registration. Scheduling a [webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form with fields and questions before they can receive the link to join the webinar.  \n   \n \n**Prerequisites:**  \n   \n* Pro or higher plan with a Webinar Add-on.\n* Registration option for Webinar should be set as required to use this API. \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:admin`,`webinar:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:update:registration_question`,`webinar:update:registration_question:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarRegistrantQuestionUpdate",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "requestBody": {
          "description": "Webinar registrant questions",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrantsQuestionsBody2"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   Webinar registrant questions updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n**Error Code:** `3000` <br>\n Registration has not been enabled for this webinar: {webinarId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write:admin",
              "webinar:write",
              "webinar:update:registration_question",
              "webinar:update:registration_question:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write:admin",
            "webinar:write"
          ],
          "x-granular-scopes": [
            "webinar:update:registration_question",
            "webinar:update:registration_question:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/registrants/status": {
      "put": {
        "tags": [
          "Webinars"
        ],
        "summary": "Update registrant's status",
        "description": "Update webinar registrants' registration status. You can approve or deny a registrant, or revoke a registrant's approval. \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:admin`,`webinar:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:update:registrant_status`,`webinar:update:registrant_status:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "webinarRegistrantStatus",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          },
          {
            "name": "occurrence_id",
            "in": "query",
            "description": "The meeting or webinar occurrence ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1648194360000"
            },
            "x-ballerina-name": "occurrenceId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrantsStatusBody2"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` <br>\n Registrant status updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3035` <br>\n Webinar has reached maximum attendee capacity. <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n**Error Code:** `300` <br>\n Registration has not been enabled for this meeting: {webinarId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write:admin",
              "webinar:write",
              "webinar:update:registrant_status",
              "webinar:update:registrant_status:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write:admin",
            "webinar:write"
          ],
          "x-granular-scopes": [
            "webinar:update:registrant_status",
            "webinar:update:registrant_status:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/registrants/{registrantId}": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "Get a webinar registrant",
        "description": "Zoom users with a [webinar plan](https://zoom.us/webinar) have access to creating and managing webinars. The webinar feature lets a host broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a [webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form before receiving the link to join the webinar.  \n Use this API to get details on a specific user who has registered for the webinar.  \n   \n \n**Prerequisites:**  \n \n* The account must have a webinar plan.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:admin`,`webinar:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:registrant`,`webinar:read:registrant:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarRegistrantGet",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          },
          {
            "name": "registrantId",
            "in": "path",
            "description": "The registrant ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "9tboDiHUQAeOnbmudzWa5g"
            }
          },
          {
            "name": "occurrence_id",
            "in": "query",
            "description": "The meeting or webinar occurrence ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1648194360000"
            },
            "x-ballerina-name": "occurrenceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebinarRegistrant"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n**Error Code:** `3000` <br>\n Registration has not been enabled for this webinar: {webinarId}. <br>\n**Error Code:** `3079` <br>\n This registrant does not exist: {registrantId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests  For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:read:admin",
              "webinar:read",
              "webinar:read:registrant",
              "webinar:read:registrant:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar:read:admin",
            "webinar:read"
          ],
          "x-granular-scopes": [
            "webinar:read:registrant",
            "webinar:read:registrant:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Webinars"
        ],
        "summary": "Delete a webinar registrant",
        "description": "Delete a webinar registrant.  \n   \n \n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:admin`,`webinar:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:delete:registrant`,`webinar:delete:registrant:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteWebinarRegistrant",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 95204914252
            }
          },
          {
            "name": "registrantId",
            "in": "path",
            "description": "The registrant ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "9tboDiHUQAeOnbmudzWa5g"
            }
          },
          {
            "name": "occurrence_id",
            "in": "query",
            "description": "The webinar occurrence ID",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1648538280000"
            },
            "x-ballerina-name": "occurrenceId"
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP status code:** `204`   \n \nOK"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n**Error Code:** `300` <br>\n The value that you entered for the Registrant ID field is invalid. Enter a valid value and try again. <br>\n**Error Code:** `3000` <br>\n Registration has not been enabled for this webinar: {webinarId}. <br>\n**Error Code:** `3000` <br>\n Registrant {registrantId} was not found. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests  For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write:admin",
              "webinar:write",
              "webinar:delete:registrant",
              "webinar:delete:registrant:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write:admin",
            "webinar:write"
          ],
          "x-granular-scopes": [
            "webinar:delete:registrant",
            "webinar:delete:registrant:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/sip_dialing": {
      "post": {
        "tags": [
          "Webinars"
        ],
        "summary": "Get a webinar SIP URI with passcode",
        "description": "Get a webinar's SIP URI. The URI consists of the webinar ID, an optional user-supplied passcode, and participant identifier code. The API return data also includes additional fields to indicate whether the API caller has a valid Cloud Room Connector subscription, the participant identifier code from the URI, and the SIP URI validity period in seconds. \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:sip_dialing`,`webinar:write:admin:sip_dialing`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:sip_dialing`,`webinar:write:sip_dialing:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getWebinarSipDialingWithPasscode",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID. \n\n When storing this value in your database, store it as a long format integer and **not** an integer. Webinar IDs can exceed 10 digits",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 85746065
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebinarIdSipDialingBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`  Webinar's encoded SIP URI returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20122"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `3000` <br>\n Cannot access meeting information. <br>\n**Error Code:** `3000` <br>\n The webinar's SIP URI does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write:sip_dialing",
              "webinar:write:admin:sip_dialing",
              "webinar:write:sip_dialing",
              "webinar:write:sip_dialing:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write:sip_dialing",
            "webinar:write:admin:sip_dialing"
          ],
          "x-granular-scopes": [
            "webinar:write:sip_dialing",
            "webinar:write:sip_dialing:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/status": {
      "put": {
        "tags": [
          "Webinars"
        ],
        "summary": "Update webinar status",
        "description": "Update a webinar's status. Use this API to end an ongoing webinar.  \n   \n \n**Prerequisites:**  \n \n* The account must hold a valid [Webinar plan](https://zoom.us/webinar).\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write:admin`,`webinar:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:update:status`,`webinar:update:status:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarStatus",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebinarIdStatusBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webinar plan subscription is missing. Enable webinar for this user once the subscription is added: {userId}"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `3063` <br>\n You can not end an on-premise user's meeting: {webinarId} using this API. <br>\n**Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write:admin",
              "webinar:write",
              "webinar:update:status",
              "webinar:update:status:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write:admin",
            "webinar:write"
          ],
          "x-granular-scopes": [
            "webinar:update:status",
            "webinar:update:status:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/survey": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "Get a webinar survey",
        "description": "Return information about a [webinar survey](https://support.zoom.us/hc/en-us/articles/360048745651). \n\n **Prerequisites:** \n* A Pro or higher plan with the Webinar add-on. \n* The [**Webinar Survey**](https://support.zoom.us/hc/en-us/articles/360061293191-Enabling-webinar-survey) feature enabled in the host's account.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:admin`,`webinar:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:survey`,`webinar:read:survey:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarSurveyGet",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \n Webinar survey object returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebinarSurveyObject"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `3000` <br>\n Webinar survey disabled. To enable this feature, enable the **Webinar Survey** setting in the Zoom web portal's **Settings** interface. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:read:admin",
              "webinar:read",
              "webinar:read:survey",
              "webinar:read:survey:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar:read:admin",
            "webinar:read"
          ],
          "x-granular-scopes": [
            "webinar:read:survey",
            "webinar:read:survey:admin"
          ]
        }
      },
      "delete": {
        "tags": [
          "Webinars"
        ],
        "summary": "Delete a webinar survey",
        "description": "Delete a [webinar survey](https://support.zoom.us/hc/en-us/articles/360048745651). \n\n **Prerequisites:** \n* A Pro or higher plan with the Webinar Add-on. \n* The [**Webinar Survey**](https://support.zoom.us/hc/en-us/articles/360061293191-Enabling-webinar-survey) feature enabled in the host's account.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write`,`webinar:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:delete:survey`,`webinar:delete:survey:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarSurveyDelete",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \n Webinar survey deleted"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `3000` <br>\n Webinar survey disabled. To enable this feature, enable the **Webinar Survey** setting in the Zoom web portal's **Settings** interface. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write",
              "webinar:write:admin",
              "webinar:delete:survey",
              "webinar:delete:survey:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write",
            "webinar:write:admin"
          ],
          "x-granular-scopes": [
            "webinar:delete:survey",
            "webinar:delete:survey:admin"
          ]
        }
      },
      "patch": {
        "tags": [
          "Webinars"
        ],
        "summary": "Update a webinar survey",
        "description": "Update a [webinar survey](https://support.zoom.us/hc/en-us/articles/360048745651).  **Prerequisites:** * A Pro or higher plan with the Webinar add-on. * Enable the [**Webinar Survey**](https://support.zoom.us/hc/en-us/articles/360061293191-Enabling-webinar-survey) feature in the host's account.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:write`,`webinar:write:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:update:survey`,`webinar:update:survey:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarSurveyUpdate",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebinarIdSurveyBody"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \n Webinar survey updated"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `300` <br>\n Invalid third party survey: {third_party_survey}. <br>\n**Error Code:** `3000` <br>\n Webinar survey disabled. To use this feature, enable the **Webinar Survey** setting in the Zoom web portal's **Settings** interface. <br>\n**Error Code:** `3000` <br>\n The host isn't allowed to use a third party survey link. To use this feature, enable the \"Allow host to use a 3rd-party survey link\" setting in the \"Account Settings\" page of the Zoom web portal. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:write",
              "webinar:write:admin",
              "webinar:update:survey",
              "webinar:update:survey:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Edit"
          ],
          "x-macro-scopes": [
            "webinar:write",
            "webinar:write:admin"
          ],
          "x-granular-scopes": [
            "webinar:update:survey",
            "webinar:update:survey:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/token": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "Get webinar's token",
        "description": "Use this API to get a webinar's [closed caption token (caption URL)](https://support.zoom.us/hc/en-us/articles/115002212983-Using-a-third-party-closed-captioning-service). This token lets you use a third-party service to stream text to their closed captioning software to the Zoom webinar. \n\n**Prerequisites:** \n* A Pro or higher plan with the Webinar add-on. \n* The **Closed captioning** setting enabled in the Zoom web portal. \n* \n* The **Allow use of caption API Token to integrate with 3rd-party Closed Captioning services** setting enabled.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read`,`webinar:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:token`,`webinar:read:token:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "webinarToken",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The webinar token type: \n* `closed_caption_token` &mdash; The third-party closed caption API token. \n\nThis defaults to `closed_caption_token`",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "closed_caption_token",
              "default": "closed_caption_token",
              "enum": [
                "closed_caption_token"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nWebinar token returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20072"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `3000` <br>\n Closed captioning disabled. To enable this feature, enable the **Closed captioning** and **Allow use of caption API Token to integrate with 3rd-party Closed Captioning services** settings in the Zoom web portal's **Settings** interface. <br>\n**Error Code:** `3000` <br>\n Webinar {webinarId} has not started. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:read",
              "webinar:read:admin",
              "webinar:read:token",
              "webinar:read:token:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar:read",
            "webinar:read:admin"
          ],
          "x-granular-scopes": [
            "webinar:read:token",
            "webinar:read:token:admin"
          ]
        }
      }
    },
    "/webinars/{webinarId}/tracking_sources": {
      "get": {
        "tags": [
          "Webinars"
        ],
        "summary": "Get webinar tracking sources",
        "description": "[Webinar Registration Tracking Sources](https://support.zoom.us/hc/en-us/articles/360000315683-Webinar-Registration-Source-Tracking) allow you to see where your registrants are coming from if you share the webinar registration page in multiple platforms. You can then use the source tracking to see the number of registrants generated from each platform.  \n  Use this API to list information on all the tracking sources of a Webinar.  \n \n**Prerequisites**:  \n \n* [Webinar license](https://zoom.us/webinar).\n* Registration must be required for the Webinar.\n\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:admin`,`webinar:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `webinar:read:list_tracking_sources`,`webinar:read:list_tracking_sources:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "getTrackingSources",
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "description": "The webinar's ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 99289110036
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse20073"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid webinar ID. <br>\n**Error Code:** `200` <br>\n No permission. <br>\n**Error Code:** `200` <br>\n Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Webinar does not exist: {webinarId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "webinar:read:admin",
              "webinar:read",
              "webinar:read:list_tracking_sources",
              "webinar:read:list_tracking_sources:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [
            "User:Read"
          ],
          "x-macro-scopes": [
            "webinar:read:admin",
            "webinar:read"
          ],
          "x-granular-scopes": [
            "webinar:read:list_tracking_sources",
            "webinar:read:list_tracking_sources:admin"
          ]
        }
      }
    }
  },
  "components": {
    "schemas": {
      "InlineResponse20013SettingsBreakoutRoom": {
        "type": "object",
        "properties": {
          "rooms": {
            "type": "array",
            "description": "Create room or rooms",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsBreakoutRoomRooms"
            }
          },
          "enable": {
            "type": "boolean",
            "description": "Set this field's value to `true` if you would like to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option",
            "example": true
          }
        },
        "description": "Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4)"
      },
      "WebinarswebinarIdsurveyCustomSurvey": {
        "type": "object",
        "properties": {
          "feedback": {
            "maxLength": 320,
            "type": "string",
            "description": "The survey's feedback, up to 320 characters. \n\n This value defaults to `Thank you so much for taking the time to complete the survey, your feedback really makes a difference.`",
            "example": "Thank you so much for taking the time to complete the survey. Your feedback really makes a difference."
          },
          "numbered_questions": {
            "type": "boolean",
            "description": "Whether to display the number in the question name. \n\n This value defaults to `true`",
            "example": false,
            "default": false,
            "x-ballerina-name": "numberedQuestions"
          },
          "questions": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "description": "Information about the webinar survey's questions",
            "items": {
              "$ref": "#/components/schemas/WebinarswebinarIdsurveyCustomSurveyQuestions"
            }
          },
          "anonymous": {
            "type": "boolean",
            "description": "Allow participants to anonymously answer survey questions. \n* `true` - Anonymous survey enabled. \n* `false` - Participants cannot answer survey questions anonymously. \n\n This value defaults to `true`",
            "example": false,
            "default": false
          },
          "title": {
            "maxLength": 64,
            "type": "string",
            "description": "The survey's title, up to 64 characters",
            "example": "Learn something new"
          },
          "show_question_type": {
            "type": "boolean",
            "description": "Whether to display the question type in the question name. \n\n This value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "showQuestionType"
          }
        },
        "description": "Information about the customized webinar survey"
      },
      "InlineResponse2018Settings": {
        "type": "object",
        "properties": {
          "breakout_room": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InlineResponse2018SettingsBreakoutRoom"
              }
            ],
            "x-ballerina-name": "breakoutRoom"
          },
          "allow_host_control_participant_mute_state": {
            "type": "boolean",
            "description": "Whether to allow the host and co-hosts to fully control the mute state of participants. If not provided, the default value will be based on the user's setting",
            "example": false,
            "x-ballerina-name": "allowHostControlParticipantMuteState"
          },
          "summary_template_id": {
            "type": "string",
            "description": "The summary template ID used to generate a meeting summary based on a predefined template. To get available summary templates, use the **Get user summary templates** API. If not provided, the default value will be based on the user's setting. To enable this feature for your account, please [contact Zoom Support](https://support.zoom.com/hc/en)",
            "example": "1e1356ad",
            "x-ballerina-name": "summaryTemplateId"
          },
          "custom_keys": {
            "maxItems": 10,
            "type": "array",
            "description": "Custom keys and values assigned to the meeting",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsCustomKeys"
            },
            "x-ballerina-name": "customKeys"
          },
          "global_dial_in_numbers": {
            "type": "array",
            "description": "Global dial-in countries or regions",
            "items": {
              "$ref": "#/components/schemas/InlineResponse2018SettingsGlobalDialInNumbers"
            },
            "x-ballerina-name": "globalDialInNumbers"
          },
          "show_share_button": {
            "type": "boolean",
            "description": "Show social share buttons on the meeting registration page.\nThis setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting)",
            "example": true,
            "x-ballerina-name": "showShareButton"
          },
          "registrants_confirmation_email": {
            "type": "boolean",
            "description": "Whether to send registrants an email confirmation.\n* `true` - Send a confirmation email.\n* `false` - Do not send a confirmation email",
            "example": true,
            "x-ballerina-name": "registrantsConfirmationEmail"
          },
          "approved_or_denied_countries_or_regions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InlineResponse2018SettingsApprovedOrDeniedCountriesOrRegions"
              }
            ],
            "x-ballerina-name": "approvedOrDeniedCountriesOrRegions"
          },
          "continuous_meeting_chat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InlineResponse2018SettingsContinuousMeetingChat"
              }
            ],
            "x-ballerina-name": "continuousMeetingChat"
          },
          "allow_multiple_devices": {
            "type": "boolean",
            "description": "Allow attendees to join the meeting from multiple devices. This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting)",
            "example": true,
            "x-ballerina-name": "allowMultipleDevices"
          },
          "meeting_authentication": {
            "type": "boolean",
            "description": "`true` - Only authenticated users can join meetings",
            "example": true,
            "x-ballerina-name": "meetingAuthentication"
          },
          "alternative_hosts": {
            "type": "string",
            "description": "A semicolon-separated list of the meeting's alternative hosts' email addresses or IDs",
            "example": "jchill@example.com;thill@example.com",
            "x-ballerina-name": "alternativeHosts"
          },
          "alternative_host_update_polls": {
            "type": "boolean",
            "description": "Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher",
            "example": true,
            "x-ballerina-name": "alternativeHostUpdatePolls"
          },
          "device_testing": {
            "type": "boolean",
            "description": "Enable the device testing",
            "example": false,
            "default": false,
            "x-ballerina-name": "deviceTesting"
          },
          "participant_video": {
            "type": "boolean",
            "description": "Start video when participants join the meeting",
            "example": false,
            "x-ballerina-name": "participantVideo"
          },
          "calendar_type": {
            "type": "integer",
            "description": "The type of calendar integration used to schedule the meeting. \n* `1` - [Zoom Outlook add-in](https://support.zoom.us/hc/en-us/articles/360031592971-Getting-started-with-Outlook-plugin-and-add-in) \n* `2` - [Zoom for Google Workspace add-on](https://support.zoom.us/hc/en-us/articles/360020187492-Using-the-Zoom-for-Google-Workspace-add-on)\n\nWorks with the `private_meeting` field to determine whether to share details of meetings or not",
            "example": 1,
            "enum": [
              1,
              2
            ],
            "x-enum-descriptions": [
              "Outlook",
              "Google Calendar"
            ],
            "x-ballerina-name": "calendarType"
          },
          "in_meeting": {
            "type": "boolean",
            "description": "Host meeting in India",
            "example": false,
            "deprecated": true,
            "default": false,
            "x-ballerina-name": "inMeeting"
          },
          "mute_upon_entry": {
            "type": "boolean",
            "description": "Mute participants upon entry",
            "example": false,
            "default": false,
            "x-ballerina-name": "muteUponEntry"
          },
          "global_dial_in_countries": {
            "type": "array",
            "description": "List of global dial-in countries",
            "items": {
              "type": "string",
              "example": "US"
            },
            "x-ballerina-name": "globalDialInCountries"
          },
          "question_and_answer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InlineResponse2018SettingsQuestionAndAnswer"
              }
            ],
            "x-ballerina-name": "questionAndAnswer"
          },
          "join_before_host": {
            "type": "boolean",
            "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings",
            "example": true,
            "default": false,
            "x-ballerina-name": "joinBeforeHost"
          },
          "host_save_video_order": {
            "type": "boolean",
            "description": "Whether the **Allow host to save video order** feature is enabled",
            "example": true,
            "x-ballerina-name": "hostSaveVideoOrder"
          },
          "watermark": {
            "type": "boolean",
            "description": "Whether to add a watermark when viewing a shared screen. If not provided, the default value will be based on the user's setting",
            "example": false
          },
          "approval_type": {
            "type": "integer",
            "description": "Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.**   \n   \n \n\n`0` - Automatically approve.  \n `1` - Manually approve.  \n `2` - No registration required",
            "example": 0,
            "default": 2,
            "enum": [
              0,
              1,
              2
            ],
            "x-enum-descriptions": [
              "Automatically Approve",
              "Manually Approve",
              "No Registration Required"
            ],
            "x-ballerina-name": "approvalType"
          },
          "close_registration": {
            "type": "boolean",
            "description": "Close registration after event date",
            "example": false,
            "default": false,
            "x-ballerina-name": "closeRegistration"
          },
          "push_change_to_calendar": {
            "type": "boolean",
            "description": "Whether to push meeting changes to the calendar. \n\n To enable this feature, configure the **Configure Calendar and Contacts Service** in the user's profile page of the Zoom web portal and enable the **Automatically sync Zoom calendar events information bi-directionally between Zoom and integrated calendars.** setting in the **Settings** page of the Zoom web portal.\n* `true` - Push meeting changes to the calendar.\n* `false` - Do not push meeting changes to the calendar",
            "example": false,
            "default": false,
            "x-ballerina-name": "pushChangeToCalendar"
          },
          "internal_meeting": {
            "type": "boolean",
            "description": "Whether to set the meeting as an internal meeting",
            "example": false,
            "default": false,
            "x-ballerina-name": "internalMeeting"
          },
          "authentication_exception": {
            "type": "array",
            "description": "The participants added here will receive unique meeting invite links and bypass authentication",
            "items": {
              "$ref": "#/components/schemas/InlineResponse2018SettingsAuthenticationException"
            },
            "x-ballerina-name": "authenticationException"
          },
          "jbh_time": {
            "type": "integer",
            "description": "If the value of `join_before_host` field is set to `true`, use this field to indicate time limits when a participant may join a meeting before a host.\n\n*  `0` - Allow participant to join anytime.\n*  `5`- Allow participant to join 5 minutes before meeting start time.\n * `10` - Allow participant to join 10 minutes before meeting start time.\n* `15` - Allow the participant to join 15 minutes before the meeting's start time",
            "example": 0,
            "enum": [
              0,
              5,
              10,
              15
            ],
            "x-ballerina-name": "jbhTime"
          },
          "audio_conference_info": {
            "maxLength": 2048,
            "type": "string",
            "description": "Third party audio conference info",
            "example": "test",
            "x-ballerina-name": "audioConferenceInfo"
          },
          "authentication_domains": {
            "type": "string",
            "description": "If user has configured [Sign Into Zoom with Specified Domains](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated",
            "example": "example.com",
            "x-ballerina-name": "authenticationDomains"
          },
          "who_will_receive_summary": {
            "type": "integer",
            "description": "Defines who will receive a summary after this meeting. This field is applicable only when `auto_start_meeting_summary` is set to `true`.\r\n* `1` - Only meeting host.\r\n* `2` - Only meeting host, co-hosts, and alternative hosts.\r\n* `3` - Only meeting host and meeting invitees in our organization.\r\n* `4` - All meeting invitees including those outside of our organization. If not provided, the default value will be based on the user's setting",
            "example": 1,
            "enum": [
              1,
              2,
              3,
              4
            ],
            "x-ballerina-name": "whoWillReceiveSummary"
          },
          "meeting_invitees": {
            "type": "array",
            "description": "A list of the meeting's invitees",
            "items": {
              "$ref": "#/components/schemas/UsersuserIdmeetingsSettingsMeetingInvitees"
            },
            "x-ballerina-name": "meetingInvitees"
          },
          "encryption_type": {
            "type": "string",
            "description": "Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**.\n \n`enhanced_encryption` - Enhanced encryption. Encryption is stored in the cloud if you enable this option.   \n \n\n`e2ee` - [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions features",
            "example": "enhanced_encryption",
            "enum": [
              "enhanced_encryption",
              "e2ee"
            ],
            "x-ballerina-name": "encryptionType"
          },
          "authentication_option": {
            "type": "string",
            "description": "Meeting authentication option ID",
            "example": "signIn_D8cJuqWVQ623CI4Q8yQK0Q",
            "x-ballerina-name": "authenticationOption"
          },
          "sign_language_interpretation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsersuserIdmeetingsSettingsSignLanguageInterpretation"
              }
            ],
            "x-ballerina-name": "signLanguageInterpretation"
          },
          "disable_participant_video": {
            "type": "boolean",
            "description": "Whether to disable the participant video during meeting. To enable this feature for your account, please [contact Zoom Support](https://support.zoom.us/hc/en-us)",
            "example": false,
            "default": false,
            "x-ballerina-name": "disableParticipantVideo"
          },
          "focus_mode": {
            "type": "boolean",
            "description": "Whether the [**Focus Mode** feature](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode) is enabled when the meeting starts",
            "example": true,
            "x-ballerina-name": "focusMode"
          },
          "registration_type": {
            "type": "integer",
            "description": "Registration type. Used for recurring meeting with fixed time only. \n `1` - Attendees register once and can attend any of the occurrences.  \n `2` - Attendees need to register for each occurrence to attend.  \n `3` - Attendees register once and can choose one or more occurrences to attend",
            "example": 1,
            "default": 1,
            "enum": [
              1,
              2,
              3
            ],
            "x-enum-descriptions": [
              "Attendees register once and can attend any of the occurrences",
              "Attendees need to register for each occurrence to attend",
              "Attendees register once and can choose one or more occurrences to attend"
            ],
            "x-ballerina-name": "registrationType"
          },
          "contact_email": {
            "type": "string",
            "description": "Contact email for registration",
            "example": "jchill@example.com",
            "x-ballerina-name": "contactEmail"
          },
          "waiting_room": {
            "type": "boolean",
            "description": "Enable the waiting room",
            "example": false,
            "default": false,
            "x-ballerina-name": "waitingRoom"
          },
          "audio": {
            "type": "string",
            "description": "Determine how participants can join the audio portion of the meeting.  \n `both` - Both Telephony and VoIP.  \n `telephony` - Telephony only.  \n `voip` - VoIP only.  \n `thirdParty` - Third party audio conference",
            "example": "telephony",
            "default": "both",
            "enum": [
              "both",
              "telephony",
              "voip",
              "thirdParty"
            ],
            "x-enum-descriptions": [
              "Both Telephony and VoIP",
              "Telephony only",
              "VoIP only",
              "Third party audio conference"
            ]
          },
          "authentication_name": {
            "type": "string",
            "description": "Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)",
            "example": "Sign in to Zoom",
            "x-ballerina-name": "authenticationName"
          },
          "enforce_login_domains": {
            "type": "string",
            "description": "Only signed in users with specified domains can join meetings.\n\n**This field is deprecated and will not be supported in the future.**    \n   \n As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting",
            "example": "example.com",
            "deprecated": true,
            "x-ballerina-name": "enforceLoginDomains"
          },
          "who_can_ask_questions": {
            "type": "integer",
            "description": "Defines who can ask questions about this meeting's transcript. This field is applicable only when `auto_start_ai_companion_questions` is set to `true`.\r\n* `1` - All participants and invitees.\r\n* `2` - All participants only from when they join.\r\n* `3` - Only meeting host.\r\n* `4` - Participants and invitees in our organization.\r\n* `5` - Participants in our organization only from when they join. If not provided, the default value will be based on the user's setting",
            "example": 1,
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "x-ballerina-name": "whoCanAskQuestions"
          },
          "contact_name": {
            "type": "string",
            "description": "Contact name for registration",
            "example": "Jill Chill",
            "x-ballerina-name": "contactName"
          },
          "cn_meeting": {
            "type": "boolean",
            "description": "Host meeting in China",
            "example": false,
            "deprecated": true,
            "default": false,
            "x-ballerina-name": "cnMeeting"
          },
          "registrants_email_notification": {
            "type": "boolean",
            "description": "Whether to send registrants email notifications about their registration approval, cancellation, or rejection.\n\n* `true` - Send an email notification.\n* `false` - Do not send an email notification.\n\n Set this value to `true` to also use the `registrants_confirmation_email` parameter",
            "example": true,
            "x-ballerina-name": "registrantsEmailNotification"
          },
          "alternative_hosts_email_notification": {
            "type": "boolean",
            "description": "Flag to determine whether to send email notifications to alternative hosts, default value is true",
            "example": true,
            "default": true,
            "x-ballerina-name": "alternativeHostsEmailNotification"
          },
          "use_pmi": {
            "type": "boolean",
            "description": "Use a [personal meeting ID (PMI)](/docs/api/using-zoom-apis/#understanding-personal-meeting-id-pmi). Only used for scheduled meetings and recurring meetings with no fixed time",
            "example": false,
            "default": false,
            "x-ballerina-name": "usePmi"
          },
          "resources": {
            "type": "array",
            "description": "The meeting's resources",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsResources"
            }
          },
          "auto_recording": {
            "type": "string",
            "description": "Automatic recording.\n `local` - Record on local.  \n `cloud` -  Record on cloud.  \n `none` - Disabled",
            "example": "cloud",
            "default": "none",
            "enum": [
              "local",
              "cloud",
              "none"
            ],
            "x-enum-descriptions": [
              "Record to local device",
              "Record to cloud",
              "No Recording"
            ],
            "x-ballerina-name": "autoRecording"
          },
          "host_video": {
            "type": "boolean",
            "description": "Start video when the host joins the meeting",
            "example": true,
            "x-ballerina-name": "hostVideo"
          },
          "language_interpretation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsersuserIdmeetingsSettingsLanguageInterpretation"
              }
            ],
            "x-ballerina-name": "languageInterpretation"
          },
          "enforce_login": {
            "type": "boolean",
            "description": "Only signed in users can join this meeting.\n\n**This field is deprecated and will not be supported in the future.**    \n   \n As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting",
            "example": true,
            "deprecated": true,
            "x-ballerina-name": "enforceLogin"
          },
          "auto_start_meeting_summary": {
            "type": "boolean",
            "description": "Whether to automatically start a meeting summary. If not provided, the default value will be based on the user's setting",
            "example": false,
            "x-ballerina-name": "autoStartMeetingSummary"
          },
          "auto_start_ai_companion_questions": {
            "type": "boolean",
            "description": "Whether to automatically start AI Companion questions. If not provided, the default value will be based on the user's setting",
            "example": false,
            "x-ballerina-name": "autoStartAiCompanionQuestions"
          },
          "participant_focused_meeting": {
            "type": "boolean",
            "description": "Whether to set the meeting as a participant focused meeting",
            "example": false,
            "default": false,
            "x-ballerina-name": "participantFocusedMeeting"
          },
          "private_meeting": {
            "type": "boolean",
            "description": "Whether the meeting is set as private",
            "example": false,
            "x-ballerina-name": "privateMeeting"
          },
          "email_in_attendee_report": {
            "type": "boolean",
            "description": "Whether to include authenticated guest's email addresses in meetings' attendee reports",
            "example": true,
            "x-ballerina-name": "emailInAttendeeReport"
          },
          "email_notification": {
            "type": "boolean",
            "description": "Whether to send email notifications to [alternative hosts](https://support.zoom.us/hc/en-us/articles/208220166) and [users with scheduling privileges](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-privilege). This value defaults to `true`",
            "example": true,
            "default": true,
            "x-ballerina-name": "emailNotification"
          }
        },
        "description": "Meeting settings"
      },
      "MeetingsmeetingIdrecordingsregistrantsquestionsQuestions": {
        "type": "object",
        "properties": {
          "required": {
            "type": "boolean",
            "description": "Whether the field is required to be answered by the registrant or not",
            "example": true
          },
          "field_name": {
            "type": "string",
            "description": "Field name",
            "example": "last_name",
            "enum": [
              "last_name",
              "address",
              "city",
              "country",
              "zip",
              "state",
              "phone",
              "industry",
              "org",
              "job_title",
              "purchasing_time_frame",
              "role_in_purchase_process",
              "no_of_employees",
              "comments"
            ],
            "x-enum-descriptions": [
              "Last Name",
              "Address",
              "City",
              "Country/Region",
              "Zip/Postal Code",
              "State/Province",
              "Phone",
              "Industry",
              "Organization",
              "Job Title",
              "Purchasing Time Frame",
              "Role in Purchase Process",
              "Number of Employees",
              "Questions & Comments"
            ],
            "x-ballerina-name": "fieldName"
          }
        }
      },
      "WebinarswebinarIdBody": {
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/WebinarswebinarIdSettings"
          },
          "timezone": {
            "type": "string",
            "description": "The timezone to assign to the `start_time` value. This field is only used for scheduled or recurring webinars with a fixed time.\n\nFor a list of supported timezones and their formats, see our [timezone list](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)",
            "example": "America/Los_Angeles"
          },
          "record_file_id": {
            "type": "string",
            "description": "The previously recorded file's ID for `simulive`",
            "example": "f09340e1-cdc3-4eae-9a74-98f9777ed908",
            "x-ballerina-name": "recordFileId"
          },
          "schedule_for": {
            "type": "string",
            "description": "The user's email address or `userId` to schedule a webinar for",
            "example": "jchill@example.com",
            "x-ballerina-name": "scheduleFor"
          },
          "type": {
            "type": "integer",
            "description": "Webinar types. \n `5` - webinar.  \n `6` - Recurring webinar with no fixed time.  \n `9` - Recurring webinar with a fixed time",
            "example": 5,
            "default": 5,
            "enum": [
              5,
              6,
              9
            ],
            "x-enum-descriptions": [
              "Webinar",
              "Recurring Webinar with no fixed time",
              "Recurring Webinar with fixed time"
            ]
          },
          "agenda": {
            "type": "string",
            "description": "Webinar description",
            "example": "My Webinar"
          },
          "duration": {
            "type": "integer",
            "description": "Webinar duration, in minutes. Used for scheduled webinar only",
            "example": 60
          },
          "recurrence": {
            "$ref": "#/components/schemas/WebinarswebinarIdRecurrence"
          },
          "start_time": {
            "type": "string",
            "description": "Webinar start time, in the format `yyyy-MM-dd'T'HH:mm:ss'Z'`. Should be in GMT time. In the format `yyyy-MM-dd'T'HH:mm:ss`. This should be in local time and the timezone should be specified. Only used for scheduled webinars and recurring webinars with a fixed time",
            "format": "date-time",
            "example": "2022-03-26T07:18:32Z",
            "x-ballerina-name": "startTime"
          },
          "password": {
            "maxLength": 10,
            "type": "string",
            "description": "Webinar passcode. Passcode may only contain the characters [a-z A-Z 0-9 @ - _ * !]. Maximum of 10 characters.\n\nIf **Webinar Passcode** setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request. \n\n **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. \n\n If the requirements are enabled, you can view those requirements by calling the [**Get account settings**](/docs/api/rest/reference/account/methods/#operation/accountSettings) API",
            "example": "123456"
          },
          "tracking_fields": {
            "type": "array",
            "description": "Tracking fields",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdTrackingFields"
            },
            "x-ballerina-name": "trackingFields"
          },
          "is_simulive": {
            "type": "boolean",
            "description": "Whether to set the webinar simulive",
            "example": true,
            "x-ballerina-name": "isSimulive"
          },
          "transition_to_live": {
            "type": "boolean",
            "description": "Whether to transition a simulive webinar to live. The host must be present at the time of transition",
            "example": false,
            "x-ballerina-name": "transitionToLive"
          },
          "topic": {
            "type": "string",
            "description": "The webinar topic",
            "example": "My webinar"
          }
        },
        "description": "Webinar object"
      },
      "MeetingsmeetingIdsurveyCustomSurvey": {
        "type": "object",
        "properties": {
          "feedback": {
            "maxLength": 320,
            "type": "string",
            "description": "The survey's feedback, up to 320 characters. \n\n This value defaults to `Thank you so much for taking the time to complete the survey. Your feedback really makes a difference.`",
            "example": "Thank you so much for taking the time to complete the survey. Your feedback really makes a difference."
          },
          "numbered_questions": {
            "type": "boolean",
            "description": "Whether to display the number in the question name. \n\n This value defaults to `true`",
            "example": false,
            "default": false,
            "x-ballerina-name": "numberedQuestions"
          },
          "questions": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "description": "Information about the meeting survey's questions",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdsurveyCustomSurveyQuestions"
            }
          },
          "anonymous": {
            "type": "boolean",
            "description": "Allow participants to anonymously answer survey questions. \n\n This value defaults to `true`",
            "example": false,
            "default": false
          },
          "title": {
            "maxLength": 64,
            "type": "string",
            "description": "The survey's title, up to 64 characters",
            "example": "Learn something new"
          },
          "show_question_type": {
            "type": "boolean",
            "description": "Whether to display the question type in the question name. \n\n This value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "showQuestionType"
          }
        },
        "description": "Information about the customized meeting survey"
      },
      "InlineResponse2006Meetings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeetingsAllOf11"
          }
        ]
      },
      "MeetingInstancesAllOf1": {
        "type": "object",
        "properties": {
          "meetings": {
            "type": "array",
            "description": "List of ended meeting instances",
            "items": {
              "$ref": "#/components/schemas/MeetingInstancesMeetings"
            }
          }
        }
      },
      "InlineResponse20113AllOf1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The webinar template's name",
            "example": "Weekly Meeting Template"
          },
          "id": {
            "type": "string",
            "description": "The webinar template's ID",
            "example": "ull6574eur"
          }
        }
      },
      "MeetingsmeetingIdsurveyCustomSurveyPrompts": {
        "type": "object",
        "properties": {
          "prompt_question": {
            "maxLength": 200,
            "type": "string",
            "description": "The question prompt's title",
            "example": "How are you?",
            "x-ballerina-name": "promptQuestion"
          }
        }
      },
      "UsersuserIdwebinarsSettingsSignLanguageInterpretationInterpreters": {
        "type": "object",
        "properties": {
          "sign_language": {
            "type": "string",
            "description": "The interpreter's sign language. \n\n To get this value, use the `sign_language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](/docs/api/rest/reference/zoom-api/methods#operation/userSettings) API response",
            "example": "American",
            "x-ballerina-name": "signLanguage"
          },
          "email": {
            "type": "string",
            "description": "The interpreter's email address",
            "format": "email",
            "example": "interpreter@example.com"
          }
        }
      },
      "InlineResponse20060QuestionDetails": {
        "type": "object",
        "properties": {
          "answer": {
            "type": "string",
            "description": "Answer submitted for the question. The value will be 'live answered' if this is a live answer",
            "example": "Good"
          },
          "question": {
            "type": "string",
            "description": "Question asked during the Q&amp;A",
            "example": "How are you?"
          }
        }
      },
      "InlineResponse20121Occurrences": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "integer",
            "description": "Duration",
            "example": 60
          },
          "start_time": {
            "type": "string",
            "description": "Start time",
            "format": "date-time",
            "example": "2022-03-25T07:46:00Z",
            "x-ballerina-name": "startTime"
          },
          "occurrence_id": {
            "type": "string",
            "description": "Occurrence ID: Unique identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences",
            "example": "1648194360000",
            "x-ballerina-name": "occurrenceId"
          },
          "status": {
            "type": "string",
            "description": "Occurrence status",
            "example": "available"
          }
        },
        "description": "Occurrence object. This object is only returned for recurring webinars"
      },
      "BrandingWallpaperBody": {
        "required": [
          "file"
        ],
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "description": "The wallpaper's file path, in binary format",
            "format": "binary"
          }
        }
      },
      "WebinarRegistrantQuestions": {
        "title": "Webinar registrant questions",
        "type": "object",
        "properties": {
          "custom_questions": {
            "type": "array",
            "description": "Array of custom questions for registrants",
            "items": {
              "$ref": "#/components/schemas/WebinarswebinarIdregistrantsquestionsCustomQuestions"
            },
            "x-ballerina-name": "customQuestions"
          },
          "questions": {
            "type": "array",
            "description": "Array of registration fields whose values should be provided by registrants",
            "items": {
              "$ref": "#/components/schemas/WebinarswebinarIdregistrantsquestionsQuestions"
            }
          }
        },
        "description": "Webinar registrant questions"
      },
      "ZpaUpgradeBody": {
        "required": [
          "data",
          "zdm_group_id"
        ],
        "type": "object",
        "properties": {
          "zdm_group_id": {
            "type": "string",
            "description": "The ZDM group ID",
            "example": "ff49588c-92c4-4406-99e6-1942d8a61a7b",
            "x-ballerina-name": "zdmGroupId"
          },
          "data": {
            "oneOf": [
              {
                "title": "",
                "required": [
                  "upgrade_type"
                ],
                "type": "object",
                "properties": {
                  "firmware_versions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "vendor": {
                          "type": "string",
                          "description": "The device's manufacturer.",
                          "example": "AudioCodes"
                        },
                        "version": {
                          "type": "string",
                          "description": "The firmware version.",
                          "example": "1.19.552"
                        },
                        "model": {
                          "type": "string",
                          "description": "The device's model name. Maximum of 64 characters.",
                          "example": "C470HD"
                        }
                      }
                    }
                  },
                  "upgrade_type": {
                    "type": "string",
                    "description": "Upgrade firmware.",
                    "example": "UPGRADE_FIRMWARE",
                    "default": "UPGRADE_FIRMWARE",
                    "enum": [
                      "UPGRADE_FIRMWARE"
                    ]
                  }
                }
              },
              {
                "title": "",
                "required": [
                  "upgrade_type"
                ],
                "type": "object",
                "properties": {
                  "app_version": {
                    "type": "string",
                    "description": "The app version to be upgraded. If upgrade type is `0`, this field won't work. If upgrade type is `1`, this field will work.",
                    "example": "5.16.5.3920"
                  },
                  "upgrade_type": {
                    "type": "string",
                    "description": "Upgrade app.",
                    "example": "UPGRADE_APP",
                    "enum": [
                      "UPGRADE_APP"
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      "DeviceIdAssignmentBody": {
        "required": [
          "action"
        ],
        "type": "object",
        "properties": {
          "room_id": {
            "type": "string",
            "description": "The Zoom Room ID of the device being associated to. The `room_id` is required. It can be ` ` or the specific room ID. If it is ` ` , it means release from the room. If the room ID is a specific value, assign that room to the device ",
            "example": "qMOLddnySIGGVycz8aX_JQ",
            "x-ballerina-name": "roomId"
          },
          "app_type": {
            "type": "string",
            "description": "Specify one of these values for this field.\n\n`ZR` - Zoom Room computer.  \n \n`ZRC` - Zoom Room controller.  \n \n`ZRP` - Scheduling display.  \n \n`ZRW` - Companion whiteboard",
            "example": "ZR",
            "default": "ZR",
            "enum": [
              "ZR",
              "ZRC",
              "ZRP",
              "ZRW"
            ],
            "x-ballerina-name": "appType"
          }
        }
      },
      "UserIdWebinarTemplatesBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UsersuserIdwebinarTemplatesAllOf1"
          }
        ]
      },
      "TheH323SIPDeviceObject": {
        "title": "The H.323/SIP device object.",
        "required": [
          "encryption",
          "ip",
          "name",
          "protocol"
        ],
        "type": "object",
        "properties": {
          "protocol": {
            "type": "string",
            "description": "Device protocol:  \n `H.323` - H.323.  \n `SIP` - SIP",
            "example": "H.323",
            "enum": [
              "H.323",
              "SIP"
            ],
            "x-enum-descriptions": [
              "H.323",
              "SIP"
            ]
          },
          "encryption": {
            "type": "string",
            "description": "Device encryption:  \n `auto` - auto.  \n `yes` - yes.  \n `no` - no",
            "example": "auto",
            "enum": [
              "auto",
              "yes",
              "no"
            ],
            "x-enum-descriptions": [
              "auto",
              "yes",
              "no"
            ]
          },
          "ip": {
            "type": "string",
            "description": "Device IP",
            "example": "127.0.0.1"
          },
          "name": {
            "maxLength": 64,
            "type": "string",
            "description": "Device name",
            "example": "api_test_20190508"
          }
        },
        "description": "The H.323/SIP device object"
      },
      "InlineResponse20041Questions": {
        "type": "object",
        "properties": {
          "question_details": {
            "type": "array",
            "description": "Array of questions from user",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20041QuestionDetails"
            },
            "x-ballerina-name": "questionDetails"
          },
          "user_id": {
            "type": "string",
            "description": "The user ID of the user who asked the question. This value returns blank for external users",
            "example": "hyROrs0TRCSvwmadI7L13w",
            "x-ballerina-name": "userId"
          },
          "name": {
            "type": "string",
            "description": "Participant's display name.  \n  \n\nIf the anonymous [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer) option is enabled and if a participant submits the Q&amp;A without providing their name, the value of the `name` field is &quot;Anonymous Attendee&quot;",
            "example": "Jill Chill"
          },
          "email": {
            "type": "string",
            "description": "Participant's email. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details",
            "example": "jchilll@example.com"
          }
        }
      },
      "InlineResponse2011AllOf1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Device ID",
            "example": "abceHewahkrehwiK"
          }
        }
      },
      "RegistrantsStatusBody1": {
        "required": [
          "action"
        ],
        "type": "object",
        "properties": {
          "registrants": {
            "maximum": 30,
            "type": "array",
            "description": "List of registrants",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdregistrantsstatusRegistrants"
            }
          },
          "action": {
            "type": "string",
            "description": "Registrant status. \n `approve` - Approve registrant.  \n `cancel` - Cancel previously approved registrant's registration.  \n `deny` - Deny registrant",
            "example": "approve",
            "enum": [
              "approve",
              "cancel",
              "deny"
            ],
            "x-enum-descriptions": [
              "Approve registrant",
              "Cancel previously approved registrant",
              "Deny registrant"
            ]
          }
        }
      },
      "RegistrantsAllOf1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Registrant ID",
            "example": "9tboDiHUQAeOnbmudzWa5g"
          }
        }
      },
      "RegistrantsStatusBody2": {
        "required": [
          "action"
        ],
        "type": "object",
        "properties": {
          "registrants": {
            "maximum": 30,
            "type": "array",
            "description": "The registrant information",
            "items": {
              "$ref": "#/components/schemas/WebinarswebinarIdregistrantsstatusRegistrants"
            }
          },
          "action": {
            "type": "string",
            "description": "The registration action to perform. \n* `approve` - Approve the registrant. \n* `deny` - Reject the registrant. \n* `cancel` - Cancel the registrant's approval",
            "example": "approve",
            "enum": [
              "approve",
              "deny",
              "cancel"
            ],
            "x-enum-descriptions": [
              "Approve",
              "Deny",
              "Cancel"
            ]
          }
        }
      },
      "InlineResponse20070AllOf1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The webinar poll ID",
            "example": "QalIoKWLTJehBJ8e1xRrbQ"
          },
          "status": {
            "type": "string",
            "description": "The status of the webinar poll:\n`notstart` - Poll not started\n`started` - Poll started\n`ended` - Poll ended\n`sharing` - Sharing poll results\n`deactivated` - Poll deactivated",
            "example": "notstart",
            "enum": [
              "notstart",
              "started",
              "ended",
              "sharing",
              "deactivated"
            ]
          }
        }
      },
      "RecordingRegistrantQuestions": {
        "title": "Recording registrant questions",
        "type": "object",
        "properties": {
          "custom_questions": {
            "type": "array",
            "description": "Array of registrant custom questions",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdrecordingsregistrantsquestionsCustomQuestions"
            },
            "x-ballerina-name": "customQuestions"
          },
          "questions": {
            "type": "array",
            "description": "Array of registrant questions",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdrecordingsregistrantsquestionsQuestions"
            }
          }
        },
        "description": "Recording tegistrant questions"
      },
      "UsersuserIdmeetingsSettingsQuestionAndAnswer": {
        "type": "object",
        "properties": {
          "question_visibility": {
            "type": "string",
            "description": "Indicate whether you want to allow attendees to be able to view only answered questions or all questions.\n\n* `answered` - Attendees are able to view answered questions only.\n\n*  `all` - Attendees are able to view all questions submitted in the Q&amp;A",
            "example": "all",
            "enum": [
              "answered",
              "all"
            ],
            "x-ballerina-name": "questionVisibility"
          },
          "allow_anonymous_questions": {
            "type": "boolean",
            "description": "* `true` - Allow participants to send questions without providing their name to the host, co-host, and panelists.\n\n* `false` - Do not allow anonymous questions. Not supported for simulive meeting",
            "example": true,
            "x-ballerina-name": "allowAnonymousQuestions"
          },
          "enable": {
            "type": "boolean",
            "description": "* `true` - Enable [Q&amp;A](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065237) for meeting.\n\n* `false` - Disable Q&amp;A for meeting. If not provided, the default value will be based on the user's setting",
            "example": true
          },
          "allow_submit_questions": {
            "type": "boolean",
            "description": "* `true` - Allow participants to submit questions.\n\n* `false` - Don't allow participants to submit questions",
            "example": true,
            "x-ballerina-name": "allowSubmitQuestions"
          },
          "attendees_can_comment": {
            "type": "boolean",
            "description": "* `true` - Attendees can answer questions or leave a comment in the question thread.\n\n* `false` - Attendees can not answer questions or leave a comment in the question thread",
            "example": true,
            "x-ballerina-name": "attendeesCanComment"
          },
          "attendees_can_upvote": {
            "type": "boolean",
            "description": "* `true` - Attendees can select the thumbs up button to bring popular questions to the top of the Q&amp;A window.\n\n* `false` - Attendees can't select the thumbs up button on questions",
            "example": true,
            "x-ballerina-name": "attendeesCanUpvote"
          }
        },
        "description": "[Q&amp;A](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065237) for meeting"
      },
      "InlineResponse20013SettingsContinuousMeetingChat": {
        "type": "object",
        "properties": {
          "auto_add_meeting_participants": {
            "type": "boolean",
            "description": "Whether to enable the **Automatically add meeting participants** setting",
            "example": true,
            "deprecated": true,
            "x-ballerina-name": "autoAddMeetingParticipants"
          },
          "enable": {
            "type": "boolean",
            "description": "Whether to enable the **Enable continuous meeting chat** setting",
            "example": true
          },
          "auto_add_invited_external_users": {
            "type": "boolean",
            "description": "Whether to enable the **Automatically add invited external users** setting",
            "example": true,
            "deprecated": true,
            "x-ballerina-name": "autoAddInvitedExternalUsers"
          },
          "who_is_added": {
            "type": "string",
            "description": "Who is added to the continuous meeting chat. Invitees are users added during scheduling. Participants are users who join the meeting.\r\n* `all_users` - For all users, including external invitees and meeting participants.\r\n* `org_invitees_and_participants` - Only for meeting invitees and participants in your organization.\r\n* `org_invitees` - Only for meeting invitees in your organization",
            "example": "all_users",
            "enum": [
              "all_users",
              "org_invitees_and_participants",
              "org_invitees"
            ],
            "x-ballerina-name": "whoIsAdded"
          },
          "channel_id": {
            "type": "string",
            "description": "The channel's ID",
            "example": "cabc1234567defghijkl01234",
            "x-ballerina-name": "channelId"
          }
        },
        "description": "Information about the **Enable continuous meeting chat** feature"
      },
      "InlineResponse20062AllOf1": {
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "description": "**Deprecated** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination",
            "example": 1,
            "deprecated": true,
            "default": 1,
            "x-ballerina-name": "pageNumber"
          },
          "next_page_token": {
            "type": "string",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "example": "w7587w4eiyfsudgf",
            "x-ballerina-name": "nextPageToken"
          },
          "total_records": {
            "type": "integer",
            "description": "The total number of all the records available across pages",
            "example": 20,
            "x-ballerina-name": "totalRecords"
          },
          "page_count": {
            "type": "integer",
            "description": "The number of pages returned for the request made",
            "example": 1,
            "x-ballerina-name": "pageCount"
          },
          "page_size": {
            "maximum": 300,
            "type": "integer",
            "description": "The number of records returned with a single API call",
            "example": 30,
            "default": 30,
            "x-ballerina-name": "pageSize"
          }
        },
        "description": "Pagination object"
      },
      "WebinarswebinarIdSettingsFollowUpAttendeesEmailNotification": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "* `true` - Send follow-up email to attendees.\n\n* `false` - Do not send follow-up email to attendees",
            "example": true
          },
          "type": {
            "type": "integer",
            "description": "`0` - No plan.  \n `1` - Send 1 day after the scheduled end date.  \n `2` - Send 2 days after the scheduled end date.  \n `3` - Send 3 days after the scheduled end date.  \n `4` - Send 4 days after the scheduled end date.  \n `5` - Send 5 days after the scheduled end date.  \n `6` - Send 6 days after the scheduled end date.  \n `7` - Send 7 days after the scheduled end date",
            "example": 0,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "x-enum-descriptions": [
              "Send 1 day after the scheduled end date.",
              "Send 2 days after the scheduled end date.",
              "Send 3 days after the scheduled end date.",
              "Send 4 days after the scheduled end date.",
              "Send 5 days after the scheduled end date.",
              "Send 6 days after the scheduled end date.",
              "Send 7 days after the scheduled end date."
            ]
          }
        },
        "description": "Send follow-up email to attendees"
      },
      "InlineResponse2009": {
        "type": "object",
        "properties": {
          "device_infos": {
            "maxItems": 50,
            "minItems": 0,
            "type": "array",
            "description": "The ZPA information",
            "items": {
              "$ref": "#/components/schemas/InlineResponse2009DeviceInfos"
            },
            "x-ballerina-name": "deviceInfos"
          },
          "timezone": {
            "type": "string",
            "description": "The user's timezone",
            "example": " (GMT+6:00) Astana, Dhaka"
          },
          "language": {
            "type": "string",
            "description": "The user's language",
            "example": "English"
          }
        }
      },
      "InlineResponse2008": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string",
            "description": "Use the next page token to paginate through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "example": "RaO87FrnwXvFQta5aV8sU5C3c9O8s9Nraq2",
            "x-ballerina-name": "nextPageToken"
          },
          "groups": {
            "maxItems": 50,
            "type": "array",
            "description": "All ZDM group information under current account",
            "items": {
              "$ref": "#/components/schemas/InlineResponse2008Groups"
            }
          },
          "page_size": {
            "type": "integer",
            "description": "The total number of records returned from a single API call",
            "example": 30,
            "x-ballerina-name": "pageSize"
          }
        }
      },
      "InlineResponse2018SettingsQuestionAndAnswer": {
        "type": "object",
        "properties": {
          "question_visibility": {
            "type": "string",
            "description": "Indicate whether you want attendees to be able to view answered questions only or view all questions.\n\n* `answered` - Attendees are able to view answered questions only.\n\n*  `all` - Attendees are able to view all questions submitted in the Q&amp;A",
            "example": "all",
            "enum": [
              "answered",
              "all"
            ],
            "x-ballerina-name": "questionVisibility"
          },
          "allow_anonymous_questions": {
            "type": "boolean",
            "description": "* `true` - Allow participants to send questions without providing their name to the host, co-host, and panelists..\n\n* `false` - Do not allow anonymous questions.(Not supported for simulive meeting.)",
            "example": true,
            "x-ballerina-name": "allowAnonymousQuestions"
          },
          "enable": {
            "type": "boolean",
            "description": "* `true` - Enable [Q&amp;A](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065237) for meeting.\n\n* `false` - Disable Q&amp;A for meeting. If not provided, the default value will be based on the user's setting",
            "example": true
          },
          "allow_submit_questions": {
            "type": "boolean",
            "description": "* `true`: Allow participants to submit questions.\n\n* `false`: Do not allow submit questions",
            "example": true,
            "x-ballerina-name": "allowSubmitQuestions"
          },
          "attendees_can_comment": {
            "type": "boolean",
            "description": "* `true` - Attendees can answer questions or leave a comment in the question thread.\n\n* `false` - Attendees can not answer questions or leave a comment in the question thread",
            "example": true,
            "x-ballerina-name": "attendeesCanComment"
          },
          "attendees_can_upvote": {
            "type": "boolean",
            "description": "* `true` - Attendees can click the thumbs up button to bring popular questions to the top of the Q&amp;A window.\n\n* `false` - Attendees can not click the thumbs up button on questions",
            "example": true,
            "x-ballerina-name": "attendeesCanUpvote"
          }
        },
        "description": "[Q&amp;A](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065237) for meeting"
      },
      "WebinarInstancesWebinars": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebinarsAllOf11"
          }
        ]
      },
      "UsersuserIdmeetingsRecurrence": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "end_date_time": {
            "type": "string",
            "description": "Select the final date when the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. Cannot be used with `end_times`",
            "format": "date-time",
            "example": "2022-04-02T15:59:00Z",
            "x-ballerina-name": "endDateTime"
          },
          "end_times": {
            "maximum": 60,
            "type": "integer",
            "description": "Select how many times the meeting should recur before it is canceled. If `end_times` is set to 0, it means there is no end time. The maximum number of recurring is 60. Cannot be used with `end_date_time`",
            "example": 7,
            "default": 1,
            "x-ballerina-name": "endTimes"
          },
          "monthly_week": {
            "type": "integer",
            "description": "Use this field **only if** you're scheduling a **recurring meeting of type `3`** to state the week of the month when the meeting should recur. If you use this field, you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.   \n `-1` - Last week of the month.  \n `1` - First week of the month.  \n `2` - Second week of the month.  \n `3` - Third week of the month.  \n `4` - Fourth week of the month",
            "example": 1,
            "enum": [
              -1,
              1,
              2,
              3,
              4
            ],
            "x-enum-descriptions": [
              "Last week",
              "First week",
              "Second week",
              "Third week",
              "Fourth week"
            ],
            "x-ballerina-name": "monthlyWeek"
          },
          "monthly_week_day": {
            "type": "integer",
            "description": "Use this field **only if** you're scheduling a **recurring meeting of type `3`** to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n  \n `1` - Sunday.  \n `2` - Monday.  \n `3` - Tuesday.  \n `4` -  Wednesday.  \n `5` - Thursday.  \n `6` - Friday.  \n `7` - Saturday",
            "example": 1,
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "x-enum-descriptions": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-ballerina-name": "monthlyWeekDay"
          },
          "repeat_interval": {
            "type": "integer",
            "description": "Define the interval when the meeting should recur. For instance, to schedule a meeting that recurs every two months, set this field's value as `2` and the value of the `type` parameter as `3`. \n\nFor a daily meeting, the maximum number of recurrences is `99` days. For a weekly meeting, the maximum is `50` weeks. For a monthly meeting, the maximum is `10` months.\n\n",
            "example": 1,
            "x-ballerina-name": "repeatInterval"
          },
          "monthly_day": {
            "type": "integer",
            "description": "Use this field **only** if you're scheduling a **recurring meeting of type `3`** to state the day in a month when the meeting should recur. The value range is from `1` to `31`.\n\nFor the meeting to recur on 23rd of each month, provide `23` as this field's value and `1` as the `repeat_interval` field's value. To have the meeting recur every three months on 23rd of the month, change the `repeat_interval` field value to `3`",
            "example": 1,
            "default": 1,
            "x-ballerina-name": "monthlyDay"
          },
          "type": {
            "type": "integer",
            "description": "Recurrence meeting types.\n `1` - Daily.  \n `2` - Weekly.  \n `3` - Monthly",
            "example": 1,
            "enum": [
              1,
              2,
              3
            ],
            "x-enum-descriptions": [
              "Daily",
              "Weekly",
              "Monthly"
            ]
          },
          "weekly_days": {
            "type": "string",
            "description": "**Required** if you're scheduling a recurring meeting of type `2` to state the days of the week when the meeting should repeat. \n\nThis field's value could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `1` as this field's value.  \n\n**Note:** To set the meeting to occur on multiple days of a week, provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays, provide `1,3` as this field's value.\n\n   \n `1` - Sunday.   \n `2` - Monday.  \n `3` - Tuesday.  \n `4` -  Wednesday.  \n `5` -  Thursday.  \n `6` - Friday.  \n `7` - Saturday",
            "example": "1",
            "default": "1",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7"
            ],
            "x-ballerina-name": "weeklyDays"
          }
        },
        "description": "Recurrence object. Use this object only for a meeting with type `8`, a recurring meeting with a fixed time. "
      },
      "PanelistsPanelistsAllOf112": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The panelist's full name.\n\n**Note** This value cannot exceed more than 12 Chinese characters",
            "example": "Jill Chill"
          },
          "email": {
            "type": "string",
            "description": "Panelist's email. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for return value details",
            "format": "email",
            "example": "jchill@example.com"
          }
        },
        "description": "Panelist base object"
      },
      "MeetingsmeetingIdsurveyCustomSurveyQuestions": {
        "type": "object",
        "properties": {
          "rating_min_label": {
            "maxLength": 50,
            "type": "string",
            "description": "The low score label used for the `rating_min_value` field, up to 50 characters. \n\n This field only applies to the `rating_scale` survey",
            "example": "Not likely",
            "x-ballerina-name": "ratingMinLabel"
          },
          "answer_required": {
            "type": "boolean",
            "description": "Whether participants must answer the question. \n* `true` - The participant must answer the question. \n* `false` - The participant does not need to answer the question. \n\n This value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "answerRequired"
          },
          "answer_min_character": {
            "minimum": 1,
            "type": "integer",
            "description": "The allowed minimum number of characters. This field only applies to `short_answer` and `long_answer` questions. You must provide at least a **one** character minimum value",
            "example": 1,
            "x-ballerina-name": "answerMinCharacter"
          },
          "rating_min_value": {
            "minimum": 0,
            "type": "integer",
            "description": "The rating scale's minimum value. This value cannot be less than zero. \n\n This field only applies to the `rating_scale` survey",
            "example": 1,
            "x-ballerina-name": "ratingMinValue"
          },
          "name": {
            "type": "string",
            "description": "The survey question, up to 420 characters",
            "example": "How useful was this meeting?"
          },
          "answers": {
            "minItems": 2,
            "type": "array",
            "description": "The survey question's available answers. This field requires a **minimum** of two answers. \n\n* For `single` and `multiple` questions, you can only provide a maximum of 50 answers. \n* For `matching` polls, you can only provide a maximum of 16 answers. \n* For `rank_order` polls, you can only provide a maximum of seven answers",
            "items": {
              "maxLength": 200,
              "type": "string",
              "example": "Extremely useful"
            }
          },
          "type": {
            "type": "string",
            "description": "The survey's question and answer type. \n* `single` - Single choice. \n* `multiple` - Multiple choice. \n* `matching` - Matching. \n* `rank_order` - Rank order \n* `short_answer` - Short answer \n* `long_answer` - Long answer. \n* `fill_in_the_blank` - Fill in the blank \n* `rating_scale` - Rating scale",
            "example": "single",
            "enum": [
              "single",
              "multiple",
              "matching",
              "rank_order",
              "short_answer",
              "long_answer",
              "fill_in_the_blank",
              "rating_scale"
            ],
            "x-enum-descriptions": [
              "Single choice",
              "Multiple choice",
              "Matching",
              "Rank order",
              "Short answer",
              "Long answer",
              "Fill in the blank",
              "Rating scale"
            ]
          },
          "rating_max_label": {
            "maxLength": 50,
            "type": "string",
            "description": "The high score label used for the `rating_max_value` field, up to 50 characters. \n\n This field only applies to the `rating_scale` survey",
            "example": "Extremely Likely",
            "x-ballerina-name": "ratingMaxLabel"
          },
          "answer_max_character": {
            "type": "integer",
            "description": "The allowed maximum number of characters. This field only applies to `short_answer` and `long_answer` questions. \n* For `short_answer` question, a maximum of 500 characters. \n* For `long_answer` question, a maximum of 2,000 characters",
            "example": 200,
            "x-ballerina-name": "answerMaxCharacter"
          },
          "rating_max_value": {
            "maximum": 10,
            "type": "integer",
            "description": "The rating scale's maximum value, up to a maximum value of 10. \n\n This field only applies to the `rating_scale` survey",
            "example": 4,
            "x-ballerina-name": "ratingMaxValue"
          },
          "show_as_dropdown": {
            "type": "boolean",
            "description": "Whether to display the radio selection as a drop-down box. \n* `true` - Show as a drop-down box. \n* `false` - Do not show as a drop-down box. \n\n This value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "showAsDropdown"
          },
          "prompts": {
            "maxItems": 10,
            "minItems": 2,
            "type": "array",
            "description": "Information about the prompt questions. This field only applies to `matching` and `rank_order` questions. You **must** provide a minimum of two prompts, up to a maximum of 10 prompts",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdsurveyCustomSurveyPrompts"
            }
          }
        }
      },
      "UsersuserIdwebinarsSettingsQuestionAndAnswer": {
        "type": "object",
        "properties": {
          "allow_auto_reply": {
            "type": "boolean",
            "description": "If simulive webinar, \n\n* `true` - allow auto-reply to attendees. \n\n* `false` - don't allow auto-reply to the attendees",
            "example": true,
            "x-ballerina-name": "allowAutoReply"
          },
          "allow_anonymous_questions": {
            "type": "boolean",
            "description": "* `true` - Allow participants to send questions without providing their name to the host, co-host, and panelists..\n\n* `false` - Do not allow anonymous questions.(Not supported for simulive webinar.)",
            "example": true,
            "x-ballerina-name": "allowAnonymousQuestions"
          },
          "answer_questions": {
            "type": "string",
            "description": "Indicate whether you want attendees to be able to view answered questions only or view all questions.\n\n* `only` - Attendees are able to view answered questions only.\n\n*  `all` - Attendees are able to view all questions submitted in the Q&amp;A",
            "example": "all",
            "enum": [
              "only",
              "all"
            ],
            "x-ballerina-name": "answerQuestions"
          },
          "enable": {
            "type": "boolean",
            "description": "* `true` - Enable [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.\n\n* `false` - Disable Q&amp;A for webinar. If not provided, the default value will be based on the user's setting",
            "example": true
          },
          "allow_submit_questions": {
            "type": "boolean",
            "description": "* `true` - Allow participants to submit questions.\n\n* `false` - Do not allow submit questions",
            "example": true,
            "x-ballerina-name": "allowSubmitQuestions"
          },
          "attendees_can_comment": {
            "type": "boolean",
            "description": "* `true` - Attendees can answer questions or leave a comment in the question thread.\n\n* `false` - Attendees can not answer questions or leave a comment in the question thread",
            "example": true,
            "x-ballerina-name": "attendeesCanComment"
          },
          "auto_reply_text": {
            "type": "string",
            "description": "If `allow_auto_reply` = true, the text to be included in the automatic response. ",
            "example": "Thank you for your question. We will get back to you shortly.",
            "x-ballerina-name": "autoReplyText"
          },
          "attendees_can_upvote": {
            "type": "boolean",
            "description": "* `true` - Attendees can click the thumbs up button to bring popular questions to the top of the Q&amp;A window.\n\n* `false` - Attendees can not click the thumbs up button on questions",
            "example": true,
            "x-ballerina-name": "attendeesCanUpvote"
          }
        },
        "description": "[Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar"
      },
      "InlineResponse20013TrackingFields": {
        "type": "object",
        "properties": {
          "visible": {
            "type": "boolean",
            "description": "Indicates whether the [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) is visible in the meeting scheduling options in the Zoom Web Portal or not.\n\n`true`: Tracking field is visible.   \n \n\n`false`: Tracking field is not visible to the users when they look at the meeting details in the Zoom Web Portal but the field was used while scheduling this meeting via API. An invisible tracking field can be used by users while scheduling meetings via API only. ",
            "example": true
          },
          "field": {
            "type": "string",
            "description": "The tracking field's label",
            "example": "field1"
          },
          "value": {
            "type": "string",
            "description": "The tracking field's value",
            "example": "value1"
          }
        }
      },
      "InlineResponse2003AllOf1": {
        "description": "The recording meeting object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "recording_play_passcode": {
                "type": "string",
                "description": "The cloud recording's passcode to be used in the URL. Directly splice this recording's passcode in `play_url` or `share_url` with `?pwd=` to access and play. Example: 'https://zoom.us/rec/share/**************?pwd=yNYIS408EJygs7rE5vVsJwXIz4-VW7MH'",
                "example": "yNYIS408EJygs7rE5vVsJwXIz4-VW7MH",
                "x-ballerina-name": "recordingPlayPasscode"
              },
              "total_size": {
                "type": "integer",
                "description": "The recording's total file size. This includes the `recording_files` and `participant_audio_files` files",
                "format": "int64",
                "example": 22,
                "x-ballerina-name": "totalSize"
              },
              "auto_delete": {
                "type": "boolean",
                "description": "Auto-delete status of a meeting's [cloud recording](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0062627).  \n\nPrerequisite: To get the auto-delete status, the host of the recording must have the recording setting **Delete cloud recordings after a specified number of days** enabled. ",
                "example": true,
                "x-ballerina-name": "autoDelete"
              },
              "recording_count": {
                "type": "integer",
                "description": "The number of recording files returned in the response of this API call. This includes the `recording_files` and  `participant_audio_files` files",
                "example": 22,
                "x-ballerina-name": "recordingCount"
              },
              "type": {
                "type": "string",
                "description": "The recording's associated type of meeting or webinar. \n\nIf the recording is of a meeting: \n* `1` - Instant meeting. \n* `2` - Scheduled meeting. \n* `3` - A recurring meeting with no fixed time. \n* `4` - A meeting created via PMI (Personal Meeting ID). \n* `7` - A [Personal Audio Conference](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0060449) (PAC). \n* `8` - Recurring meeting with a fixed time. \n\nIf the recording is of a webinar: \n* `5` - A webinar. \n* `6` - A recurring webinar without a fixed time \n* `9` - A recurring webinar with a fixed time.\n\nIf the recording is **not** from a meeting or webinar: \n\n* `99` - A recording uploaded via the [**Recordings**](https://zoom.us/recording) interface on the Zoom Web Portal",
                "example": "1",
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "6",
                  "7",
                  "8",
                  "9",
                  "99"
                ],
                "x-enum-descriptions": [
                  "Instant Meeting",
                  "Scheduled Meeting",
                  "Recurring Meeting with no fixed time",
                  "Meeting created using a Personal Meeting ID",
                  "A webinar",
                  "Recurring webinar without a fixed time",
                  "Personal Audio Conference",
                  "Recurring meeting with a fixed time",
                  "Recurring webinar with a fixed time",
                  "A recording uploaded"
                ]
              },
              "uuid": {
                "type": "string",
                "description": "The unique meeting identifier. Each instance of the meeting has its own UUID",
                "example": "BOKXuumlTAGXuqwr3bLyuQ=="
              },
              "host_id": {
                "type": "string",
                "description": "The ID of the user set as the host of the meeting",
                "example": "_0ctZtY0REqWalTmwvrdIw",
                "x-ballerina-name": "hostId"
              },
              "duration": {
                "type": "integer",
                "description": "The duration of the meeting's recording",
                "example": 20
              },
              "start_time": {
                "type": "string",
                "description": "The time when the meeting started",
                "format": "date-time",
                "example": "2021-03-18T05:41:36Z",
                "x-ballerina-name": "startTime"
              },
              "auto_delete_date": {
                "type": "string",
                "description": "The date when the recording will be auto-deleted when `auto_delete` is true. Otherwise, no date will be returned",
                "example": "2028-07-12",
                "x-ballerina-name": "autoDeleteDate"
              },
              "account_id": {
                "type": "string",
                "description": "The user account's unique identifier",
                "example": "Cx3wERazSgup7ZWRHQM8-w",
                "x-ballerina-name": "accountId"
              },
              "topic": {
                "type": "string",
                "description": "The meeting topic",
                "example": "My Personal Meeting"
              },
              "id": {
                "type": "integer",
                "description": "The meeting ID, also known as the meeting number",
                "example": 6840331990
              }
            }
          },
          {
            "description": "The list of recording files",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "recording_files": {
                    "type": "array",
                    "description": "List of recording files",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "file_path": {
                              "type": "string",
                              "description": "The file path to the on-premise account recording. \n\n**Note:** This API only returns this field for Zoom On-Premise accounts. It does **not** return the `download_url` field.",
                              "example": "/9090876528/path01/demo.mp4",
                              "x-ballerina-name": "filePath"
                            },
                            "play_url": {
                              "type": "string",
                              "description": "The URL that can play a recording file.",
                              "example": "https://example.com/rec/play/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                              "x-ballerina-name": "playUrl"
                            },
                            "meeting_id": {
                              "type": "string",
                              "description": "The meeting ID. ",
                              "example": "L0AGOEPVR9m5WSOOs/d+FQ==",
                              "x-ballerina-name": "meetingId"
                            },
                            "file_size": {
                              "type": "number",
                              "description": "The recording file size.",
                              "example": 7220,
                              "x-ballerina-name": "fileSize"
                            },
                            "recording_end": {
                              "type": "string",
                              "description": "The recording end time. The response is in the general query.",
                              "example": "2021-03-18T05:41:36Z",
                              "x-ballerina-name": "recordingEnd"
                            },
                            "file_type": {
                              "type": "string",
                              "description": "The recording file type. \n \n`MP4` - Video file of the recording.  \n `M4A` - Audio-only file of the recording.  \n `TIMELINE` - Timestamp file of the recording in JSON file format. To get a timeline file, the **Add a timestamp to the recording** setting must be enabled in the [recording settings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0062627#h_3f14c3a4-d16b-4a3c-bbe5-ef7d24500048). The time will display in the host's timezone, set on their Zoom profile.\n  \n  `TRANSCRIPT` - Transcription file of the recording in VTT format.  \n  `CHAT` - A TXT file containing in-meeting chat messages that were sent during the meeting.  \n `CC` - File containing closed captions of the recording in VTT file format.  \n `CSV` - File containing polling data in csv format.\n\n  \n \n\nA recording file object with file type of either `CC` or `TIMELINE` **does not have** these properties.  \n \n\t`id`, `status`, `file_size`, `recording_type`, and `play_url`.  \n `SUMMARY` - Summary file of the recording in JSON file format.",
                              "example": "MP4",
                              "enum": [
                                "MP4",
                                "M4A",
                                "CHAT",
                                "TRANSCRIPT",
                                "CSV",
                                "TB",
                                "CC",
                                "CHAT_MESSAGE",
                                "SUMMARY"
                              ],
                              "x-ballerina-name": "fileType"
                            },
                            "recording_type": {
                              "type": "string",
                              "description": "The recording type.",
                              "example": "shared_screen_with_speaker_view",
                              "enum": [
                                "shared_screen_with_speaker_view(CC)",
                                "shared_screen_with_speaker_view",
                                "shared_screen_with_gallery_view",
                                "active_speaker",
                                "gallery_view",
                                "shared_screen",
                                "audio_only",
                                "audio_transcript",
                                "chat_file",
                                "poll",
                                "host_video",
                                "closed_caption",
                                "timeline",
                                "thumbnail",
                                "audio_interpretation",
                                "summary",
                                "summary_next_steps",
                                "summary_smart_chapters",
                                "sign_interpretation",
                                "production_studio"
                              ],
                              "x-ballerina-name": "recordingType"
                            },
                            "download_url": {
                              "type": "string",
                              "description": "The URL to download the recording. \n\nIf a user has authorized and installed your OAuth app that contains recording scopes, use the `download_access_token` or the user's [OAuth access token](/docs/integrations/oauth/) to download the file. Set the `access_token` as a Bearer token in the Authorization header. For example: \n\n`curl -H 'Authorization: Bearer <ACCESS_TOKEN>' https://{{base-domain}}/rec/archive/download/xyz`.\n\n**Note:** This field does **not** return for Zoom on-premise accounts. Instead, this API returns the `file_path` field. The URL may be a redirect. In that case, use `curl --location` to follow redirects or use another tool, like Postman.",
                              "example": "https://example.com/rec/download/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                              "x-ballerina-name": "downloadUrl"
                            },
                            "file_extension": {
                              "type": "string",
                              "description": "The file extension type of the recording file.",
                              "example": "M4A",
                              "enum": [
                                "MP4",
                                "M4A",
                                "TXT",
                                "VTT",
                                "CSV",
                                "JSON",
                                "JPG"
                              ],
                              "x-ballerina-name": "fileExtension"
                            },
                            "id": {
                              "type": "string",
                              "description": "The recording file ID. It's included in the response of the general query.",
                              "example": "72576a1f-4e66-4a77-87c4-f13f9808bd76"
                            },
                            "deleted_time": {
                              "type": "string",
                              "description": "The time when the recording was deleted. Returned in the response only for the trash query.",
                              "example": "2021-03-18T05:41:36Z",
                              "x-ballerina-name": "deletedTime"
                            },
                            "recording_start": {
                              "type": "string",
                              "description": "The recording start time.",
                              "example": "2021-03-18T05:41:36Z",
                              "x-ballerina-name": "recordingStart"
                            },
                            "status": {
                              "type": "string",
                              "description": "The recording status.",
                              "example": "completed",
                              "enum": [
                                "completed"
                              ]
                            }
                          },
                          "description": "Recording file object."
                        }
                      ]
                    },
                    "x-ballerina-name": "recordingFiles"
                  }
                }
              }
            ]
          }
        ]
      },
      "InlineResponse2012": {
        "type": "object",
        "properties": {
          "polls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InlineResponse2012Polls"
            }
          }
        }
      },
      "InlineResponse20025QuestionDetails": {
        "type": "object",
        "properties": {
          "answer": {
            "type": "string",
            "description": "Answer submitted by the user",
            "example": "Good"
          },
          "date_time": {
            "type": "string",
            "description": "Date and time at which the answer to the poll was submitted",
            "format": "date-time",
            "example": "2022-03-26T05:37:59Z",
            "x-ballerina-name": "dateTime"
          },
          "question": {
            "type": "string",
            "description": "Question asked during the poll",
            "example": "How are you?"
          },
          "polling_id": {
            "type": "string",
            "description": "Unique identifier of the poll",
            "example": "QalIoKWLTJehBJ8e1xRrbQ",
            "x-ballerina-name": "pollingId"
          }
        }
      },
      "InlineResponse2011": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse2011AllOf1"
          },
          {
            "$ref": "#/components/schemas/TheH323SIPDeviceObject2"
          }
        ]
      },
      "InlineResponse2014": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "string",
            "description": "For scheduled meetings only. Meeting start date-time in UTC/GMT, such as `2020-03-31T12:02:00Z`",
            "format": "date-time",
            "example": "2022-03-25T07:29:29Z",
            "x-ballerina-name": "startTime"
          },
          "id": {
            "type": "integer",
            "description": "The [meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in **long** format(represented as int64 data type in JSON), also known as the meeting number",
            "format": "int64",
            "example": 92674392836
          },
          "app_id": {
            "type": "string",
            "description": "The app's ID",
            "example": "fdgsfh2ey82fuh",
            "x-ballerina-name": "appId"
          }
        }
      },
      "InlineResponse2013": {
        "type": "object",
        "properties": {
          "registrants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InlineResponse2013Registrants"
            }
          }
        }
      },
      "InlineResponse2016": {
        "type": "object",
        "properties": {
          "occurrences": {
            "type": "array",
            "description": "Array of occurrence objects",
            "items": {
              "$ref": "#/components/schemas/InlineResponse2016Occurrences"
            }
          },
          "start_time": {
            "type": "string",
            "description": "The meeting's start time",
            "format": "date-time",
            "example": "2021-07-13T21:44:51Z",
            "x-ballerina-name": "startTime"
          },
          "join_url": {
            "type": "string",
            "description": "The URL the registrant can use to join the meeting. \n\nThe API will not return this field if the meeting was [created](/docs/api-reference/zoom-api/methods#operation/meetingCreate) with the `approval_type` field value of `1` (manual approval)",
            "example": "https://example.com/j/11111",
            "x-ballerina-name": "joinUrl"
          },
          "participant_pin_code": {
            "type": "integer",
            "description": "The participant PIN code is used to authenticate audio participants before they join the meeting",
            "format": "int64",
            "example": 380303,
            "x-ballerina-name": "participantPinCode"
          },
          "registrant_id": {
            "type": "string",
            "description": "The registrant's ID",
            "example": "fdgsfh2ey82fuh",
            "x-ballerina-name": "registrantId"
          },
          "topic": {
            "maxLength": 200,
            "type": "string",
            "description": "The meeting's topic",
            "example": "My Meeting"
          },
          "id": {
            "type": "integer",
            "description": "The meeting ID",
            "format": "int64",
            "example": 85746065
          }
        }
      },
      "InlineResponse2015": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse2015AllOf1"
          },
          {
            "$ref": "#/components/schemas/MeetingAndWebinarPollingObject3"
          }
        ]
      },
      "InlineResponse2012Polls": {
        "type": "object",
        "properties": {
          "questions": {
            "type": "array",
            "description": "The information about the poll's questions",
            "items": {
              "$ref": "#/components/schemas/InlineResponse2012Questions"
            }
          },
          "anonymous": {
            "type": "boolean",
            "description": "Whether to allow meeting participants to answer poll questions anonymously: \n* `true` &mdash; Anonymous polls enabled. \n* `false` &mdash; Participants cannot answer poll questions anonymously",
            "example": true
          },
          "poll_type": {
            "type": "integer",
            "description": "The type of poll: \n* `1` &mdash; Poll. \n* `2` &mdash; Advanced Poll. This feature must be enabled in your Zoom account. \n* `3` &mdash; Quiz. This feature must be enabled in your Zoom account",
            "example": 2,
            "enum": [
              1,
              2,
              3
            ],
            "x-ballerina-name": "pollType"
          },
          "id": {
            "type": "string",
            "description": "Meeting Poll ID",
            "example": "QalIoKWLTJehBJ8e1xRrbQ"
          },
          "title": {
            "type": "string",
            "description": "The title for the poll",
            "example": "Learn something new"
          },
          "status": {
            "type": "string",
            "description": "The status of the meeting poll:  \n `notstart` - Poll not started  \n `started` - Poll started  \n `ended` - Poll ended  \n `sharing` - Sharing poll results",
            "example": "notstart",
            "enum": [
              "notstart",
              "started",
              "ended",
              "sharing"
            ],
            "x-enum-descriptions": [
              "Poll not start",
              "Poll started",
              "Poll ended",
              "Poll is sharing"
            ]
          }
        }
      },
      "InlineResponse20029Meetings": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "integer",
            "description": "Meeting duration",
            "example": 60
          },
          "start_time": {
            "type": "string",
            "description": "The meeting's start time",
            "format": "date-time",
            "example": "2022-03-23T06:00:00Z",
            "x-ballerina-name": "startTime"
          },
          "join_url": {
            "type": "string",
            "description": "The URL that participants can use to join a meeting",
            "example": "https://example.com/j/11111",
            "x-ballerina-name": "joinUrl"
          },
          "timezone": {
            "type": "string",
            "description": "The timezone to format the meeting start time",
            "example": "America/Los_Angeles"
          },
          "use_pmi": {
            "type": "boolean",
            "description": "Use a [personal meeting ID (PMI)](/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi). Only used for scheduled meetings and recurring meetings with no fixed time",
            "example": false,
            "x-ballerina-name": "usePmi"
          },
          "topic": {
            "type": "string",
            "description": "The meeting topic",
            "example": "My Meeting"
          },
          "created_at": {
            "type": "string",
            "description": "The meeting creation time",
            "format": "date-time",
            "example": "2022-03-23T05:31:16Z",
            "x-ballerina-name": "createdAt"
          },
          "id": {
            "type": "integer",
            "description": "The [meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-) - a unique identifier of the meeting in **long** format, represented as int64 data type in JSON. Also known as the meeting number",
            "format": "int64",
            "example": 97763643886
          },
          "type": {
            "type": "integer",
            "description": "Meeting types.\n`1` - Instant meeting.\n`2` - Scheduled meeting.\n`3` - Recurring meeting with no fixed time.\n`8` - Recurring meeting with a fixed time",
            "example": 2,
            "enum": [
              1,
              2,
              3,
              8
            ],
            "x-enum-descriptions": [
              "Instant Meeting",
              "Scheduled Meeting",
              "Recurring Meeting with no fixed time",
              "Recurring Meeting with a fixed time"
            ]
          },
          "passcode": {
            "type": "string",
            "description": "The meeting passcode. This passcode may only contain characters `[a-z A-Z 0-9 @ - _ * !]`",
            "example": "123456"
          }
        }
      },
      "InlineResponse2018": {
        "type": "object",
        "properties": {
          "occurrences": {
            "type": "array",
            "description": "Array of occurrence objects",
            "items": {
              "$ref": "#/components/schemas/InlineResponse2018Occurrences"
            }
          },
          "registration_url": {
            "type": "string",
            "description": "The URL that registrants can use to register for a meeting. This field is only returned for meetings that have enabled registration",
            "example": "https://example.com/meeting/register/7ksAkRCoEpt1Jm0wa-E6lICLur9e7Lde5oW6",
            "x-ballerina-name": "registrationUrl"
          },
          "chat_join_url": {
            "type": "string",
            "description": "The URL to join the chat",
            "example": "https://example.com/launch/jc/11111",
            "x-ballerina-name": "chatJoinUrl"
          },
          "assistant_id": {
            "type": "string",
            "description": "The ID of the user who scheduled this meeting on behalf of the host",
            "example": "kFFvsJc-Q1OSxaJQLvaa_A",
            "x-ballerina-name": "assistantId"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone to format `start_time`",
            "example": "America/Los_Angeles"
          },
          "start_url": {
            "type": "string",
            "description": "URL to start the meeting. This URL should only be used by the host of the meeting and **should not be shared with anyone other than the host** of the meeting, since anyone with this URL will be able to log in to the Zoom Client as the host of the meeting",
            "example": "https://example.com/s/11111",
            "x-ballerina-name": "startUrl"
          },
          "created_at": {
            "type": "string",
            "description": "The date and time when this meeting was created",
            "format": "date-time",
            "example": "2022-03-25T07:29:29Z",
            "x-ballerina-name": "createdAt"
          },
          "type": {
            "type": "integer",
            "description": "The meeting type.\n* `1` - An instant meeting. \n* `2` - A scheduled meeting. \n* `3` - A recurring meeting with no fixed time. \n* `8` - A recurring meeting with fixed time. \n* `10` - A screen share only meeting",
            "example": 2,
            "default": 2,
            "enum": [
              1,
              2,
              3,
              8,
              10
            ]
          },
          "pmi": {
            "type": "string",
            "description": "[Personal meeting ID (PMI)](/docs/api/using-zoom-apis/#understanding-personal-meeting-id-pmi). Only used for scheduled meetings and recurring meetings with no fixed time",
            "example": "97891943927"
          },
          "duration": {
            "type": "integer",
            "description": "The meeting duration",
            "example": 60
          },
          "password": {
            "type": "string",
            "description": "The meeting passcode. By default, it can be up to 10 characters in length and may contain alphanumeric characters as well as special characters such as !, @, #, etc",
            "example": "123456"
          },
          "id": {
            "type": "integer",
            "description": "The [meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in **long** format(represented as int64 data type in JSON), also known as the meeting number",
            "format": "int64",
            "example": 92674392836
          },
          "host_email": {
            "type": "string",
            "description": "The meeting host's email address",
            "format": "email",
            "example": "jchill@example.com",
            "x-ballerina-name": "hostEmail"
          },
          "encrypted_password": {
            "type": "string",
            "description": "Encrypted passcode for third party endpoints (H323/SIP)",
            "example": "8pEkRweVXPV3Ob2KJYgFTRlDtl1gSn.1",
            "x-ballerina-name": "encryptedPassword"
          },
          "settings": {
            "$ref": "#/components/schemas/InlineResponse2018Settings"
          },
          "join_url": {
            "type": "string",
            "description": "URL for participants to join the meeting. This URL should only be shared with users that you would like to invite for the meeting",
            "example": "https://example.com/j/11111",
            "x-ballerina-name": "joinUrl"
          },
          "pstn_password": {
            "type": "string",
            "description": "Passcode for participants to join the meeting via [PSTN](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)",
            "example": "123456",
            "x-ballerina-name": "pstnPassword"
          },
          "pre_schedule": {
            "type": "boolean",
            "description": "Whether the prescheduled meeting was created via the [GSuite app](https://support.zoom.us/hc/en-us/articles/360020187492-Zoom-for-GSuite-add-on). This only supports the meeting `type` value of `2` (scheduled meetings) and `3` (recurring meetings with no fixed time). \n* `true` - A GSuite prescheduled meeting. \n* `false` - A regular meeting",
            "example": false,
            "default": false,
            "x-ballerina-name": "preSchedule"
          },
          "agenda": {
            "type": "string",
            "description": "Agenda",
            "example": "My Meeting"
          },
          "recurrence": {
            "$ref": "#/components/schemas/InlineResponse2018Recurrence"
          },
          "start_time": {
            "type": "string",
            "description": "Meeting start date-time in UTC/GMT, such as `2020-03-31T12:02:00Z`",
            "format": "date-time",
            "example": "2022-03-25T07:29:29Z",
            "x-ballerina-name": "startTime"
          },
          "dynamic_host_key": {
            "type": "string",
            "description": "The meeting dynamic host key",
            "example": "123456",
            "x-ballerina-name": "dynamicHostKey"
          },
          "tracking_fields": {
            "type": "array",
            "description": "Tracking fields",
            "items": {
              "$ref": "#/components/schemas/InlineResponse2018TrackingFields"
            },
            "x-ballerina-name": "trackingFields"
          },
          "creation_source": {
            "type": "string",
            "description": "The platform through which the meeting was created.\n* `other` - Created through another platform.\n* `open_api` - Created through Open API.\n* `web_portal` - Created through the web portal",
            "example": "open_api",
            "enum": [
              "other",
              "open_api",
              "web_portal"
            ],
            "x-ballerina-name": "creationSource"
          },
          "h323_password": {
            "type": "string",
            "description": "H.323/SIP room system passcode",
            "example": "123456",
            "x-ballerina-name": "h323Password"
          },
          "topic": {
            "maxLength": 200,
            "type": "string",
            "description": "Meeting topic",
            "example": "My Meeting"
          }
        },
        "description": "Meeting object"
      },
      "InlineResponse2017": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse2017AllOf1"
          }
        ]
      },
      "InlineResponse2018SettingsContinuousMeetingChat": {
        "type": "object",
        "properties": {
          "auto_add_meeting_participants": {
            "type": "boolean",
            "description": "Whether to enable the **Automatically add meeting participants** setting",
            "example": true,
            "deprecated": true,
            "x-ballerina-name": "autoAddMeetingParticipants"
          },
          "enable": {
            "type": "boolean",
            "description": "Whether to enable the **Enable continuous meeting chat** setting. The default value is based on user settings. When the **Enable continuous meeting chat** setting is enabled, the default value is true. When the setting is disabled, the default value is false",
            "example": true
          },
          "auto_add_invited_external_users": {
            "type": "boolean",
            "description": "Whether to enable the **Automatically add invited external users** setting",
            "example": true,
            "deprecated": true,
            "x-ballerina-name": "autoAddInvitedExternalUsers"
          },
          "who_is_added": {
            "type": "string",
            "description": "Who is added to the continuous meeting chat. Invitees are users added during scheduling. Participants are users who join the meeting.\r\n* `all_users` - For all users, including external invitees and meeting participants.\r\n* `org_invitees_and_participants` - Only for meeting invitees and participants in your organization.\r\n* `org_invitees` - Only for meeting invitees in your organization",
            "example": "all_users",
            "enum": [
              "all_users",
              "org_invitees_and_participants",
              "org_invitees"
            ],
            "x-ballerina-name": "whoIsAdded"
          },
          "channel_id": {
            "type": "string",
            "description": "The channel's ID",
            "example": "cabc1234567defghijkl01234",
            "x-ballerina-name": "channelId"
          }
        },
        "description": "Information about the **Enable continuous meeting chat** feature"
      },
      "UsersuserIdmeetingsSettingsLanguageInterpretation": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "Whether to enable [language interpretation](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0064768) for the meeting. If not provided, the default value will be based on the user's setting",
            "example": true
          },
          "interpreters": {
            "type": "array",
            "description": "Information about the meeting's language interpreters",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsLanguageInterpretationInterpreters"
            }
          }
        },
        "description": "The meeting's [language interpretation settings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0064768). Make sure to add the language in the web portal in order to use it in the API. See link for details.\n\n**Note:** This feature is only available for certain Meeting add-on, Education, and Business and higher plans. If this feature is not enabled on the host's account, this setting will **not** be applied to the meeting"
      },
      "UsersuserIdmeetingsSettingsBreakoutRoom": {
        "type": "object",
        "properties": {
          "rooms": {
            "type": "array",
            "description": "Information about the breakout rooms",
            "items": {
              "$ref": "#/components/schemas/UsersuserIdmeetingsSettingsBreakoutRoomRooms"
            }
          },
          "enable": {
            "type": "boolean",
            "description": "Whether to enable the [**Breakout Room pre-assign**](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms) option",
            "example": true
          }
        },
        "description": "The [pre-assigned breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms) settings"
      },
      "RegistrationListAllOf1": {
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination",
            "example": 1,
            "deprecated": true,
            "default": 1,
            "x-ballerina-name": "pageNumber"
          },
          "next_page_token": {
            "type": "string",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "example": "w7587w4eiyfsudgf",
            "x-ballerina-name": "nextPageToken"
          },
          "total_records": {
            "type": "integer",
            "description": "The total number of all the records available across pages",
            "example": 20,
            "x-ballerina-name": "totalRecords"
          },
          "page_count": {
            "type": "integer",
            "description": "The number of pages returned for the request made",
            "example": 1,
            "x-ballerina-name": "pageCount"
          },
          "page_size": {
            "maximum": 300,
            "type": "integer",
            "description": "The number of records returned with a single API call",
            "example": 30,
            "default": 30,
            "x-ballerina-name": "pageSize"
          }
        },
        "description": "Pagination Object"
      },
      "MeetingCloudRecordingRegistration": {
        "title": "Meeting cloud recording registration",
        "description": "Information about the meeting cloud recording registrant",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudRecordingRegistrationList"
          }
        ]
      },
      "WebinarswebinarIdpollsQuestions": {
        "type": "object",
        "properties": {
          "answer_required": {
            "type": "boolean",
            "description": "Whether participants must answer the question. \n* `true` - The participant must answer the question. \n* `false` - The participant does not need to answer the question. \n\n**Note:** \n* When the poll's `type` value is `1` (Poll), this value defaults to `true`. \n* When the poll's `type` value is the `2` (Advanced Poll) or `3` (Quiz) values, this value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "answerRequired"
          },
          "answer_min_character": {
            "minimum": 1,
            "type": "integer",
            "description": "The allowed minimum number of characters. This field only applies to `short_answer` and `long_answer` polls. You must provide at least a **one** character minimum value",
            "example": 1,
            "x-ballerina-name": "answerMinCharacter"
          },
          "rating_min_value": {
            "minimum": 0,
            "type": "integer",
            "description": "The rating scale's minimum value. This value cannot be less than zero. \n\nThis field only applies to the `rating_scale` poll",
            "example": 0,
            "x-ballerina-name": "ratingMinValue"
          },
          "answers": {
            "minItems": 2,
            "type": "array",
            "description": "The poll question's available answers. This field requires a **minimum** of two answers. \n\n* For `single` and `multiple` polls, you can only provide a maximum of 10 answers. \n* For `matching` polls, you can only provide a maximum of 16 answers. \n* For `rank_order` polls, you can only provide a maximum of seven answers",
            "items": {
              "type": "string",
              "example": "Extremely useful"
            }
          },
          "type": {
            "type": "string",
            "description": "The poll's question and answer type. \n* `single` - Single choice. \n* `multiple` - Multiple choice. \n* `matching` - Matching. \n* `rank_order` - Rank order. \n* `short_answer` - Short answer. \n* `long_answer` - Long answer. \n* `fill_in_the_blank` - Fill in the blank. \n* `rating_scale` - Rating scale",
            "example": "single",
            "enum": [
              "single",
              "multiple",
              "matching",
              "rank_order",
              "short_answer",
              "long_answer",
              "fill_in_the_blank",
              "rating_scale"
            ],
            "x-enum-descriptions": [
              "Single choice",
              "Multiple choice",
              "Matching",
              "Rank order",
              "Short answer",
              "Long answer",
              "Fill in the blank",
              "Rating scale"
            ]
          },
          "answer_max_character": {
            "type": "integer",
            "description": "The allowed maximum number of characters. This field only applies to `short_answer` and `long_answer` polls: \n* For `short_answer` polls, a maximum of 500 characters. \n* For `long_answer` polls, a maximum of 2,000 characters",
            "example": 200,
            "x-ballerina-name": "answerMaxCharacter"
          },
          "rating_max_value": {
            "maximum": 10,
            "type": "integer",
            "description": "The rating scale's maximum value, up to a maximum value of 10. \n\nThis field only applies to the `rating_scale` poll",
            "example": 4,
            "x-ballerina-name": "ratingMaxValue"
          },
          "right_answers": {
            "minItems": 1,
            "type": "array",
            "description": "The poll question's correct answer(s). This field is **required** if the poll's `type` value is `3` (Quiz). \n\n For `single` and `matching` polls, this field only accepts one answer",
            "items": {
              "type": "string",
              "example": "Good"
            },
            "x-ballerina-name": "rightAnswers"
          },
          "show_as_dropdown": {
            "type": "boolean",
            "description": "Whether to display the radio selection as a drop-down box. \n* `true` - Show as a drop-down box. \n* `false` - Do not show as a drop-down box. \n\nThis value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "showAsDropdown"
          },
          "rating_min_label": {
            "type": "string",
            "description": "The low score label for the `rating_min_value` field. \n\nThis field only applies to the `rating_scale` poll",
            "example": "Not likely",
            "x-ballerina-name": "ratingMinLabel"
          },
          "case_sensitive": {
            "type": "boolean",
            "description": "Whether the correct answer is case sensitive. This field only applies to `fill_in_the_blank` polls. \n* `true` - The answer is case-sensitive. \n* `false` - The answer is not case-sensitive. \n\nThis value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "caseSensitive"
          },
          "name": {
            "maxLength": 1024,
            "type": "string",
            "description": "The poll question, up to 1024 characters. \n\nFor `fill_in_the_blank` polls, this field is the poll's question. For each value that the user must fill in, ensure that there are the same number of `right_answers` values",
            "example": "How useful was this meeting?"
          },
          "rating_max_label": {
            "type": "string",
            "description": "The high score label for the `rating_max_value` field. \n\nThis field only applies to the `rating_scale` poll",
            "example": "Extremely Likely",
            "x-ballerina-name": "ratingMaxLabel"
          },
          "prompts": {
            "type": "array",
            "description": "The information about the prompt questions. This field only applies to `matching` and `rank_order` polls. You **must** provide a minimum of two prompts, up to a maximum of 10 prompts",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdbatchPollsPrompts"
            }
          }
        }
      },
      "WebinarswebinarIdSettingsAttendeesAndPanelistsReminderEmailNotification": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "* `true` - Send reminder email to attendees and panelists.\n\n* `false` - Do not send reminder email to attendees and panelists",
            "example": true
          },
          "type": {
            "type": "integer",
            "description": "`0` - No plan.  \n `1` - Send 1 hour before webinar.  \n `2` - Send 1 day before webinar.  \n `3` - Send 1 hour and 1 day before webinar.  \n `4` - Send 1 week before webinar.  \n `5` - Send 1 hour and 1 week before webinar.  \n `6` - Send 1 day and 1 week before webinar.  \n `7` - Send 1 hour, 1 day and 1 week before webinar",
            "example": 0,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "x-enum-descriptions": [
              "Send 1 hour before webinar.",
              "Send 1 day before webinar.",
              "Send 1 hour and 1 day before webinar.",
              "Send 1 week before webinar.",
              "Send 1 hour and 1 week before webinar.",
              "Send 1 day and 1 week before webinar.",
              "Send 1 hour, 1 day and 1 week before webinar."
            ]
          }
        },
        "description": "Send reminder email to attendees and panelists"
      },
      "InlineResponse2013Registrants": {
        "type": "object",
        "properties": {
          "join_url": {
            "type": "string",
            "description": "Unique URL using which registrant can join the meeting",
            "example": "https://example.com/j/11111",
            "x-ballerina-name": "joinUrl"
          },
          "participant_pin_code": {
            "type": "integer",
            "description": "The participant PIN code is used to authenticate audio participants before they join the meeting",
            "format": "int64",
            "example": 380303,
            "x-ballerina-name": "participantPinCode"
          },
          "registrant_id": {
            "type": "string",
            "description": "Unique identifier of the registrant",
            "example": "9tboDiHUQAeOnbmudzWa5g",
            "x-ballerina-name": "registrantId"
          },
          "email": {
            "type": "string",
            "description": "Email address of the registrant",
            "example": "jchill@example.com"
          }
        }
      },
      "InlineResponse2001": {
        "type": "object",
        "properties": {
          "statistic_by_file_extension": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InlineResponse2001StatisticByFileExtension"
              }
            ],
            "x-ballerina-name": "statisticByFileExtension"
          },
          "total_records": {
            "type": "integer",
            "description": "The total number of returned meeting records",
            "example": 20,
            "x-ballerina-name": "totalRecords"
          },
          "from": {
            "type": "string",
            "description": "The queried start date",
            "format": "date-time",
            "example": "2021-03-18T05:41:36Z"
          },
          "to": {
            "type": "string",
            "description": "The queried end date",
            "format": "date-time",
            "example": "2021-03-18T05:41:36Z"
          },
          "statistic_by_file_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InlineResponse2001StatisticByFileStatus"
              }
            ],
            "x-ballerina-name": "statisticByFileStatus"
          }
        }
      },
      "RegistrationList1": {
        "title": "Registration List",
        "description": "List of users",
        "allOf": [
          {
            "$ref": "#/components/schemas/RegistrationList1AllOf1"
          },
          {
            "$ref": "#/components/schemas/RegistrationList1RegistrationList1AllOf12"
          }
        ]
      },
      "RegistrationList2": {
        "title": "Registration list",
        "description": "List of users",
        "allOf": [
          {
            "$ref": "#/components/schemas/RegistrationList2AllOf1"
          },
          {
            "$ref": "#/components/schemas/RegistrationList2RegistrationList2AllOf12"
          }
        ]
      },
      "InlineResponse2003": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse2003AllOf1"
          },
          {
            "$ref": "#/components/schemas/InlineResponse2003InlineResponse2003AllOf12"
          },
          {
            "$ref": "#/components/schemas/InlineResponse2003InlineResponse2003InlineResponse2003AllOf123"
          },
          {
            "type": "object",
            "properties": {
              "recording_play_passcode": {
                "type": "string",
                "description": "The cloud recording's passcode to be used in the URL. Directly splice this recording's passcode in `play_url` or `share_url` with `?pwd=` to access and play. Example: 'https://zoom.us/rec/share/**************?pwd=yNYIS408EJygs7rE5vVsJwXIz4-VW7MH'",
                "example": "yNYIS408EJygs7rE5vVsJwXIz4-VW7MH",
                "x-ballerina-name": "recordingPlayPasscode"
              }
            }
          }
        ]
      },
      "InlineResponse2002": {
        "required": [
          "account_name",
          "archive_files",
          "complete_time",
          "duration",
          "duration_in_second",
          "host_id",
          "id",
          "is_breakout_room",
          "meeting_type",
          "recording_count",
          "start_time",
          "status",
          "timezone",
          "topic",
          "total_size",
          "type",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "physical_files": {
            "type": "array",
            "description": "Information about the physical files",
            "items": {
              "$ref": "#/components/schemas/InlineResponse2002PhysicalFiles"
            },
            "x-ballerina-name": "physicalFiles"
          },
          "timezone": {
            "type": "string",
            "description": "The meeting or webinar's [timezone](/docs/api/references/abbreviations/#timezones)",
            "example": "Asia/Shanghai"
          },
          "total_size": {
            "type": "integer",
            "description": "The total size of the archive file, in bytes",
            "example": 364463,
            "x-ballerina-name": "totalSize"
          },
          "meeting_type": {
            "type": "string",
            "description": "Whether the meeting or webinar is internal or external. \n* `internal` - An internal meeting or webinar. \n* `external` - An external meeting or webinar. \n\n The `id`, `host_id`, and `topic` PII (Personal Identifiable Information) values in this response are removed when this value is `external`",
            "example": "internal",
            "enum": [
              "internal",
              "external"
            ],
            "x-ballerina-name": "meetingType"
          },
          "recording_count": {
            "type": "integer",
            "description": "The number of archived files returned in the API call response",
            "example": 2,
            "x-ballerina-name": "recordingCount"
          },
          "is_breakout_room": {
            "type": "boolean",
            "description": "Whether the room is a [breakout room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms)",
            "example": false,
            "x-ballerina-name": "isBreakoutRoom"
          },
          "type": {
            "type": "integer",
            "description": "The type of archived meeting or webinar. \n\n If the recording is of a meeting: \n* `1` - Instant meeting. \n* `2` - Scheduled meeting. \n* `3` - A recurring meeting with no fixed time. \n* `4` - A meeting created via PMI (Personal Meeting ID). \n* `7` - A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). \n* `8` - Recurring meeting with a fixed time. \n\n If the recording is of a webinar: \n* `5` - A webinar. \n* `6` - A recurring webinar without a fixed time. \n* `9` - A recurring webinar with a fixed time. \n\n If the recording is **not** from a meeting or webinar: \n\n* `100` - A [breakout room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms)",
            "example": 1,
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              100
            ]
          },
          "uuid": {
            "type": "string",
            "description": "The universally unique identifier (UUID) of the recorded meeting or webinar instance. Each meeting or webinar instance generates a UUID",
            "example": "yO3dfhh3t467UkQ=="
          },
          "host_id": {
            "type": "string",
            "description": "The host's user ID for the archived meeting or webinar",
            "example": "Dhjdfgdkg8w",
            "x-ballerina-name": "hostId"
          },
          "duration": {
            "type": "integer",
            "description": "The meeting or webinar's scheduled duration",
            "example": 1
          },
          "start_time": {
            "type": "string",
            "description": "The meeting or webinar's start time",
            "format": "date-time",
            "example": "2021-04-26T05:23:18Z",
            "x-ballerina-name": "startTime"
          },
          "complete_time": {
            "type": "string",
            "description": "The meeting or webinar's archive completion time",
            "format": "date-time",
            "example": "2021-03-12T02:57:27Z",
            "anyOf": [
              {
                "minLength": 1,
                "type": "object",
                "description": "The archive completion time.",
                "format": "date-time",
                "example": "2021-03-12T02:12:27Z"
              },
              {
                "type": "string",
                "description": "An empty string.",
                "enum": [
                  ""
                ]
              }
            ],
            "x-ballerina-name": "completeTime"
          },
          "group_id": {
            "type": "string",
            "description": "Primary group IDs of participants who belong to your account. Each group ID is separated by a comma",
            "example": "pvFIYKSDTum9iCDOOtQL4w,_FsqLyI0RlO6LVPeUVWi8g",
            "x-ballerina-name": "groupId"
          },
          "account_name": {
            "type": "string",
            "description": "The user's account name",
            "example": "account_01",
            "x-ballerina-name": "accountName"
          },
          "topic": {
            "type": "string",
            "description": "The meeting or webinar topic",
            "example": "My Personal Meeting Room"
          },
          "id": {
            "type": "integer",
            "description": "The meeting or webinar ID, either `meetingId` or `webinarId`",
            "format": "int64",
            "example": 553068284
          },
          "parent_meeting_id": {
            "type": "string",
            "description": "The parent meeting's universally unique ID (UUID). Each meeting or webinar instance generates a UUID. If the `is_breakout_room` value is `true`, the API returns this value",
            "example": "atsXxhSEQWit9t+U02HXNQ==",
            "x-ballerina-name": "parentMeetingId"
          },
          "duration_in_second": {
            "type": "integer",
            "description": "The meeting or webinar's duration, in seconds",
            "example": 1800,
            "x-ballerina-name": "durationInSecond"
          },
          "archive_files": {
            "type": "array",
            "description": "Information about the archive files",
            "items": {
              "$ref": "#/components/schemas/InlineResponse2002ArchiveFiles"
            },
            "x-ballerina-name": "archiveFiles"
          },
          "status": {
            "type": "string",
            "description": "The archive's processing status. \n* `completed` - The archive's processing is complete. \n* `processing` - The archive is processing",
            "example": "completed",
            "enum": [
              "completed",
              "processing"
            ]
          }
        }
      },
      "InlineResponse2005": {
        "type": "object",
        "properties": {
          "analytics_summary": {
            "type": "array",
            "description": "Analytics Summary",
            "items": {
              "$ref": "#/components/schemas/InlineResponse2005AnalyticsSummary"
            },
            "x-ballerina-name": "analyticsSummary"
          },
          "from": {
            "type": "string",
            "description": "The queried start date",
            "format": "date",
            "example": "2020-07-30"
          },
          "to": {
            "type": "string",
            "description": "The queried end date",
            "format": "date",
            "example": "2020-07-30"
          }
        }
      },
      "WebinarswebinarIdpanelistsPanelists": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PanelistsAllOf1"
          },
          {
            "$ref": "#/components/schemas/PanelistsPanelistsAllOf12"
          }
        ]
      },
      "InlineResponse2004": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes",
            "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42",
            "x-ballerina-name": "nextPageToken"
          },
          "total_records": {
            "type": "integer",
            "description": "The total number of all the records available across pages",
            "example": 5,
            "x-ballerina-name": "totalRecords"
          },
          "from": {
            "type": "string",
            "description": "The queried start date",
            "format": "date",
            "example": "2020-07-30"
          },
          "to": {
            "type": "string",
            "description": "The queried end date",
            "format": "date",
            "example": "2020-07-30"
          },
          "page_size": {
            "maximum": 300,
            "type": "integer",
            "description": "The number of records returned within a single API call",
            "example": 30,
            "x-ballerina-name": "pageSize"
          },
          "analytics_details": {
            "type": "array",
            "description": "Analytics Detail",
            "items": {
              "$ref": "#/components/schemas/InlineResponse2004AnalyticsDetails"
            },
            "x-ballerina-name": "analyticsDetails"
          }
        }
      },
      "InlineResponse2007": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes",
            "example": "At6eWnFZ1FB3arCXnRxqHLXKhbDW18yz2i2",
            "x-ballerina-name": "nextPageToken"
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InlineResponse2007Devices"
            }
          },
          "page_size": {
            "type": "integer",
            "description": "The number of records returned within a single API call",
            "example": 20,
            "x-ballerina-name": "pageSize"
          }
        }
      },
      "InlineResponse2006": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse2006AllOf1"
          },
          {
            "$ref": "#/components/schemas/InlineResponse2006InlineResponse2006AllOf12"
          },
          {
            "$ref": "#/components/schemas/InlineResponse2006InlineResponse2006InlineResponse2006AllOf123"
          }
        ]
      },
      "InlineResponse20047Meetings": {
        "type": "object",
        "properties": {
          "has_chat": {
            "type": "boolean",
            "description": "Indicates whether or not the chat feature was used in the meeting",
            "example": false,
            "x-ballerina-name": "hasChat"
          },
          "user_name": {
            "type": "string",
            "description": "The user's display name",
            "example": "Jill Chill",
            "x-ballerina-name": "userName"
          },
          "custom_keys": {
            "maxItems": 10,
            "type": "array",
            "description": "Information about the meeting's assigned custom keys and values. This returns a maximum of 10 items",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20047CustomKeys"
            },
            "x-ballerina-name": "customKeys"
          },
          "source": {
            "type": "string",
            "description": "Whether the meeting was created directly through Zoom or via an API request: \n* If the meeting was created via an OAuth app, this field returns the OAuth app's name. \n* If the meeting was created via JWT or the Zoom Web Portal, this returns the `Zoom` value",
            "example": "Zoom"
          },
          "type": {
            "type": "integer",
            "description": "The type of meeting or webinar. \n\nmeeting: \n* `1` &mdash; Instant meeting. \n* `2` &mdash; Scheduled meeting. \n* `3` &mdash; A recurring meeting with no fixed time. \n* `4` &mdash; A meeting created via PMI (Personal Meeting ID). \n* `7` &mdash; A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). \n* `8` - Recurring meeting with a fixed time. \n\nwebinar: \n* `5` &mdash; A webinar. \n* `6` &mdash; A recurring webinar without a fixed time \n* `9` &mdash; A recurring webinar with a fixed time. ",
            "example": 2,
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9
            ]
          },
          "has_recording": {
            "type": "boolean",
            "description": "Indicates whether or not the recording feature was used in the meeting",
            "example": false,
            "x-ballerina-name": "hasRecording"
          },
          "uuid": {
            "type": "string",
            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID",
            "example": "4444AAAiAAAAAiAiAiiAii=="
          },
          "join_time": {
            "type": "string",
            "description": "The date and time at which the attendee joined the meeting",
            "example": "12/22/2021 16:20",
            "x-ballerina-name": "joinTime"
          },
          "duration": {
            "type": "integer",
            "description": "The meeting's duration",
            "example": 6
          },
          "session_key": {
            "type": "string",
            "description": "The Video SDK custom session ID",
            "example": "ABC36jaBI145",
            "x-ballerina-name": "sessionKey"
          },
          "id": {
            "type": "integer",
            "description": "The [meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID)",
            "example": 12345
          },
          "meeting_encryption_status": {
            "type": "integer",
            "description": "The meeting's encryption status. \n* `1` &mdash; E2E encryption. \n* `2` &mdash; Enhanced encryption",
            "example": 1,
            "enum": [
              1,
              2
            ],
            "x-ballerina-name": "meetingEncryptionStatus"
          },
          "participants_count_my_account": {
            "type": "integer",
            "description": "The number of meeting participants from my account",
            "example": 2,
            "x-ballerina-name": "participantsCountMyAccount"
          },
          "host_organization": {
            "type": "string",
            "description": "Host Account Name of Hosting Organization",
            "example": "org",
            "x-ballerina-name": "hostOrganization"
          },
          "user_email": {
            "type": "string",
            "description": "The user's email address",
            "format": "email",
            "example": "jchill@example.com",
            "x-ballerina-name": "userEmail"
          },
          "leave_time": {
            "type": "string",
            "description": "The date and time at which the attendee left the meeting",
            "example": "12/22/2021 17:13",
            "x-ballerina-name": "leaveTime"
          },
          "participants_count": {
            "type": "integer",
            "description": "The number of meeting participants",
            "example": 2,
            "x-ballerina-name": "participantsCount"
          },
          "total_minutes": {
            "type": "integer",
            "description": "The sum of meeting minutes from all meeting participants in the meeting",
            "example": 11,
            "x-ballerina-name": "totalMinutes"
          },
          "end_time": {
            "type": "string",
            "description": "The meeting's end date and time",
            "format": "date-time",
            "example": "2020-07-15T23:30:19Z",
            "x-ballerina-name": "endTime"
          },
          "has_screen_share": {
            "type": "boolean",
            "description": "Indicates whether or not the screenshare feature was used in the meeting",
            "example": false,
            "x-ballerina-name": "hasScreenShare"
          },
          "start_time": {
            "type": "string",
            "description": "The meeting's start date and time",
            "format": "date-time",
            "example": "2019-07-15T23:24:52Z",
            "x-ballerina-name": "startTime"
          },
          "schedule_time": {
            "type": "string",
            "description": "The meeting's scheduled date and time",
            "example": "12/22/2021 16:20",
            "x-ballerina-name": "scheduleTime"
          },
          "join_waiting_room_time": {
            "type": "string",
            "description": "The date and time at which the attendee joined the waiting room",
            "example": "02/11/2022 16:15",
            "x-ballerina-name": "joinWaitingRoomTime"
          },
          "topic": {
            "type": "string",
            "description": "The meeting's topic",
            "example": "My Meeting"
          },
          "host_name": {
            "type": "string",
            "description": "Host's name",
            "example": "Jill",
            "x-ballerina-name": "hostName"
          }
        }
      },
      "InlineResponse2018SettingsApprovedOrDeniedCountriesOrRegions": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "description": "Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting.   \n   \n \n`approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.  \n   \n \n`deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`",
            "example": "approve",
            "enum": [
              "approve",
              "deny"
            ]
          },
          "enable": {
            "type": "boolean",
            "description": "`true` - Setting enabled to either allow users or block users from specific regions to join your meetings.   \n \n\n`false` - Setting disabled",
            "example": true
          },
          "approved_list": {
            "type": "array",
            "description": "List of countries or regions from where participants can join this meeting. ",
            "items": {
              "type": "string",
              "example": "CX"
            },
            "x-ballerina-name": "approvedList"
          },
          "denied_list": {
            "type": "array",
            "description": "List of countries or regions from where participants can not join this meeting. ",
            "items": {
              "type": "string",
              "example": "CA"
            },
            "x-ballerina-name": "deniedList"
          }
        },
        "description": "Approve or block users from specific regions or countries from joining this meeting. \n"
      },
      "MeetingsmeetingIdbatchPollsPrompts": {
        "type": "object",
        "properties": {
          "prompt_question": {
            "type": "string",
            "description": "The question prompt's title",
            "example": "How are you?",
            "x-ballerina-name": "promptQuestion"
          },
          "prompt_right_answers": {
            "type": "array",
            "description": "The question prompt's correct answers: \n* For `matching` polls, you must provide a minimum of two correct answers, up to a maximum of 10 correct answers. \n* For `rank_order` polls, you can only provide one correct answer",
            "items": {
              "type": "string",
              "example": "Good"
            },
            "x-ballerina-name": "promptRightAnswers"
          }
        }
      },
      "RecordingRegistrantQuestions1": {
        "title": "Recording registrant questions",
        "type": "object",
        "properties": {
          "custom_questions": {
            "type": "array",
            "description": "Array of registrant custom questions",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdrecordingsregistrantsquestionsCustomQuestions"
            },
            "x-ballerina-name": "customQuestions"
          },
          "questions": {
            "type": "array",
            "description": "Array of registrant questions",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdrecordingsregistrantsquestionsQuestions"
            }
          }
        },
        "description": "Recording registrant questions"
      },
      "RecordingIdStatusBody": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "example": "recover",
            "enum": [
              "recover"
            ],
            "x-enum-descriptions": [
              "recover meeting recording"
            ]
          }
        }
      },
      "RegistrantsAllOf12": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Registrant ID",
            "example": "9tboDiHUQAeOnbmudzWa5g"
          }
        }
      },
      "InlineResponse20020Questions": {
        "type": "object",
        "properties": {
          "required": {
            "type": "boolean",
            "description": "Whether or not the displayed fields are required to be filled out by registrants",
            "example": true
          },
          "field_name": {
            "type": "string",
            "description": "Field name of the question",
            "example": "last_name",
            "enum": [
              "last_name",
              "address",
              "city",
              "country",
              "zip",
              "state",
              "phone",
              "industry",
              "org",
              "job_title",
              "purchasing_time_frame",
              "role_in_purchase_process",
              "no_of_employees",
              "comments"
            ],
            "x-ballerina-name": "fieldName"
          }
        }
      },
      "RegistrantsAllOf11": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Registrant ID",
            "example": "9tboDiHUQAeOnbmudzWa5g"
          }
        }
      },
      "MeetingsmeetingIdSettingsContinuousMeetingChat": {
        "type": "object",
        "properties": {
          "auto_add_meeting_participants": {
            "type": "boolean",
            "description": "Whether to enable the **Automatically add meeting participants** setting",
            "example": true,
            "deprecated": true,
            "x-ballerina-name": "autoAddMeetingParticipants"
          },
          "enable": {
            "type": "boolean",
            "description": "Whether to enable the **Enable continuous meeting chat** setting",
            "example": true
          },
          "auto_add_invited_external_users": {
            "type": "boolean",
            "description": "Whether to enable the **Automatically add invited external users** setting",
            "example": true,
            "deprecated": true,
            "x-ballerina-name": "autoAddInvitedExternalUsers"
          },
          "who_is_added": {
            "type": "string",
            "description": "Who is added to the continuous meeting chat. Invitees are users added during scheduling. Participants are users who join the meeting.\r\n* `all_users` - For all users, including external invitees and meeting participants.\r\n* `org_invitees_and_participants` - Only for meeting invitees and participants in your organization.\r\n* `org_invitees` - Only for meeting invitees in your organization",
            "example": "all_users",
            "enum": [
              "all_users",
              "org_invitees_and_participants",
              "org_invitees"
            ],
            "x-ballerina-name": "whoIsAdded"
          }
        },
        "description": "Information about the **Enable continuous meeting chat** feature"
      },
      "InlineResponse20061": {
        "type": "object",
        "properties": {
          "templates": {
            "type": "array",
            "description": "Information about the webinar templates",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20061Templates"
            }
          },
          "total_records": {
            "type": "integer",
            "description": "The total number of records returned",
            "example": 1,
            "x-ballerina-name": "totalRecords"
          }
        }
      },
      "InlineResponse20060": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "string",
            "description": "The webinar's start time",
            "format": "date-time",
            "example": "2022-03-26T06:44:14Z",
            "x-ballerina-name": "startTime"
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20060Questions"
            }
          },
          "id": {
            "type": "integer",
            "description": "Webinar ID in **long** format, represented as int64 data type in JSON, also known as the webinar number",
            "format": "int64",
            "example": 95204914252
          },
          "uuid": {
            "type": "string",
            "description": "Webinar UUID",
            "example": "Bznyg8KZTdCVbQxvS/oZ7w=="
          }
        }
      },
      "InlineResponse20063": {
        "type": "object",
        "properties": {
          "occurrences": {
            "type": "array",
            "description": "Array of occurrence objects",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20063Occurrences"
            }
          },
          "h323_passcode": {
            "type": "string",
            "description": "H.323/SIP room system passcode",
            "example": "123456",
            "x-ballerina-name": "h323Passcode"
          },
          "settings": {
            "$ref": "#/components/schemas/InlineResponse20063Settings"
          },
          "join_url": {
            "type": "string",
            "description": "URL to join the webinar. Only share this URL with the users who should be invited to the webinar",
            "example": "https://example.com/j/11111",
            "x-ballerina-name": "joinUrl"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone to format `start_time`",
            "example": "America/Los_Angeles"
          },
          "start_url": {
            "type": "string",
            "description": "  \n The `start_url` of a webinar is a URL using which a host or an alternative host can start the webinar. This URL should only be used by the host of the meeting and should not be shared with anyone other than the host of the webinar. \n\nThe expiration time for the `start_url` field listed in the response of the [**Create a webinar**](/docs/api-reference/zoom-api/methods#operation/webinarCreate) API is two hours for all regular users. \n\t\nFor users created using the `custCreate` option via the [**Create users**](/docs/api-reference/zoom-api/methods#operation/userCreate) API, the expiration time of the `start_url` field is 90 days.\n\t\nFor security reasons, to retrieve the latest value for the `start_url` field programmatically (after expiry), you must call the [**Get a webinar**](/docs/api-reference/zoom-api/methods#operation/webinar) API and refer to the value of the `start_url` field in the response.\n\n\n ",
            "example": "https://example.com/s/11111",
            "x-ballerina-name": "startUrl"
          },
          "created_at": {
            "type": "string",
            "description": "Create time",
            "format": "date-time",
            "example": "2022-03-26T07:18:32Z",
            "x-ballerina-name": "createdAt"
          },
          "record_file_id": {
            "type": "string",
            "description": "The previously recorded file's ID for `simulive`",
            "example": "f09340e1-cdc3-4eae-9a74-98f9777ed908",
            "x-ballerina-name": "recordFileId"
          },
          "type": {
            "type": "integer",
            "description": "Webinar types. \n `5` - Webinar.  \n `6` - Recurring webinar with no fixed time.  \n `9` - Recurring webinar with a fixed time",
            "example": 5,
            "default": 5,
            "enum": [
              5,
              6,
              9
            ],
            "x-enum-descriptions": [
              "Webinar",
              "Recurring Webinar with no fixed time",
              "Recurring Webinar with fixed time"
            ]
          },
          "uuid": {
            "type": "string",
            "description": "Unique webinar ID. Each webinar instance will generate its own webinar UUID. After a webinar ends, a new UUID is generated for the next instance of the webinar. Retrieve a list of UUIDs from past webinar instances using the [**List past webinar instances**](/docs/api-reference/zoom-api/methods#operation/pastWebinars) API. [Double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a `/` or contains `//` in it.\n\n",
            "example": "m3WqMkvuRXyYqH+eKWhk9w=="
          },
          "agenda": {
            "type": "string",
            "description": "Webinar agenda",
            "example": "My webinar"
          },
          "host_id": {
            "type": "string",
            "description": "ID of the user set as host of webinar",
            "example": "30R7kT7bTIKSNUFEuH_Qlg",
            "x-ballerina-name": "hostId"
          },
          "duration": {
            "type": "integer",
            "description": "Webinar duration",
            "example": 60
          },
          "recurrence": {
            "$ref": "#/components/schemas/RecurrenceWebinar1"
          },
          "start_time": {
            "type": "string",
            "description": "Webinar start time in GMT/UTC",
            "format": "date-time",
            "example": "2022-03-26T07:18:32Z",
            "x-ballerina-name": "startTime"
          },
          "password": {
            "maxLength": 10,
            "type": "string",
            "description": "Webinar passcode. Passcode may only contain the characters [a-z A-Z 0-9 @ - _ * !]. Maximum of 10 characters.\n\nIf **Webinar Passcode** setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request. \n\n **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. \n\n If the requirements are enabled, you can view those requirements by calling the [**Get account settings**](/docs/api/rest/reference/account/methods/#operation/accountSettings) API",
            "example": "123456"
          },
          "tracking_fields": {
            "type": "array",
            "description": "Tracking fields",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdTrackingFields"
            },
            "x-ballerina-name": "trackingFields"
          },
          "is_simulive": {
            "type": "boolean",
            "description": "Whether the webinar is `simulive`",
            "example": true,
            "x-ballerina-name": "isSimulive"
          },
          "creation_source": {
            "type": "string",
            "description": "The platform used when creating the meeting.\n* `other` - Created through another platform.\n* `open_api` - Created through Open API.\n* `web_portal` - Created through the web portal",
            "example": "open_api",
            "enum": [
              "other",
              "open_api",
              "web_portal"
            ],
            "x-ballerina-name": "creationSource"
          },
          "transition_to_live": {
            "type": "boolean",
            "description": "Whether to transition a simulive webinar to live. The host must be present at the time of transition",
            "example": false,
            "x-ballerina-name": "transitionToLive"
          },
          "encrypted_passcode": {
            "type": "string",
            "description": "Encrypted passcode for third party endpoints (H323/SIP)",
            "example": "8pEkRweVXPV3Ob2KJYgFTRlDtl1gSn.1",
            "x-ballerina-name": "encryptedPasscode"
          },
          "topic": {
            "maxLength": 200,
            "type": "string",
            "description": "Webinar topic",
            "example": "My Webinar"
          },
          "id": {
            "type": "integer",
            "description": "Webinar ID in **long** format(represented as int64 data type in JSON), also known as the webinar number",
            "format": "int64",
            "example": 97871060099
          },
          "host_email": {
            "type": "string",
            "description": "Email address of the meeting host",
            "format": "email",
            "example": "jchill@example.com",
            "x-ballerina-name": "hostEmail"
          }
        },
        "description": "Webinar object"
      },
      "InlineResponse20024Participants": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "integer",
            "description": "Participant duration, in seconds, calculated by subtracting the `leave_time` from the `join_time` for the `user_id`. If the participant leaves and rejoins the same meeting, they will be assigned a different `user_id` and Zoom displays their new duration in a separate object. Note that because of this, the duration may not reflect the total time the user was in the meeting",
            "example": 259
          },
          "user_email": {
            "type": "string",
            "description": "Email address of the user. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details",
            "example": "jchill@example.com",
            "x-ballerina-name": "userEmail"
          },
          "leave_time": {
            "type": "string",
            "description": "Participant leave time",
            "format": "date-time",
            "example": "2022-03-23T07:02:28Z",
            "x-ballerina-name": "leaveTime"
          },
          "user_id": {
            "type": "string",
            "description": "Participant ID. This is a unique ID assigned to the participant joining a meeting and is valid for that meeting only",
            "example": "27423744",
            "x-ballerina-name": "userId"
          },
          "failover": {
            "type": "boolean",
            "description": "Indicates if failover happened during the meeting",
            "example": false
          },
          "registrant_id": {
            "type": "string",
            "description": "The participant's unique registrant ID. This field only returns if you pass the `registrant_id` value for the `include_fields` query parameter. \n\nThis field does not return if the `type` query parameter is the `live` value",
            "example": "_f08HhPJS82MIVLuuFaJPg",
            "x-ballerina-name": "registrantId"
          },
          "name": {
            "type": "string",
            "description": "Participant display name",
            "example": "Jill Chill"
          },
          "id": {
            "type": "string",
            "description": "Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank",
            "example": "30R7kT7bTIKSNUFEuH_Qlg"
          },
          "internal_user": {
            "type": "boolean",
            "description": "Whether the meeting participant is an internal user",
            "example": false,
            "default": false,
            "x-ballerina-name": "internalUser"
          },
          "join_time": {
            "type": "string",
            "description": "Participant join time",
            "format": "date-time",
            "example": "2022-03-23T06:58:09Z",
            "x-ballerina-name": "joinTime"
          },
          "status": {
            "type": "string",
            "description": "The participant's status. \n* `in_meeting` - In a meeting. \n* `in_waiting_room` - In a waiting room",
            "example": "in_meeting",
            "enum": [
              "in_meeting",
              "in_waiting_room"
            ]
          }
        }
      },
      "InlineResponse20062": {
        "description": "List of webinars",
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse20062AllOf1"
          },
          {
            "$ref": "#/components/schemas/InlineResponse20062InlineResponse20062AllOf12"
          }
        ]
      },
      "InlineResponse20065": {
        "type": "object",
        "properties": {
          "expire_in": {
            "type": "integer",
            "description": "The number of seconds the join token is valid for before it expires. This value always returns `120`",
            "format": "int64",
            "example": 120,
            "enum": [
              120
            ],
            "x-ballerina-name": "expireIn"
          },
          "token": {
            "type": "string",
            "description": "The join token",
            "example": "2njt50mj"
          }
        },
        "description": "Information about the webinar's join token"
      },
      "InlineResponse20064": {
        "type": "object",
        "properties": {
          "virtual_backgrounds": {
            "type": "array",
            "description": "Information about the webinar's [virtual background](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background) files",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20064VirtualBackgrounds"
            },
            "x-ballerina-name": "virtualBackgrounds"
          },
          "wallpaper": {
            "$ref": "#/components/schemas/InlineResponse20064Wallpaper"
          },
          "name_tags": {
            "type": "array",
            "description": "Information about the webinar's name tag",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20064NameTags"
            },
            "x-ballerina-name": "nameTags"
          }
        },
        "description": "Information about the webinar's sessions branding"
      },
      "WebinarSurveyObjectCustomSurvey": {
        "type": "object",
        "properties": {
          "feedback": {
            "maxLength": 320,
            "type": "string",
            "description": "The survey's feedback, up to 320 characters. \n\n This value defaults to `Thank you so much for taking the time to complete the survey, your feedback really makes a difference.`",
            "example": "Thank you so much for taking the time to complete the survey. Your feedback really makes a difference."
          },
          "numbered_questions": {
            "type": "boolean",
            "description": "Whether to display the number in the question name. \n\n This value defaults to `true`",
            "example": false,
            "default": false,
            "x-ballerina-name": "numberedQuestions"
          },
          "questions": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "description": "Information about the webinar survey's questions",
            "items": {
              "$ref": "#/components/schemas/WebinarSurveyObjectCustomSurveyQuestions"
            }
          },
          "anonymous": {
            "type": "boolean",
            "description": "Allow participants to anonymously answer survey questions. \n* `true` - Anonymous survey enabled. \n* `false` - Participants cannot answer survey questions anonymously. \n\n This value defaults to `true`",
            "example": false,
            "default": false
          },
          "title": {
            "maxLength": 64,
            "type": "string",
            "description": "The survey's title, up to 64 characters",
            "example": "Learn something new"
          },
          "show_question_type": {
            "type": "boolean",
            "description": "Whether to display the question type in the question name. \n\n This value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "showQuestionType"
          }
        },
        "description": "Information about the customized webinar survey"
      },
      "InlineResponse20067": {
        "type": "object",
        "properties": {
          "expire_in": {
            "type": "integer",
            "description": "The number of seconds the join token is valid for before it expires. This value always returns `120`",
            "format": "int64",
            "example": 120,
            "enum": [
              120
            ],
            "x-ballerina-name": "expireIn"
          },
          "token": {
            "type": "string",
            "description": "The join token",
            "example": "2njt50mj"
          }
        },
        "description": "Information about the webinar's local recorder join token"
      },
      "WebinarIdPollsBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeetingAndWebinarPollingObject1"
          }
        ]
      },
      "InlineResponse20066": {
        "type": "object",
        "properties": {
          "expire_in": {
            "type": "integer",
            "description": "The number of seconds the archive token is valid for before it expires. This value always returns `120`",
            "format": "int64",
            "example": 120,
            "enum": [
              120
            ],
            "x-ballerina-name": "expireIn"
          },
          "token": {
            "type": "string",
            "description": "The archive token",
            "example": "2njt50mj"
          }
        },
        "description": "Information about the webinar's local archive token"
      },
      "InlineResponse20069": {
        "description": "Webinar panelist",
        "allOf": [
          {
            "$ref": "#/components/schemas/PanelistList"
          }
        ]
      },
      "InlineResponse20068": {
        "type": "object",
        "properties": {
          "page_url": {
            "type": "string",
            "description": "Live streaming page URL. This is the URL using which anyone can view the live stream of the webinar",
            "example": "https://example.com/livestream/123",
            "x-ballerina-name": "pageUrl"
          },
          "resolution": {
            "type": "string",
            "description": "The number of pixels in each dimension that the video camera can display",
            "example": "720p"
          },
          "stream_key": {
            "type": "string",
            "description": "Stream key",
            "example": "contact-it@example.com",
            "x-ballerina-name": "streamKey"
          },
          "stream_url": {
            "type": "string",
            "description": "Stream URL",
            "example": "https://example.com/livestream",
            "x-ballerina-name": "streamUrl"
          }
        }
      },
      "MeetingsmeetingIdbatchRegistrantsRegistrants": {
        "required": [
          "email",
          "first_name"
        ],
        "type": "object",
        "properties": {
          "last_name": {
            "type": "string",
            "description": "Last name of the registrant",
            "example": "Chill",
            "x-ballerina-name": "lastName"
          },
          "first_name": {
            "type": "string",
            "description": "First name of the registrant",
            "example": "Jill",
            "x-ballerina-name": "firstName"
          },
          "email": {
            "type": "string",
            "description": "Email address of the registrant",
            "format": "email",
            "example": "jchill@example.com"
          }
        }
      },
      "WebinarswebinarIdregistrantsstatusRegistrants": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The registrant's ID",
            "example": "9tboDiHUQAeOnbmudzWa5g"
          },
          "email": {
            "type": "string",
            "description": "The registrant's email address",
            "format": "email",
            "example": "jchill@example.com"
          }
        }
      },
      "LiveMeetingsmeetingIdeventsParamsContacts": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The user's ID",
            "example": "30R7kT7bTIKSNUFEuH_Qlg"
          },
          "email": {
            "type": "string",
            "description": "The user's email address. Use this value if you do not have the user's ID. \n\nIf you pass the `id` value, the API ignores this query parameter",
            "example": "jchill@example.com"
          }
        }
      },
      "MeetingRegistrantMeetingRegistrantMeetingRegistrantAllOf123": {
        "type": "object",
        "properties": {
          "join_url": {
            "type": "string",
            "description": "The URL with which the approved registrant can join the meeting",
            "format": "url",
            "example": "https://example.com/j/11111",
            "x-ballerina-name": "joinUrl"
          },
          "create_time": {
            "type": "string",
            "description": "The registrant's registration date and time",
            "format": "date-time",
            "example": "2022-03-22T05:58:44Z",
            "x-ballerina-name": "createTime"
          },
          "participant_pin_code": {
            "type": "integer",
            "description": "The participant PIN code is used to authenticate audio participants before they join the meeting",
            "format": "int64",
            "example": 380303,
            "x-ballerina-name": "participantPinCode"
          },
          "status": {
            "type": "string",
            "description": "The registrant's registration status.\n* `approved` - The registrant is approved to join the meeting. \n* `pending` - The registrant's registration is pending.\n* `denied` - The registrant was declined to join the meeting",
            "example": "approved",
            "enum": [
              "approved",
              "pending",
              "denied"
            ]
          }
        }
      },
      "UserIdOneOf1": {
        "type": "string",
        "example": "6dfgdfgdg444447b0egga"
      },
      "LivestreamStatusBody1": {
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/WebinarswebinarIdlivestreamstatusSettings"
          },
          "action": {
            "type": "string",
            "description": "Update the live stream's status. \n\n* `start` - Start a webinar live stream.\n\n* `stop`- Stop an ongoing webinar live stream",
            "example": "start",
            "enum": [
              "start",
              "stop"
            ],
            "x-enum-descriptions": [
              "Start a webinar live stream.",
              "Stop a webinar live stream."
            ]
          }
        },
        "description": "Webinar live stream status"
      },
      "RegistrantsStatusBody": {
        "required": [
          "action"
        ],
        "type": "object",
        "properties": {
          "registrants": {
            "maximum": 30,
            "type": "array",
            "description": "List of registrants",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdrecordingsregistrantsstatusRegistrants"
            }
          },
          "action": {
            "type": "string",
            "example": "approve",
            "enum": [
              "approve",
              "deny"
            ],
            "x-enum-descriptions": [
              "Approve registrant",
              "Deny registrant"
            ]
          }
        },
        "description": "Registrant status"
      },
      "UsersuserIdwebinarTemplatesAllOf1": {
        "type": "object",
        "properties": {
          "save_recurrence": {
            "type": "boolean",
            "description": "If the field is set to true, the recurrence webinar template will be saved as the scheduled webinar",
            "example": false,
            "default": false,
            "x-ballerina-name": "saveRecurrence"
          },
          "webinar_id": {
            "type": "integer",
            "description": "The webinar ID in long (int64) format",
            "format": "int64",
            "example": 96172769962,
            "x-ballerina-name": "webinarId"
          },
          "name": {
            "type": "string",
            "description": "The webinar template's name",
            "example": "Weekly Meeting Template"
          },
          "overwrite": {
            "type": "boolean",
            "description": "Overwrite an existing webinar template if the template is created from same existing webinar",
            "example": false,
            "default": false
          }
        }
      },
      "PanelistsPanelistsAllOf12": {
        "type": "object",
        "properties": {
          "name_tag_name": {
            "type": "string",
            "description": "The panelist's name to display in the name tag",
            "example": "xHhPyb8ERMCmiC5njPjFdQ",
            "x-ballerina-name": "nameTagName"
          },
          "name_tag_pronouns": {
            "type": "string",
            "description": "The pronouns to display in the name tag",
            "example": "pronouns",
            "x-ballerina-name": "nameTagPronouns"
          },
          "name_tag_description": {
            "type": "string",
            "description": "The description for the name tag, such the person's title",
            "example": "description",
            "x-ballerina-name": "nameTagDescription"
          },
          "virtual_background_id": {
            "type": "string",
            "description": "The virtual background ID to bind",
            "example": "xHhPyb8ERMCmiC5njPjFdQ",
            "x-ballerina-name": "virtualBackgroundId"
          },
          "name_tag_id": {
            "type": "string",
            "description": "The name tag ID to bind",
            "example": "xHhPyb8ERMCmiC5njPjFdQ",
            "x-ballerina-name": "nameTagId"
          }
        }
      },
      "RecordingSettings1": {
        "title": "Recording settings",
        "type": "object",
        "properties": {
          "authentication_option": {
            "type": "string",
            "description": "The authentication options",
            "example": "auth_option",
            "x-ballerina-name": "authenticationOption"
          },
          "password": {
            "maxLength": 10,
            "minLength": 8,
            "type": "string",
            "description": "This field enables passcode protection for the recording by setting a passcode. \n\nThe passcode must have a minimum of **eight** characters with a mix of numbers, letters and special characters.  \n   \n \n**Note:** If the account owner or the admin has set minimum passcode strength requirements for recordings through Account Settings, the passcode value provided here must meet those requirements.   \n   \n If the requirements are enabled, you can view those requirements by calling either the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API or the [**Get account settings**](/api-reference/zoom-api/ma#operation/accountSettings) API",
            "example": "975238724"
          },
          "recording_authentication": {
            "type": "boolean",
            "description": "This field indicates that only authenticated users can view",
            "example": true,
            "x-ballerina-name": "recordingAuthentication"
          },
          "send_email_to_host": {
            "type": "boolean",
            "description": "This field sends an email to host when someone registers to view the recording. This setting applies for On-demand recordings only",
            "example": false,
            "x-ballerina-name": "sendEmailToHost"
          },
          "approval_type": {
            "type": "integer",
            "description": "The approval type for the registration.  \n \n`0`- Automatically approve the registration when a user registers.  \n \n`1` - Manually approve or deny the registration of a user.  \n \n`2` - No registration required to view the recording",
            "example": 0,
            "enum": [
              0,
              1,
              2
            ],
            "x-enum-descriptions": [
              "Registrants can watch the recording directly after registration",
              "Registrants will receive emails then watch the recording after you approve the registration",
              "Disabled"
            ],
            "x-ballerina-name": "approvalType"
          },
          "show_social_share_buttons": {
            "type": "boolean",
            "description": "This field shows social share buttons on registration page. This setting applies for On-demand recordings only",
            "example": true,
            "x-ballerina-name": "showSocialShareButtons"
          },
          "authentication_domains": {
            "type": "string",
            "description": "The authentication domains",
            "example": "test.com",
            "x-ballerina-name": "authenticationDomains"
          },
          "auto_delete": {
            "type": "boolean",
            "description": "Update the auto-delete status of a meeting's [cloud recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).  \n\nPrerequisite: To update the auto-delete status, the host of the recording must have the recording setting \"Delete cloud recordings after a specified number of days\" enabled",
            "example": false,
            "x-ballerina-name": "autoDelete"
          },
          "topic": {
            "type": "string",
            "description": "The name of the recording",
            "example": "My Personal Meeting Room"
          },
          "viewer_download": {
            "type": "boolean",
            "description": "This field determines whether a viewer can download the recording file or not",
            "example": true,
            "x-ballerina-name": "viewerDownload"
          },
          "share_recording": {
            "type": "string",
            "description": "This field determines how the meeting recording is shared",
            "example": "publicly",
            "enum": [
              "publicly",
              "internally",
              "none"
            ],
            "x-enum-descriptions": [
              "Publicly",
              "Internally(account members only)",
              "None"
            ],
            "x-ballerina-name": "shareRecording"
          },
          "on_demand": {
            "type": "boolean",
            "description": "This field determines whether the registration is required to view the recording",
            "example": false,
            "x-ballerina-name": "onDemand"
          }
        }
      },
      "InlineResponse20070": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse20070AllOf1"
          },
          {
            "$ref": "#/components/schemas/MeetingAndWebinarPollingObject4"
          }
        ]
      },
      "InlineResponse20072": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "The generated webinar token",
            "example": "https://example.com/closedcaption?id=200610693&ns=GZHkEA==&expire=86400&spparams=id%2Cns%2Cexpire&signature=nYtXJqRKCW"
          }
        },
        "description": "Information about the webinar token"
      },
      "MeetingsmeetingIdregistrantsquestionsCustomQuestions": {
        "type": "object",
        "properties": {
          "answers": {
            "type": "array",
            "description": "Answer choices for the question. Can not be used for `short` question type as this type of question requires registrants to type out the answer",
            "items": {
              "type": "string",
              "example": "Good"
            }
          },
          "title": {
            "type": "string",
            "description": "Title of the custom question",
            "example": "How are you?"
          },
          "type": {
            "type": "string",
            "description": "The type of question being asked",
            "example": "short",
            "enum": [
              "short",
              "single"
            ],
            "x-enum-descriptions": [
              "Short Answer",
              "Single Answer"
            ]
          },
          "required": {
            "type": "boolean",
            "description": "Indicates whether or not the custom question is required to be answered by participants or not",
            "example": true
          }
        }
      },
      "InlineResponse20071": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WebinarRegistrantQuestions1"
          }
        ]
      },
      "InlineResponse20063Occurrences": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "integer",
            "description": "Duration",
            "example": 60
          },
          "start_time": {
            "type": "string",
            "description": "Start time",
            "format": "date-time",
            "example": "2022-03-25T07:46:00Z",
            "x-ballerina-name": "startTime"
          },
          "occurrence_id": {
            "type": "string",
            "description": "Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences",
            "example": "1648194360000",
            "x-ballerina-name": "occurrenceId"
          },
          "status": {
            "type": "string",
            "description": "Occurrence status: \n `available` - Available occurrence.  \n `deleted` -  Deleted occurrence",
            "example": "available",
            "enum": [
              "available",
              "deleted"
            ]
          }
        },
        "description": "Occurrence object. This object is only returned for recurring webinars"
      },
      "InlineResponse20073": {
        "type": "object",
        "properties": {
          "tracking_sources": {
            "type": "array",
            "description": "Tracking Sources object",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20073TrackingSources"
            },
            "x-ballerina-name": "trackingSources"
          },
          "total_records": {
            "type": "integer",
            "description": "The total number of registration records for this Webinar",
            "example": 1,
            "x-ballerina-name": "totalRecords"
          }
        }
      },
      "InlineResponse20033Invoices": {
        "type": "object",
        "properties": {
          "end_date": {
            "type": "string",
            "description": "End date of the invoice period",
            "format": "date",
            "example": "2022-03-25",
            "x-ballerina-name": "endDate"
          },
          "tax_amount": {
            "type": "string",
            "description": "Tax amount in the invoice",
            "example": "34",
            "x-ballerina-name": "taxAmount"
          },
          "quantity": {
            "type": "integer",
            "description": "Number of licenses bought",
            "example": 45
          },
          "total_amount": {
            "type": "string",
            "description": "Total billed amount in the invoice",
            "example": "45",
            "x-ballerina-name": "totalAmount"
          },
          "invoice_charge_name": {
            "type": "string",
            "description": "Name of the invoice",
            "example": "Audio Conferencing Options",
            "x-ballerina-name": "invoiceChargeName"
          },
          "invoice_number": {
            "type": "string",
            "description": "Invoice number ",
            "example": "3",
            "x-ballerina-name": "invoiceNumber"
          },
          "start_date": {
            "type": "string",
            "description": "Start date of the invoice period",
            "format": "date",
            "example": "2022-03-25",
            "x-ballerina-name": "startDate"
          }
        }
      },
      "InlineResponse2007Devices": {
        "type": "object",
        "properties": {
          "room_id": {
            "type": "string",
            "description": "id of the Zoom Room",
            "example": "72afdc13-a289-40c3-b358-50c8b8de",
            "x-ballerina-name": "roomId"
          },
          "connected_to_zdm": {
            "type": "boolean",
            "description": "Whether the device connected to ZDM (Zoom Device Management)",
            "example": true,
            "x-ballerina-name": "connectedToZdm"
          },
          "device_status": {
            "type": "integer",
            "description": "Filter devices by status.   \n  Device Status:  \n `0` - offline.  \n `1` - online.  \n `-1` - unlink",
            "example": 0,
            "enum": [
              -1,
              0,
              1
            ],
            "x-ballerina-name": "deviceStatus"
          },
          "enrolled_in_zdm": {
            "type": "boolean",
            "description": "Whether the device enrolled in ZDM (Zoom Device Management)",
            "example": true,
            "x-ballerina-name": "enrolledInZdm"
          },
          "user_email": {
            "type": "string",
            "description": "The owner of the phone device",
            "example": "test-user@ya.us",
            "x-ballerina-name": "userEmail"
          },
          "device_id": {
            "type": "string",
            "description": "Unique identifier of the device",
            "example": "F1C6E9DF-429E-4FA1-85DA-AC95464F3D18",
            "x-ballerina-name": "deviceId"
          },
          "app_version": {
            "type": "string",
            "description": "App version of Zoom Rooms",
            "example": "5.13.0.5762",
            "x-ballerina-name": "appVersion"
          },
          "serial_number": {
            "type": "string",
            "description": "The device's serial number",
            "example": "6NRN2A0",
            "x-ballerina-name": "serialNumber"
          },
          "device_type": {
            "type": "integer",
            "description": "Filter devices by device type.  \n  Device Type:  \n `-1` - All Zoom Room device(0,1,2,3,4,6).  \n `0` - Zoom Rooms Computer.  \n `1` - Zoom Rooms Controller.  \n `2` - Zoom Rooms Scheduling Display.  \n `3` - Zoom Rooms Control System.  \n `4` -  Zoom Rooms Whiteboard.  \n `5` - Zoom Phone Appliance.  \n `6` - Zoom Rooms Computer (with Controller)",
            "example": 0,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "x-ballerina-name": "deviceType"
          },
          "skd_version": {
            "type": "string",
            "description": "The version of the SDK",
            "example": "2.0.11",
            "x-ballerina-name": "skdVersion"
          },
          "last_online": {
            "type": "string",
            "description": "The time when device was online last time",
            "example": "2022-10-27T10:23:15Z",
            "x-ballerina-name": "lastOnline"
          },
          "platform_os": {
            "type": "string",
            "description": "The device's platform",
            "example": "Epos expandvision5 1.2.22315.04",
            "x-ballerina-name": "platformOs"
          },
          "room_name": {
            "type": "string",
            "description": "Name of the Zoom Room",
            "example": "My Personal Meeting Room",
            "x-ballerina-name": "roomName"
          },
          "device_name": {
            "type": "string",
            "description": "The name of the device",
            "example": "My device",
            "x-ballerina-name": "deviceName"
          },
          "mac_address": {
            "type": "string",
            "description": "The mac address of the device",
            "example": "01-23-45-67-89-AB",
            "x-ballerina-name": "macAddress"
          },
          "vendor": {
            "type": "string",
            "description": "The device's manufacturer",
            "example": "Poly"
          },
          "model": {
            "type": "string",
            "description": "The device's model",
            "example": "StudioX30"
          },
          "tag": {
            "type": "string",
            "description": "The name of the tag",
            "example": "personal rooms"
          }
        },
        "description": "The information about the device"
      },
      "InlineResponse20013SettingsQuestionAndAnswer": {
        "type": "object",
        "properties": {
          "question_visibility": {
            "type": "string",
            "description": "Indicate whether you want attendees to be able to view only answered questions, or view all questions.\n\n* `answered` - Attendees can only view answered questions.\n\n* `all` - Attendees can view all questions submitted in the Q&amp;A",
            "example": "all",
            "enum": [
              "answered",
              "all"
            ],
            "x-ballerina-name": "questionVisibility"
          },
          "allow_anonymous_questions": {
            "type": "boolean",
            "description": "* `true` - Allow participants to send questions without providing their name to the host, co-host, and panelists.\n\n* `false` - Don't allow anonymous questions. Not supported for simulive meetings",
            "example": true,
            "x-ballerina-name": "allowAnonymousQuestions"
          },
          "enable": {
            "type": "boolean",
            "description": "* `true` - Enable [Q&amp;A](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065237) for the meeting.\n\n* `false` - Disable Q&amp;A for the meeting",
            "example": true
          },
          "allow_submit_questions": {
            "type": "boolean",
            "description": "* `true` - Allow participants to submit questions.\n\n* `false` - Don't allow participants to submit questions",
            "example": true,
            "x-ballerina-name": "allowSubmitQuestions"
          },
          "attendees_can_comment": {
            "type": "boolean",
            "description": "* `true` - Attendees can answer questions or leave a comment in the question thread.\n\n* `false` - Attendees can't answer questions or leave a comment in the question thread",
            "example": true,
            "x-ballerina-name": "attendeesCanComment"
          },
          "attendees_can_upvote": {
            "type": "boolean",
            "description": "* `true` - Attendees can select the thumbs up button to bring popular questions to the top of the Q&amp;A window.\n\n* `false` - Attendees can't select the thumbs up button on questions",
            "example": true,
            "x-ballerina-name": "attendeesCanUpvote"
          }
        },
        "description": "[Q&amp;A](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065237) for meeting"
      },
      "InlineResponse20059Questions": {
        "type": "object",
        "properties": {
          "question_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20059QuestionDetails"
            },
            "x-ballerina-name": "questionDetails"
          },
          "name": {
            "type": "string",
            "description": "Name of the user who submitted answers to the poll. If the `anonymous` option is enabled for a poll, the participant's polling information will be kept anonymous and the value of `name` field will be `Anonymous Attendee`",
            "example": "Jill Chill"
          },
          "email": {
            "type": "string",
            "description": "Email address of the user who submitted answers to the poll. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details",
            "example": "jchill@example.com"
          }
        }
      },
      "InlineResponse20013Settings": {
        "type": "object",
        "properties": {
          "breakout_room": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InlineResponse20013SettingsBreakoutRoom"
              }
            ],
            "x-ballerina-name": "breakoutRoom"
          },
          "allow_host_control_participant_mute_state": {
            "type": "boolean",
            "description": "Whether to allow the host and co-hosts to fully control the mute state of participants",
            "example": false,
            "default": false,
            "x-ballerina-name": "allowHostControlParticipantMuteState"
          },
          "summary_template_id": {
            "type": "string",
            "description": "The summary template ID used to generate a meeting summary based on a predefined template. To get available summary templates, use the **Get user summary templates** API. To enable this feature for your account, please [contact Zoom Support](https://support.zoom.com/hc/en)",
            "example": "1e1356ad",
            "x-ballerina-name": "summaryTemplateId"
          },
          "custom_keys": {
            "maxItems": 10,
            "type": "array",
            "description": "Custom keys and values assigned to the meeting",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsCustomKeys"
            },
            "x-ballerina-name": "customKeys"
          },
          "global_dial_in_numbers": {
            "type": "array",
            "description": "Global Dial-in Countries and Regions",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20013SettingsGlobalDialInNumbers"
            },
            "x-ballerina-name": "globalDialInNumbers"
          },
          "show_share_button": {
            "type": "boolean",
            "description": "Show social share buttons on the meeting registration page.\nThis setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting)",
            "example": true,
            "x-ballerina-name": "showShareButton"
          },
          "registrants_confirmation_email": {
            "type": "boolean",
            "description": "Whether to send registrants an email confirmation.\n* `true` - Send a confirmation email.\n* `false` - Do not send a confirmation email",
            "example": true,
            "x-ballerina-name": "registrantsConfirmationEmail"
          },
          "approved_or_denied_countries_or_regions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InlineResponse20013SettingsApprovedOrDeniedCountriesOrRegions"
              }
            ],
            "x-ballerina-name": "approvedOrDeniedCountriesOrRegions"
          },
          "continuous_meeting_chat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InlineResponse20013SettingsContinuousMeetingChat"
              }
            ],
            "x-ballerina-name": "continuousMeetingChat"
          },
          "allow_multiple_devices": {
            "type": "boolean",
            "description": "Allow attendees to join the meeting from multiple devices. This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting)",
            "example": true,
            "x-ballerina-name": "allowMultipleDevices"
          },
          "meeting_authentication": {
            "type": "boolean",
            "description": "`true` - Only authenticated users can join meetings",
            "example": true,
            "x-ballerina-name": "meetingAuthentication"
          },
          "alternative_hosts": {
            "type": "string",
            "description": "A semicolon-separated list of the meeting's alternative hosts' email addresses or IDs",
            "example": "jchill@example.com;thill@example.com",
            "x-ballerina-name": "alternativeHosts"
          },
          "alternative_host_update_polls": {
            "type": "boolean",
            "description": "Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher",
            "example": true,
            "x-ballerina-name": "alternativeHostUpdatePolls"
          },
          "device_testing": {
            "type": "boolean",
            "description": "Enable the device testing",
            "example": false,
            "default": false,
            "x-ballerina-name": "deviceTesting"
          },
          "participant_video": {
            "type": "boolean",
            "description": "Start video when participants join the meeting",
            "example": false,
            "x-ballerina-name": "participantVideo"
          },
          "calendar_type": {
            "type": "integer",
            "description": "Indicates the type of calendar integration used to schedule the meeting. \n* `1` - [Zoom Outlook add-in](https://support.zoom.us/hc/en-us/articles/360031592971-Getting-started-with-Outlook-plugin-and-add-in) \n* `2` - [Zoom for Google Workspace add-on](https://support.zoom.us/hc/en-us/articles/360020187492-Using-the-Zoom-for-Google-Workspace-add-on)\n\nWorks with the `private_meeting` field to determine whether to share details of meetings or not",
            "example": 1,
            "enum": [
              1,
              2
            ],
            "x-enum-descriptions": [
              "Outlook",
              "Google Calendar"
            ],
            "x-ballerina-name": "calendarType"
          },
          "in_meeting": {
            "type": "boolean",
            "description": "Host meeting in India",
            "example": false,
            "deprecated": true,
            "default": false,
            "x-ballerina-name": "inMeeting"
          },
          "mute_upon_entry": {
            "type": "boolean",
            "description": "Mute participants upon entry",
            "example": false,
            "default": false,
            "x-ballerina-name": "muteUponEntry"
          },
          "global_dial_in_countries": {
            "type": "array",
            "description": "List of global dial-in countries",
            "items": {
              "type": "string",
              "example": "US"
            },
            "x-ballerina-name": "globalDialInCountries"
          },
          "question_and_answer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InlineResponse20013SettingsQuestionAndAnswer"
              }
            ],
            "x-ballerina-name": "questionAndAnswer"
          },
          "join_before_host": {
            "type": "boolean",
            "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings",
            "example": true,
            "default": false,
            "x-ballerina-name": "joinBeforeHost"
          },
          "host_save_video_order": {
            "type": "boolean",
            "description": "Whether the **Allow host to save video order** feature is enabled",
            "example": true,
            "x-ballerina-name": "hostSaveVideoOrder"
          },
          "watermark": {
            "type": "boolean",
            "description": "Add watermark when viewing a shared screen",
            "example": false,
            "default": false
          },
          "approval_type": {
            "type": "integer",
            "description": "Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.**   \n   \n \n\n`0` - Automatically approve.  \n `1` - Manually approve.  \n `2` - No registration required",
            "example": 0,
            "default": 2,
            "enum": [
              0,
              1,
              2
            ],
            "x-enum-descriptions": [
              "Automatically Approve",
              "Manually Approve",
              "No Registration Required"
            ],
            "x-ballerina-name": "approvalType"
          },
          "close_registration": {
            "type": "boolean",
            "description": "Close registration after event date",
            "example": false,
            "default": false,
            "x-ballerina-name": "closeRegistration"
          },
          "push_change_to_calendar": {
            "type": "boolean",
            "description": "Whether to push meeting changes to the calendar. \n\n To enable this feature, configure the **Configure Calendar and Contacts Service** in the user's profile page of the Zoom web portal and enable the **Automatically sync Zoom calendar events information bi-directionally between Zoom and integrated calendars.** setting in the **Settings** page of the Zoom web portal.\n* `true` - Push meeting changes to the calendar.\n* `false` - Do not push meeting changes to the calendar",
            "example": false,
            "default": false,
            "x-ballerina-name": "pushChangeToCalendar"
          },
          "internal_meeting": {
            "type": "boolean",
            "description": "Whether to set the meeting as an internal meeting",
            "example": false,
            "default": false,
            "x-ballerina-name": "internalMeeting"
          },
          "authentication_exception": {
            "type": "array",
            "description": "The participants added here will receive unique meeting invite links and bypass authentication",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsAuthenticationException"
            },
            "x-ballerina-name": "authenticationException"
          },
          "jbh_time": {
            "type": "integer",
            "description": "If the value of `join_before_host` field is set to true, this field can be used to indicate time limits when a participant may join a meeting before a host.\n\n*  `0` - Allow participant to join anytime.\n*  `5` - Allow participant to join 5 minutes before meeting start time.\n * `10` - Allow participant to join 10 minutes before meeting start time.\n * `15` - Allow participant to join 15 minutes before meeting start time",
            "example": 0,
            "enum": [
              0,
              5,
              10,
              15
            ],
            "x-ballerina-name": "jbhTime"
          },
          "audio_conference_info": {
            "maxLength": 2048,
            "type": "string",
            "description": "Third party audio conference information",
            "example": "test",
            "x-ballerina-name": "audioConferenceInfo"
          },
          "authentication_domains": {
            "type": "string",
            "description": "If user has configured [Sign Into Zoom with Specified Domains](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated",
            "example": "example.com",
            "x-ballerina-name": "authenticationDomains"
          },
          "who_will_receive_summary": {
            "type": "integer",
            "description": "Defines who will receive a summary after this meeting. This field is applicable only when `auto_start_meeting_summary` is set to `true`.\r\n* `1` - Only meeting host.\r\n* `2` - Only meeting host, co-hosts, and alternative hosts.\r\n* `3` - Only meeting host and meeting invitees in our organization.\r\n* `4` - All meeting invitees including those outside of our organization",
            "example": 1,
            "enum": [
              1,
              2,
              3,
              4
            ],
            "x-ballerina-name": "whoWillReceiveSummary"
          },
          "meeting_invitees": {
            "type": "array",
            "description": "A list of the meeting's invitees",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20013SettingsMeetingInvitees"
            },
            "x-ballerina-name": "meetingInvitees"
          },
          "encryption_type": {
            "type": "string",
            "description": "Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. \n \n`enhanced_encryption` - Enhanced encryption. Encryption is stored in the cloud if you enable this option.   \n \n\n`e2ee` - [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions features",
            "example": "enhanced_encryption",
            "enum": [
              "enhanced_encryption",
              "e2ee"
            ],
            "x-ballerina-name": "encryptionType"
          },
          "authentication_option": {
            "type": "string",
            "description": "Meeting authentication option ID",
            "example": "signIn_D8cJuqWVQ623CI4Q8yQK0Q",
            "x-ballerina-name": "authenticationOption"
          },
          "sign_language_interpretation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InlineResponse20013SettingsSignLanguageInterpretation"
              }
            ],
            "x-ballerina-name": "signLanguageInterpretation"
          },
          "disable_participant_video": {
            "type": "boolean",
            "description": "Whether to disable the participant video during meeting. To enable this feature for your account, please [contact Zoom Support](https://support.zoom.us/hc/en-us)",
            "example": false,
            "default": false,
            "x-ballerina-name": "disableParticipantVideo"
          },
          "focus_mode": {
            "type": "boolean",
            "description": "Whether the [**Focus Mode** feature](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode) is enabled when the meeting starts",
            "example": true,
            "x-ballerina-name": "focusMode"
          },
          "registration_type": {
            "type": "integer",
            "description": "Registration type. Used for recurring meeting with fixed time only. \n `1` Attendees register once and can attend any of the occurrences.  \n `2` Attendees need to register for each occurrence to attend.  \n `3` Attendees register once and can choose one or more occurrences to attend",
            "example": 1,
            "default": 1,
            "enum": [
              1,
              2,
              3
            ],
            "x-enum-descriptions": [
              "Attendees register once and can attend any of the occurrences",
              "Attendees need to register for each occurrence to attend",
              "Attendees register once and can choose one or more occurrences to attend"
            ],
            "x-ballerina-name": "registrationType"
          },
          "contact_email": {
            "type": "string",
            "description": "Contact email for registration",
            "example": "jchill@example.com",
            "x-ballerina-name": "contactEmail"
          },
          "waiting_room": {
            "type": "boolean",
            "description": "Enable waiting room",
            "example": false,
            "default": false,
            "x-ballerina-name": "waitingRoom"
          },
          "audio": {
            "type": "string",
            "description": "Determine how participants can join the audio portion of the meeting.  \n `both` - Both Telephony and VoIP.  \n `telephony` - Telephony only.  \n `voip` - VoIP only.  \n `thirdParty` - Third party audio conference",
            "example": "telephony",
            "default": "both",
            "enum": [
              "both",
              "telephony",
              "voip",
              "thirdParty"
            ],
            "x-enum-descriptions": [
              "Both Telephony and VoIP",
              "Telephony only",
              "VoIP only",
              "Third party audio conference"
            ]
          },
          "authentication_name": {
            "type": "string",
            "description": "Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)",
            "example": "Sign in to Zoom",
            "x-ballerina-name": "authenticationName"
          },
          "enforce_login_domains": {
            "type": "string",
            "description": "Only signed in users with specified domains can join meetings.\n\n**This field is deprecated and will not be supported in the future.**    \n   \n As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting",
            "example": "example.com",
            "deprecated": true,
            "x-ballerina-name": "enforceLoginDomains"
          },
          "who_can_ask_questions": {
            "type": "integer",
            "description": "Defines who can ask questions about this meeting's transcript. This field is applicable only when `auto_start_ai_companion_questions` is set to `true`.\r\n* `1` - All participants and invitees.\r\n* `2` - All participants only from when they join.\r\n* `3` - Only meeting host.\r\n* `4` - Participants and invitees in our organization.\r\n* `5` - Participants in our organization only from when they join",
            "example": 1,
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "x-ballerina-name": "whoCanAskQuestions"
          },
          "contact_name": {
            "type": "string",
            "description": "Contact name for registration",
            "example": "Jill Chill",
            "x-ballerina-name": "contactName"
          },
          "cn_meeting": {
            "type": "boolean",
            "description": "Host meeting in China",
            "example": false,
            "deprecated": true,
            "default": false,
            "x-ballerina-name": "cnMeeting"
          },
          "registrants_email_notification": {
            "type": "boolean",
            "description": "Whether to send registrants email notifications about their registration approval, cancellation, or rejection.\n\n* `true` - Send an email notification.\n* `false` - Do not send an email notification.\n\n Set this value to `true` to also use the `registrants_confirmation_email` parameter",
            "example": true,
            "x-ballerina-name": "registrantsEmailNotification"
          },
          "alternative_hosts_email_notification": {
            "type": "boolean",
            "description": "Flag to determine whether to send email notifications to alternative hosts, default value is true",
            "example": true,
            "default": true,
            "x-ballerina-name": "alternativeHostsEmailNotification"
          },
          "use_pmi": {
            "type": "boolean",
            "description": "Use a [personal meeting ID (PMI)](/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi). Only used for scheduled meetings and recurring meetings with no fixed time",
            "example": false,
            "default": false,
            "x-ballerina-name": "usePmi"
          },
          "resources": {
            "type": "array",
            "description": "The meeting's resources",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsResources"
            }
          },
          "auto_recording": {
            "type": "string",
            "description": "Automatic recording.  \n `local` - Record on local.  \n `cloud` -  Record on cloud.  \n `none` - Disabled",
            "example": "cloud",
            "default": "none",
            "enum": [
              "local",
              "cloud",
              "none"
            ],
            "x-enum-descriptions": [
              "Record to local device",
              "Record to cloud",
              "No Recording"
            ],
            "x-ballerina-name": "autoRecording"
          },
          "host_video": {
            "type": "boolean",
            "description": "Start video when the host joins the meeting",
            "example": true,
            "x-ballerina-name": "hostVideo"
          },
          "language_interpretation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MeetingsmeetingIdSettingsLanguageInterpretation"
              }
            ],
            "x-ballerina-name": "languageInterpretation"
          },
          "enforce_login": {
            "type": "boolean",
            "description": "Only signed in users can join this meeting.\n\n**This field is deprecated and will not be supported in the future.**    \n   \n As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting",
            "example": true,
            "deprecated": true,
            "x-ballerina-name": "enforceLogin"
          },
          "auto_start_meeting_summary": {
            "type": "boolean",
            "description": "Whether to automatically start a meeting summary",
            "example": false,
            "default": false,
            "x-ballerina-name": "autoStartMeetingSummary"
          },
          "auto_start_ai_companion_questions": {
            "type": "boolean",
            "description": "Whether to automatically start AI Companion questions",
            "example": false,
            "default": false,
            "x-ballerina-name": "autoStartAiCompanionQuestions"
          },
          "participant_focused_meeting": {
            "type": "boolean",
            "description": "Whether to set the meeting as a participant focused meeting",
            "example": false,
            "default": false,
            "x-ballerina-name": "participantFocusedMeeting"
          },
          "private_meeting": {
            "type": "boolean",
            "description": "Whether the meeting is set as private",
            "example": false,
            "x-ballerina-name": "privateMeeting"
          },
          "email_in_attendee_report": {
            "type": "boolean",
            "description": "Whether to include authenticated guest's email addresses in meetings' attendee reports",
            "example": true,
            "x-ballerina-name": "emailInAttendeeReport"
          },
          "email_notification": {
            "type": "boolean",
            "description": "Whether to send email notifications to [alternative hosts](https://support.zoom.us/hc/en-us/articles/208220166) and [users with scheduling privileges](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-privilege). This value defaults to `true`",
            "example": true,
            "default": true,
            "x-ballerina-name": "emailNotification"
          }
        },
        "description": "Meeting settings"
      },
      "InlineResponse20045UpcomingEvents": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "string",
            "description": "The event's start time",
            "example": "2022-03-15T07:40:46Z",
            "x-ballerina-name": "startTime"
          },
          "topic": {
            "type": "string",
            "description": "The event's topic",
            "example": "My Meeting"
          },
          "dept": {
            "type": "string",
            "description": "The event host's department",
            "example": "HR"
          },
          "id": {
            "type": "string",
            "description": "The event's unique ID",
            "example": "vawMH9zAQLytjCnQiQXSUg=="
          },
          "host_id": {
            "type": "string",
            "description": "The event host's ID",
            "example": "Or4-ZeV_SHCOfWRC71O1Fg",
            "x-ballerina-name": "hostId"
          },
          "host_name": {
            "type": "string",
            "description": "The event host's name",
            "example": "chi chi",
            "x-ballerina-name": "hostName"
          }
        }
      },
      "TSPAccount1": {
        "title": "TSP Account",
        "required": [
          "conference_code",
          "leader_pin"
        ],
        "type": "object",
        "properties": {
          "dial_in_numbers": {
            "type": "array",
            "description": "List of dial in numbers",
            "items": {
              "$ref": "#/components/schemas/UsersuserIdtsptspIdDialInNumbers"
            },
            "x-ballerina-name": "dialInNumbers"
          },
          "conference_code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "Conference code: numeric value, length is less than 16",
            "example": "0125",
            "x-ballerina-name": "conferenceCode"
          },
          "leader_pin": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "Leader PIN: numeric value, length is less than 16",
            "example": "11189898",
            "x-ballerina-name": "leaderPin"
          },
          "tsp_bridge": {
            "type": "string",
            "description": "Telephony bridge",
            "example": "US_TSP_TB",
            "enum": [
              "US_TSP_TB",
              "EU_TSP_TB"
            ],
            "x-ballerina-name": "tspBridge"
          }
        },
        "description": "TSP account"
      },
      "DevicesAllOf1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Device ID",
            "example": "abceHewahkrehwiK"
          }
        }
      },
      "TSPGlobalDialInURLSetting": {
        "title": "TSP Global Dial-In URL Setting",
        "type": "object",
        "properties": {
          "audio_url": {
            "maxLength": 512,
            "type": "string",
            "description": "The global dial-in URL for a TSP enabled account. The URL must be valid, with a maximum length of 512 characters",
            "example": "https://example.com",
            "x-ballerina-name": "audioUrl"
          }
        }
      },
      "MeetingsmeetingIdbatchPollsQuestions": {
        "type": "object",
        "properties": {
          "answer_required": {
            "type": "boolean",
            "description": "Whether participants must answer the question: \n* `true` &mdash; The participant must answer the question. \n* `false` &mdash; The participant does not need to answer the question. \n\n**Note:** \n* When the poll's `type` value is `1` (Poll), this value defaults to `true`. \n* When the poll's `type` value is the `2` (Advanced Poll) or `3` (Quiz) values, this value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "answerRequired"
          },
          "answer_min_character": {
            "minimum": 1,
            "type": "integer",
            "description": "The allowed minimum number of characters. This field only applies to `short_answer` and `long_answer` polls. You must provide at least a **one** character minimum value",
            "example": 1,
            "x-ballerina-name": "answerMinCharacter"
          },
          "rating_min_value": {
            "minimum": 1,
            "type": "integer",
            "description": "The rating scale's minimum value. This value cannot be less than zero. \n\nThis field only applies to the `rating_scale` poll",
            "example": 1,
            "x-ballerina-name": "ratingMinValue"
          },
          "answers": {
            "minItems": 2,
            "type": "array",
            "description": "The poll question's available answers. This field requires a **minimum** of two answers. \n\n* For `single` and `multiple` polls, you can only provide a maximum of 10 answers. \n* For `matching` polls, you can only provide a maximum of 16 answers. \n* For `rank_order` polls, you can only provide a maximum of seven answers",
            "items": {
              "type": "string",
              "example": "Extremely useful"
            }
          },
          "type": {
            "type": "string",
            "description": "The poll's question and answer type: \n* `single` &mdash; Single choice. \n* `multiple` &mdash; Multiple choice. \n* `matching` &mdash; Matching. \n* `rank_order` &mdash; Rank order. \n* `short_answer` &mdash; Short answer. \n* `long_answer` &mdash; Long answer. \n* `fill_in_the_blank` &mdash; Fill in the blank. \n* `rating_scale` &mdash; Rating scale",
            "example": "single",
            "enum": [
              "single",
              "multiple",
              "matching",
              "rank_order",
              "short_answer",
              "long_answer",
              "fill_in_the_blank",
              "rating_scale"
            ],
            "x-enum-descriptions": [
              "Single choice",
              "Multiple choice",
              "Matching",
              "Rank order",
              "Short answer",
              "Long answer",
              "Fill in the blank",
              "Rating scale"
            ]
          },
          "answer_max_character": {
            "type": "integer",
            "description": "The allowed maximum number of characters. This field only applies to `short_answer` and `long_answer` polls: \n* For `short_answer` polls, a maximum of 500 characters. \n* For `long_answer` polls, a maximum of 2,000 characters",
            "example": 200,
            "x-ballerina-name": "answerMaxCharacter"
          },
          "rating_max_value": {
            "maximum": 10,
            "type": "integer",
            "description": "The rating scale's maximum value, up to a maximum value of 10. \n\nThis field only applies to the `rating_scale` poll",
            "example": 4,
            "x-ballerina-name": "ratingMaxValue"
          },
          "right_answers": {
            "minItems": 1,
            "type": "array",
            "description": "The poll question's correct answer(s). This field is **required** if the poll's `type` value is `3` (Quiz). \n\n For `single` and `matching` polls, this field only accepts one answer",
            "items": {
              "type": "string",
              "example": "Good"
            },
            "x-ballerina-name": "rightAnswers"
          },
          "show_as_dropdown": {
            "type": "boolean",
            "description": "Whether to display the radio selection as a drop-down box: \n* `true` &mdash; Show as a drop-down box. \n* `false` &mdash; Do not show as a drop-down box. \n\nThis value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "showAsDropdown"
          },
          "rating_min_label": {
            "type": "string",
            "description": "The low score label for the `rating_min_value` field. \n\nThis field only applies to the `rating_scale` poll",
            "example": "Not likely",
            "x-ballerina-name": "ratingMinLabel"
          },
          "case_sensitive": {
            "type": "boolean",
            "description": "Whether the correct answer is case sensitive. This field only applies to `fill_in_the_blank` polls: \n* `true` &mdash; The answer is case-sensitive. \n* `false` &mdash; The answer is not case-sensitive. \n\nThis value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "caseSensitive"
          },
          "name": {
            "maxLength": 1024,
            "type": "string",
            "description": "The poll question's title, up to 1024 characters. \n\nFor `fill_in_the_blank` polls, this field is the poll's question. For each value that the user must fill in, ensure that there are the same number of `right_answers` values",
            "example": "How useful was this meeting?"
          },
          "rating_max_label": {
            "type": "string",
            "description": "The high score label for the `rating_max_value` field. \n\nThis field only applies to the `rating_scale` poll",
            "example": "Extremely Likely",
            "x-ballerina-name": "ratingMaxLabel"
          },
          "prompts": {
            "type": "array",
            "description": "The information about the prompt questions. This field only applies to `matching` and `rank_order` polls. You **must** provide a minimum of two prompts, up to a maximum of 10 prompts",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdbatchPollsPrompts"
            }
          }
        }
      },
      "UsersuserIdmeetingsSettingsMeetingInvitees": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The invitee's email address",
            "format": "email",
            "example": "jchill@example.com"
          }
        }
      },
      "InlineResponse20044InlineResponse20044AllOf12": {
        "type": "object",
        "properties": {
          "telephony_usage": {
            "maxItems": 300,
            "type": "array",
            "description": "Array of telephony objects",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20044TelephonyUsage"
            },
            "x-ballerina-name": "telephonyUsage"
          }
        }
      },
      "InlineResponse20043AllOf1": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes",
            "example": "uBTK3NzNksdkuCUAQaFVFd86kyOr59zg4U2",
            "x-ballerina-name": "nextPageToken"
          },
          "page_size": {
            "maximum": 300,
            "type": "integer",
            "description": "The amount of records returns within a single API call. ",
            "example": 30,
            "default": 30,
            "x-ballerina-name": "pageSize"
          }
        },
        "description": "Pagination object"
      },
      "InlineResponse2005AnalyticsSummary": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date of viewing or downloading the recording",
            "example": "2022-07-06"
          },
          "views_total_count": {
            "type": "integer",
            "description": "The number of people who have watched this Meeting Recording",
            "example": 2,
            "x-ballerina-name": "viewsTotalCount"
          },
          "downloads_total_count": {
            "type": "integer",
            "description": "The number of people who downloaded this Meeting Recording",
            "example": 2,
            "x-ballerina-name": "downloadsTotalCount"
          }
        }
      },
      "MeetingsmeetingIdregistrantsmeetingsmeetingIdregistrantsmeetingsmeetingIdregistrantsAllOf123": {
        "type": "object",
        "properties": {
          "auto_approve": {
            "type": "boolean",
            "description": "If a meeting was scheduled with the `approval_type` field value of `1` (manual approval) but you want to automatically approve meeting registrants, set the value of this field to `true`. \n\n**Note:** You cannot use this field to change approval setting for a meeting originally scheduled with the `approval_type` field value of `0` (automatic approval)",
            "example": true,
            "x-ballerina-name": "autoApprove"
          }
        }
      },
      "TspBody": {
        "type": "object",
        "properties": {
          "dial_in_number_unrestricted": {
            "type": "boolean",
            "description": "Control restriction on account users adding a TSP number outside of account's dial in numbers",
            "example": true,
            "x-ballerina-name": "dialInNumberUnrestricted"
          },
          "modify_credential_forbidden": {
            "type": "boolean",
            "description": "Control restriction on account users being able to modify their TSP credentials",
            "example": true,
            "x-ballerina-name": "modifyCredentialForbidden"
          },
          "master_account_setting_extended": {
            "type": "boolean",
            "description": "For master account, extend its TSP setting to all sub accounts. For sub account, extend TSP setting from master account",
            "example": true,
            "x-ballerina-name": "masterAccountSettingExtended"
          },
          "enable": {
            "type": "boolean",
            "description": "Enable 3rd party audio conferencing for account users",
            "example": true
          },
          "tsp_provider": {
            "type": "string",
            "description": "3rd party audio conferencing provider",
            "example": "someprovidername",
            "x-ballerina-name": "tspProvider"
          },
          "tsp_bridge": {
            "type": "string",
            "description": "Telephony bridge",
            "example": "US_TSP_TB",
            "enum": [
              "US_TSP_TB",
              "EU_TSP_TB"
            ],
            "x-ballerina-name": "tspBridge"
          },
          "tsp_enabled": {
            "type": "boolean",
            "description": "Enable TSP feature for account. This has to be enabled to use any other tsp settings/features",
            "example": true,
            "x-ballerina-name": "tspEnabled"
          }
        }
      },
      "UsersuserIdmeetingsSettingsBreakoutRoomRooms": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The breakout room's name",
            "example": "room1"
          },
          "participants": {
            "type": "array",
            "description": "The email addresses of the participants to assign to the breakout room",
            "items": {
              "type": "string",
              "example": "jchill@example.com"
            }
          }
        }
      },
      "InlineResponse20030PacAccounts": {
        "type": "object",
        "properties": {
          "conference_id": {
            "type": "integer",
            "description": "The conference ID",
            "format": "int64",
            "example": 111111,
            "x-ballerina-name": "conferenceId"
          },
          "listen_only_password": {
            "maxLength": 6,
            "type": "string",
            "description": "The listen-only password, up to six characters in length",
            "example": "3c2b1a",
            "x-ballerina-name": "listenOnlyPassword"
          },
          "participant_password": {
            "maxLength": 6,
            "type": "string",
            "description": "The participant password, up to six characters in length",
            "example": "a1b2c3",
            "x-ballerina-name": "participantPassword"
          },
          "global_dial_in_numbers": {
            "type": "array",
            "description": "Information about the account's global dial-in numbers",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20030GlobalDialInNumbers"
            },
            "x-ballerina-name": "globalDialInNumbers"
          },
          "dedicated_dial_in_number": {
            "type": "array",
            "description": "Information about the account's dedicated dial-in numbers",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20030DedicatedDialInNumber"
            },
            "x-ballerina-name": "dedicatedDialInNumber"
          }
        }
      },
      "RecordingSettings": {
        "title": "Recording settings",
        "type": "object",
        "properties": {
          "authentication_option": {
            "type": "string",
            "description": "The options for authentication",
            "example": "auth_option",
            "x-ballerina-name": "authenticationOption"
          },
          "recording_authentication": {
            "type": "boolean",
            "description": "Only allow authenticated users to view",
            "example": true,
            "x-ballerina-name": "recordingAuthentication"
          },
          "send_email_to_host": {
            "type": "boolean",
            "description": "Enable sending an email to the host when someone registers to view the recording. This applies for On-demand recordings only",
            "example": false,
            "x-ballerina-name": "sendEmailToHost"
          },
          "approval_type": {
            "type": "integer",
            "description": "The registration approval type.  \n \n`0` - Automatically approve the registration when a user registers.  \n \n`1` - Manually approve or deny the registration of a user.  \n \n`2` - No registration required to view the recording",
            "example": 0,
            "enum": [
              0,
              1,
              2
            ],
            "x-enum-descriptions": [
              "Registrants can watch the recording directly after registration",
              "Registrants receive emails then watch the recording after you approve the registration",
              "Disabled"
            ],
            "x-ballerina-name": "approvalType"
          },
          "auto_delete": {
            "type": "boolean",
            "description": "Auto-delete status of a meeting's [cloud recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).  \n\nPrerequisite: To get the auto-delete status, the host of the recording must have the recording setting \"Delete cloud recordings after a specified number of days\" enabled. ",
            "example": true,
            "x-ballerina-name": "autoDelete"
          },
          "share_recording": {
            "type": "string",
            "description": "Determine how the meeting recording is shared",
            "example": "publicly",
            "enum": [
              "publicly",
              "internally",
              "none"
            ],
            "x-enum-descriptions": [
              "Publicly",
              "Internally(account members only)",
              "None"
            ],
            "x-ballerina-name": "shareRecording"
          },
          "on_demand": {
            "type": "boolean",
            "description": "This field determines whether registration is required to view the recording",
            "example": false,
            "x-ballerina-name": "onDemand"
          },
          "auto_delete_date": {
            "type": "string",
            "description": "The date when the recording will be auto-deleted when `auto_delete` is `true`. Otherwise, no date is returned",
            "example": "2028-07-12",
            "x-ballerina-name": "autoDeleteDate"
          },
          "password": {
            "maxLength": 10,
            "minLength": 8,
            "type": "string",
            "description": "This field enables passcode protection for the recording by setting a passcode. The passcode must have a minimum of **eight** characters with a mix of numbers, letters and special characters.  \n   \n \n**Note:** If the account owner or the admin has set minimum passcode strength requirements for recordings through Account Settings, the passcode value provided here must meet those requirements.   \n   \n If the requirements are enabled, you can view those requirements by calling either the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API or the [**Get account settings**](/api-reference/zoom-api/ma#operation/accountSettings) API",
            "example": "975238724"
          },
          "show_social_share_buttons": {
            "type": "boolean",
            "description": "Show social share buttons on the registration page. This applies for On-demand recordings only",
            "example": true,
            "x-ballerina-name": "showSocialShareButtons"
          },
          "authentication_domains": {
            "type": "string",
            "description": "The domains for authentication",
            "example": "example.com",
            "x-ballerina-name": "authenticationDomains"
          },
          "topic": {
            "type": "string",
            "description": "The recording's name",
            "example": "My Personal Meeting Room"
          },
          "authentication_name": {
            "type": "string",
            "description": "The name for authentication",
            "example": "auth display name",
            "x-ballerina-name": "authenticationName"
          },
          "viewer_download": {
            "type": "boolean",
            "description": "Determine whether a viewer can download the recording file or not",
            "example": true,
            "x-ballerina-name": "viewerDownload"
          }
        }
      },
      "MeetingId1": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/MeetingId1OneOf1"
          },
          {
            "$ref": "#/components/schemas/MeetingId1MeetingId1OneOf12"
          }
        ]
      },
      "InlineResponse2018SettingsAuthenticationException": {
        "type": "object",
        "properties": {
          "join_url": {
            "type": "string",
            "description": "URL for participants to join the meeting",
            "example": "https://example.com/s/11111",
            "x-ballerina-name": "joinUrl"
          },
          "name": {
            "type": "string",
            "description": "The participant's name",
            "example": "Jill Chill"
          },
          "email": {
            "type": "string",
            "description": "The participant's email address",
            "format": "email",
            "example": "jchill@example.com"
          }
        }
      },
      "InlineResponse20115Registrants": {
        "type": "object",
        "properties": {
          "join_url": {
            "type": "string",
            "description": "Unique URL using which registrant can join the webinar",
            "example": "https://example.com/j/11111",
            "x-ballerina-name": "joinUrl"
          },
          "registrant_id": {
            "type": "string",
            "description": "The registrant's unique identifier",
            "example": "-rOym-zdTHOdbT3A7u7u5g",
            "x-ballerina-name": "registrantId"
          },
          "email": {
            "type": "string",
            "description": "The registrant's email address",
            "example": "jchill@example.com"
          }
        }
      },
      "MeetingIdEventsBody": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "description": "The method that you would like to control.\n* `recording.start` - Start the recording.\n* `recording.stop` - Stop the recording.\n* `recording.pause` - Pause the recording.\n* `recording.resume` - Resume a paused recording.\n* `participant.invite` - Invite a participant to the meeting.\n* `participant.invite.callout` - Invite a participant to the meeting through [call out (phone)](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0062038).\n* `participant.invite.room_system_callout` - Invite a participant to the meeting through [call out (room system)](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065721).\n* `waiting_room.update` - Update the waiting room with a custom message",
            "example": "recording.start",
            "enum": [
              "recording.start",
              "recording.stop",
              "recording.pause",
              "recording.resume",
              "participant.invite",
              "participant.invite.callout",
              "participant.invite.room_system_callout",
              "waiting_room.update"
            ]
          },
          "params": {
            "$ref": "#/components/schemas/LiveMeetingsmeetingIdeventsParams"
          }
        }
      },
      "InlineResponse20030GlobalDialInNumbers": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "The global dial-in country code",
            "example": "USA"
          },
          "number": {
            "maxLength": 16,
            "type": "string",
            "description": "The global dial-in number",
            "example": "5550100"
          }
        }
      },
      "InlineResponse2004AnalyticsDetails": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "integer",
            "description": "When the query type is `by_view`, this field indicates the viewing time, unit: seconds",
            "example": 60
          },
          "date_time": {
            "type": "string",
            "description": "Explicit time to watch or download the recording",
            "format": "date-time",
            "example": "2021-07-04T22:14:57Z",
            "x-ballerina-name": "dateTime"
          },
          "name": {
            "type": "string",
            "description": "The user's name who watched or downloaded",
            "example": "2"
          },
          "email": {
            "type": "string",
            "description": "The user's email who downloaded this Meeting Recording",
            "example": "2"
          }
        }
      },
      "UsersuserIdwebinarsSettingsFollowUpAttendeesEmailNotification": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "* `true`: Send follow-up email to attendees.\n\n* `false`: Do not send follow-up email to attendees",
            "example": true
          },
          "type": {
            "type": "integer",
            "description": "`0` - No plan.  \n `1` - Send 1 day after the scheduled end date.  \n `2` - Send 2 days after the scheduled end date.  \n `3` - Send 3 days after the scheduled end date.  \n `4` - Send 4 days after the scheduled end date.  \n `5` - Send 5 days after the scheduled end date.  \n `6` - Send 6 days after the scheduled end date.  \n `7` - Send 7 days after the scheduled end date",
            "example": 0,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "x-enum-descriptions": [
              "Send 1 day after the scheduled end date.",
              "Send 2 days after the scheduled end date.",
              "Send 3 days after the scheduled end date.",
              "Send 4 days after the scheduled end date.",
              "Send 5 days after the scheduled end date.",
              "Send 6 days after the scheduled end date.",
              "Send 7 days after the scheduled end date."
            ]
          }
        },
        "description": "Send follow-up email to attendees"
      },
      "UsersuserIdtsptspIdDialInNumbers": {
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "Dial-in number: length is less than 16",
            "example": "+1 1000200200"
          },
          "code": {
            "maxLength": 6,
            "type": "string",
            "description": "Country code",
            "example": "1"
          },
          "country_label": {
            "maxLength": 10,
            "type": "string",
            "description": "Country Label, if passed, will display in place of code",
            "example": "America",
            "x-ballerina-name": "countryLabel"
          },
          "type": {
            "type": "string",
            "description": "Dial-in number types:  \n `toll` - Toll number.  \n `tollfree` -Toll free number.  \n `media_link` - Media Link Phone Number. It is used for PSTN integration instead of paid bridge number",
            "example": "toll",
            "enum": [
              "toll",
              "tollfree",
              "media_link"
            ],
            "x-enum-descriptions": [
              "Toll number <br/>",
              "Toll free number <br/>",
              "Media link phone number <br/>"
            ]
          }
        }
      },
      "InlineResponse20051QuestionDetails": {
        "type": "object",
        "properties": {
          "answer": {
            "type": "string",
            "description": "The given answer. If this is a live answer, the value is 'live answered'.\n**Note:** All answers will be returned together and separated by semicolons. For more detailed answer information, please see the \"answer_details\" field",
            "example": "fine",
            "deprecated": true
          },
          "question": {
            "type": "string",
            "description": "Asked question",
            "example": "how are you"
          },
          "create_time": {
            "type": "string",
            "description": "Question creation time",
            "example": "2022-03-15T07:48:00Z",
            "x-ballerina-name": "createTime"
          },
          "question_status": {
            "type": "string",
            "description": "Question status.\nIf not supported, the value will be `default`",
            "example": "open",
            "enum": [
              "default",
              "open",
              "dismissed",
              "answered",
              "deleted"
            ],
            "x-ballerina-name": "questionStatus"
          },
          "question_id": {
            "type": "string",
            "description": "Question UUID",
            "example": "zxU4wOwnlxs",
            "x-ballerina-name": "questionId"
          },
          "answer_details": {
            "type": "array",
            "description": "Array of answers from user",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20051AnswerDetails"
            },
            "x-ballerina-name": "answerDetails"
          }
        }
      },
      "InlineResponse20049Participants": {
        "type": "object",
        "properties": {
          "leave_time": {
            "type": "string",
            "description": "The participant's leave time",
            "format": "date-time",
            "example": "2019-02-01T12:54:12.66Z",
            "x-ballerina-name": "leaveTime"
          },
          "user_email": {
            "pattern": "(^\\s*$|^[A-Za-z0-9!#$%&''*+/=?^_`{|}~-]+(\\.[A-Za-z0-9!#$%&''*+/=?^_`{|}~-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$)",
            "type": "string",
            "description": "The participant's email address. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](/docs/api-reference/using-zoom-apis#email-address) for details. This returns an empty string value if the account calling the API is a BAA account",
            "example": "jchill@example.com",
            "x-ballerina-name": "userEmail"
          },
          "registrant_id": {
            "type": "string",
            "description": "The registrant's ID. This field only returns if you provide the `registrant_id` value for the `include_fields` query parameter",
            "example": "123456FEDCBA",
            "x-ballerina-name": "registrantId"
          },
          "participant_user_id": {
            "type": "string",
            "description": "The participant's universally unique ID (UUID). \n* If the participant joins the meeting by logging into Zoom, this value is the `id` value in the [**Get a user**](/docs/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value",
            "example": "DYHrdpjrS3uaOf7dPkkg8w",
            "x-ballerina-name": "participantUserId"
          },
          "join_time": {
            "type": "string",
            "description": "The participant's join time",
            "format": "date-time",
            "example": "2019-02-01T12:34:12.66Z",
            "x-ballerina-name": "joinTime"
          },
          "duration": {
            "type": "integer",
            "description": "Participant duration, in seconds, calculated by subtracting the `leave_time` from the `join_time` for the `user_id`. If the participant leaves and rejoins the same meeting, they will be assigned a different `user_id` and Zoom displays their new duration in a separate object. Note that because of this, the duration may not reflect the total time the user was in the meeting",
            "example": 20
          },
          "customer_key": {
            "maxLength": 35,
            "type": "string",
            "description": "The participant's SDK identifier. This value can be alphanumeric, up to a maximum length of 35 characters",
            "example": "349589LkJyeW",
            "x-ballerina-name": "customerKey"
          },
          "bo_mtg_id": {
            "type": "string",
            "description": "The [breakout room](https://support.zoom.us/hc/en-us/articles/206476313-Managing-breakout-rooms) ID. Each breakout room is assigned a unique ID",
            "example": "Dkgwu8nm/ExG1vM+GhLRhA==",
            "x-ballerina-name": "boMtgId"
          },
          "failover": {
            "type": "boolean",
            "description": "Whether failover occurred during the webinar",
            "example": false
          },
          "user_id": {
            "type": "string",
            "description": "The participant's ID. This ID is assigned to the participant upon joining the webinar and is only valid for that webinar",
            "example": "ABCDEF123456",
            "x-ballerina-name": "userId"
          },
          "name": {
            "type": "string",
            "description": "The participant's display name. This returns an empty string value if the account calling the API is a BAA account",
            "example": "jchill"
          },
          "id": {
            "type": "string",
            "description": "The participant's universally unique ID (UUID). \n* If the participant joins the meeting by logging into Zoom, this value is the `id` value in the [**Get a user**](/docs/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value. \n\n**Note:** Use the `participant_user_id` value instead of this value. We will remove this response in a future release",
            "example": "ABCDEF123456"
          },
          "status": {
            "type": "string",
            "description": "The participant's status. \n* `in_meeting` - In a meeting. \n* `in_waiting_room` - In a waiting room",
            "example": "in_meeting",
            "enum": [
              "in_meeting",
              "in_waiting_room"
            ]
          }
        }
      },
      "MeetingAndWebinarPollingObject3": {
        "title": "Meeting and Webinar Polling Object",
        "type": "object",
        "properties": {
          "questions": {
            "type": "array",
            "description": "The information about the poll's questions",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdpollsQuestions"
            }
          },
          "anonymous": {
            "type": "boolean",
            "description": "Whether meeting participants answer poll questions anonymously. \n\nThis value defaults to `false`",
            "example": true,
            "default": false
          },
          "poll_type": {
            "type": "integer",
            "description": "The type of poll: \n* `1` &mdash; Poll. \n* `2` &mdash; Advanced Poll. This feature must be enabled in your Zoom account. \n* `3` &mdash; Quiz. This feature must be enabled in your Zoom account. \n\n This value defaults to `1`",
            "example": 2,
            "enum": [
              1,
              2,
              3
            ],
            "x-ballerina-name": "pollType"
          },
          "title": {
            "maxLength": 64,
            "type": "string",
            "description": "The poll's title, up to 64 characters",
            "example": "Learn something new"
          }
        },
        "description": "The information about meeting and webinar polling"
      },
      "InviteLinks1Attendees": {
        "type": "object",
        "properties": {
          "join_url": {
            "type": "string",
            "description": "The URL to join the meeting",
            "example": "https://example.com/j/11111",
            "x-ballerina-name": "joinUrl"
          },
          "name": {
            "type": "string",
            "description": "The user's display name",
            "example": "Jill Chill"
          }
        }
      },
      "WebinarIdPanelistsBody": {
        "type": "object",
        "properties": {
          "panelists": {
            "maximum": 30,
            "type": "array",
            "description": "List of panelist objects",
            "items": {
              "$ref": "#/components/schemas/WebinarswebinarIdpanelistsPanelists"
            }
          }
        },
        "description": "Webinar panelist"
      },
      "MeetingAndWebinarPollingObject2": {
        "title": "Meeting and Webinar Polling Object",
        "type": "object",
        "properties": {
          "questions": {
            "type": "array",
            "description": "The information about the poll's questions",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdpollsQuestions"
            }
          },
          "anonymous": {
            "type": "boolean",
            "description": "Whether meeting participants answer poll questions anonymously. \n\nThis value defaults to `false`",
            "example": true,
            "default": false
          },
          "poll_type": {
            "type": "integer",
            "description": "The type of poll: \n* `1` &mdash; Poll. \n* `2` &mdash; Advanced Poll. This feature must be enabled in your Zoom account. \n* `3` &mdash; Quiz. This feature must be enabled in your Zoom account. \n\n This value defaults to `1`",
            "example": 2,
            "enum": [
              1,
              2,
              3
            ],
            "x-ballerina-name": "pollType"
          },
          "title": {
            "maxLength": 64,
            "type": "string",
            "description": "The poll's title, up to 64 characters",
            "example": "Learn something new"
          }
        },
        "description": "The information about meeting and webinar polling"
      },
      "RegistrantsRegistrantsAllOf12": {
        "type": "object",
        "description": "Registrant",
        "allOf": [
          {
            "required": [
              "email",
              "first_name"
            ],
            "type": "object",
            "properties": {
              "zip": {
                "type": "string",
                "description": "The registrant's ZIP or postal code",
                "example": "94045"
              },
              "country": {
                "type": "string",
                "description": "The registrant's two-letter [country code](/docs/api/rest/other-references/abbreviation-lists/#countries)",
                "example": "US"
              },
              "custom_questions": {
                "type": "array",
                "description": "Information about custom questions",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "The title of the custom question.",
                      "example": "What do you hope to learn from this?"
                    },
                    "value": {
                      "maxLength": 128,
                      "type": "string",
                      "description": "The custom question's response value. This has a limit of 128 characters.",
                      "example": "Look forward to learning how you come up with new recipes and what other services you offer."
                    }
                  },
                  "description": "Information about custom questions."
                },
                "x-ballerina-name": "customQuestions"
              },
              "purchasing_time_frame": {
                "type": "string",
                "description": "The registrant's purchasing time frame. \n* `Within a month` \n* `1-3 months` \n* `4-6 months` \n* `More than 6 months` \n* `No timeframe`",
                "example": "1-3 months",
                "enum": [
                  "",
                  "Within a month",
                  "1-3 months",
                  "4-6 months",
                  "More than 6 months",
                  "No timeframe"
                ],
                "x-ballerina-name": "purchasingTimeFrame"
              },
              "address": {
                "type": "string",
                "description": "The registrant's address",
                "example": "1800 Amphibious Blvd."
              },
              "comments": {
                "type": "string",
                "description": "The registrant's questions and comments",
                "example": "Looking forward to the discussion."
              },
              "city": {
                "type": "string",
                "description": "The registrant's city",
                "example": "Mountain View"
              },
              "org": {
                "type": "string",
                "description": "The registrant's organization",
                "example": "Cooking Org"
              },
              "last_name": {
                "maxLength": 64,
                "type": "string",
                "description": "The registrant's last name",
                "example": "Chill",
                "x-ballerina-name": "lastName"
              },
              "no_of_employees": {
                "type": "string",
                "description": "The registrant's number of employees. \n* `1-20` \n* `21-50` \n* `51-100` \n* `101-250` \n* `251-500` \n* `501-1,000` \n* `1,001-5,000` \n* `5,001-10,000` \n* `More than 10,000`",
                "example": "1-20",
                "enum": [
                  "",
                  "1-20",
                  "21-50",
                  "51-100",
                  "101-250",
                  "251-500",
                  "501-1,000",
                  "1,001-5,000",
                  "5,001-10,000",
                  "More than 10,000"
                ],
                "x-ballerina-name": "noOfEmployees"
              },
              "industry": {
                "type": "string",
                "description": "The registrant's industry",
                "example": "Food"
              },
              "phone": {
                "type": "string",
                "description": "The registrant's phone number",
                "example": "5550100"
              },
              "role_in_purchase_process": {
                "type": "string",
                "description": "The registrant's role in the purchase process. \n* `Decision Maker` \n* `Evaluator/Recommender` \n* `Influencer` \n* `Not involved`",
                "example": "Influencer",
                "enum": [
                  "",
                  "Decision Maker",
                  "Evaluator/Recommender",
                  "Influencer",
                  "Not involved"
                ],
                "x-ballerina-name": "roleInPurchaseProcess"
              },
              "state": {
                "type": "string",
                "description": "The registrant's state or province",
                "example": "CA"
              },
              "first_name": {
                "maxLength": 64,
                "type": "string",
                "description": "The registrant's first name",
                "example": "Jill",
                "x-ballerina-name": "firstName"
              },
              "job_title": {
                "type": "string",
                "description": "The registrant's job title",
                "example": "Chef",
                "x-ballerina-name": "jobTitle"
              },
              "email": {
                "maxLength": 128,
                "type": "string",
                "description": "The registrant's email address. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for return value details",
                "format": "email",
                "example": "jchill@example.com"
              },
              "status": {
                "type": "string",
                "description": "The registrant's status. \n* `approved` - Registrant is approved. \n* `denied` - Registrant is denied. \n* `pending` - Registrant is waiting for approval",
                "example": "approved",
                "enum": [
                  "approved",
                  "denied",
                  "pending"
                ]
              }
            },
            "description": "Information about the registrant"
          }
        ]
      },
      "MeetingAndWebinarPollingObject1": {
        "title": "Meeting and webinar polling object.",
        "type": "object",
        "properties": {
          "questions": {
            "type": "array",
            "description": "The information about the poll's questions",
            "items": {
              "$ref": "#/components/schemas/WebinarswebinarIdpollsQuestions"
            }
          },
          "anonymous": {
            "type": "boolean",
            "description": "Whether meeting participants answer poll questions anonymously. \n\nThis value defaults to `false`",
            "example": true,
            "default": false
          },
          "poll_type": {
            "type": "integer",
            "description": "The type of poll. \n* `1` - Poll. \n* `2` - Advanced Poll. This feature must be enabled in your Zoom account. \n* `3` - Quiz. This feature must be enabled in your Zoom account. \n\n This value defaults to `1`",
            "example": 2,
            "enum": [
              1,
              2,
              3
            ],
            "x-ballerina-name": "pollType"
          },
          "title": {
            "maxLength": 64,
            "type": "string",
            "description": "The poll's title, up to 64 characters",
            "example": "Learn something new"
          }
        },
        "description": "The information about meeting and webinar polling"
      },
      "LiveMeetingsmeetingIdeventsParams": {
        "type": "object",
        "properties": {
          "device_ip": {
            "type": "string",
            "description": "The user's device IP address or URI. Use this field if you pass the `participant.invite.room_system_callout` value for the `method` field",
            "example": "10.100.111.237",
            "x-ballerina-name": "deviceIp"
          },
          "sip_headers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LiveMeetingsmeetingIdeventsParamsSipHeaders"
              }
            ],
            "x-ballerina-name": "sipHeaders"
          },
          "waiting_room_title": {
            "type": "string",
            "description": "The title displayed in the waiting room. Use this field if you pass the `waiting_room.update` value for the `method` field",
            "example": "waiting room title",
            "x-ballerina-name": "waitingRoomTitle"
          },
          "waiting_room_description": {
            "type": "string",
            "description": "The description shown in the waiting room. Use this field if you pass the `waiting_room.update` value for the `method` field",
            "example": "waiting room description",
            "x-ballerina-name": "waitingRoomDescription"
          },
          "invite_options": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LiveMeetingsmeetingIdeventsParamsInviteOptions"
              }
            ],
            "x-ballerina-name": "inviteOptions"
          },
          "phone_number": {
            "type": "string",
            "description": "The user's phone number. Use this field if you pass the `participant.invite.callout` value for the `method` field. As a best practice, ensure this includes a country code and area code.\r\n\r\nIf you are dialing a phone number that includes an extension, type a hyphen '-' after the phone number and enter the extension. For example, 6032331333-156 dials the extension 156",
            "example": "5550100",
            "x-ballerina-name": "phoneNumber"
          },
          "invitee_name": {
            "type": "string",
            "description": "The user's name to display in the meeting. Use this field if you pass the `participant.invite.callout` value for the `method` field",
            "example": "Jill Chill",
            "x-ballerina-name": "inviteeName"
          },
          "call_type": {
            "type": "string",
            "description": "The type of call out. Use a value of `h323` or `sip`. Use this field if you pass the `participant.invite.room_system_callout` value for the `method` field",
            "example": "h323",
            "x-ballerina-name": "callType"
          },
          "contacts": {
            "maximum": 10,
            "type": "array",
            "description": "The user's email address or the user ID, up to a maximum of 10 contacts. The account must be a part of the meeting host's account",
            "items": {
              "$ref": "#/components/schemas/LiveMeetingsmeetingIdeventsParamsContacts"
            }
          },
          "h323_headers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LiveMeetingsmeetingIdeventsParamsH323Headers"
              }
            ],
            "x-ballerina-name": "h323Headers"
          }
        },
        "description": "The in-meeting parameters"
      },
      "MeetingsmeetingIdSettingsAuthenticationException": {
        "type": "object",
        "properties": {
          "join_url": {
            "type": "string",
            "description": "URL for participants to join the meeting",
            "example": "https://example.com/s/11111",
            "x-ballerina-name": "joinUrl"
          },
          "name": {
            "type": "string",
            "description": "The participant's name",
            "example": "Jill Chill"
          },
          "email": {
            "type": "string",
            "description": "The participant's email address",
            "format": "email",
            "example": "jchill@example.com"
          }
        }
      },
      "WebinarRegistrantWebinarRegistrantAllOf12": {
        "type": "object",
        "description": "Webinar registrant",
        "allOf": [
          {
            "required": [
              "email",
              "first_name"
            ],
            "type": "object",
            "properties": {
              "zip": {
                "type": "string",
                "description": "The registrant's ZIP or postal code",
                "example": "94045"
              },
              "country": {
                "type": "string",
                "description": "The registrant's two-letter ISO [country code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries)",
                "example": "US"
              },
              "custom_questions": {
                "type": "array",
                "description": "Information about custom questions",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "The title of the custom question.",
                      "example": "What do you hope to learn from this?"
                    },
                    "value": {
                      "maxLength": 128,
                      "type": "string",
                      "description": "The custom question's response value. This has a limit of 128 characters.",
                      "example": "Look forward to learning how you come up with new recipes and what other services you offer."
                    }
                  },
                  "description": "Information about custom questions."
                },
                "x-ballerina-name": "customQuestions"
              },
              "purchasing_time_frame": {
                "type": "string",
                "description": "The registrant's purchasing time frame: \n* `Within a month` \n* `1-3 months` \n* `4-6 months` \n* `More than 6 months` \n* `No timeframe`",
                "example": "1-3 months",
                "enum": [
                  "",
                  "Within a month",
                  "1-3 months",
                  "4-6 months",
                  "More than 6 months",
                  "No timeframe"
                ],
                "x-ballerina-name": "purchasingTimeFrame"
              },
              "address": {
                "type": "string",
                "description": "The registrant's address",
                "example": "1800 Amphibious Blvd."
              },
              "comments": {
                "type": "string",
                "description": "The registrant's questions and comments",
                "example": "Looking forward to the discussion."
              },
              "city": {
                "type": "string",
                "description": "The registrant's city",
                "example": "Mountain View"
              },
              "org": {
                "type": "string",
                "description": "The registrant's organization",
                "example": "Cooking Org"
              },
              "last_name": {
                "maxLength": 64,
                "type": "string",
                "description": "The registrant's last name",
                "example": "Chill",
                "x-ballerina-name": "lastName"
              },
              "no_of_employees": {
                "type": "string",
                "description": "The registrant's number of employees: \n* `1-20` \n* `21-50` \n* `51-100` \n* `101-250` \n* `251-500` \n* `501-1,000` \n* `1,001-5,000` \n* `5,001-10,000` \n* `More than 10,000`",
                "example": "1-20",
                "enum": [
                  "",
                  "1-20",
                  "21-50",
                  "51-100",
                  "101-250",
                  "251-500",
                  "501-1,000",
                  "1,001-5,000",
                  "5,001-10,000",
                  "More than 10,000"
                ],
                "x-ballerina-name": "noOfEmployees"
              },
              "industry": {
                "type": "string",
                "description": "The registrant's industry",
                "example": "Food"
              },
              "phone": {
                "type": "string",
                "description": "The registrant's phone number",
                "example": "5550100"
              },
              "role_in_purchase_process": {
                "type": "string",
                "description": "The registrant's role in the purchase process: \n* `Decision Maker` \n* `Evaluator/Recommender` \n* `Influencer` \n* `Not involved`",
                "example": "Influencer",
                "enum": [
                  "",
                  "Decision Maker",
                  "Evaluator/Recommender",
                  "Influencer",
                  "Not involved"
                ],
                "x-ballerina-name": "roleInPurchaseProcess"
              },
              "state": {
                "type": "string",
                "description": "The registrant's state or province",
                "example": "CA"
              },
              "first_name": {
                "maxLength": 64,
                "type": "string",
                "description": "The registrant's first name",
                "example": "Jill",
                "x-ballerina-name": "firstName"
              },
              "job_title": {
                "type": "string",
                "description": "The registrant's job title",
                "example": "Chef",
                "x-ballerina-name": "jobTitle"
              },
              "email": {
                "maxLength": 128,
                "type": "string",
                "description": "The registrant's email address. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for return value details",
                "format": "email",
                "example": "jchill@example.com"
              },
              "status": {
                "type": "string",
                "description": "The registrant's status: \n* `approved` &mdash; Registrant is approved. \n* `denied` &mdash; Registrant is denied. \n* `pending` &mdash; Registrant is waiting for approval",
                "example": "approved",
                "enum": [
                  "approved",
                  "denied",
                  "pending"
                ]
              }
            },
            "description": "Information about the registrant"
          },
          {
            "type": "object",
            "properties": {
              "language": {
                "type": "string",
                "description": "The registrant's language preference for confirmation emails: \n* `en-US` &mdash; English (US) \n* `de-DE` &mdash; German (Germany) \n* `es-ES` &mdash; Spanish (Spain) \n* `fr-FR` &mdash; French (France) \n* `jp-JP` &mdash; Japanese \n* `pt-PT` &mdash; Portuguese (Portugal) \n* `ru-RU` &mdash; Russian \n* `zh-CN` &mdash; Chinese (PRC) \n* `zh-TW` &mdash; Chinese (Taiwan) \n* `ko-KO` &mdash; Korean \n* `it-IT` &mdash; Italian (Italy) \n* `vi-VN` &mdash; Vietnamese \n* `pl-PL` &mdash; Polish \n* `Tr-TR` &mdash; Turkish",
                "example": "en-US",
                "enum": [
                  "en-US",
                  "de-DE",
                  "es-ES",
                  "fr-FR",
                  "jp-JP",
                  "pt-PT",
                  "ru-RU",
                  "zh-CN",
                  "zh-TW",
                  "ko-KO",
                  "it-IT",
                  "vi-VN",
                  "pl-PL",
                  "Tr-TR"
                ]
              }
            }
          }
        ]
      },
      "MessagesmessageIdBody": {
        "required": [
          "message_content"
        ],
        "type": "object",
        "properties": {
          "message_content": {
            "type": "string",
            "description": "The content of the chat message",
            "example": "This is a test message",
            "x-ballerina-name": "messageContent"
          }
        }
      },
      "PanelistList": {
        "title": "Panelist List",
        "type": "object",
        "properties": {
          "panelists": {
            "type": "array",
            "description": "List of panelist objects",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20069Panelists"
            }
          },
          "total_records": {
            "type": "integer",
            "description": "Total records",
            "example": 1,
            "x-ballerina-name": "totalRecords"
          }
        },
        "description": "List of panelists"
      },
      "InlineResponse20047InlineResponse20047AllOf12": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes",
            "example": "w7587w4eiyfsudgk",
            "x-ballerina-name": "nextPageToken"
          },
          "from": {
            "type": "string",
            "description": "The report's start date",
            "format": "date",
            "example": "2020-07-14"
          },
          "meetings": {
            "type": "array",
            "description": "Information about the meeting",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20047Meetings"
            }
          },
          "to": {
            "type": "string",
            "description": "The report's end date",
            "format": "date",
            "example": "2020-08-14"
          }
        }
      },
      "LiveMeetingsmeetingIdeventsParamsInviteOptions": {
        "type": "object",
        "properties": {
          "require_pressing_one": {
            "type": "boolean",
            "description": "Whether to require pressing 1 before being connected. Use this field if you pass the `participant.invite.callout` value for the `method` field",
            "example": true,
            "default": true,
            "x-ballerina-name": "requirePressingOne"
          },
          "require_greeting": {
            "type": "boolean",
            "description": "Whether to require a greeting before being connected. Use this field if you pass the `participant.invite.callout` value for the `method` field",
            "example": true,
            "default": true,
            "x-ballerina-name": "requireGreeting"
          }
        },
        "description": "Information about the `participant.invite.callout` settings"
      },
      "MeetingIdBatchRegistrantsBody": {
        "type": "object",
        "properties": {
          "registrants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdbatchRegistrantsRegistrants"
            }
          },
          "registrants_confirmation_email": {
            "type": "boolean",
            "description": "Send confirmation Email to Registrants",
            "example": true,
            "x-ballerina-name": "registrantsConfirmationEmail"
          },
          "auto_approve": {
            "type": "boolean",
            "description": "If a meeting was scheduled with approval_type `1` (manual approval), but you would like to automatically approve the registrants that are added via this API, you can set the value of this field to `true`. \n\nYou **cannot** use this field to change approval setting for a meeting  that was originally scheduled with approval_type `0` (automatic approval)",
            "example": true,
            "x-ballerina-name": "autoApprove"
          }
        }
      },
      "RecurrenceWebinar": {
        "title": "Recurrence webinar",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "end_date_time": {
            "type": "string",
            "description": "Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. Cannot be used with `end_times`",
            "format": "date-time",
            "example": "2022-04-02T15:59:00Z",
            "x-ballerina-name": "endDateTime"
          },
          "end_times": {
            "maximum": 60,
            "type": "integer",
            "description": "Select how many times the webinar will recur before it is canceled. The maximum number of recurring is 60. Cannot be used with `end_date_time`",
            "example": 7,
            "default": 1,
            "x-ballerina-name": "endTimes"
          },
          "monthly_week": {
            "type": "integer",
            "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.**   \n `-1` - Last week of the month.  \n `1` - First week of the month.  \n `2` - Second week of the month.  \n `3` - Third week of the month.  \n `4` - Fourth week of the month",
            "example": 1,
            "enum": [
              -1,
              1,
              2,
              3,
              4
            ],
            "x-enum-descriptions": [
              "Last week",
              "First week",
              "Second week",
              "Third week",
              "Fourth week"
            ],
            "x-ballerina-name": "monthlyWeek"
          },
          "monthly_week_day": {
            "type": "integer",
            "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field.   \n `1` - Sunday.  \n `2` - Monday.  \n `3` - Tuesday.  \n `4` -  Wednesday.  \n `5` - Thursday.  \n `6` - Friday.  \n `7` - Saturday",
            "example": 1,
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "x-enum-descriptions": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-ballerina-name": "monthlyWeekDay"
          },
          "repeat_interval": {
            "type": "integer",
            "description": "Define the interval when the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months",
            "example": 1,
            "x-ballerina-name": "repeatInterval"
          },
          "monthly_day": {
            "type": "integer",
            "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month the webinar should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`",
            "example": 1,
            "x-ballerina-name": "monthlyDay"
          },
          "type": {
            "type": "integer",
            "description": "Recurrence webinar types.\n `1` - Daily.  \n `2` - Weekly.  \n `3` - Monthly",
            "example": 1,
            "enum": [
              1,
              2,
              3
            ],
            "x-enum-descriptions": [
              "Daily",
              "Weekly",
              "Monthly"
            ]
          },
          "weekly_days": {
            "type": "string",
            "description": "Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat.\nThe value for this field could be a number between `1` to `7` in string format. For instance, if the webinar should recur on Sunday, provide `1` as the value of this field.    \n   \n  **Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the webinar should recur on Sundays and Tuesdays, provide `1,3` as the value of this field.\n\n  \n `1`  - Sunday.   \n `2` - Monday.  \n `3` - Tuesday.  \n `4` -  Wednesday.  \n `5` -  Thursday.  \n `6` - Friday.  \n `7` - Saturday.\n\n",
            "example": "1",
            "x-ballerina-name": "weeklyDays"
          }
        },
        "description": "Recurrence object. Use this object only for a webinar of type `9`, a recurring webinar with fixed time. "
      },
      "SipPhonesphoneIdBody": {
        "required": [
          "authorization_name",
          "domain",
          "password",
          "proxy_server",
          "proxy_server2",
          "proxy_server3",
          "register_server",
          "register_server2",
          "register_server3",
          "user_name",
          "voice_mail"
        ],
        "type": "object",
        "properties": {
          "register_server3": {
            "type": "string",
            "description": "The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address",
            "example": "192.0.2.5",
            "x-ballerina-name": "registerServer3"
          },
          "transport_protocol3": {
            "type": "string",
            "description": "Protocols supported by the SIP provider.  \n  The value must be either `UDP`, `TCP`, `TLS`, `AUTO`",
            "example": "UDP",
            "enum": [
              "UDP",
              "TCP",
              "TLS",
              "AUTO"
            ],
            "x-ballerina-name": "transportProtocol3"
          },
          "user_name": {
            "maxLength": 64,
            "type": "string",
            "description": "The phone number associated with the user in the SIP account",
            "example": "Jill Chill",
            "x-ballerina-name": "userName"
          },
          "register_server2": {
            "type": "string",
            "description": "The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address",
            "example": "192.0.2.3",
            "x-ballerina-name": "registerServer2"
          },
          "transport_protocol2": {
            "type": "string",
            "description": "Protocols supported by the SIP provider.  \n  The value must be either `UDP`, `TCP`, `TLS`, `AUTO`",
            "example": "UDP",
            "enum": [
              "UDP",
              "TCP",
              "TLS",
              "AUTO"
            ],
            "x-ballerina-name": "transportProtocol2"
          },
          "proxy_server": {
            "type": "string",
            "description": "The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server",
            "example": "192.0.2.2",
            "x-ballerina-name": "proxyServer"
          },
          "proxy_server2": {
            "type": "string",
            "description": "The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server",
            "example": "192.0.2.4",
            "x-ballerina-name": "proxyServer2"
          },
          "proxy_server3": {
            "type": "string",
            "description": "The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server",
            "example": "192.0.2.6",
            "x-ballerina-name": "proxyServer3"
          },
          "registration_expire_time": {
            "maximum": 127,
            "minimum": 1,
            "type": "integer",
            "description": "The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server",
            "example": 60,
            "default": 60,
            "x-ballerina-name": "registrationExpireTime"
          },
          "password": {
            "type": "string",
            "description": "The password generated for the user in the SIP account",
            "example": "123456"
          },
          "voice_mail": {
            "maxLength": 255,
            "type": "string",
            "description": "The number to dial for checking voicemail",
            "example": "4000",
            "x-ballerina-name": "voiceMail"
          },
          "domain": {
            "maxLength": 64,
            "type": "string",
            "description": "The name or IP address of your provider's SIP domain (example: CDC.WEB). ",
            "example": "example.com"
          },
          "register_server": {
            "type": "string",
            "description": "The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address",
            "example": "192.0.2.1",
            "x-ballerina-name": "registerServer"
          },
          "authorization_name": {
            "maxLength": 64,
            "type": "string",
            "description": "The authorization name of the user that is registered for SIP phone",
            "example": "testname",
            "x-ballerina-name": "authorizationName"
          },
          "transport_protocol": {
            "type": "string",
            "description": "Protocols supported by the SIP provider.  \n  The value must be either `UDP`, `TCP`, `TLS`, `AUTO`",
            "example": "UDP",
            "enum": [
              "UDP",
              "TCP",
              "TLS",
              "AUTO"
            ],
            "x-ballerina-name": "transportProtocol"
          }
        }
      },
      "WebinarIdRegistrantsBody": {
        "description": "Information about the webinar registrant",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebinarswebinarIdregistrantsAllOf1"
          },
          {
            "$ref": "#/components/schemas/WebinarswebinarIdregistrantswebinarswebinarIdregistrantsAllOf12"
          }
        ]
      },
      "InlineResponse2018Recurrence": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "end_date_time": {
            "type": "string",
            "description": "Select the final date when the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. Cannot be used with `end_times`",
            "format": "date-time",
            "example": "2022-04-02T15:59:00Z",
            "x-ballerina-name": "endDateTime"
          },
          "end_times": {
            "maximum": 60,
            "type": "integer",
            "description": "Select how many times the meeting should recur before it is canceled. If `end_times` is set to 0, it means there is no end time. The maximum number of recurring is 60. Cannot be used with `end_date_time`",
            "example": 7,
            "default": 1,
            "x-ballerina-name": "endTimes"
          },
          "monthly_week": {
            "type": "integer",
            "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.   \n `-1` - Last week of the month.  \n `1` - First week of the month.  \n `2` - Second week of the month.  \n `3` - Third week of the month.  \n `4` - Fourth week of the month",
            "example": 1,
            "enum": [
              -1,
              1,
              2,
              3,
              4
            ],
            "x-enum-descriptions": [
              "Last week",
              "First week",
              "Second week",
              "Third week",
              "Fourth week"
            ],
            "x-ballerina-name": "monthlyWeek"
          },
          "monthly_week_day": {
            "type": "integer",
            "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n  \n `1` - Sunday.  \n `2` - Monday.  \n `3` - Tuesday.  \n `4` -  Wednesday.  \n `5` - Thursday.  \n `6` - Friday.  \n `7` - Saturday",
            "example": 1,
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "x-enum-descriptions": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-ballerina-name": "monthlyWeekDay"
          },
          "repeat_interval": {
            "type": "integer",
            "description": "Define the interval for the meeting to recur. For instance, to schedule a meeting that recurs every two months, set this field's value to `2` and the value of the `type` parameter as `3`. \n\nFor a daily meeting, the maximum interval you can set is `99` days. For a weekly meeting the maximum interval that you can set is  of `50` weeks. For a monthly meeting, there is a maximum of `10` months.\n\n",
            "example": 1,
            "x-ballerina-name": "repeatInterval"
          },
          "monthly_day": {
            "type": "integer",
            "description": "Use this field only if you're scheduling a recurring meeting of type `3` to state the day in a month when the meeting should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the meeting to recur on 23rd of each month, provide `23` as this field's value and `1` as the `repeat_interval` field's value. Instead, to have the meeting recur every three months on 23rd of the month, change the value of the `repeat_interval` field to `3`",
            "example": 1,
            "default": 1,
            "x-ballerina-name": "monthlyDay"
          },
          "type": {
            "type": "integer",
            "description": "Recurrence meeting types.\n `1` - Daily.  \n `2` - Weekly.  \n `3` - Monthly",
            "example": 1,
            "enum": [
              1,
              2,
              3
            ],
            "x-enum-descriptions": [
              "Daily",
              "Weekly",
              "Monthly"
            ]
          },
          "weekly_days": {
            "type": "string",
            "description": "This field is required **if you're scheduling a recurring meeting of type** `2` to state the days of the week when the meeting should repeat.\n \n  This field's value could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `1` as this field's value.  \n   \n  **Note:** If you would like the meeting to occur on multiple days of a week, provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays, provide `1,3` as this field's value.\n\n   \n `1`  - Sunday.   \n `2` - Monday.  \n `3` - Tuesday.  \n `4` -  Wednesday.  \n `5` -  Thursday.  \n `6` - Friday.  \n `7` - Saturday",
            "example": "1",
            "default": "1",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7"
            ],
            "x-ballerina-name": "weeklyDays"
          }
        },
        "description": "Recurrence object. Use this object only for a meeting with type `8`, a recurring meeting with fixed time. "
      },
      "InlineResponse20028InlineResponse20028AllOf12": {
        "type": "object",
        "properties": {
          "meetings": {
            "type": "array",
            "description": "List of meeting objects",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20028Meetings"
            }
          }
        }
      },
      "InlineResponse20063Settings": {
        "type": "object",
        "properties": {
          "post_webinar_survey": {
            "type": "boolean",
            "description": "Zoom will open a survey page in attendees' browsers after leaving the webinar",
            "example": true,
            "x-ballerina-name": "postWebinarSurvey"
          },
          "authentication_option": {
            "type": "string",
            "description": "Webinar authentication option id",
            "example": "signIn_D8cJuqWVQ623CI4Q8yQK0Q",
            "x-ballerina-name": "authenticationOption"
          },
          "email_language": {
            "type": "string",
            "description": "Set the email language. The only options are\n`en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`",
            "example": "en-US",
            "x-ballerina-name": "emailLanguage"
          },
          "allow_host_control_participant_mute_state": {
            "type": "boolean",
            "description": "Whether to allow the host and co-hosts to fully control the mute state of participants",
            "example": false,
            "default": false,
            "x-ballerina-name": "allowHostControlParticipantMuteState"
          },
          "sign_language_interpretation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebinarswebinarIdSettingsSignLanguageInterpretation"
              }
            ],
            "x-ballerina-name": "signLanguageInterpretation"
          },
          "send_1080p_video_to_attendees": {
            "type": "boolean",
            "description": "Always send 1080p video to attendees",
            "example": false,
            "default": false,
            "x-ballerina-name": "send1080pVideoToAttendees"
          },
          "show_share_button": {
            "type": "boolean",
            "description": "Show social share buttons on the registration page",
            "example": true,
            "x-ballerina-name": "showShareButton"
          },
          "hd_video": {
            "type": "boolean",
            "description": "Default to HD video",
            "example": false,
            "default": false,
            "x-ballerina-name": "hdVideo"
          },
          "registrants_confirmation_email": {
            "type": "boolean",
            "description": "Send confirmation email to registrants",
            "example": true,
            "x-ballerina-name": "registrantsConfirmationEmail"
          },
          "registration_type": {
            "type": "integer",
            "description": "Registration types. Only used for recurring webinars with a fixed time.  \n `1` - Attendees register once and can attend any of the webinar sessions.  \n `2` - Attendees need to register for each session in order to attend.  \n `3` - Attendees register once and can choose one or more sessions to attend",
            "example": 1,
            "default": 1,
            "enum": [
              1,
              2,
              3
            ],
            "x-enum-descriptions": [
              "Attendees register once and can attend any of the occurrences",
              "Attendees need to register for each occurrence to attend",
              "Attendees register once and can choose one or more occurrences to attend"
            ],
            "x-ballerina-name": "registrationType"
          },
          "contact_email": {
            "type": "string",
            "description": "Contact email for registration",
            "example": "jchill@example.com",
            "x-ballerina-name": "contactEmail"
          },
          "allow_multiple_devices": {
            "type": "boolean",
            "description": "Allow attendees to join from multiple devices",
            "example": true,
            "x-ballerina-name": "allowMultipleDevices"
          },
          "meeting_authentication": {
            "type": "boolean",
            "description": "Only authenticated users can join the webinar",
            "example": true,
            "x-ballerina-name": "meetingAuthentication"
          },
          "survey_url": {
            "type": "string",
            "description": "Survey URL for post webinar survey",
            "example": "https://example.com",
            "x-ballerina-name": "surveyUrl"
          },
          "alternative_hosts": {
            "type": "string",
            "description": "Alternative host emails or IDs. Multiple values separated by comma",
            "example": "jchill@example.com",
            "x-ballerina-name": "alternativeHosts"
          },
          "alternative_host_update_polls": {
            "type": "boolean",
            "description": "Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher",
            "example": true,
            "x-ballerina-name": "alternativeHostUpdatePolls"
          },
          "follow_up_absentees_email_notification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsersuserIdwebinarsSettingsFollowUpAbsenteesEmailNotification"
              }
            ],
            "x-ballerina-name": "followUpAbsenteesEmailNotification"
          },
          "add_audio_watermark": {
            "type": "boolean",
            "description": "Add audio watermark that identifies the participants",
            "example": true,
            "x-ballerina-name": "addAudioWatermark"
          },
          "audio": {
            "type": "string",
            "description": "Determine how participants can join the audio portion of the webinar",
            "example": "telephony",
            "default": "both",
            "enum": [
              "both",
              "telephony",
              "voip",
              "thirdParty"
            ],
            "x-enum-descriptions": [
              "Both Telephony and VoIP",
              "Telephony only",
              "VoIP only",
              "Third party audio conference"
            ]
          },
          "authentication_name": {
            "type": "string",
            "description": "Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)",
            "example": "Sign in to Zoom",
            "x-ballerina-name": "authenticationName"
          },
          "notify_registrants": {
            "type": "boolean",
            "description": "Send notification email to registrants when the host updates a webinar",
            "example": true,
            "x-ballerina-name": "notifyRegistrants"
          },
          "practice_session": {
            "type": "boolean",
            "description": "Enable practice session",
            "example": false,
            "default": false,
            "x-ballerina-name": "practiceSession"
          },
          "enforce_login_domains": {
            "type": "string",
            "description": "Only signed in users with specified domains can join meetings.\n\n**This field is deprecated and will not be supported in the future.**    \n\n As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar",
            "example": "example.com",
            "deprecated": true,
            "x-ballerina-name": "enforceLoginDomains"
          },
          "global_dial_in_countries": {
            "type": "array",
            "description": "List of global dial-in countries",
            "items": {
              "type": "string",
              "example": "US"
            },
            "x-ballerina-name": "globalDialInCountries"
          },
          "registrants_restrict_number": {
            "maximum": 20000,
            "minimum": 0,
            "type": "integer",
            "description": "Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number",
            "example": 100,
            "default": 0,
            "x-ballerina-name": "registrantsRestrictNumber"
          },
          "question_and_answer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InlineResponse20063SettingsQuestionAndAnswer"
              }
            ],
            "x-ballerina-name": "questionAndAnswer"
          },
          "contact_name": {
            "type": "string",
            "description": "Contact name for registration",
            "example": "Jill Chill",
            "x-ballerina-name": "contactName"
          },
          "attendees_and_panelists_reminder_email_notification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebinarswebinarIdSettingsAttendeesAndPanelistsReminderEmailNotification"
              }
            ],
            "x-ballerina-name": "attendeesAndPanelistsReminderEmailNotification"
          },
          "registrants_email_notification": {
            "type": "boolean",
            "description": "Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field",
            "example": true,
            "x-ballerina-name": "registrantsEmailNotification"
          },
          "approval_type": {
            "type": "integer",
            "description": "`0` - Automatically approve.  \n `1` - Manually approve.  \n `2` - No registration required",
            "example": 0,
            "default": 2,
            "enum": [
              0,
              1,
              2
            ],
            "x-enum-descriptions": [
              "Automatically Approve",
              "Manually Approve",
              "No Registration Required"
            ],
            "x-ballerina-name": "approvalType"
          },
          "close_registration": {
            "type": "boolean",
            "description": "Close registration after event date",
            "example": true,
            "deprecated": true,
            "x-ballerina-name": "closeRegistration"
          },
          "auto_recording": {
            "type": "string",
            "description": "Automatic recording. \n `local` - Record on local.  \n `cloud` -  Record on cloud.  \n `none` - Disabled",
            "example": "cloud",
            "default": "none",
            "enum": [
              "local",
              "cloud",
              "none"
            ],
            "x-enum-descriptions": [
              "Record to local device",
              "Record to cloud",
              "No Recording"
            ],
            "x-ballerina-name": "autoRecording"
          },
          "host_video": {
            "type": "boolean",
            "description": "Start video when host joins webinar",
            "example": true,
            "x-ballerina-name": "hostVideo"
          },
          "language_interpretation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InlineResponse20063SettingsLanguageInterpretation"
              }
            ],
            "x-ballerina-name": "languageInterpretation"
          },
          "panelists_video": {
            "type": "boolean",
            "description": "Start video when panelists join webinar",
            "example": true,
            "x-ballerina-name": "panelistsVideo"
          },
          "add_watermark": {
            "type": "boolean",
            "description": "Add watermark that identifies the viewing participant",
            "example": true,
            "x-ballerina-name": "addWatermark"
          },
          "enforce_login": {
            "type": "boolean",
            "description": "Only signed in users can join this meeting.\n\n**This field is deprecated and will not be supported in the future.**    \n\n As an alternative, use the `meeting_authentication`, `authentication_option` and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar",
            "example": true,
            "deprecated": true,
            "x-ballerina-name": "enforceLogin"
          },
          "on_demand": {
            "type": "boolean",
            "description": "Make the webinar on-demand",
            "example": false,
            "default": false,
            "x-ballerina-name": "onDemand"
          },
          "hd_video_for_attendees": {
            "type": "boolean",
            "description": "Whether HD video for attendees is enabled",
            "example": false,
            "default": false,
            "x-ballerina-name": "hdVideoForAttendees"
          },
          "panelists_invitation_email_notification": {
            "type": "boolean",
            "description": "Send invitation email to panelists. If `false`, do not send invitation email to panelists",
            "example": true,
            "x-ballerina-name": "panelistsInvitationEmailNotification"
          },
          "panelist_authentication": {
            "type": "boolean",
            "description": "Require panelists to authenticate to join",
            "example": true,
            "x-ballerina-name": "panelistAuthentication"
          },
          "enable_session_branding": {
            "type": "boolean",
            "description": "Whether the **Webinar Session Branding** setting is enabled. This setting lets hosts visually customize a webinar by setting a session background. This also lets hosts use [webinar session branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding) to set the Virtual Background for and apply name tags to hosts, alternative hosts, panelists, interpreters, and speakers",
            "example": true,
            "x-ballerina-name": "enableSessionBranding"
          },
          "audio_conference_info": {
            "maxLength": 2048,
            "type": "string",
            "description": "Third party audio conference info",
            "example": "test",
            "x-ballerina-name": "audioConferenceInfo"
          },
          "authentication_domains": {
            "type": "string",
            "description": "If user has configured [**Sign Into Zoom with Specified Domains**](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated",
            "example": "example.com",
            "x-ballerina-name": "authenticationDomains"
          },
          "follow_up_attendees_email_notification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebinarswebinarIdSettingsFollowUpAttendeesEmailNotification"
              }
            ],
            "x-ballerina-name": "followUpAttendeesEmailNotification"
          },
          "email_in_attendee_report": {
            "type": "boolean",
            "description": "Whether to include guest's email addresses in webinars' attendee reports",
            "example": true,
            "x-ballerina-name": "emailInAttendeeReport"
          }
        },
        "description": "Webinar settings"
      },
      "MeetingsmeetingIdregistrantsmeetingsmeetingIdregistrantsAllOf12": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "The registrant's language preference for confirmation emails: \n* `en-US` &mdash; English (US) \n* `de-DE` &mdash; German (Germany) \n* `es-ES` &mdash; Spanish (Spain) \n* `fr-FR` &mdash; French (France) \n* `jp-JP` &mdash; Japanese \n* `pt-PT` &mdash; Portuguese (Portugal) \n* `ru-RU` &mdash; Russian \n* `zh-CN` &mdash; Chinese (PRC) \n* `zh-TW` &mdash; Chinese (Taiwan) \n* `ko-KO` &mdash; Korean \n* `it-IT` &mdash; Italian (Italy) \n* `vi-VN` &mdash; Vietnamese \n* `pl-PL` &mdash; Polish \n* `Tr-TR` &mdash; Turkish",
            "example": "en-US",
            "enum": [
              "en-US",
              "de-DE",
              "es-ES",
              "fr-FR",
              "jp-JP",
              "pt-PT",
              "ru-RU",
              "zh-CN",
              "zh-TW",
              "ko-KO",
              "it-IT",
              "vi-VN",
              "pl-PL",
              "Tr-TR"
            ]
          }
        }
      },
      "InlineResponse20036FeatureUsed": {
        "type": "object",
        "properties": {
          "breakout_room": {
            "type": "boolean",
            "description": "Whether breakout room was enabled in the meeting",
            "example": false,
            "x-ballerina-name": "breakoutRoom"
          },
          "video_on": {
            "type": "boolean",
            "description": "Whether the video was on in the meeting",
            "example": true,
            "x-ballerina-name": "videoOn"
          },
          "meeting_questions": {
            "type": "boolean",
            "description": "Whether the meeting questions was enabled",
            "example": false,
            "x-ballerina-name": "meetingQuestions"
          },
          "file_sharing": {
            "type": "boolean",
            "description": "Whether anyone sent files in the meeting chat",
            "example": true,
            "x-ballerina-name": "fileSharing"
          },
          "poll": {
            "type": "boolean",
            "description": "Whether the meeting has poll data",
            "example": true
          },
          "screen_sharing": {
            "type": "boolean",
            "description": "Whether the screen was shared in the meeting",
            "example": true,
            "x-ballerina-name": "screenSharing"
          },
          "whiteboard": {
            "type": "boolean",
            "description": "Whether a whiteboard was used in the meeting",
            "example": true
          },
          "switch_to_mobile": {
            "type": "boolean",
            "description": "Whether anyone switched the meeting to their mobile phone",
            "example": false,
            "x-ballerina-name": "switchToMobile"
          },
          "raise_hand": {
            "type": "boolean",
            "description": "Whether anyone has raised hand in the meeting",
            "example": true,
            "x-ballerina-name": "raiseHand"
          },
          "in_meeting_chat": {
            "type": "boolean",
            "description": "Whether anyone in the meeting has sent a message in the meeting chat",
            "example": false,
            "x-ballerina-name": "inMeetingChat"
          },
          "closed_caption": {
            "type": "boolean",
            "description": "Whether closed caption was enabled in the meeting",
            "example": false,
            "x-ballerina-name": "closedCaption"
          },
          "waiting_room": {
            "type": "boolean",
            "description": "Whether to open the waiting room for the meeting",
            "example": false,
            "x-ballerina-name": "waitingRoom"
          },
          "virtual_background": {
            "type": "boolean",
            "description": "Whether anyone used a virtual background in the meeting",
            "example": true,
            "x-ballerina-name": "virtualBackground"
          },
          "telephone_usage": {
            "type": "boolean",
            "description": "Whether anyone has joined the meeting by telephone",
            "example": true,
            "x-ballerina-name": "telephoneUsage"
          },
          "live_transcription": {
            "type": "boolean",
            "description": "Whether live transcription was turned on",
            "example": false,
            "x-ballerina-name": "liveTranscription"
          },
          "annotation": {
            "type": "boolean",
            "description": "Whether annotation was used in the meeting",
            "example": false
          },
          "smart_recording": {
            "type": "boolean",
            "description": "Whether smart recording was enabled for the meeting",
            "example": true,
            "x-ballerina-name": "smartRecording"
          },
          "reaction": {
            "type": "boolean",
            "description": "Whether anyone sent an emoticon",
            "example": true
          },
          "zoom_apps": {
            "type": "boolean",
            "description": "Whether the Zoom app was used in the meeting",
            "example": false,
            "x-ballerina-name": "zoomApps"
          },
          "avatar": {
            "type": "boolean",
            "description": "Whether anyone used an avatar in the meeting",
            "example": true
          },
          "language_interpretation": {
            "type": "boolean",
            "description": "Whether language translation was used in the meeting",
            "example": false,
            "x-ballerina-name": "languageInterpretation"
          },
          "record_to_cloud": {
            "type": "boolean",
            "description": "Whether to record the meeting to the cloud",
            "example": true,
            "x-ballerina-name": "recordToCloud"
          },
          "join_by_room": {
            "type": "boolean",
            "description": "Whether anyone has joined the meeting by Zoom Room",
            "example": false,
            "x-ballerina-name": "joinByRoom"
          },
          "remote_control": {
            "type": "boolean",
            "description": "Whether to use remote control in the meeting",
            "example": true,
            "x-ballerina-name": "remoteControl"
          },
          "live_translation": {
            "type": "boolean",
            "description": "Whether live translation was used in the meeting",
            "example": false,
            "x-ballerina-name": "liveTranslation"
          },
          "meeting_summary": {
            "type": "boolean",
            "description": "Whether the meeting summary was enabled",
            "example": false,
            "x-ballerina-name": "meetingSummary"
          },
          "registration": {
            "type": "boolean",
            "description": "Whether registration was enabled for the meeting",
            "example": false
          },
          "immersive_scene": {
            "type": "boolean",
            "description": "Whether immersive scene was enabled in then meeting",
            "example": false,
            "x-ballerina-name": "immersiveScene"
          },
          "record_to_computer": {
            "type": "boolean",
            "description": "Whether to record the meeting to the local computer",
            "example": true,
            "x-ballerina-name": "recordToComputer"
          }
        },
        "description": "VFfeatures used in the meeting"
      },
      "InlineResponse2012Questions": {
        "type": "object",
        "properties": {
          "answer_required": {
            "type": "boolean",
            "description": "Whether participants must answer the question: \n* `true` &mdash; The participant must answer the question. \n* `false` &mdash; The participant does not need to answer the question",
            "example": false,
            "x-ballerina-name": "answerRequired"
          },
          "answer_min_character": {
            "type": "integer",
            "description": "The allowed minimum number of characters. This field only returns for `short_answer` and `long_answer` polls",
            "example": 1,
            "x-ballerina-name": "answerMinCharacter"
          },
          "rating_min_value": {
            "type": "integer",
            "description": "The rating scale's minimum value. This field only returns for `rating_scale` polls",
            "example": 0,
            "x-ballerina-name": "ratingMinValue"
          },
          "answers": {
            "type": "array",
            "description": "The poll question's available answers",
            "items": {
              "type": "string",
              "example": "Extremely useful"
            }
          },
          "type": {
            "type": "string",
            "description": "The poll's question and answer type: \n* `single` &mdash; Single choice. \n* `multiple` &mdash; Multiple choice. \n* `matching` &mdash; Matching. \n* `rank_order` &mdash; Rank order. \n* `short_answer` &mdash; Short answer. \n* `long_answer` &mdash; Long answer. \n* `fill_in_the_blank` &mdash; Fill in the blank. \n* `rating_scale` &mdash; Rating scale",
            "example": "single",
            "enum": [
              "single",
              "multiple",
              "matching",
              "rank_order",
              "short_answer",
              "long_answer",
              "fill_in_the_blank",
              "rating_scale"
            ],
            "x-enum-descriptions": [
              "Single choice",
              "Multiple choice",
              "Matching",
              "Rank order",
              "Short answer",
              "Long answer",
              "Fill in the blank",
              "Rating scale"
            ]
          },
          "answer_max_character": {
            "type": "integer",
            "description": "The allowed maximum number of characters. This field only returns for `short_answer` and `long_answer` polls",
            "example": 200,
            "x-ballerina-name": "answerMaxCharacter"
          },
          "rating_max_value": {
            "maximum": 10,
            "type": "integer",
            "description": "The rating scale's maximum value. This field only returns for `rating_scale` polls",
            "example": 4,
            "x-ballerina-name": "ratingMaxValue"
          },
          "right_answers": {
            "type": "array",
            "description": "The poll question's correct answer(s)",
            "items": {
              "type": "string",
              "example": "Good"
            },
            "x-ballerina-name": "rightAnswers"
          },
          "show_as_dropdown": {
            "type": "boolean",
            "description": "Whether to display the radio selection as a drop-down box: \n* `true` &mdash; Show as a drop-down box. \n* `false` &mdash; Do not show as a drop-down box",
            "example": false,
            "x-ballerina-name": "showAsDropdown"
          },
          "rating_min_label": {
            "type": "string",
            "description": "The low score label for the `rating_min_value` field. This field only returns for `rating_scale` polls",
            "example": "Not likely",
            "x-ballerina-name": "ratingMinLabel"
          },
          "case_sensitive": {
            "type": "boolean",
            "description": "Whether the correct answer is case sensitive. This field only returns for `fill_in_the_blank` polls: \n* `true` &mdash; The answer is case-sensitive. \n* `false` &mdash; The answer is not case-sensitive",
            "example": false,
            "default": false,
            "x-ballerina-name": "caseSensitive"
          },
          "name": {
            "type": "string",
            "description": "The poll question's title. For `fill_in_the_blank` polls, this field is the poll's question",
            "example": "How useful was this meeting?"
          },
          "rating_max_label": {
            "type": "string",
            "description": "The high score label for the `rating_max_value` field. This field only returns for `rating_scale` polls",
            "example": "Extremely Likely",
            "x-ballerina-name": "ratingMaxLabel"
          },
          "prompts": {
            "type": "array",
            "description": "The information about the prompt questions. This object only returns for `matching` and `rank_order` polls",
            "items": {
              "$ref": "#/components/schemas/InlineResponse2012Prompts"
            }
          }
        }
      },
      "MeetingRegistrantQuestions": {
        "title": "Meeting Registrant Questions",
        "type": "object",
        "properties": {
          "custom_questions": {
            "type": "array",
            "description": "Array of Registrant Custom Questions",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdregistrantsquestionsCustomQuestions"
            },
            "x-ballerina-name": "customQuestions"
          },
          "questions": {
            "type": "array",
            "description": "Array of registrant questions",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdregistrantsquestionsQuestions"
            }
          }
        },
        "description": "Meeting Registrant Questions"
      },
      "InlineResponse20045AllOf1": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string",
            "description": "The next page token is used to paginate through large result sets. A next page token returns when the set of available results exceeds the current page size. The expiration period for this token is 15 minutes",
            "example": "b43YBRLJFg3V4vsSpxvGdKIGtNbxn9h9If2",
            "x-ballerina-name": "nextPageToken"
          },
          "upcoming_events": {
            "type": "array",
            "description": "Information about the upcoming event",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20045UpcomingEvents"
            },
            "x-ballerina-name": "upcomingEvents"
          },
          "from": {
            "type": "string",
            "description": "The report's start date. This value must be within the past six months",
            "format": "date",
            "example": "2022-03-01"
          },
          "to": {
            "type": "string",
            "description": "The report's end date. This value must be within the past six months and cannot exceed a month from the `from` value",
            "format": "date",
            "example": "2022-03-25"
          },
          "page_size": {
            "maximum": 300,
            "type": "integer",
            "description": "The number of records returned in a single API call",
            "example": 30,
            "default": 30,
            "x-ballerina-name": "pageSize"
          }
        }
      },
      "InlineResponse20027Templates": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The template name",
            "example": "My meeting template"
          },
          "id": {
            "type": "string",
            "description": "The template ID",
            "example": "AdxbhxCzKgSiWAw"
          },
          "type": {
            "type": "integer",
            "description": "The template type:   \n \n`1`: Meeting template   \n \n`2`: Admin meeting template",
            "example": 1
          }
        }
      },
      "InlineResponse20114Occurrences": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "integer",
            "description": "Duration",
            "example": 60
          },
          "start_time": {
            "type": "string",
            "description": "Start time",
            "format": "date-time",
            "example": "2022-03-25T07:46:00Z",
            "x-ballerina-name": "startTime"
          },
          "occurrence_id": {
            "type": "string",
            "description": "Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences",
            "example": "1648194360000",
            "x-ballerina-name": "occurrenceId"
          },
          "status": {
            "type": "string",
            "description": "Occurrence status. \n `available` - Available occurrence.  \n `deleted` -  Deleted occurrence",
            "example": "available",
            "enum": [
              "available",
              "deleted"
            ]
          }
        },
        "description": "Occurrence object. This object is only returned for recurring webinars"
      },
      "TrackingField4": {
        "title": "Tracking Field",
        "type": "object",
        "properties": {
          "recommended_values": {
            "type": "array",
            "description": "Array of recommended values",
            "items": {
              "type": "string",
              "example": "value1"
            },
            "x-ballerina-name": "recommendedValues"
          },
          "visible": {
            "type": "boolean",
            "description": "Tracking Field Visible",
            "example": true
          },
          "field": {
            "type": "string",
            "description": "Label/ Name for the tracking field",
            "example": "field1"
          },
          "required": {
            "type": "boolean",
            "description": "Tracking Field Required",
            "example": false
          }
        },
        "description": "Tracking Field"
      },
      "TrackingField3": {
        "title": "Tracking Field",
        "type": "object",
        "properties": {
          "recommended_values": {
            "type": "array",
            "description": "Array of recommended values",
            "items": {
              "type": "string",
              "example": "value1"
            },
            "x-ballerina-name": "recommendedValues"
          },
          "visible": {
            "type": "boolean",
            "description": "Tracking field visible",
            "example": true
          },
          "field": {
            "type": "string",
            "description": "Label or name for the tracking field",
            "example": "field1"
          },
          "id": {
            "type": "string",
            "description": "Tracking field's ID",
            "example": "a32CJji-weJ92"
          },
          "required": {
            "type": "boolean",
            "description": "Tracking field required",
            "example": false
          }
        },
        "description": "Tracking Field"
      },
      "InlineResponse20039Participants": {
        "type": "object",
        "properties": {
          "leave_time": {
            "type": "string",
            "description": "Participant leave time",
            "format": "date-time",
            "example": "2022-03-23T07:02:28Z",
            "x-ballerina-name": "leaveTime"
          },
          "user_email": {
            "type": "string",
            "description": "Participant email.\n\nIf the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](/docs/api-reference/using-zoom-apis#email-address) for details. This returns an empty string value if the account calling the API is a BAA account",
            "example": "jchill@example.com",
            "x-ballerina-name": "userEmail"
          },
          "registrant_id": {
            "type": "string",
            "description": "Unique identifier of the registrant. This field is only returned if you entered &quot;registrant_id&quot; as the value of `include_fields` query parameter",
            "example": "abcdefghij0-klmnopq23456",
            "x-ballerina-name": "registrantId"
          },
          "participant_user_id": {
            "type": "string",
            "description": "The participant's universally unique ID (UUID). \n* If the participant joins the meeting by logging into Zoom, this value is the `id` value in the [**Get a user**](/docs/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value",
            "example": "DYHrdpjrS3uaOf7dPkkg8w",
            "x-ballerina-name": "participantUserId"
          },
          "join_time": {
            "type": "string",
            "description": "Participant join time",
            "format": "date-time",
            "example": "2022-03-23T06:58:09Z",
            "x-ballerina-name": "joinTime"
          },
          "duration": {
            "type": "integer",
            "description": "Participant duration, in seconds, calculated by subtracting the `leave_time` from the `join_time` for the `user_id`. If the participant leaves and rejoins the same meeting, they are assigned a different `user_id` and Zoom displays their new duration in a separate object. Because of this, the duration may not reflect the total time the user was in the meeting",
            "example": 259
          },
          "customer_key": {
            "maxLength": 35,
            "type": "string",
            "description": "The participant's SDK identifier. This value can be alphanumeric, up to a maximum length of 35 characters",
            "example": "349589LkJyeW",
            "x-ballerina-name": "customerKey"
          },
          "bo_mtg_id": {
            "type": "string",
            "description": "The [breakout room](https://support.zoom.us/hc/en-us/articles/206476313-Managing-breakout-rooms) ID. Each breakout room is assigned a unique ID",
            "example": "27423744",
            "x-ballerina-name": "boMtgId"
          },
          "failover": {
            "type": "boolean",
            "description": "Indicates if failover happened during the meeting",
            "example": false
          },
          "user_id": {
            "type": "string",
            "description": "Participant ID. This is a unique ID assigned to the participant joining a meeting and is valid for that meeting only",
            "example": "27423744",
            "x-ballerina-name": "userId"
          },
          "name": {
            "type": "string",
            "description": "Participant display name.\n\nThis returns an empty string value if the account calling the API is a BAA account",
            "example": "example"
          },
          "id": {
            "type": "string",
            "description": "The participant's universally unique ID (UUID). \n* If the participant joins the meeting by logging into Zoom, this value is the `id` value in the [**Get a user**](/docs/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value. \n\n**Note:** Use the `participant_user_id` value instead of this value. We will remove this response in a future release",
            "example": "30R7kT7bTIKSNUFEuH_Qlg"
          },
          "status": {
            "type": "string",
            "description": "The participant's status. \n* `in_meeting` - In a meeting. \n* `in_waiting_room` - In a waiting room",
            "example": "in_meeting",
            "enum": [
              "in_meeting",
              "in_waiting_room"
            ]
          }
        }
      },
      "InlineResponse20111AllOf1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the TSP account",
            "example": "1"
          }
        }
      },
      "WebinarIdSipDialingBody": {
        "type": "object",
        "properties": {
          "passcode": {
            "type": "string",
            "description": "If customers want a passcode to be embedded in the SIP URI dial string, they must supply the passcode. Zoom will not validate the passcode",
            "example": "xxxx"
          }
        }
      },
      "RecordingsRegistrantsBody": {
        "description": "Registrant",
        "allOf": [
          {
            "$ref": "#/components/schemas/MeetingsmeetingIdrecordingsregistrantsAllOf1"
          }
        ]
      },
      "InlineResponse20030DedicatedDialInNumber": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "The dial-in country code",
            "example": "USA"
          },
          "number": {
            "maxLength": 16,
            "type": "string",
            "description": "The dial-in number",
            "example": "5550110"
          }
        }
      },
      "RegistrationListRegistrants": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RegistrantsAllOf1"
          },
          {
            "$ref": "#/components/schemas/RegistrantsRegistrantsAllOf12"
          },
          {
            "$ref": "#/components/schemas/RegistrantsRegistrantsRegistrantsAllOf123"
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "The registrant's status. \n* `approved` - Registrant is approved. \n* `denied` - Registrant is denied. \n* `pending` - Registrant is waiting for approval",
                "example": "approved",
                "enum": [
                  "approved",
                  "denied",
                  "pending"
                ]
              }
            }
          }
        ]
      },
      "InlineResponse20114Settings": {
        "type": "object",
        "properties": {
          "post_webinar_survey": {
            "type": "boolean",
            "description": "Zoom will open a survey page in attendees' browsers after leaving the webinar",
            "example": true,
            "x-ballerina-name": "postWebinarSurvey"
          },
          "authentication_option": {
            "type": "string",
            "description": "Webinar authentication option ID",
            "example": "signIn_D8cJuqWVQ623CI4Q8yQK0Q",
            "x-ballerina-name": "authenticationOption"
          },
          "email_language": {
            "type": "string",
            "description": "Set the email language.\n`en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`",
            "example": "en-US",
            "x-ballerina-name": "emailLanguage"
          },
          "allow_host_control_participant_mute_state": {
            "type": "boolean",
            "description": "Whether to allow host and co-hosts to fully control the mute state of participants. Not supported for simulive webinar. If not provided, the default value will be based on the user's setting",
            "example": false,
            "x-ballerina-name": "allowHostControlParticipantMuteState"
          },
          "sign_language_interpretation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsersuserIdwebinarsSettingsSignLanguageInterpretation"
              }
            ],
            "x-ballerina-name": "signLanguageInterpretation"
          },
          "send_1080p_video_to_attendees": {
            "type": "boolean",
            "description": "Always send 1080p video to attendees",
            "example": false,
            "default": false,
            "x-ballerina-name": "send1080pVideoToAttendees"
          },
          "show_share_button": {
            "type": "boolean",
            "description": "Show social share buttons on the registration page",
            "example": true,
            "x-ballerina-name": "showShareButton"
          },
          "hd_video": {
            "type": "boolean",
            "description": "Default to HD video",
            "example": false,
            "default": false,
            "x-ballerina-name": "hdVideo"
          },
          "registrants_confirmation_email": {
            "type": "boolean",
            "description": "Send confirmation email to registrants",
            "example": true,
            "x-ballerina-name": "registrantsConfirmationEmail"
          },
          "registration_type": {
            "type": "integer",
            "description": "Registration types. Only used for recurring webinars with a fixed time.  \n `1` - Attendees register once and can attend any of the webinar sessions.  \n `2` - Attendees need to register for each session in order to attend.  \n `3` - Attendees register once and can choose one or more sessions to attend",
            "example": 1,
            "default": 1,
            "enum": [
              1,
              2,
              3
            ],
            "x-enum-descriptions": [
              "Attendees register once and can attend any of the occurrences",
              "Attendees need to register for each occurrence to attend",
              "Attendees register once and can choose one or more occurrences to attend"
            ],
            "x-ballerina-name": "registrationType"
          },
          "contact_email": {
            "type": "string",
            "description": "Contact email for registration",
            "example": "jchill@example.com",
            "x-ballerina-name": "contactEmail"
          },
          "allow_multiple_devices": {
            "type": "boolean",
            "description": "Allow attendees to join from multiple devices",
            "example": true,
            "x-ballerina-name": "allowMultipleDevices"
          },
          "meeting_authentication": {
            "type": "boolean",
            "description": "Only authenticated users can join Webinar",
            "example": true,
            "x-ballerina-name": "meetingAuthentication"
          },
          "survey_url": {
            "type": "string",
            "description": "Survey url for post webinar survey",
            "example": "https://example.com",
            "x-ballerina-name": "surveyUrl"
          },
          "alternative_hosts": {
            "type": "string",
            "description": "Alternative host emails or IDs. Multiple values separated by comma",
            "example": "jchill@example.com",
            "x-ballerina-name": "alternativeHosts"
          },
          "alternative_host_update_polls": {
            "type": "boolean",
            "description": "Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher",
            "example": true,
            "x-ballerina-name": "alternativeHostUpdatePolls"
          },
          "follow_up_absentees_email_notification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsersuserIdwebinarsSettingsFollowUpAbsenteesEmailNotification"
              }
            ],
            "x-ballerina-name": "followUpAbsenteesEmailNotification"
          },
          "add_audio_watermark": {
            "type": "boolean",
            "description": "Add audio watermark that identifies the participants. If not provided, the default value will be based on the user's setting",
            "example": true,
            "x-ballerina-name": "addAudioWatermark"
          },
          "audio": {
            "type": "string",
            "description": "Determine how participants can join the audio portion of the webinar",
            "example": "telephony",
            "default": "both",
            "enum": [
              "both",
              "telephony",
              "voip",
              "thirdParty"
            ],
            "x-enum-descriptions": [
              "Both Telephony and VoIP",
              "Telephony only",
              "VoIP only",
              "Third party audio conference"
            ]
          },
          "authentication_name": {
            "type": "string",
            "description": "Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)",
            "example": "Sign in to Zoom",
            "x-ballerina-name": "authenticationName"
          },
          "notify_registrants": {
            "type": "boolean",
            "description": "Send notification email to registrants when the host updates a webinar",
            "example": true,
            "x-ballerina-name": "notifyRegistrants"
          },
          "practice_session": {
            "type": "boolean",
            "description": "Enable practice session",
            "example": false,
            "default": false,
            "x-ballerina-name": "practiceSession"
          },
          "enforce_login_domains": {
            "type": "string",
            "description": "Only signed in users with specified domains can join meetings.\n\n**This field is deprecated and will not be supported in the future.**\n\n As an alternative, use the `meeting_authentication`, `authentication_option` and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the webinar",
            "example": "example.com",
            "deprecated": true,
            "x-ballerina-name": "enforceLoginDomains"
          },
          "global_dial_in_countries": {
            "type": "array",
            "description": "List of global dial-in countries",
            "items": {
              "type": "string",
              "example": "US"
            },
            "x-ballerina-name": "globalDialInCountries"
          },
          "registrants_restrict_number": {
            "maximum": 20000,
            "minimum": 0,
            "type": "integer",
            "description": "Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number",
            "example": 100,
            "default": 0,
            "x-ballerina-name": "registrantsRestrictNumber"
          },
          "question_and_answer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InlineResponse20114SettingsQuestionAndAnswer"
              }
            ],
            "x-ballerina-name": "questionAndAnswer"
          },
          "contact_name": {
            "type": "string",
            "description": "Contact name for registration",
            "example": "Jill Chill",
            "x-ballerina-name": "contactName"
          },
          "attendees_and_panelists_reminder_email_notification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebinarswebinarIdSettingsAttendeesAndPanelistsReminderEmailNotification"
              }
            ],
            "x-ballerina-name": "attendeesAndPanelistsReminderEmailNotification"
          },
          "registrants_email_notification": {
            "type": "boolean",
            "description": "Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field",
            "example": true,
            "x-ballerina-name": "registrantsEmailNotification"
          },
          "approval_type": {
            "type": "integer",
            "description": "`0` - Automatically approve.  \n `1` - Manually approve.  \n `2` - No registration required",
            "example": 0,
            "default": 2,
            "enum": [
              0,
              1,
              2
            ],
            "x-enum-descriptions": [
              "Automatically Approve",
              "Manually Approve",
              "No Registration Required"
            ],
            "x-ballerina-name": "approvalType"
          },
          "close_registration": {
            "type": "boolean",
            "description": "Close registration after event date",
            "example": true,
            "deprecated": true,
            "x-ballerina-name": "closeRegistration"
          },
          "auto_recording": {
            "type": "string",
            "description": "Automatic recording. \n `local` - Record on local.  \n `cloud` -  Record on cloud.  \n `none` - Disabled",
            "example": "cloud",
            "default": "none",
            "enum": [
              "local",
              "cloud",
              "none"
            ],
            "x-enum-descriptions": [
              "Record to local device",
              "Record to cloud",
              "No Recording"
            ],
            "x-ballerina-name": "autoRecording"
          },
          "host_video": {
            "type": "boolean",
            "description": "Start video when host joins webinar",
            "example": true,
            "x-ballerina-name": "hostVideo"
          },
          "language_interpretation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsersuserIdwebinarsSettingsLanguageInterpretation"
              }
            ],
            "x-ballerina-name": "languageInterpretation"
          },
          "panelists_video": {
            "type": "boolean",
            "description": "Start video when panelists join webinar",
            "example": true,
            "x-ballerina-name": "panelistsVideo"
          },
          "add_watermark": {
            "type": "boolean",
            "description": "Add watermark that identifies the viewing participant. If not provided, the default value will be based on the user's setting",
            "example": true,
            "x-ballerina-name": "addWatermark"
          },
          "enforce_login": {
            "type": "boolean",
            "description": "Only signed in users can join this meeting.\n\n**This field is deprecated and will not be supported in the future.**\n\n As an alternative, use the `meeting_authentication`, `authentication_option` and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the webinar",
            "example": true,
            "deprecated": true,
            "x-ballerina-name": "enforceLogin"
          },
          "on_demand": {
            "type": "boolean",
            "description": "Make the webinar on-demand",
            "example": false,
            "default": false,
            "x-ballerina-name": "onDemand"
          },
          "hd_video_for_attendees": {
            "type": "boolean",
            "description": "Whether HD video for attendees is enabled",
            "example": false,
            "default": false,
            "x-ballerina-name": "hdVideoForAttendees"
          },
          "panelists_invitation_email_notification": {
            "type": "boolean",
            "description": "Send invitation email to panelists. If `false`, do not send invitation email to panelists",
            "example": true,
            "x-ballerina-name": "panelistsInvitationEmailNotification"
          },
          "panelist_authentication": {
            "type": "boolean",
            "description": "Require panelists to authenticate to join. If not provided, the default value will be based on the user's setting",
            "example": true,
            "x-ballerina-name": "panelistAuthentication"
          },
          "enable_session_branding": {
            "type": "boolean",
            "description": "Whether the **Webinar Session Branding** setting is enabled. This setting lets hosts visually customize a webinar by setting a session background. This also lets hosts use [Webinar Session Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding) to set the Virtual Background for and apply name tags to hosts, alternative hosts, panelists, interpreters, and speakers",
            "example": true,
            "x-ballerina-name": "enableSessionBranding"
          },
          "audio_conference_info": {
            "maxLength": 2048,
            "type": "string",
            "description": "Third party audio conference info",
            "example": "test",
            "x-ballerina-name": "audioConferenceInfo"
          },
          "authentication_domains": {
            "type": "string",
            "description": "If user has configured [**Sign Into Zoom with Specified Domains**](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated",
            "example": "example.com",
            "x-ballerina-name": "authenticationDomains"
          },
          "follow_up_attendees_email_notification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebinarswebinarIdSettingsFollowUpAttendeesEmailNotification"
              }
            ],
            "x-ballerina-name": "followUpAttendeesEmailNotification"
          },
          "email_in_attendee_report": {
            "type": "boolean",
            "description": "Whether to include guest's email addresses in attendee reports for webinars",
            "example": true,
            "x-ballerina-name": "emailInAttendeeReport"
          }
        },
        "description": "Webinar settings"
      },
      "InlineResponse2003InlineResponse2003InlineResponse2003AllOf123": {
        "description": "Returns a list of recording files for each participant. The API only returns this response when the **Record a separate audio file of each participant** setting is enabled",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "participant_audio_files": {
                "type": "array",
                "description": "A list of recording files. The API only returns this response when the **Record a separate audio file of each participant** setting is enabled",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "file_path": {
                          "type": "string",
                          "description": "The file path to the on-premise account recording. \n\n**Note:** This API only returns this field for Zoom on-premise accounts. It does **not** return the `download_url` field.",
                          "example": "/9090876528/path01/demo.mp4",
                          "x-ballerina-name": "filePath"
                        },
                        "play_url": {
                          "type": "string",
                          "description": "The URL where the recording file can be opened and played.",
                          "example": "https://example.com/rec/play/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                          "x-ballerina-name": "playUrl"
                        },
                        "file_name": {
                          "type": "string",
                          "description": "The recording file's name.",
                          "example": "test.json",
                          "x-ballerina-name": "fileName"
                        },
                        "file_type": {
                          "type": "string",
                          "description": "The recording file's format. \n\n* `MP4` - Video file.\n* `M4A` - Audio-only file.\n* `TIMELINE` - Timestamp file of the recording, in JSON file format. To get a timeline file, the **Add a timestamp to the recording** setting **must** be enabled in the [recording settings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0062627#h_3f14c3a4-d16b-4a3c-bbe5-ef7d24500048). The time will display in the host's timezone.\n* `TRANSCRIPT` - A transcript of the recording, in VTT format.\n* `CHAT` - A text file containing chat messages sent during the meeting.\n* `CC` - A file containing the closed captions of the recording, in VTT file format.\n* `CSV` - A file containing polling data, in CSV format.\n\nA recording file object with file the `CC` or `TIMELINE` value **does not** have the `id`, `status`, `file_size`, `recording_type`, and `play_url` properties.",
                          "example": "M4A",
                          "x-ballerina-name": "fileType"
                        },
                        "download_url": {
                          "type": "string",
                          "description": "The URL to download the recording. If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](/docs/integrations/oauth/) to download the file, and set the `access_token` as a Bearer token in the Authorization header.\n\n`curl -H 'Authorization: Bearer <ACCESS_TOKEN>' https://{{base-domain}}/rec/archive/download/xyz` \n\n**Note:** This field does **not** return for Zoom On-Premise accounts. Instead, this API will return the `file_path` field.",
                          "example": "https://example.com/rec/download/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                          "x-ballerina-name": "downloadUrl"
                        },
                        "id": {
                          "type": "string",
                          "description": "The recording file's unique ID. This is included in the general query response.",
                          "example": "a2f19f96-9294-4f51-8134-6f0eea108eb2"
                        },
                        "file_size": {
                          "type": "number",
                          "description": "The recording file's size, in bytes.",
                          "example": 65536,
                          "x-ballerina-name": "fileSize"
                        },
                        "recording_end": {
                          "type": "string",
                          "description": "The recording file's end time. This is included in the general query response.",
                          "format": "date-time",
                          "example": "2021-06-30T22:14:57Z",
                          "x-ballerina-name": "recordingEnd"
                        },
                        "recording_start": {
                          "type": "string",
                          "description": "The recording file's start time.",
                          "format": "date-time",
                          "example": "2021-06-30T22:14:57Z",
                          "x-ballerina-name": "recordingStart"
                        },
                        "status": {
                          "type": "string",
                          "description": "The recording file's status.",
                          "example": "completed",
                          "enum": [
                            "completed"
                          ]
                        }
                      },
                      "description": "The recording file object."
                    }
                  ]
                },
                "x-ballerina-name": "participantAudioFiles"
              }
            }
          }
        ]
      },
      "ArchiveFilesfileIdBody": {
        "required": [
          "auto_delete"
        ],
        "type": "object",
        "properties": {
          "auto_delete": {
            "type": "boolean",
            "description": "Whether to auto-delete the archived file",
            "example": true,
            "x-ballerina-name": "autoDelete"
          }
        }
      },
      "WebinarswebinarIdSettings": {
        "type": "object",
        "properties": {
          "post_webinar_survey": {
            "type": "boolean",
            "description": "Zoom will open a survey page in attendees' browsers after leaving the webinar",
            "example": true,
            "x-ballerina-name": "postWebinarSurvey"
          },
          "authentication_option": {
            "type": "string",
            "description": "Webinar authentication option ID",
            "example": "signIn_D8cJuqWVQ623CI4Q8yQK0Q",
            "x-ballerina-name": "authenticationOption"
          },
          "email_language": {
            "type": "string",
            "description": "Set the email language to one of the following.\n`en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`",
            "example": "en-US",
            "x-ballerina-name": "emailLanguage"
          },
          "allow_host_control_participant_mute_state": {
            "type": "boolean",
            "description": "Whether to allow host and co-hosts to fully control the mute state of participants",
            "example": false,
            "default": false,
            "x-ballerina-name": "allowHostControlParticipantMuteState"
          },
          "sign_language_interpretation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebinarswebinarIdSettingsSignLanguageInterpretation"
              }
            ],
            "x-ballerina-name": "signLanguageInterpretation"
          },
          "send_1080p_video_to_attendees": {
            "type": "boolean",
            "description": "Always send 1080p video to attendees",
            "example": false,
            "default": false,
            "x-ballerina-name": "send1080pVideoToAttendees"
          },
          "show_share_button": {
            "type": "boolean",
            "description": "Show social share buttons on the registration page",
            "example": true,
            "x-ballerina-name": "showShareButton"
          },
          "hd_video": {
            "type": "boolean",
            "description": "Default to HD video",
            "example": false,
            "default": false,
            "x-ballerina-name": "hdVideo"
          },
          "registrants_confirmation_email": {
            "type": "boolean",
            "description": "Send confirmation email to registrants",
            "example": true,
            "x-ballerina-name": "registrantsConfirmationEmail"
          },
          "registration_type": {
            "type": "integer",
            "description": "Registration types. Only used for recurring webinars with a fixed time.  \n `1` - Attendees register once and can attend any of the webinar sessions.  \n `2` - Attendees need to register for each session in order to attend.  \n `3` - Attendees register once and can choose one or more sessions to attend",
            "example": 1,
            "default": 1,
            "enum": [
              1,
              2,
              3
            ],
            "x-enum-descriptions": [
              "Attendees register once and can attend any of the occurrences",
              "Attendees need to register for each occurrence to attend",
              "Attendees register once and can choose one or more occurrences to attend"
            ],
            "x-ballerina-name": "registrationType"
          },
          "contact_email": {
            "type": "string",
            "description": "Contact email for registration",
            "example": "jchill@example.com",
            "x-ballerina-name": "contactEmail"
          },
          "allow_multiple_devices": {
            "type": "boolean",
            "description": "Allow attendees to join from multiple devices",
            "example": true,
            "x-ballerina-name": "allowMultipleDevices"
          },
          "meeting_authentication": {
            "type": "boolean",
            "description": "Only authenticated users can join the webinar",
            "example": true,
            "x-ballerina-name": "meetingAuthentication"
          },
          "survey_url": {
            "type": "string",
            "description": "Survey url for post webinar survey",
            "example": "https://example.com",
            "x-ballerina-name": "surveyUrl"
          },
          "alternative_hosts": {
            "type": "string",
            "description": "Alternative host emails or IDs. Separate multiple values by commas",
            "example": "jchill@example.com",
            "x-ballerina-name": "alternativeHosts"
          },
          "alternative_host_update_polls": {
            "type": "boolean",
            "description": "Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher",
            "example": true,
            "x-ballerina-name": "alternativeHostUpdatePolls"
          },
          "follow_up_absentees_email_notification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsersuserIdwebinarsSettingsFollowUpAbsenteesEmailNotification"
              }
            ],
            "x-ballerina-name": "followUpAbsenteesEmailNotification"
          },
          "add_audio_watermark": {
            "type": "boolean",
            "description": "Add audio watermark that identifies the participants",
            "example": true,
            "x-ballerina-name": "addAudioWatermark"
          },
          "audio": {
            "type": "string",
            "description": "Determine how participants can join the audio portion of the webinar",
            "example": "telephony",
            "default": "both",
            "enum": [
              "both",
              "telephony",
              "voip",
              "thirdParty"
            ],
            "x-enum-descriptions": [
              "Both Telephony and VoIP",
              "Telephony only",
              "VoIP only",
              "Third party audio conference"
            ]
          },
          "authentication_name": {
            "type": "string",
            "description": "Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)",
            "example": "Sign in to Zoom",
            "x-ballerina-name": "authenticationName"
          },
          "notify_registrants": {
            "type": "boolean",
            "description": "Send notification email to registrants when the host updates a webinar",
            "example": true,
            "x-ballerina-name": "notifyRegistrants"
          },
          "practice_session": {
            "type": "boolean",
            "description": "Enable practice session",
            "example": false,
            "default": false,
            "x-ballerina-name": "practiceSession"
          },
          "enforce_login_domains": {
            "type": "string",
            "description": "Only signed in users with specified domains can join meetings.\n\n**This field is deprecated and will not be supported in the future.**\n\n As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the webinar",
            "example": "example.com",
            "deprecated": true,
            "x-ballerina-name": "enforceLoginDomains"
          },
          "global_dial_in_countries": {
            "type": "array",
            "description": "List of global dial-in countries",
            "items": {
              "type": "string",
              "example": "US"
            },
            "x-ballerina-name": "globalDialInCountries"
          },
          "registrants_restrict_number": {
            "maximum": 20000,
            "minimum": 0,
            "type": "integer",
            "description": "Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number",
            "example": 100,
            "default": 0,
            "x-ballerina-name": "registrantsRestrictNumber"
          },
          "question_and_answer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebinarswebinarIdSettingsQuestionAndAnswer"
              }
            ],
            "x-ballerina-name": "questionAndAnswer"
          },
          "contact_name": {
            "type": "string",
            "description": "Contact name for registration",
            "example": "Jill Chill",
            "x-ballerina-name": "contactName"
          },
          "attendees_and_panelists_reminder_email_notification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebinarswebinarIdSettingsAttendeesAndPanelistsReminderEmailNotification"
              }
            ],
            "x-ballerina-name": "attendeesAndPanelistsReminderEmailNotification"
          },
          "registrants_email_notification": {
            "type": "boolean",
            "description": "Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field",
            "example": true,
            "x-ballerina-name": "registrantsEmailNotification"
          },
          "approval_type": {
            "type": "integer",
            "description": "`0` - Automatically approve.  \n `1` - Manually approve.  \n `2` - No registration required",
            "example": 0,
            "default": 2,
            "enum": [
              0,
              1,
              2
            ],
            "x-enum-descriptions": [
              "Automatically Approve",
              "Manually Approve",
              "No Registration Required"
            ],
            "x-ballerina-name": "approvalType"
          },
          "close_registration": {
            "type": "boolean",
            "description": "Close registration after event date",
            "example": true,
            "deprecated": true,
            "x-ballerina-name": "closeRegistration"
          },
          "auto_recording": {
            "type": "string",
            "description": "Automatic recording. \n `local` - Record on local.  \n `cloud` -  Record on cloud.  \n `none` - Disabled",
            "example": "cloud",
            "default": "none",
            "enum": [
              "local",
              "cloud",
              "none"
            ],
            "x-enum-descriptions": [
              "Record to local device",
              "Record to cloud",
              "No Recording"
            ],
            "x-ballerina-name": "autoRecording"
          },
          "host_video": {
            "type": "boolean",
            "description": "Start video when host joins the webinar",
            "example": true,
            "x-ballerina-name": "hostVideo"
          },
          "language_interpretation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebinarswebinarIdSettingsLanguageInterpretation"
              }
            ],
            "x-ballerina-name": "languageInterpretation"
          },
          "panelists_video": {
            "type": "boolean",
            "description": "Start video when panelists join the webinar",
            "example": true,
            "x-ballerina-name": "panelistsVideo"
          },
          "add_watermark": {
            "type": "boolean",
            "description": "Add watermark that identifies the viewing participant",
            "example": true,
            "x-ballerina-name": "addWatermark"
          },
          "enforce_login": {
            "type": "boolean",
            "description": "Only signed in users can join this meeting.\n\n**This field is deprecated and will not be supported in the future.** \n\n As an alternative, use the ``meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the webinar",
            "example": true,
            "deprecated": true,
            "x-ballerina-name": "enforceLogin"
          },
          "on_demand": {
            "type": "boolean",
            "description": "Make the webinar on-demand",
            "example": false,
            "default": false,
            "x-ballerina-name": "onDemand"
          },
          "hd_video_for_attendees": {
            "type": "boolean",
            "description": "Whether HD video for attendees is enabled",
            "example": false,
            "default": false,
            "x-ballerina-name": "hdVideoForAttendees"
          },
          "panelists_invitation_email_notification": {
            "type": "boolean",
            "description": "Send invitation email to panelists. If `false`, do not send invitation email to panelists",
            "example": true,
            "x-ballerina-name": "panelistsInvitationEmailNotification"
          },
          "panelist_authentication": {
            "type": "boolean",
            "description": "Require panelists to authenticate to join",
            "example": true,
            "x-ballerina-name": "panelistAuthentication"
          },
          "enable_session_branding": {
            "type": "boolean",
            "description": "Whether the **Webinar Session Branding** setting is enabled. This setting lets hosts visually customize a webinar by setting a session background. This also lets hosts use [Webinar Session Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding) to set the virtual background for and apply name tags to hosts, alternative hosts, panelists, interpreters, and speakers",
            "example": true,
            "x-ballerina-name": "enableSessionBranding"
          },
          "audio_conference_info": {
            "maxLength": 2048,
            "type": "string",
            "description": "Third party audio conference info",
            "example": "test",
            "x-ballerina-name": "audioConferenceInfo"
          },
          "authentication_domains": {
            "type": "string",
            "description": "If user has configured [**Sign Into Zoom with Specified Domains**](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated",
            "example": "example.com",
            "x-ballerina-name": "authenticationDomains"
          },
          "follow_up_attendees_email_notification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebinarswebinarIdSettingsFollowUpAttendeesEmailNotification"
              }
            ],
            "x-ballerina-name": "followUpAttendeesEmailNotification"
          },
          "email_in_attendee_report": {
            "type": "boolean",
            "description": "Whether to include guest's email addresses in webinars' attendee reports",
            "example": true,
            "x-ballerina-name": "emailInAttendeeReport"
          }
        },
        "description": "Webinar settings"
      },
      "WebinarswebinarIdbatchRegistrantsRegistrants": {
        "required": [
          "email",
          "first_name"
        ],
        "type": "object",
        "properties": {
          "last_name": {
            "type": "string",
            "description": "The registrant's last name",
            "example": "Chill",
            "x-ballerina-name": "lastName"
          },
          "first_name": {
            "type": "string",
            "description": "The registrant's first name",
            "example": "Jill",
            "x-ballerina-name": "firstName"
          },
          "email": {
            "type": "string",
            "description": "The registrant's email address",
            "format": "email",
            "example": "jchill@example.com"
          }
        }
      },
      "H323SIPDeviceList": {
        "title": "H.323/SIP Device List",
        "description": "List of H.323/SIP Devices",
        "allOf": [
          {
            "$ref": "#/components/schemas/H323SIPDeviceListAllOf1"
          },
          {
            "$ref": "#/components/schemas/H323SIPDeviceListH323SIPDeviceListAllOf12"
          }
        ]
      },
      "MeetingsmeetingIdSettingsSignLanguageInterpretationInterpreters": {
        "type": "object",
        "properties": {
          "sign_language": {
            "type": "string",
            "description": "The interpreter's sign language. \n\n To get this value, use the `sign_language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API response",
            "example": "American",
            "x-ballerina-name": "signLanguage"
          },
          "email": {
            "type": "string",
            "description": "The interpreter's email address",
            "format": "email",
            "example": "interpreter@example.com"
          }
        }
      },
      "InlineResponse20046AllOf1": {
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "description": "The page number of the current results",
            "example": 1,
            "default": 1,
            "x-ballerina-name": "pageNumber"
          },
          "next_page_token": {
            "type": "string",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes",
            "example": "b43YBRLJFg3V4vsSpxvGdKIGtNbxn9h9If2",
            "x-ballerina-name": "nextPageToken"
          },
          "total_records": {
            "type": "integer",
            "description": "The total number of all the records available across pages",
            "example": 850,
            "x-ballerina-name": "totalRecords"
          },
          "from": {
            "type": "string",
            "description": "Start date for this report",
            "format": "date",
            "example": "2022-03-01"
          },
          "to": {
            "type": "string",
            "description": "End date for this report",
            "format": "date",
            "example": "2022-03-25"
          },
          "page_count": {
            "type": "integer",
            "description": "The number of pages returned for the request made",
            "example": 30,
            "x-ballerina-name": "pageCount"
          },
          "page_size": {
            "maximum": 300,
            "type": "integer",
            "description": "The number of records returned with a single API call",
            "example": 30,
            "default": 30,
            "x-ballerina-name": "pageSize"
          }
        }
      },
      "DevicesdeviceIdBody": {
        "required": [
          "device_name"
        ],
        "type": "object",
        "properties": {
          "room_id": {
            "type": "string",
            "description": "id of the Zoom Room",
            "example": "72afdc13-a289-40c3-b358-50c8b8de",
            "x-ballerina-name": "roomId"
          },
          "device_name": {
            "type": "string",
            "description": "The name of the device",
            "example": "My device",
            "x-ballerina-name": "deviceName"
          },
          "device_type": {
            "type": "integer",
            "description": "Device Type:  \n `0` - Zoom Rooms Computer.  \n `1` - Zoom Rooms Controller.  \n `2` - Zoom Rooms Scheduling Display",
            "example": 1,
            "enum": [
              0,
              1,
              3
            ],
            "x-ballerina-name": "deviceType"
          },
          "tag": {
            "type": "string",
            "description": "The name of the tag",
            "example": "personal rooms"
          }
        }
      },
      "TrackingField2": {
        "title": "Tracking field",
        "type": "object",
        "properties": {
          "recommended_values": {
            "type": "array",
            "description": "Array of recommended values",
            "items": {
              "type": "string",
              "example": "value1"
            },
            "x-ballerina-name": "recommendedValues"
          },
          "visible": {
            "type": "boolean",
            "description": "Tracking field visible",
            "example": true
          },
          "field": {
            "type": "string",
            "description": "Label or name for the tracking field",
            "example": "field1"
          },
          "required": {
            "type": "boolean",
            "description": "Tracking field required",
            "example": false
          }
        },
        "description": "Tracking field"
      },
      "TrackingField1": {
        "title": "Tracking field",
        "type": "object",
        "properties": {
          "recommended_values": {
            "type": "array",
            "description": "Array of recommended values",
            "items": {
              "type": "string",
              "example": "value1"
            },
            "x-ballerina-name": "recommendedValues"
          },
          "visible": {
            "type": "boolean",
            "description": "Tracking field visible",
            "example": true
          },
          "field": {
            "type": "string",
            "description": "Label or name for the tracking field",
            "example": "field1"
          },
          "id": {
            "type": "string",
            "description": "Tracking field ID",
            "example": "a32CJji-weJ92"
          },
          "required": {
            "type": "boolean",
            "description": "Tracking field required",
            "example": false
          }
        },
        "description": "Tracking field"
      },
      "MeetingIdBatchPollsBody": {
        "type": "object",
        "properties": {
          "polls": {
            "maxItems": 25,
            "minItems": 1,
            "type": "array",
            "description": "The information about the meeting's polls",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdbatchPollsPolls"
            }
          }
        }
      },
      "MeetingSurveyObject1": {
        "title": "Meeting Survey Object",
        "type": "object",
        "properties": {
          "show_in_the_browser": {
            "type": "boolean",
            "description": "Whether the **Show in the browser when the meeting ends** option is enabled. \n* `true` - Enabled. \n* `false` - Disabled. \n\n This value defaults to `true`",
            "example": true,
            "default": true,
            "x-ballerina-name": "showInTheBrowser"
          },
          "custom_survey": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MeetingsmeetingIdsurveyCustomSurvey"
              }
            ],
            "x-ballerina-name": "customSurvey"
          },
          "third_party_survey": {
            "maxLength": 64,
            "type": "string",
            "description": "The link to the third party meeting survey",
            "example": "https://example.com",
            "x-ballerina-name": "thirdPartySurvey"
          }
        },
        "description": "Information about the meeting survey"
      },
      "InlineResponse20046InlineResponse20046AllOf12": {
        "type": "object",
        "properties": {
          "total_participants": {
            "type": "integer",
            "description": "Number of participants for this range",
            "example": 56,
            "x-ballerina-name": "totalParticipants"
          },
          "total_meetings": {
            "type": "integer",
            "description": "Number of meetings for this range",
            "example": 34,
            "x-ballerina-name": "totalMeetings"
          },
          "total_meeting_minutes": {
            "type": "integer",
            "description": "Number of meeting minutes for this range",
            "example": 345,
            "x-ballerina-name": "totalMeetingMinutes"
          },
          "users": {
            "type": "array",
            "description": "Array of user objects",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20046Users"
            }
          }
        }
      },
      "PollListPolls": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PollsAllOf1"
          },
          {
            "$ref": "#/components/schemas/MeetingAndWebinarPollingObject6"
          }
        ]
      },
      "MeetingIdLivestreamBody": {
        "required": [
          "page_url",
          "stream_key",
          "stream_url"
        ],
        "type": "object",
        "properties": {
          "page_url": {
            "maxLength": 1024,
            "type": "string",
            "description": "The live stream page URL",
            "format": "uri",
            "example": "https://example.com/livestream/123",
            "x-ballerina-name": "pageUrl"
          },
          "resolution": {
            "type": "string",
            "description": "The number of pixels in each dimension that the video camera can display, required when a user enables 1080p. Use a value of `720p` or `1080p`",
            "example": "720p"
          },
          "stream_key": {
            "maxLength": 512,
            "type": "string",
            "description": "Stream name and key",
            "example": "contact-it@example.com",
            "x-ballerina-name": "streamKey"
          },
          "stream_url": {
            "maxLength": 1024,
            "type": "string",
            "description": "Streaming URL",
            "example": "https://example.com/livestream",
            "x-ballerina-name": "streamUrl"
          }
        },
        "description": "Meeting live stream"
      },
      "WebinarsAllOf11": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "string",
            "description": "Start time",
            "format": "date-time",
            "example": "2022-03-26T06:44:14Z",
            "x-ballerina-name": "startTime"
          },
          "uuid": {
            "type": "string",
            "description": "Webinar UUID",
            "example": "Bznyg8KZTdCVbQxvS/oZ7w=="
          }
        }
      },
      "RegistrationList2Registrants": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RegistrantsAllOf12"
          },
          {
            "$ref": "#/components/schemas/RegistrantsRegistrantsAllOf122"
          },
          {
            "$ref": "#/components/schemas/RegistrantsRegistrantsRegistrantsAllOf1223"
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "The registrant's status. \n* `approved` - Registrant is approved. \n* `denied` - Registrant is denied. \n* `pending` - Registrant is waiting for approval",
                "example": "approved",
                "enum": [
                  "approved",
                  "denied",
                  "pending"
                ]
              }
            }
          }
        ]
      },
      "InlineResponse20037MeetingActivityLogs": {
        "required": [
          "activity_category",
          "activity_detail",
          "activity_time",
          "meeting_number",
          "operator",
          "operator_email"
        ],
        "type": "object",
        "properties": {
          "activity_time": {
            "type": "string",
            "description": "The operator's activity time",
            "example": "2024-03-21 07:09:03:216",
            "x-ballerina-name": "activityTime"
          },
          "activity_category": {
            "type": "string",
            "description": "The operator's activity category. \n-1 - All Activities. \n0 - Meeting created. \n1 - Meeting started. \n2 - User joined. \n3 - User left. \n4 - Remote control. \n5 - In-meeting chat. \n9 - Meeting ended",
            "example": "Meeting Started",
            "x-ballerina-name": "activityCategory"
          },
          "operator_email": {
            "type": "string",
            "description": "The operator's email",
            "example": "jillchill@example.com",
            "x-ballerina-name": "operatorEmail"
          },
          "activity_detail": {
            "type": "string",
            "description": "The operator's activity detail",
            "example": "Meeting Started",
            "x-ballerina-name": "activityDetail"
          },
          "meeting_number": {
            "type": "string",
            "description": "The meeting number",
            "example": "982 610 0285",
            "x-ballerina-name": "meetingNumber"
          },
          "operator": {
            "type": "string",
            "description": "The operator's display name",
            "example": "Jill Chill"
          }
        }
      },
      "MeetingAndWebinarPollingObject8": {
        "title": "Meeting and Webinar Polling Object",
        "type": "object",
        "properties": {
          "questions": {
            "type": "array",
            "description": "The information about the poll's questions",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdpollsQuestions"
            }
          },
          "anonymous": {
            "type": "boolean",
            "description": "Whether meeting participants answer poll questions anonymously. \n\nThis value defaults to `false`",
            "example": true,
            "default": false
          },
          "poll_type": {
            "type": "integer",
            "description": "The type of poll: \n* `1` &mdash; Poll. \n* `2` &mdash; Advanced Poll. This feature must be enabled in your Zoom account. \n* `3` &mdash; Quiz. This feature must be enabled in your Zoom account. \n\n This value defaults to `1`",
            "example": 2,
            "enum": [
              1,
              2,
              3
            ],
            "x-ballerina-name": "pollType"
          },
          "title": {
            "maxLength": 64,
            "type": "string",
            "description": "The poll's title, up to 64 characters",
            "example": "Learn something new"
          }
        },
        "description": "The information about meeting and webinar polling"
      },
      "UserIdMeetingsBody": {
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/UsersuserIdmeetingsSettings"
          },
          "pre_schedule": {
            "type": "boolean",
            "description": "Whether to create a prescheduled meeting via the [GSuite app](https://support.zoom.us/hc/en-us/articles/360020187492-Zoom-for-GSuite-add-on). This **only** supports the meeting `type` value of `2` (scheduled meetings) and `3` (recurring meetings with no fixed time). \n* `true` - Create a prescheduled meeting. \n* `false` - Create a regular meeting",
            "example": false,
            "default": false,
            "x-ballerina-name": "preSchedule"
          },
          "timezone": {
            "type": "string",
            "description": "The timezone to assign to the `start_time` value. This field is only used for scheduled or recurring meetings with a fixed time.\n\nFor a list of supported timezones and their formats, see our [timezone list](/docs/api/references/abbreviations/#timezones)",
            "example": "America/Los_Angeles"
          },
          "default_password": {
            "type": "boolean",
            "description": "Determines whether to automatically generate a passcode for the meeting when no passcode is provided and the user's **Require a passcode when scheduling new meetings** setting is enabled. Defaults to `true`. When set to `false`, meetings will only have a passcode if one is explicitly provided",
            "example": true,
            "default": true,
            "x-ballerina-name": "defaultPassword"
          },
          "schedule_for": {
            "type": "string",
            "description": "The email address or user ID of the user to schedule a meeting for",
            "example": "jchill@example.com",
            "x-ballerina-name": "scheduleFor"
          },
          "type": {
            "type": "integer",
            "description": "The type of meeting.\n* `1` - An instant meeting. \n* `2` - A scheduled meeting. \n* `3` - A recurring meeting with no fixed time. \n* `8` - A recurring meeting with fixed time. \n* `10` - A screen share only meeting",
            "example": 2,
            "default": 2,
            "enum": [
              1,
              2,
              3,
              8,
              10
            ]
          },
          "agenda": {
            "maxLength": 2000,
            "type": "string",
            "description": "The meeting's agenda. This value has a maximum length of 2,000 characters",
            "example": "My Meeting"
          },
          "duration": {
            "type": "integer",
            "description": "The meeting's scheduled duration, in minutes. This field is only used for scheduled meetings (`2`)",
            "example": 60
          },
          "recurrence": {
            "$ref": "#/components/schemas/UsersuserIdmeetingsRecurrence"
          },
          "start_time": {
            "type": "string",
            "description": "The meeting's start time. This field is only used for scheduled or recurring meetings with a fixed time. This supports local time and GMT formats. \n* To set a meeting's start time in GMT, use the `yyyy-MM-ddTHH:mm:ssZ` date-time format. For example, `2020-03-31T12:02:00Z`. \n* To set a meeting's start time using a specific timezone, use the `yyyy-MM-ddTHH:mm:ss` date-time format and specify the [timezone ID](/docs/api/references/abbreviations/#timezones) in the `timezone` field. If you do not specify a timezone, the `timezone` value defaults to your Zoom account's timezone. You can also use `UTC` for the `timezone` value.\n**Note:** If no `start_time` is set for a scheduled meeting, the `start_time` is set at the current time and the meeting type changes to an instant meeting, which expires after 30 days",
            "format": "date-time",
            "example": "2022-03-25T07:32:55Z",
            "x-ballerina-name": "startTime"
          },
          "password": {
            "maxLength": 10,
            "type": "string",
            "description": "The meeting passcode. By default, it can be up to 10 characters in length and may contain alphanumeric characters as well as special characters such as !, @, #, etc.\n\n**Note**:\n- If the account owner or administrator has configured [Passcode Requirement](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0063160#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode **must** meet those requirements. You can retrieve the requirements using the [**Get user settings**](/docs/api/users/#tag/users/GET/users/{userId}/settings) API or the [**Get account settings**](/docs/api/accounts/#tag/accounts/GET/accounts/{accountId}/settings) API.\n- If the **Require a passcode when scheduling new meetings** user setting is enabled and `default_password` is not explicitly set to `false`, a passcode will be automatically generated when one is not provided.\n- If the **Require a passcode when scheduling new meetings** setting is enabled and [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, a passcode will be automatically generated when one is not provided",
            "example": "123456"
          },
          "tracking_fields": {
            "type": "array",
            "description": "Information about the meeting's tracking fields",
            "items": {
              "$ref": "#/components/schemas/UsersuserIdmeetingsTrackingFields"
            },
            "x-ballerina-name": "trackingFields"
          },
          "topic": {
            "maxLength": 200,
            "type": "string",
            "description": "The meeting's topic",
            "example": "My Meeting"
          },
          "template_id": {
            "type": "string",
            "description": "The account admin meeting template ID used to schedule a meeting using a [meeting template](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates). For a list of account admin-provided meeting templates, use the [**List meeting templates**](/docs/api-reference/zoom-api/methods#operation/listMeetingTemplates) API. \n* At this time, this field **only** accepts account admin meeting template IDs. \n* To enable the account admin meeting templates feature, [contact Zoom support](https://support.zoom.us/hc/en-us)",
            "example": "Dv4YdINdTk+Z5RToadh5ug==",
            "x-ballerina-name": "templateId"
          }
        },
        "description": "The base meeting object"
      },
      "MeetingRegistrantMeetingRegistrantAllOf12": {
        "type": "object",
        "description": " Registrant",
        "allOf": [
          {
            "required": [
              "email",
              "first_name"
            ],
            "type": "object",
            "properties": {
              "zip": {
                "type": "string",
                "description": "The registrant's ZIP or postal code",
                "example": "94045"
              },
              "country": {
                "type": "string",
                "description": "The registrant's two-letter [country code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries)",
                "example": "US"
              },
              "custom_questions": {
                "type": "array",
                "description": "Information about custom questions",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "The title of the custom question.",
                      "example": "What do you hope to learn from this?"
                    },
                    "value": {
                      "maxLength": 128,
                      "type": "string",
                      "description": "The custom question's response value. This has a limit of 128 characters.",
                      "example": "Look forward to learning how you come up with new recipes and what other services you offer."
                    }
                  },
                  "description": "Information about custom questions."
                },
                "x-ballerina-name": "customQuestions"
              },
              "purchasing_time_frame": {
                "type": "string",
                "description": "The registrant's purchasing time frame. \n* `Within a month` \n* `1-3 months` \n* `4-6 months` \n* `More than 6 months` \n* `No timeframe`",
                "example": "1-3 months",
                "enum": [
                  "",
                  "Within a month",
                  "1-3 months",
                  "4-6 months",
                  "More than 6 months",
                  "No timeframe"
                ],
                "x-ballerina-name": "purchasingTimeFrame"
              },
              "address": {
                "type": "string",
                "description": "The registrant's address",
                "example": "1800 Amphibious Blvd."
              },
              "comments": {
                "type": "string",
                "description": "The registrant's questions and comments",
                "example": "Looking forward to the discussion."
              },
              "city": {
                "type": "string",
                "description": "The registrant's city",
                "example": "Mountain View"
              },
              "org": {
                "type": "string",
                "description": "The registrant's organization",
                "example": "Cooking Org"
              },
              "last_name": {
                "maxLength": 64,
                "type": "string",
                "description": "The registrant's last name",
                "example": "Chill",
                "x-ballerina-name": "lastName"
              },
              "no_of_employees": {
                "type": "string",
                "description": "The registrant's number of employees. \n* `1-20` \n* `21-50` \n* `51-100` \n* `101-250` \n* `251-500` \n* `501-1,000` \n* `1,001-5,000` \n* `5,001-10,000` \n* `More than 10,000`",
                "example": "1-20",
                "enum": [
                  "",
                  "1-20",
                  "21-50",
                  "51-100",
                  "101-250",
                  "251-500",
                  "501-1,000",
                  "1,001-5,000",
                  "5,001-10,000",
                  "More than 10,000"
                ],
                "x-ballerina-name": "noOfEmployees"
              },
              "industry": {
                "type": "string",
                "description": "The registrant's industry",
                "example": "Food"
              },
              "phone": {
                "type": "string",
                "description": "The registrant's phone number",
                "example": "5550100"
              },
              "role_in_purchase_process": {
                "type": "string",
                "description": "The registrant's role in the purchase process. \n* `Decision Maker` \n* `Evaluator/Recommender` \n* `Influencer` \n* `Not involved`",
                "example": "Influencer",
                "enum": [
                  "",
                  "Decision Maker",
                  "Evaluator/Recommender",
                  "Influencer",
                  "Not involved"
                ],
                "x-ballerina-name": "roleInPurchaseProcess"
              },
              "state": {
                "type": "string",
                "description": "The registrant's state or province",
                "example": "CA"
              },
              "first_name": {
                "maxLength": 64,
                "type": "string",
                "description": "The registrant's first name",
                "example": "Jill",
                "x-ballerina-name": "firstName"
              },
              "job_title": {
                "type": "string",
                "description": "The registrant's job title",
                "example": "Chef",
                "x-ballerina-name": "jobTitle"
              },
              "email": {
                "maxLength": 128,
                "type": "string",
                "description": "The registrant's email address. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for return value details",
                "format": "email",
                "example": "jchill@example.com"
              },
              "status": {
                "type": "string",
                "description": "The registrant's status. \n* `approved` - Registrant is approved. \n* `denied` - Registrant is denied. \n* `pending` - Registrant is waiting for approval",
                "example": "approved",
                "enum": [
                  "approved",
                  "denied",
                  "pending"
                ]
              }
            },
            "description": "Information about the registrant"
          }
        ]
      },
      "MeetingAndWebinarPollingObject7": {
        "title": "Meeting and Webinar Polling Object",
        "type": "object",
        "properties": {
          "questions": {
            "type": "array",
            "description": "Information about the poll's questions",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20019Questions"
            }
          },
          "anonymous": {
            "type": "boolean",
            "description": "Whether meeting participants answer poll questions anonymously. \n\nThis value defaults to `false`",
            "example": true,
            "default": false
          },
          "poll_type": {
            "type": "integer",
            "description": "The poll's type. \n* `1` - Poll. \n* `2` - Advanced poll. This feature must be enabled in your Zoom account. \n* `3` - Quiz. This feature must be enabled in your Zoom account. \n\n This value defaults to `1`",
            "example": 2,
            "enum": [
              1,
              2,
              3
            ],
            "x-ballerina-name": "pollType"
          },
          "title": {
            "maxLength": 64,
            "type": "string",
            "description": "The poll's title, up to 64 characters",
            "example": "Learn something new"
          }
        },
        "description": "The information about meeting and webinar polling"
      },
      "MeetingAndWebinarPollingObject6": {
        "title": "Meeting and Webinar Polling Object",
        "type": "object",
        "properties": {
          "questions": {
            "type": "array",
            "description": "Information about the poll's questions",
            "items": {
              "$ref": "#/components/schemas/PollsQuestions"
            }
          },
          "anonymous": {
            "type": "boolean",
            "description": "Whether meeting participants can answer poll questions anonymously. \n\nThis value defaults to `false`",
            "example": true,
            "default": false
          },
          "poll_type": {
            "type": "integer",
            "description": "The type of poll. \n* `1` - Poll. \n* `2` - Advanced Poll. This feature must be enabled in your Zoom account. \n* `3` - Quiz. This feature must be enabled in your Zoom account. \n\n This value defaults to `1`",
            "example": 2,
            "enum": [
              1,
              2,
              3
            ],
            "x-ballerina-name": "pollType"
          },
          "title": {
            "maxLength": 64,
            "type": "string",
            "description": "The poll's title, up to 64 characters",
            "example": "Learn something new"
          }
        },
        "description": "Information about meeting and webinar polling"
      },
      "MeetingsmeetingIdSettingsApprovedOrDeniedCountriesOrRegions": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "description": "Specify whether to allow users from specific regions to join this meeting, or block users from specific regions from joining this meeting.\n\n \n`approve` - Allow users from specific regions or countries to join this meeting. If this setting is selected, include the approved regions or countries in the `approved_list`.  \n\n\n`deny` - Block users from specific regions or countries from joining this meeting. If this setting is selected, include the approved regions orcountries in the `denied_list`",
            "example": "approve",
            "enum": [
              "approve",
              "deny"
            ]
          },
          "enable": {
            "type": "boolean",
            "description": "`true` - Setting enabled to either allow users or block users from specific regions to join your meetings.\n \n\n`false` - Setting disabled",
            "example": true
          },
          "approved_list": {
            "type": "array",
            "description": "List of countries or regions from where participants can join this meeting. ",
            "items": {
              "type": "string",
              "example": "CX"
            },
            "x-ballerina-name": "approvedList"
          },
          "denied_list": {
            "type": "array",
            "description": "List of countries or regions from where participants can not join this meeting. ",
            "items": {
              "type": "string",
              "example": "CA"
            },
            "x-ballerina-name": "deniedList"
          }
        },
        "description": "Approve or block users from specific regions or countries from joining this meeting. \n"
      },
      "MeetingAndWebinarPollingObject5": {
        "title": "Meeting and webinar polling object.",
        "type": "object",
        "properties": {
          "questions": {
            "type": "array",
            "description": "The information about the poll's questions",
            "items": {
              "$ref": "#/components/schemas/WebinarswebinarIdpollsQuestions"
            }
          },
          "anonymous": {
            "type": "boolean",
            "description": "Whether meeting participants answer poll questions anonymously. \n\nThis value defaults to `false`",
            "example": true,
            "default": false
          },
          "poll_type": {
            "type": "integer",
            "description": "The type of poll. \n* `1` - Poll. \n* `2` - Advanced Poll. This feature must be enabled in your Zoom account. \n* `3` - Quiz. This feature must be enabled in your Zoom account. \n\n This value defaults to `1`",
            "example": 2,
            "enum": [
              1,
              2,
              3
            ],
            "x-ballerina-name": "pollType"
          },
          "title": {
            "maxLength": 64,
            "type": "string",
            "description": "The poll's title, up to 64 characters",
            "example": "Learn something new"
          }
        },
        "description": "The information about meeting and webinar polling"
      },
      "MeetingAndWebinarPollingObject4": {
        "title": "Meeting and Webinar Polling Object",
        "type": "object",
        "properties": {
          "questions": {
            "type": "array",
            "description": "The information about the poll's questions",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdpollsQuestions"
            }
          },
          "anonymous": {
            "type": "boolean",
            "description": "Whether meeting participants answer poll questions anonymously. \n\nThis value defaults to `false`",
            "example": true,
            "default": false
          },
          "poll_type": {
            "type": "integer",
            "description": "The type of poll: \n* `1` &mdash; Poll. \n* `2` &mdash; Advanced Poll. This feature must be enabled in your Zoom account. \n* `3` &mdash; Quiz. This feature must be enabled in your Zoom account. \n\n This value defaults to `1`",
            "example": 2,
            "enum": [
              1,
              2,
              3
            ],
            "x-ballerina-name": "pollType"
          },
          "title": {
            "maxLength": 64,
            "type": "string",
            "description": "The poll's title, up to 64 characters",
            "example": "Learn something new"
          }
        },
        "description": "The information about meeting and webinar polling"
      },
      "InlineResponse20114SettingsQuestionAndAnswer": {
        "type": "object",
        "properties": {
          "allow_auto_reply": {
            "type": "boolean",
            "description": "If simulive webinar, \n\n* `true` - allow auto-reply to attendees. \n\n* `false` - don't allow auto-reply to the attendees",
            "example": true,
            "x-ballerina-name": "allowAutoReply"
          },
          "allow_anonymous_questions": {
            "type": "boolean",
            "description": "* `true` - Allow participants to send questions without providing their name to the host, co-host, and panelists.\n\n* `false` - Do not allow anonymous questions",
            "example": true,
            "x-ballerina-name": "allowAnonymousQuestions"
          },
          "answer_questions": {
            "type": "string",
            "description": "Indicate whether you want attendees to be able to view only answered questions, or view all questions.\n\n* `only` - Attendees are able to view answered questions only.\n\n* `all` - Attendees are able to view all questions submitted in the Q&amp;A",
            "example": "all",
            "enum": [
              "only",
              "all"
            ],
            "x-ballerina-name": "answerQuestions"
          },
          "enable": {
            "type": "boolean",
            "description": "* `true`: Enable [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.\n\n* `false`: Disable Q&amp;A for webinar. If not provided, the default value will be based on the user's setting",
            "example": true
          },
          "allow_submit_questions": {
            "type": "boolean",
            "description": "* `true` - Allow participants to submit questions.\n\n* `false` - Do not allow submit questions",
            "example": true,
            "x-ballerina-name": "allowSubmitQuestions"
          },
          "attendees_can_comment": {
            "type": "boolean",
            "description": "* `true` - Attendees can answer questions or leave a comment in the question thread.\n\n* `false` - Attendees can not answer questions or leave a comment in the question thread",
            "example": true,
            "x-ballerina-name": "attendeesCanComment"
          },
          "auto_reply_text": {
            "type": "string",
            "description": "If `allow_auto_reply` = true, the text to be included in the automatic response. ",
            "example": "Thank you for your question. We will get back to you shortly.",
            "x-ballerina-name": "autoReplyText"
          },
          "attendees_can_upvote": {
            "type": "boolean",
            "description": "* `true` - Attendees can click the thumbs up button to bring popular questions to the top of the Q&amp;A window.\n\n* `false` - Attendees can not click the thumbs up button on questions",
            "example": true,
            "x-ballerina-name": "attendeesCanUpvote"
          }
        },
        "description": "[Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar"
      },
      "PollspollIdBody1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeetingAndWebinarPollingObject2"
          }
        ]
      },
      "InlineResponse20062InlineResponse20062AllOf12": {
        "type": "object",
        "properties": {
          "webinars": {
            "type": "array",
            "description": "List of webinar objects",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20062Webinars"
            }
          }
        }
      },
      "InlineResponse20069Panelists": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PanelistsAllOf11"
          },
          {
            "$ref": "#/components/schemas/PanelistsPanelistsAllOf112"
          },
          {
            "$ref": "#/components/schemas/PanelistsPanelistsPanelistsAllOf1123"
          },
          {
            "$ref": "#/components/schemas/PanelistsPanelistsPanelistsPanelistsAllOf11234"
          }
        ]
      },
      "InlineResponse2016Occurrences": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "integer",
            "description": "Duration",
            "example": 60
          },
          "start_time": {
            "type": "string",
            "description": "Start time",
            "format": "date-time",
            "example": "2022-03-25T07:46:00Z",
            "x-ballerina-name": "startTime"
          },
          "occurrence_id": {
            "type": "string",
            "description": "Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences",
            "example": "1648194360000",
            "x-ballerina-name": "occurrenceId"
          },
          "status": {
            "type": "string",
            "description": "Occurrence status",
            "example": "available"
          }
        },
        "description": "Occurrence object. This object is only returned for Recurring Webinars"
      },
      "PollList": {
        "title": "Poll List",
        "description": "Poll List",
        "allOf": [
          {
            "$ref": "#/components/schemas/PollListAllOf1"
          }
        ]
      },
      "MeetingsmeetingIdSettingsMeetingInvitees": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The invitee's email address",
            "format": "email",
            "example": "jchil@example.com"
          }
        }
      },
      "InlineResponse20026Questions": {
        "type": "object",
        "properties": {
          "question_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20026QuestionDetails"
            },
            "x-ballerina-name": "questionDetails"
          },
          "name": {
            "type": "string",
            "description": "The user's name. If `anonymous` option is enabled for the Q&amp;A, the participant's information is be kept anonymous and the value of `name` field is `Anonymous Attendee`",
            "example": "Jill Chill"
          },
          "email": {
            "type": "string",
            "description": "The user's email address. If the user is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details",
            "example": "jchill@example.com"
          }
        }
      },
      "InlineResponse20064NameTags": {
        "type": "object",
        "properties": {
          "accent_color": {
            "type": "string",
            "description": "The name tag's accent color",
            "example": "0e72ed",
            "x-ballerina-name": "accentColor"
          },
          "background_color": {
            "type": "string",
            "description": "The name tag's background color",
            "example": "0e72ed",
            "x-ballerina-name": "backgroundColor"
          },
          "name": {
            "type": "string",
            "description": "The name tag's name",
            "example": "name"
          },
          "id": {
            "type": "string",
            "description": "The name tag's ID",
            "example": "zazQjwDuQkS3Q2EprNd7jQ"
          },
          "text_color": {
            "type": "string",
            "description": "The name tag's text color",
            "example": "0e72ed",
            "x-ballerina-name": "textColor"
          },
          "is_default": {
            "type": "boolean",
            "description": "Whether the file is the default name tag or not",
            "example": true,
            "x-ballerina-name": "isDefault"
          }
        }
      },
      "InlineResponse20064VirtualBackgrounds": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The virtual background's file name",
            "example": "beach.jpg"
          },
          "id": {
            "type": "string",
            "description": "The virtual background's file ID",
            "example": "zazQjwDuQkS3Q2EprNd7jQ"
          },
          "is_default": {
            "type": "boolean",
            "description": "Whether the file is the default virtual background file",
            "example": true,
            "x-ballerina-name": "isDefault"
          }
        }
      },
      "MeetingsmeetingIdSettingsGlobalDialInNumbers": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "Country code, such as BR",
            "example": "US"
          },
          "number": {
            "type": "string",
            "description": "Phone number, such as +1 2332357613",
            "example": "+1 1000200200"
          },
          "city": {
            "type": "string",
            "description": "City of the number, if any, such as Chicago",
            "example": "New York"
          },
          "country_name": {
            "type": "string",
            "description": "Full name of country, such as Brazil",
            "example": "US",
            "x-ballerina-name": "countryName"
          },
          "type": {
            "type": "string",
            "description": "Type of number. ",
            "example": "toll",
            "enum": [
              "toll",
              "tollfree"
            ]
          }
        }
      },
      "UserIdUserIdUserIdOneOf123": {
        "type": "string",
        "example": "me",
        "enum": [
          "me"
        ]
      },
      "PanelistsAllOf1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The panelist's full name.\n\n**Note:** This value cannot exceed more than 12 Chinese characters",
            "example": "Jill Chill"
          },
          "email": {
            "type": "string",
            "description": "Panelist's email. See the [email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for return value details",
            "format": "email",
            "example": "jchill@example.com"
          }
        },
        "description": "Panelist base object"
      },
      "InlineResponse20059QuestionDetails": {
        "type": "object",
        "properties": {
          "answer": {
            "type": "string",
            "description": "Answer submitted by the user",
            "example": "Good"
          },
          "date_time": {
            "type": "string",
            "description": "Date and time when the answer to the poll was submitted",
            "format": "date-time",
            "example": "2022-03-26T05:37:59Z",
            "x-ballerina-name": "dateTime"
          },
          "question": {
            "type": "string",
            "description": "Question asked during the poll",
            "example": "How are you?"
          },
          "polling_id": {
            "type": "string",
            "description": "Unique identifier of the poll",
            "example": "QalIoKWLTJehBJ8e1xRrbQ",
            "x-ballerina-name": "pollingId"
          }
        }
      },
      "PollspollIdBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeetingAndWebinarPollingObject"
          }
        ]
      },
      "InlineResponse20012Summaries": {
        "type": "object",
        "properties": {
          "meeting_host_id": {
            "type": "string",
            "description": "The ID of the user who is set as the meeting host",
            "example": "30R7kT7bTIKSNUFEuH_Qlg",
            "x-ballerina-name": "meetingHostId"
          },
          "meeting_topic": {
            "type": "string",
            "description": "Meeting topic",
            "example": "My Meeting",
            "x-ballerina-name": "meetingTopic"
          },
          "summary_start_time": {
            "type": "string",
            "description": "The summary's start date and time",
            "format": "date-time",
            "example": "2019-07-15T23:24:52Z",
            "x-ballerina-name": "summaryStartTime"
          },
          "summary_last_modified_time": {
            "type": "string",
            "description": "The date and time at which the meeting summary was last modified",
            "format": "date-time",
            "example": "2020-07-15T23:30:19Z",
            "x-ballerina-name": "summaryLastModifiedTime"
          },
          "meeting_id": {
            "type": "integer",
            "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-) - the meeting's unique identifier in **long** format, represented as int64 data type in JSON, also known as the meeting number",
            "format": "int64",
            "example": 97763643886,
            "x-ballerina-name": "meetingId"
          },
          "meeting_host_email": {
            "type": "string",
            "description": "The meeting host's email address",
            "format": "email",
            "example": "jchill@example.com",
            "x-ballerina-name": "meetingHostEmail"
          },
          "meeting_uuid": {
            "type": "string",
            "description": "Unique meeting ID. Each meeting instance generates its own meeting UUID. After a meeting ends, a new UUID is generated for the next instance of the meeting. Retrieve a list of UUIDs from past meeting instances using the [**List past meeting instances**](/docs/api-reference/zoom-api/methods#operation/pastMeetings) API. [Double encode](/docs/api/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a `/` or contains `//` in it\n",
            "example": "aDYlohsHRtCd4ii1uC2+hA==",
            "x-ballerina-name": "meetingUuid"
          },
          "summary_end_time": {
            "type": "string",
            "description": "The summary's end date and time",
            "format": "date-time",
            "example": "2020-07-15T23:30:19Z",
            "x-ballerina-name": "summaryEndTime"
          },
          "summary_created_time": {
            "type": "string",
            "description": "The date and time at which the meeting summary was created",
            "format": "date-time",
            "example": "2019-07-15T23:24:52Z",
            "x-ballerina-name": "summaryCreatedTime"
          },
          "meeting_start_time": {
            "type": "string",
            "description": "The meeting's start date and time",
            "format": "date-time",
            "example": "2019-07-15T23:24:52Z",
            "x-ballerina-name": "meetingStartTime"
          },
          "meeting_end_time": {
            "type": "string",
            "description": "The meeting's end date and time",
            "format": "date-time",
            "example": "2020-07-15T23:30:19Z",
            "x-ballerina-name": "meetingEndTime"
          }
        },
        "description": "The meeting summary object"
      },
      "InlineResponse20013Occurrences": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "integer",
            "description": "Duration",
            "example": 60
          },
          "start_time": {
            "type": "string",
            "description": "Start time",
            "format": "date-time",
            "example": "2022-03-25T07:46:00Z",
            "x-ballerina-name": "startTime"
          },
          "occurrence_id": {
            "type": "string",
            "description": "Occurrence ID. The unique identifier for an occurrence of a recurring meeting. [Recurring meetings](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings) can have a maximum of 50 occurrences",
            "example": "1648194360000",
            "x-ballerina-name": "occurrenceId"
          },
          "status": {
            "type": "string",
            "description": "Occurrence status. \n `available` - Available occurrence.  \n `deleted` -  Deleted occurrence",
            "example": "available",
            "enum": [
              "available",
              "deleted"
            ]
          }
        },
        "description": "Occurrence object. This object is only returned for recurring meetings"
      },
      "InlineResponse20112AllOf1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Tracking Field ID",
            "example": "a32CJji-weJ92"
          }
        }
      },
      "WebinarswebinarIdregistrantsquestionsCustomQuestions": {
        "type": "object",
        "properties": {
          "answers": {
            "type": "array",
            "description": "An array of answer choices. Can't be used for short answer type",
            "items": {
              "type": "string",
              "example": "Good"
            }
          },
          "title": {
            "type": "string",
            "description": "Custom question",
            "example": "How are you?"
          },
          "type": {
            "type": "string",
            "description": "The question-answer type",
            "example": "short",
            "enum": [
              "short",
              "single_radio",
              "single_dropdown",
              "multiple"
            ],
            "x-enum-descriptions": [
              "Short Answer",
              "Single Radio Answer",
              "Single Dropdown Answer",
              "Multiple Answer"
            ]
          },
          "required": {
            "type": "boolean",
            "description": "State whether or not a registrant is required to answer the custom question",
            "example": true
          }
        }
      },
      "InlineResponse20057AllOf1": {
        "type": "object",
        "properties": {
          "tracking_fields": {
            "type": "array",
            "description": "Array of tracking fields",
            "items": {
              "$ref": "#/components/schemas/TrackingField3"
            },
            "x-ballerina-name": "trackingFields"
          },
          "total_records": {
            "type": "integer",
            "description": "The number of all records available across pages",
            "example": 1,
            "x-ballerina-name": "totalRecords"
          }
        }
      },
      "TheH323SIPDeviceObject3": {
        "title": "The H.323/SIP device object.",
        "required": [
          "encryption",
          "ip",
          "name",
          "protocol"
        ],
        "type": "object",
        "properties": {
          "protocol": {
            "type": "string",
            "description": "Device protocol:  \n `H.323` - H.323.  \n `SIP` - SIP",
            "example": "H.323",
            "enum": [
              "H.323",
              "SIP"
            ],
            "x-enum-descriptions": [
              "H.323",
              "SIP"
            ]
          },
          "encryption": {
            "type": "string",
            "description": "Device encryption:  \n `auto` - auto.  \n `yes` - yes.  \n `no` - no",
            "example": "auto",
            "enum": [
              "auto",
              "yes",
              "no"
            ],
            "x-enum-descriptions": [
              "auto",
              "yes",
              "no"
            ]
          },
          "ip": {
            "type": "string",
            "description": "Device IP",
            "example": "127.0.0.1"
          },
          "name": {
            "maxLength": 64,
            "type": "string",
            "description": "Device name",
            "example": "api_test_20190508"
          }
        },
        "description": "The H.323/SIP device object"
      },
      "TheH323SIPDeviceObject2": {
        "title": "The H.323/SIP device object.",
        "required": [
          "encryption",
          "ip",
          "name",
          "protocol"
        ],
        "type": "object",
        "properties": {
          "protocol": {
            "type": "string",
            "description": "Device protocol:  \n `H.323` - H.323.  \n `SIP` - SIP",
            "example": "H.323",
            "enum": [
              "H.323",
              "SIP"
            ],
            "x-enum-descriptions": [
              "H.323",
              "SIP"
            ]
          },
          "encryption": {
            "type": "string",
            "description": "Device encryption:  \n `auto` - auto.  \n `yes` - yes.  \n `no` - no",
            "example": "auto",
            "enum": [
              "auto",
              "yes",
              "no"
            ],
            "x-enum-descriptions": [
              "auto",
              "yes",
              "no"
            ]
          },
          "ip": {
            "type": "string",
            "description": "Device IP",
            "example": "127.0.0.1"
          },
          "name": {
            "maxLength": 64,
            "type": "string",
            "description": "Device name",
            "example": "api_test_20190508"
          }
        },
        "description": "The H.323/SIP device object"
      },
      "InlineResponse20046CustomAttributes": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the custom attribute",
            "example": "age"
          },
          "value": {
            "type": "string",
            "description": "Value of the custom attribute",
            "example": "18"
          },
          "key": {
            "type": "string",
            "description": "Identifier for the custom attribute",
            "example": "4444AAAiAAAAAiAiAiiAii=="
          }
        }
      },
      "TrackingField": {
        "title": "Tracking Field",
        "type": "object",
        "properties": {
          "recommended_values": {
            "type": "array",
            "description": "Array of recommended values",
            "items": {
              "type": "string",
              "example": "value1"
            },
            "x-ballerina-name": "recommendedValues"
          },
          "visible": {
            "type": "boolean",
            "description": "Tracking Field Visible",
            "example": true
          },
          "field": {
            "type": "string",
            "description": "Label/ Name for the tracking field",
            "example": "field1"
          },
          "required": {
            "type": "boolean",
            "description": "Tracking Field Required",
            "example": false
          }
        },
        "description": "Tracking Field"
      },
      "LivestreamStatusBody": {
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/MeetingsmeetingIdlivestreamstatusSettings"
          },
          "action": {
            "type": "string",
            "description": "The meeting's livestream status.\n* `start` - Start a livestream.\n* `stop` - Stop an ongoing livestream.\n* `mode` - Control a livestream view at runtime",
            "example": "start",
            "enum": [
              "start",
              "stop",
              "mode"
            ]
          }
        },
        "description": "The meeting's livestream status"
      },
      "WebinarsAllOf1": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "integer",
            "description": "The webinar's duration, in minutes",
            "example": 60
          },
          "start_time": {
            "type": "string",
            "description": "The webinar's start time",
            "format": "date-time",
            "example": "2021-07-13T21:00:00Z",
            "x-ballerina-name": "startTime"
          },
          "join_url": {
            "type": "string",
            "description": "The URL to join the webinar",
            "example": "https://example.com/j/11111",
            "x-ballerina-name": "joinUrl"
          },
          "timezone": {
            "type": "string",
            "description": "The webinar's [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)",
            "example": "America/Los_Angeles"
          },
          "is_simulive": {
            "type": "boolean",
            "description": "Whether the webinar is `simulive`",
            "example": true,
            "x-ballerina-name": "isSimulive"
          },
          "created_at": {
            "type": "string",
            "description": "The webinar's creation time",
            "format": "date-time",
            "example": "2021-07-01T22:00:00Z",
            "x-ballerina-name": "createdAt"
          },
          "topic": {
            "type": "string",
            "description": "The webinar's topic",
            "example": "My Webinar"
          },
          "id": {
            "type": "integer",
            "description": "The webinar ID",
            "format": "int64",
            "example": 1234567890
          },
          "type": {
            "type": "integer",
            "description": "The webinar type. \n* `5` - A webinar. \n* `6` - A recurring webinar without a fixed time. \n* `9` - A recurring webinar with a fixed time",
            "example": 9,
            "default": 5,
            "enum": [
              5,
              6,
              9
            ]
          },
          "agenda": {
            "type": "string",
            "description": "Webinar description. The agenda length gets truncated to 250 characters when you list all webinars for a user. To view the complete agenda, retrieve details for a single webinar, use the [**Get a webinar**](/docs/api-reference/zoom-api/methods#operation/webinar) API",
            "example": "Learn more about Zoom APIs"
          },
          "uuid": {
            "type": "string",
            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID",
            "example": "4444AAAiAAAAAiAiAiiAii=="
          },
          "host_id": {
            "type": "string",
            "description": "The host's ID",
            "example": "x1yCzABCDEfg23HiJKl4mN",
            "x-ballerina-name": "hostId"
          }
        }
      },
      "InlineResponse20044TelephonyUsage": {
        "type": "object",
        "properties": {
          "meeting_id": {
            "type": "integer",
            "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in &quot;**long**&quot; format(represented as int64 data type in JSON), also known as the meeting number",
            "format": "int64",
            "example": 94908911701,
            "x-ballerina-name": "meetingId"
          },
          "end_time": {
            "type": "string",
            "description": "Call leg end time",
            "format": "date-time",
            "example": "2022-03-15T07:42:22Z",
            "x-ballerina-name": "endTime"
          },
          "meeting_type": {
            "type": "string",
            "description": "Meeting type",
            "example": "Meeting",
            "x-ballerina-name": "meetingType"
          },
          "dept": {
            "type": "string",
            "description": "User department",
            "example": "HR"
          },
          "type": {
            "type": "string",
            "description": "Call type",
            "example": "call-out",
            "enum": [
              "toll-free",
              "call-out",
              "call-in",
              "US toll-number",
              "global toll-number",
              "premium",
              "premium call-in",
              "Toll"
            ]
          },
          "uuid": {
            "type": "string",
            "description": "Meeting UUID",
            "example": "4444AAAiAAAAAiAiAiiAii=="
          },
          "host_id": {
            "type": "string",
            "description": "The user ID of the meeting host",
            "example": "_Rn_hal7ToG5p0AWwIIsjQ",
            "x-ballerina-name": "hostId"
          },
          "duration": {
            "type": "integer",
            "description": "Call leg duration",
            "example": 2
          },
          "start_time": {
            "type": "string",
            "description": "Call leg start time",
            "format": "date-time",
            "example": "2022-03-15T07:40:46Z",
            "x-ballerina-name": "startTime"
          },
          "total": {
            "type": "number",
            "description": "Total cost (USD) for Call Out. Calculated as plan rate by duration",
            "example": 0.03
          },
          "rate": {
            "type": "number",
            "description": "Calling rate for the telephone call",
            "example": 0.03
          },
          "call_in_number": {
            "type": "string",
            "description": "Caller's call-in number",
            "example": "ZoomGW",
            "x-ballerina-name": "callInNumber"
          },
          "signaled_number": {
            "type": "string",
            "description": "The number that is signaled to Zoom. ",
            "example": "+1 8243",
            "x-ballerina-name": "signaledNumber"
          },
          "country_name": {
            "type": "string",
            "description": "Country name",
            "example": "US",
            "x-ballerina-name": "countryName"
          },
          "phone_number": {
            "type": "string",
            "description": "Toll-free telephone number. ",
            "example": "+1 8243",
            "x-ballerina-name": "phoneNumber"
          },
          "host_name": {
            "type": "string",
            "description": "User display name",
            "example": "Jill Chill",
            "x-ballerina-name": "hostName"
          },
          "host_email": {
            "type": "string",
            "description": "User email",
            "example": "jchill@example.com",
            "x-ballerina-name": "hostEmail"
          }
        }
      },
      "WebinarswebinarIdSettingsSignLanguageInterpretation": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "Whether to enable [sign language interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar) for the webinar",
            "example": true
          },
          "interpreters": {
            "maximum": 20,
            "type": "array",
            "description": "Information about the webinar's sign language interpreters",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsSignLanguageInterpretationInterpreters"
            }
          }
        },
        "description": "The webinar's [sign language interpretation settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar). Make sure to add the language in the web portal in order to use it in the API. See link for details. \n\n**Note:** If this feature is not enabled on the host's account, this setting will **not** be applied to the webinar"
      },
      "WebinarSurveyObject": {
        "title": "Webinar survey object",
        "type": "object",
        "properties": {
          "show_in_the_browser": {
            "type": "boolean",
            "description": "Whether the **Show in the browser when the webinar ends** option is enabled. \n* `true` - Enabled. \n* `false` - Disabled. \n\n This value defaults to `true`",
            "example": true,
            "default": true,
            "x-ballerina-name": "showInTheBrowser"
          },
          "custom_survey": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebinarSurveyObjectCustomSurvey"
              }
            ],
            "x-ballerina-name": "customSurvey"
          },
          "show_in_the_follow_up_email": {
            "type": "boolean",
            "description": "Whether the **Show the link on the follow-up email** option is enabled. \n* `true` - Enabled. \n* `false` - Disabled. \n\n This value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "showInTheFollowUpEmail"
          },
          "third_party_survey": {
            "maxLength": 64,
            "type": "string",
            "description": "The link to the third party webinar survey",
            "example": "https://example.com",
            "x-ballerina-name": "thirdPartySurvey"
          }
        },
        "description": "Information about the webinar survey"
      },
      "InlineResponse201": {
        "type": "object",
        "properties": {
          "registrant_id": {
            "type": "string",
            "description": "Registrant ID",
            "example": "3Z7sEm0TQQieLav3c3OD_g",
            "x-ballerina-name": "registrantId"
          },
          "share_url": {
            "type": "string",
            "description": "Share URL for the on-demand recording. This includes the &ldquo;tk&rdquo; token for the registrant. This is similar to the token that Zoom returns in the URL response to join a registered meeting, for example: `url?tk=xxxx`. Except while the meeting registration token can be used to join the meeting, this token can only be used to watch the recording",
            "example": "https://example.com/rec/share/Qg75t7xZBtEbAkjdlgbfdngBBBB",
            "x-ballerina-name": "shareUrl"
          },
          "topic": {
            "type": "string",
            "description": "Meeting Topic",
            "example": "My Personal Meeting Room"
          },
          "id": {
            "type": "integer",
            "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in &quot;**long**&quot; format(represented as int64 data type in JSON), also known as the meeting number",
            "format": "int64",
            "example": 6840331980
          }
        }
      },
      "MeetingInvitation": {
        "title": "Meeting Invitation",
        "type": "object",
        "properties": {
          "invitation": {
            "type": "string",
            "description": "Meeting invitation",
            "example": "Jill Chill is inviting you to a scheduled Zoom meeting.\r\n\r\nTopic: My Meeting\r\nTime: Mar 25, 2022 03:32 PM America, Los_Angeles\r\n\r\nJoin Zoom Meeting\r\nhttps://zoom.us/j/55544443210?pwd=8pEkRweVXPV3Ob2KJYgFTRlDtl1gSn.1\r\n\r\nMeeting ID: 555 4444 3210\r\nPasscode: 123456\r\nOne tap mobile\r\n+5678901234,,55544443210#,,,,*123456# US (gg)\r\n\r\nDial by your location\r\n+1 15550100 US (gg)\r\nMeeting ID: 555 4444 3210\r\nPasscode: 123456\r\nFind your local number: https://zoom.us/u/ab12cdef34jh\r\n\r\nJoin by SIP\r\n5550100@zoomcrc.com\r\n\r\nJoin by H.323\r\n192.0.2.1 (US West)\r\nMeeting ID: 555 4444 3210\r\nPasscode: 123456\r\n\r\n"
          },
          "sip_links": {
            "type": "array",
            "description": "A list of SIP phone addresses",
            "items": {
              "type": "string",
              "example": "5550100@zoomcrc.com"
            },
            "x-ballerina-name": "sipLinks"
          }
        },
        "description": "Meeting invitation details"
      },
      "InlineResponse200": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.\n\n **Note:** if you use `next_page_token` as a parameter, your other request parameters should be changeless to make sure that the large result set is what you want. For example, if your `to` parameter is for a future time, Zoom resets this value to the current time and returns this value in the response body, along with the `next_page_token` value. Use these same `to` and `next_page_token` values in requests for the remaining results set; otherwise you will get an invalid token error",
            "example": "At6eWnFZ1FB3arCXnRxqHLXKhbDW18yz2i2",
            "x-ballerina-name": "nextPageToken"
          },
          "total_records": {
            "type": "integer",
            "description": "The total number of returned meeting records",
            "example": 20,
            "x-ballerina-name": "totalRecords"
          },
          "from": {
            "type": "string",
            "description": "The queried start date",
            "format": "date-time",
            "example": "2021-03-12T02:12:27Z"
          },
          "meetings": {
            "type": "array",
            "description": "Information about the meeting or webinar",
            "items": {
              "$ref": "#/components/schemas/InlineResponse200Meetings"
            }
          },
          "to": {
            "type": "string",
            "description": "The queried end date",
            "format": "date-time",
            "example": "2021-03-12T02:12:27Z"
          },
          "page_size": {
            "type": "integer",
            "description": "The number of records returned within a single API call",
            "example": 20,
            "x-ballerina-name": "pageSize"
          }
        }
      },
      "RegistrationList2AllOf1": {
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "description": "**Deprecated** This field will be deprecated. We will no longer support this field in a future release. Instead, use `next_page_token` for pagination",
            "example": 1,
            "deprecated": true,
            "default": 1,
            "x-ballerina-name": "pageNumber"
          },
          "next_page_token": {
            "type": "string",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "example": "w7587w4eiyfsudgf",
            "x-ballerina-name": "nextPageToken"
          },
          "total_records": {
            "type": "integer",
            "description": "The total number of all the records available across pages",
            "example": 20,
            "x-ballerina-name": "totalRecords"
          },
          "page_count": {
            "type": "integer",
            "description": "The number of pages returned for the request made",
            "example": 1,
            "x-ballerina-name": "pageCount"
          },
          "page_size": {
            "maximum": 300,
            "type": "integer",
            "description": "The number of records returned with a single API call",
            "example": 30,
            "default": 30,
            "x-ballerina-name": "pageSize"
          }
        },
        "description": "Pagination Object"
      },
      "TheH323SIPDeviceObject1": {
        "title": "The H.323/SIP device object.",
        "required": [
          "encryption",
          "ip",
          "name",
          "protocol"
        ],
        "type": "object",
        "properties": {
          "protocol": {
            "type": "string",
            "description": "Device protocol.  \n `H.323` - H.323.  \n `SIP` - SIP",
            "example": "H.323",
            "enum": [
              "H.323",
              "SIP"
            ],
            "x-enum-descriptions": [
              "H.323",
              "SIP"
            ]
          },
          "encryption": {
            "type": "string",
            "description": "Device encryption:  \n `auto` - auto.  \n `yes` - yes.  \n `no` - no",
            "example": "auto",
            "enum": [
              "auto",
              "yes",
              "no"
            ],
            "x-enum-descriptions": [
              "auto",
              "yes",
              "no"
            ]
          },
          "ip": {
            "type": "string",
            "description": "Device IP",
            "example": "127.0.0.1"
          },
          "name": {
            "maxLength": 64,
            "type": "string",
            "description": "Device name",
            "example": "api_test_20190508"
          }
        },
        "description": "The H.323/SIP device object"
      },
      "UsersuserIdwebinarsSettingsSignLanguageInterpretation": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "Whether to enable [sign language interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar) for the webinar. If not provided, the default value will be based on the user's setting",
            "example": true
          },
          "interpreters": {
            "maximum": 20,
            "type": "array",
            "description": "Information about the webinar's sign language interpreters",
            "items": {
              "$ref": "#/components/schemas/UsersuserIdwebinarsSettingsSignLanguageInterpretationInterpreters"
            }
          }
        },
        "description": "The webinar's [sign language interpretation settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar). Make sure to add the language in the web portal in order to use it in the API. See link for details. \n\n**Note:** If this feature is not enabled on the host's account, this setting will **not** be applied to the webinar"
      },
      "InlineResponse20049AllOf1": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "example": "Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3",
            "x-ballerina-name": "nextPageToken"
          },
          "total_records": {
            "type": "integer",
            "description": "The number of all records available across pages",
            "example": 1,
            "x-ballerina-name": "totalRecords"
          },
          "page_count": {
            "type": "integer",
            "description": "The number of pages returned for the request made",
            "example": 1,
            "x-ballerina-name": "pageCount"
          },
          "page_size": {
            "maximum": 300,
            "type": "integer",
            "description": "The number of records returned within a single API call",
            "example": 30,
            "default": 30,
            "x-ballerina-name": "pageSize"
          }
        },
        "description": "Pagination object"
      },
      "InlineResponse20043InlineResponse20043AllOf12": {
        "type": "object",
        "properties": {
          "operation_logs": {
            "type": "array",
            "description": "Array of operation log objects",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20043OperationLogs"
            },
            "x-ballerina-name": "operationLogs"
          }
        }
      },
      "InlineResponse20019Questions": {
        "type": "object",
        "properties": {
          "answer_required": {
            "type": "boolean",
            "description": "Whether participants must answer the question. \n* `true` - The participant must answer the question. \n* `false` - The participant does not need to answer the question. \n\n**Note:** \n* When the poll's `type` value is `1` (Poll), this value defaults to `true`. \n* When the poll's `type` value is the `2` (Advanced Poll) or `3` (Quiz) values, this value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "answerRequired"
          },
          "answer_min_character": {
            "minimum": 1,
            "type": "integer",
            "description": "The allowed minimum number of characters. This field only applies to `short_answer` and `long_answer` polls. You must provide at least a one-character minimum value",
            "example": 1,
            "x-ballerina-name": "answerMinCharacter"
          },
          "rating_min_value": {
            "minimum": 0,
            "type": "integer",
            "description": "The rating scale's minimum value. This value cannot be less than zero. \n\nThis field only applies to the `rating_scale` poll",
            "example": 0,
            "x-ballerina-name": "ratingMinValue"
          },
          "answers": {
            "minItems": 2,
            "type": "array",
            "description": "The poll question's available answers. This field requires a **minimum** of two answers. \n\n* For `single` and `multiple` polls, you can only provide a maximum of 10 answers. \n* For `matching` polls, you can only provide a maximum of 16 answers. \n* For `rank_order` polls, you can only provide a maximum of seven answers",
            "items": {
              "type": "string",
              "example": "Extremely useful"
            }
          },
          "type": {
            "type": "string",
            "description": "The poll's question and answer type. \n* `single` - Single choice. \n* `multiple` - Multiple choice. \n* `matching` - Matching. \n* `rank_order` - Rank order. \n* `short_answer` - Short answer. \n* `long_answer` - Long answer. \n* `fill_in_the_blank` - Fill in the blank. \n* `rating_scale` - Rating scale",
            "example": "single",
            "enum": [
              "single",
              "multiple",
              "matching",
              "rank_order",
              "short_answer",
              "long_answer",
              "fill_in_the_blank",
              "rating_scale"
            ],
            "x-enum-descriptions": [
              "Single choice",
              "Multiple choice",
              "Matching",
              "Rank order",
              "Short answer",
              "Long answer",
              "Fill in the blank",
              "Rating scale"
            ]
          },
          "answer_max_character": {
            "type": "integer",
            "description": "The allowed maximum number of characters. This field only applies to `short_answer` and `long_answer` polls. \n* For `short_answer` polls, a maximum of 500 characters. \n* For `long_answer` polls, a maximum of 2,000 characters",
            "example": 200,
            "x-ballerina-name": "answerMaxCharacter"
          },
          "rating_max_value": {
            "maximum": 10,
            "type": "integer",
            "description": "The rating scale's maximum value, up to a maximum value of 10. \n\nThis field only applies to the `rating_scale` poll",
            "example": 4,
            "x-ballerina-name": "ratingMaxValue"
          },
          "right_answers": {
            "minItems": 1,
            "type": "array",
            "description": "The poll question's correct answer(s). This field is required if the poll's `type` value is `3` (Quiz). \n\n For `single` and `matching` polls, this field only accepts one answer",
            "items": {
              "type": "string",
              "example": "Good"
            },
            "x-ballerina-name": "rightAnswers"
          },
          "show_as_dropdown": {
            "type": "boolean",
            "description": "Whether to display the radio selection as a drop-down box. \n* `true` - Show as a drop-down box. \n* `false` - Do not show as a drop-down box. \n\nThis value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "showAsDropdown"
          },
          "rating_min_label": {
            "type": "string",
            "description": "The low score label for the `rating_min_value` field. \n\nThis field only applies to the `rating_scale` poll",
            "example": "Not likely",
            "x-ballerina-name": "ratingMinLabel"
          },
          "case_sensitive": {
            "type": "boolean",
            "description": "Whether the correct answer is case sensitive. This field only applies to `fill_in_the_blank` polls: \n* `true` &mdash; The answer is case-sensitive. \n* `false` &mdash; The answer is not case-sensitive. \n\nThis value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "caseSensitive"
          },
          "name": {
            "maxLength": 1024,
            "type": "string",
            "description": "The poll question, up to 1024 characters. \n\nFor `fill_in_the_blank` polls, this field is the poll's question. For each value that the user must fill in, ensure that there are the same number of `right_answers` values",
            "example": "How useful was this meeting?"
          },
          "rating_max_label": {
            "type": "string",
            "description": "The high score label for the `rating_max_value` field. \n\nThis field only applies to the `rating_scale` poll",
            "example": "Extremely Likely",
            "x-ballerina-name": "ratingMaxLabel"
          },
          "prompts": {
            "type": "array",
            "description": "The information about the prompt questions. This field only applies to `matching` and `rank_order` polls. You **must** provide a minimum of two prompts, up to a maximum of 10 prompts",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdbatchPollsPrompts"
            }
          }
        }
      },
      "PanelistsAllOf11": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Panelist's ID",
            "example": "Tg2b6GhcQKKbV7nSCbDKug"
          }
        }
      },
      "RegistrationList1AllOf1": {
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "description": "**Deprecated.** This field is deprecated. We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination",
            "example": 1,
            "deprecated": true,
            "default": 1,
            "x-ballerina-name": "pageNumber"
          },
          "next_page_token": {
            "type": "string",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "example": "w7587w4eiyfsudgf",
            "x-ballerina-name": "nextPageToken"
          },
          "total_records": {
            "type": "integer",
            "description": "The total number of all the records available across pages",
            "example": 20,
            "x-ballerina-name": "totalRecords"
          },
          "page_count": {
            "type": "integer",
            "description": "The number of pages returned for the request made",
            "example": 1,
            "x-ballerina-name": "pageCount"
          },
          "page_size": {
            "maximum": 300,
            "type": "integer",
            "description": "The number of records returned with a single API call",
            "example": 30,
            "default": 30,
            "x-ballerina-name": "pageSize"
          }
        },
        "description": "Pagination Object"
      },
      "PollsAllOf11": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The poll ID",
            "example": "QalIoKWLTJehBJ8e1xRrbQ"
          },
          "status": {
            "type": "string",
            "description": "The status of the webinar poll:\n`notstart` - Poll not started\n`started` - Poll started\n`ended` - Poll ended\n`sharing` - Sharing poll results\n`deactivated` - Poll deactivated",
            "example": "notstart",
            "enum": [
              "notstart",
              "started",
              "ended",
              "sharing",
              "deactivated"
            ]
          }
        }
      },
      "InlineResponse20047CustomKeys": {
        "type": "object",
        "properties": {
          "value": {
            "maxLength": 256,
            "type": "string",
            "description": "The custom key's value",
            "example": "US"
          },
          "key": {
            "maxLength": 64,
            "type": "string",
            "description": "The custom key name",
            "example": "Host Nation"
          }
        }
      },
      "MeetingRegistrantQuestions1": {
        "title": "Meeting Registrant Questions",
        "type": "object",
        "properties": {
          "custom_questions": {
            "type": "array",
            "description": "Array of custom questions for registrants",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20020CustomQuestions"
            },
            "x-ballerina-name": "customQuestions"
          },
          "questions": {
            "type": "array",
            "description": "Array of registrant questions",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20020Questions"
            }
          }
        },
        "description": "Meeting registrant questions"
      },
      "UsersuserIdwebinarsTrackingFields": {
        "required": [
          "field"
        ],
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "Tracking fields type",
            "example": "field1"
          },
          "value": {
            "type": "string",
            "description": "Tracking fields value",
            "example": "value1"
          }
        }
      },
      "InlineResponse2012Prompts": {
        "type": "object",
        "properties": {
          "prompt_question": {
            "type": "string",
            "description": "The question prompt's title",
            "example": "How are you?",
            "x-ballerina-name": "promptQuestion"
          },
          "prompt_right_answers": {
            "type": "array",
            "description": "The question prompt's correct answers",
            "items": {
              "type": "string",
              "example": "Good"
            },
            "x-ballerina-name": "promptRightAnswers"
          }
        }
      },
      "ZpaAssignmentBody": {
        "required": [
          "mac_address",
          "vendor"
        ],
        "type": "object",
        "properties": {
          "mac_address": {
            "type": "string",
            "description": "The device's mac address",
            "example": "64167ffc0ed7",
            "x-ballerina-name": "macAddress"
          },
          "vendor": {
            "type": "string",
            "description": "The device's manufacturer",
            "example": "poly"
          },
          "extension_number": {
            "type": "string",
            "description": "The extension number",
            "example": "802",
            "x-ballerina-name": "extensionNumber"
          }
        }
      },
      "MeetingIdOneOf1": {
        "type": "integer",
        "example": 5638296721
      },
      "InlineResponse20024InlineResponse20024AllOf12": {
        "type": "object",
        "properties": {
          "participants": {
            "type": "array",
            "description": "Array of meeting participant objects",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20024Participants"
            }
          }
        }
      },
      "WebinarInstances": {
        "title": "Webinar instances",
        "description": "List of webinars",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebinarInstancesAllOf1"
          }
        ]
      },
      "UserId": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/UserIdOneOf1"
          },
          {
            "$ref": "#/components/schemas/UserIdUserIdOneOf12"
          },
          {
            "$ref": "#/components/schemas/UserIdUserIdUserIdOneOf123"
          }
        ]
      },
      "H323SIPDeviceListH323SIPDeviceListAllOf12": {
        "type": "object",
        "properties": {
          "devices": {
            "type": "array",
            "description": "List of H.323/SIP Device objects",
            "items": {
              "$ref": "#/components/schemas/H323SIPDeviceListDevices"
            }
          }
        }
      },
      "InlineResponse2001StatisticByFileExtension": {
        "type": "object",
        "properties": {
          "vtt_file_count": {
            "type": "integer",
            "description": "The number of vtt files",
            "example": 1,
            "x-ballerina-name": "vttFileCount"
          },
          "m4a_file_count": {
            "type": "integer",
            "description": "The number of m4a files",
            "example": 1,
            "x-ballerina-name": "m4aFileCount"
          },
          "mp4_file_count": {
            "type": "integer",
            "description": "The number of mp4 files",
            "example": 1,
            "x-ballerina-name": "mp4FileCount"
          },
          "json_file_count": {
            "type": "integer",
            "description": "The number of json files",
            "example": 1,
            "x-ballerina-name": "jsonFileCount"
          },
          "txt_file_count": {
            "type": "integer",
            "description": "The number of txt files",
            "example": 1,
            "x-ballerina-name": "txtFileCount"
          }
        },
        "description": "Statistics about archive files, by file extension"
      },
      "InlineResponse20063SettingsLanguageInterpretation": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "Whether to enable [language interpretation](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0064768) for the webinar",
            "example": true
          },
          "interpreters": {
            "type": "array",
            "description": "Information about the webinar's language interpreters",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsLanguageInterpretationInterpreters"
            }
          }
        },
        "description": "The webinar's [language interpretation settings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0064768). Make sure to add the language in the web portal in order to use it in the API. See link for details. \n\n**Note:** This feature is only available for certain Webinar add-on, Education, and Business and higher plans. If this feature is not enabled on the host's account, this setting will **not** be applied to the webinar. This is not supported for simulive webinars"
      },
      "InlineResponse20034CloudRecordingStorage": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date of the usage",
            "format": "date",
            "example": "2021-12-05"
          },
          "free_usage": {
            "type": "string",
            "description": "Free storage",
            "example": "Unlimited",
            "x-ballerina-name": "freeUsage"
          },
          "usage": {
            "type": "string",
            "description": "Storage used on the date",
            "example": "3 MB"
          },
          "plan_usage": {
            "type": "string",
            "description": "Paid storage",
            "example": "3 TB",
            "x-ballerina-name": "planUsage"
          }
        }
      },
      "BrandingNameTagsBody": {
        "required": [
          "accent_color",
          "background_color",
          "name",
          "text_color"
        ],
        "type": "object",
        "properties": {
          "set_default_for_all_panelists": {
            "type": "boolean",
            "description": "Whether to set the name tag as the new default for all panelists or not. This includes panelists not currently assigned a default name tag",
            "example": true,
            "default": true,
            "x-ballerina-name": "setDefaultForAllPanelists"
          },
          "accent_color": {
            "type": "string",
            "description": "The name tag's accent color",
            "format": "Hex color code",
            "example": "0e72ed",
            "x-ballerina-name": "accentColor"
          },
          "background_color": {
            "type": "string",
            "description": "The name tag's background color",
            "format": "Hex color code",
            "example": "0e72ed",
            "x-ballerina-name": "backgroundColor"
          },
          "name": {
            "type": "string",
            "description": "The name tag's name.\n\n**Note:** This value cannot exceed more than 50 characters",
            "example": "name"
          },
          "text_color": {
            "type": "string",
            "description": "The name tag's text color",
            "format": "Hex color code",
            "example": "0e72ed",
            "x-ballerina-name": "textColor"
          },
          "is_default": {
            "type": "boolean",
            "description": "Whether set the name tag as the default name tag or not",
            "example": true,
            "default": false,
            "x-ballerina-name": "isDefault"
          }
        },
        "description": "Name tag information"
      },
      "SipPhonesPhonesBody": {
        "required": [
          "authorization_name",
          "domain",
          "password",
          "server",
          "user_email",
          "user_name"
        ],
        "type": "object",
        "properties": {
          "server": {
            "$ref": "#/components/schemas/SipPhonesphonesServer"
          },
          "password": {
            "type": "string",
            "description": "The password generated for the user in the SIP account",
            "example": "123456"
          },
          "user_email": {
            "maxLength": 64,
            "type": "string",
            "description": "The email address of the user to associate with the SIP Phone. Can add `.pc`, `.mobile`, `.pad` at the end of the email, such as `user@example.com.pc`, to add accounts for different platforms for the same user",
            "format": "email",
            "example": "jchill@example.com",
            "x-ballerina-name": "userEmail"
          },
          "server_3": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipPhonesphonesServer"
              }
            ],
            "x-ballerina-name": "server3"
          },
          "voice_mail": {
            "maxLength": 255,
            "type": "string",
            "description": "The number to dial for checking voicemail",
            "example": "4000",
            "x-ballerina-name": "voiceMail"
          },
          "server_2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipPhonesphonesServer"
              }
            ],
            "x-ballerina-name": "server2"
          },
          "user_name": {
            "maxLength": 64,
            "type": "string",
            "description": "The phone number associated with the user in the SIP account",
            "example": "Jill Chill",
            "x-ballerina-name": "userName"
          },
          "domain": {
            "maxLength": 64,
            "type": "string",
            "description": "The name or IP address of your provider's SIP domain, such as example.com. ",
            "example": "example.com"
          },
          "display_number": {
            "maxLength": 64,
            "type": "string",
            "description": "The displayed phone number associated with the user can be either in extension format or E.164 format. You can specify the displayed number when the dialable number differs from the SIP username",
            "example": "5551110105",
            "x-ballerina-name": "displayNumber"
          },
          "authorization_name": {
            "maxLength": 64,
            "type": "string",
            "description": "The authorization name of the user that is registered for SIP phone",
            "example": "testname",
            "x-ballerina-name": "authorizationName"
          },
          "registration_expire_time": {
            "maximum": 127,
            "minimum": 1,
            "type": "integer",
            "description": "The number of minutes after which the SIP registration of the Zoom client user expires, and the client will auto register to the SIP server",
            "example": 60,
            "default": 60,
            "x-ballerina-name": "registrationExpireTime"
          }
        }
      },
      "InlineResponse20031ActivityLogs": {
        "type": "object",
        "properties": {
          "client_type": {
            "type": "string",
            "description": "The client interface type using which the activity was performed",
            "example": "Browser",
            "x-ballerina-name": "clientType"
          },
          "ip_address": {
            "type": "string",
            "description": "The IP address of the user's device",
            "example": "192.0.2.1",
            "x-ballerina-name": "ipAddress"
          },
          "time": {
            "type": "string",
            "description": "Time during which the activity occurred",
            "format": "date-time",
            "example": "2019-09-15T19:13:41Z"
          },
          "type": {
            "type": "string",
            "description": "The type of activity. \n* `Sign in` &mdash; Sign in activity by user. \n* `Sign out` &mdash; Sign out activity by user",
            "example": "Sign out",
            "enum": [
              "Sign in",
              "Sign out"
            ]
          },
          "version": {
            "type": "string",
            "description": "Zoom client version of the user",
            "example": "5.9.1.2581"
          },
          "email": {
            "type": "string",
            "description": "Email address of the user used for the activity",
            "format": "email",
            "example": "jchill@example.com"
          }
        }
      },
      "InlineResponse20051Questions": {
        "type": "object",
        "properties": {
          "question_details": {
            "type": "array",
            "description": "Array of questions from the user",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20051QuestionDetails"
            },
            "x-ballerina-name": "questionDetails"
          },
          "user_id": {
            "type": "string",
            "description": "The user ID of the user who asked the question. This value returns blank for external users",
            "example": "hyROrs0TRCSvwmadI7L13w",
            "x-ballerina-name": "userId"
          },
          "name": {
            "type": "string",
            "description": "Participant's display name.  \n  \n\nIf anonymous [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer) option is enabled and if a participant submits the Q&amp;A without providing their name, the value of the `name` field will be &quot;Anonymous Attendee&quot;",
            "example": "Jill Chill"
          },
          "email": {
            "type": "string",
            "description": "Participant's email. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details",
            "example": "jchilll@example.com"
          }
        }
      },
      "UsersuserIdwebinarsSettingsFollowUpAbsenteesEmailNotification": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "* `true` - Send follow-up email to absentees.\n\n* `false` - Do not send follow-up email to absentees",
            "example": true
          },
          "type": {
            "type": "integer",
            "description": "`0` - No plan.  \n `1` - Send 1 days after the scheduled end date.  \n `2` - Send 2 days after the scheduled end date.  \n `3` - Send 3 days after the scheduled end date.  \n `4` - Send 4 days after the scheduled end date.  \n `5` - Send 5 days after the scheduled end date.  \n `6` - Send 6 days after the scheduled end date.  \n `7` - Send 7 days after the scheduled end date",
            "example": 0,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "x-enum-descriptions": [
              "Send 1 days after the scheduled end date.",
              "Send 2 days after the scheduled end date.",
              "Send 3 days after the scheduled end date.",
              "Send 4 days after the scheduled end date.",
              "Send 5 days after the scheduled end date.",
              "Send 6 days after the scheduled end date.",
              "Send 7 days after the scheduled end date."
            ]
          }
        },
        "description": "Send follow-up email to absentees"
      },
      "MeetingRegistrant": {
        "title": "Meeting Registrant",
        "allOf": [
          {
            "$ref": "#/components/schemas/MeetingRegistrantAllOf1"
          },
          {
            "$ref": "#/components/schemas/MeetingRegistrantMeetingRegistrantAllOf12"
          },
          {
            "$ref": "#/components/schemas/MeetingRegistrantMeetingRegistrantMeetingRegistrantAllOf123"
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "The registrant's registration status.\n* `approved` - The registrant is approved to join the meeting. \n* `pending` - The registrant's registration is pending.\n* `denied` - The registrant was declined to join the meeting",
                "example": "approved",
                "enum": [
                  "approved",
                  "pending",
                  "denied"
                ]
              }
            }
          }
        ]
      },
      "MeetingsAllOf1": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "integer",
            "description": "Meeting duration",
            "example": 60
          },
          "start_time": {
            "type": "string",
            "description": "Meeting start time",
            "format": "date-time",
            "example": "2022-03-23T06:00:00Z",
            "x-ballerina-name": "startTime"
          },
          "join_url": {
            "type": "string",
            "description": "URL using which participants can join a meeting",
            "example": "https://example.com/j/11111",
            "x-ballerina-name": "joinUrl"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone to format the meeting start time. ",
            "example": "America/Los_Angeles"
          },
          "created_at": {
            "type": "string",
            "description": "Time of creation",
            "format": "date-time",
            "example": "2022-03-23T05:31:16Z",
            "x-ballerina-name": "createdAt"
          },
          "topic": {
            "type": "string",
            "description": "Meeting topic",
            "example": "My Meeting"
          },
          "id": {
            "type": "integer",
            "description": "Meeting ID - also known as the meeting number in long (int64) format",
            "format": "int64",
            "example": 97763643886
          },
          "type": {
            "type": "integer",
            "description": "Meeting types.  \n `1` - Instant meeting.  \n `2` - Scheduled meeting.  \n `3` - Recurring meeting with no fixed time.  \n `8` - Recurring meeting with fixed time",
            "example": 2,
            "enum": [
              1,
              2,
              3,
              8
            ],
            "x-enum-descriptions": [
              "Instant Meeting",
              "Scheduled Meeting",
              "Recurring Meeting with no fixed time",
              "Recurring Meeting with fixed time"
            ]
          },
          "agenda": {
            "type": "string",
            "description": "Meeting description. The length of agenda gets truncated to 250 characters when you list all of a user's meetings. To view a meeting's complete agenda, or to retrieve details for a single meeting, use the [**Get a meeting**](/docs/api-reference/zoom-api/methods#operation/meeting) API",
            "example": "My Meeting"
          },
          "pmi": {
            "type": "string",
            "description": "[Personal meeting ID](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi). This field is only returned if PMI was used to schedule the meeting",
            "example": "97891943927"
          },
          "uuid": {
            "type": "string",
            "description": "Unique Meeting ID. Each meeting instance will generate its own Meeting UUID",
            "example": "aDYlohsHRtCd4ii1uC2+hA=="
          },
          "host_id": {
            "type": "string",
            "description": "ID of the user who is set as the meeting's host",
            "example": "30R7kT7bTIKSNUFEuH_Qlg",
            "x-ballerina-name": "hostId"
          }
        }
      },
      "InlineResponse20013Recurrence": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "end_date_time": {
            "type": "string",
            "description": "Select the final date when the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with `end_times`.)",
            "format": "date-time",
            "example": "2022-04-02T15:59:00Z",
            "x-ballerina-name": "endDateTime"
          },
          "end_times": {
            "maximum": 60,
            "type": "integer",
            "description": "Select how many times the meeting should recur before it is canceled. If `end_times` is set to 0, it means there is no end time. The maximum number of recurrences is 60. Cannot be used with `end_date_time`",
            "example": 7,
            "default": 1,
            "x-ballerina-name": "endTimes"
          },
          "monthly_week": {
            "type": "integer",
            "description": "Use this field only if you're scheduling a recurring meeting of type `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.**   \n `-1` - Last week of the month.  \n `1` - First week of the month.  \n `2` - Second week of the month.  \n `3` - Third week of the month.  \n `4` - Fourth week of the month",
            "example": 1,
            "enum": [
              -1,
              1,
              2,
              3,
              4
            ],
            "x-enum-descriptions": [
              "Last week",
              "First week",
              "Second week",
              "Third week",
              "Fourth week"
            ],
            "x-ballerina-name": "monthlyWeek"
          },
          "monthly_week_day": {
            "type": "integer",
            "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n  \n `1` - Sunday.  \n `2` - Monday.  \n `3` - Tuesday.  \n `4` -  Wednesday.  \n `5` - Thursday.  \n `6` - Friday.  \n `7` - Saturday",
            "example": 1,
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "x-enum-descriptions": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-ballerina-name": "monthlyWeekDay"
          },
          "repeat_interval": {
            "type": "integer",
            "description": "Define the interval when the meeting should recur. For instance, to schedule a meeting that recurs every two months, you must set this field's value as `2` and the `type` parameter's value as `3`. \n\nFor a daily meeting, the maximum interval you can set is `99` days. For a weekly meeting the maximum interval that you can set is  of `50` weeks. For a monthly meeting, there is a maximum of `10` months.\n\n",
            "example": 1,
            "x-ballerina-name": "repeatInterval"
          },
          "monthly_day": {
            "type": "integer",
            "description": "Use this field only if you're scheduling a recurring meeting of type `3` to state the day in a month when the meeting should recur. The value range is from 1 to 31.\n\nFor example, for a meeting to recur on 23rd of each month, provide `23` as this field's value and `1` as the `repeat_interval` field's value. Instead, to have the meeting to recur every three months on 23rd of the month, change the `repeat_interval` field's value to `3`",
            "example": 1,
            "default": 1,
            "x-ballerina-name": "monthlyDay"
          },
          "type": {
            "type": "integer",
            "description": "Recurring meeting types. \n `1` - Daily.  \n `2` - Weekly.  \n `3` - Monthly",
            "example": 1,
            "enum": [
              1,
              2,
              3
            ],
            "x-enum-descriptions": [
              "Daily",
              "Weekly",
              "Monthly"
            ]
          },
          "weekly_days": {
            "type": "string",
            "description": "This field is required if you're scheduling a recurring meeting of type `2` to state which days of the week the meeting should repeat.   \n    \n  The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `1` as this field's value.  \n   \n  **Note** To have the meeting occur on multiple days of a week, provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `1,3` as this field's value.\n\n\n `1`  - Sunday.   \n `2` - Monday.  \n `3` - Tuesday.  \n `4` -  Wednesday.  \n `5` -  Thursday.  \n `6` - Friday.  \n `7` - Saturday",
            "example": "1",
            "default": "1",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7"
            ],
            "x-ballerina-name": "weeklyDays"
          }
        },
        "description": "Recurrence object. Use this object only for a meeting with type `8`, a recurring meeting with a fixed time. "
      },
      "InlineResponse20028AllOf1": {
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "description": "The page number of the current results",
            "example": 1,
            "default": 1,
            "x-ballerina-name": "pageNumber"
          },
          "next_page_token": {
            "type": "string",
            "description": "Use the next page token to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "example": "Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3",
            "x-ballerina-name": "nextPageToken"
          },
          "total_records": {
            "type": "integer",
            "description": "The total number of all the records available across pages",
            "example": 1,
            "x-ballerina-name": "totalRecords"
          },
          "page_count": {
            "type": "integer",
            "description": "The number of pages returned for the request made",
            "example": 1,
            "x-ballerina-name": "pageCount"
          },
          "page_size": {
            "maximum": 300,
            "type": "integer",
            "description": "The number of records returned with a single API call",
            "example": 30,
            "default": 30,
            "x-ballerina-name": "pageSize"
          }
        },
        "description": "Pagination object"
      },
      "WebinarIdStatusBody": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "example": "end",
            "enum": [
              "end"
            ],
            "x-enum-descriptions": [
              "end a webinar"
            ]
          }
        }
      },
      "UsersuserIdmeetingTemplatesAllOf1": {
        "type": "object",
        "properties": {
          "save_recurrence": {
            "type": "boolean",
            "description": "If the field is set to `true`, the recurrence meeting template will be saved as the scheduled meeting",
            "example": false,
            "default": false,
            "x-ballerina-name": "saveRecurrence"
          },
          "meeting_id": {
            "type": "integer",
            "description": "The meeting ID - the meeting number in long (int64) format",
            "format": "int64",
            "example": 96172769962,
            "x-ballerina-name": "meetingId"
          },
          "name": {
            "type": "string",
            "description": "The template name",
            "example": "My Meeting Template"
          },
          "overwrite": {
            "type": "boolean",
            "description": "Overwrite an existing meeting template if the template is created from same existing meeting",
            "example": false,
            "default": false
          }
        }
      },
      "InlineResponse20062Webinars": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebinarsAllOf1"
          }
        ]
      },
      "UsersuserIdwebinarsSettingsAttendeesAndPanelistsReminderEmailNotification": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "* `true`: Send reminder email to attendees and panelists.\n\n* `false`: Do not send reminder email to attendees and panelists",
            "example": true
          },
          "type": {
            "type": "integer",
            "description": "`0` - No plan.  \n `1` - Send 1 hour before webinar.  \n `2` - Send 1 day before webinar.  \n `3` - Send 1 hour and 1 day before webinar.  \n `4` - Send 1 week before webinar.  \n `5` - Send 1 hour and 1 week before webinar.  \n `6` - Send 1 day and 1 week before webinar.  \n `7` - Send 1 hour, 1 day and 1 week before webinar",
            "example": 0,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "x-enum-descriptions": [
              "Send 1 hour before webinar.",
              "Send 1 day before webinar.",
              "Send 1 hour and 1 day before webinar.",
              "Send 1 week before webinar.",
              "Send 1 hour and 1 week before webinar.",
              "Send 1 day and 1 week before webinar.",
              "Send 1 hour, 1 day and 1 week before webinar."
            ]
          }
        },
        "description": "Send reminder email to attendees and panelists"
      },
      "InlineResponse20036TrackingFields": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "The label of the tracking field",
            "example": "Meeting purpose."
          },
          "value": {
            "type": "string",
            "description": "The value of the tracking field",
            "example": "Support"
          }
        }
      },
      "UserIdWebinarsBody": {
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/UsersuserIdwebinarsSettings"
          },
          "timezone": {
            "type": "string",
            "description": "The timezone to assign to the `start_time` value. This field is only used for scheduled or recurring webinars with a fixed time.\n\nFor a list of supported timezones and their formats, see our [timezone list](/docs/api/references/abbreviations/#timezones)",
            "example": "America/Los_Angeles"
          },
          "record_file_id": {
            "type": "string",
            "description": "The previously recorded file's ID for `simulive`",
            "example": "f09340e1-cdc3-4eae-9a74-98f9777ed908",
            "x-ballerina-name": "recordFileId"
          },
          "schedule_for": {
            "type": "string",
            "description": "The email address or user ID of the user to schedule a webinar for",
            "example": "jchill@example.com",
            "x-ballerina-name": "scheduleFor"
          },
          "type": {
            "type": "integer",
            "description": "Webinar types.\n `5` - Webinar.  \n `6` - Recurring webinar with no fixed time.  \n `9` - Recurring webinar with a fixed time",
            "example": 5,
            "default": 5,
            "enum": [
              5,
              6,
              9
            ],
            "x-enum-descriptions": [
              "Webinar",
              "Recurring webinar with no fixed time",
              "Recurring webinar with fixed time"
            ]
          },
          "agenda": {
            "type": "string",
            "description": "Webinar description",
            "example": "My Webinar"
          },
          "duration": {
            "type": "integer",
            "description": "Webinar duration in minutes. Used for scheduled webinars only",
            "example": 60
          },
          "recurrence": {
            "$ref": "#/components/schemas/RecurrenceWebinar"
          },
          "start_time": {
            "type": "string",
            "description": "Webinar start time. We support two formats for `start_time` - local time and GMT.  \n  \n\nTo set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`.\n\nTo set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone [ID](/docs/api/references/abbreviations/#timezones) in the `timezone` field OR leave it blank and the timezone set on your Zoom account will be used. You can also set the time as UTC as the timezone field.\n\nThe `start_time` should only be used for scheduled and / or recurring webinars with fixed time",
            "format": "date-time",
            "example": "2022-03-26T06:44:14Z",
            "x-ballerina-name": "startTime"
          },
          "password": {
            "maxLength": 10,
            "type": "string",
            "description": "The webinar passcode. By default, it can be up to 10 characters in length and may contain alphanumeric characters as well as special characters like !, @, #, and others..\n\n**Note**:\n- If the account owner or administrator has configured [Passcode Requirement](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0063160#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode **must** meet those requirements. You can retrieve the requirements using the [**Get user settings**](/docs/api/users/#tag/users/GET/users/{userId}/settings) API or the [**Get account settings**](/docs/api/accounts/#tag/accounts/GET/accounts/{accountId}/settings) API.\n- If the **Passcode** user setting is enabled and `default_passcode` is not explicitly set to `false`, a passcode will be automatically generated when one is not provided.\n- If the **Passcode** setting is enabled and [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, a passcode will be automatically generated when one is not provided",
            "example": "123456"
          },
          "default_passcode": {
            "type": "boolean",
            "description": "Determines whether to automatically generate a passcode for the webinar when no passcode is provided and the user's **Passcode** setting is enabled. Defaults to `true`. When set to `false`, webinars will only have a passcode if one is explicitly provided",
            "example": true,
            "default": true,
            "x-ballerina-name": "defaultPasscode"
          },
          "tracking_fields": {
            "type": "array",
            "description": "Tracking fields",
            "items": {
              "$ref": "#/components/schemas/UsersuserIdwebinarsTrackingFields"
            },
            "x-ballerina-name": "trackingFields"
          },
          "is_simulive": {
            "type": "boolean",
            "description": "Whether to set the webinar simulive",
            "example": true,
            "x-ballerina-name": "isSimulive"
          },
          "transition_to_live": {
            "type": "boolean",
            "description": "Whether to transition a simulive webinar to live. The host must be present at the time of transition",
            "example": false,
            "x-ballerina-name": "transitionToLive"
          },
          "topic": {
            "type": "string",
            "description": "Webinar topic",
            "example": "My Webinar"
          },
          "template_id": {
            "type": "string",
            "description": "The webinar template ID to schedule a webinar using a [webinar template](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates) or a [admin webinar template](https://support.zoom.us/hc/en-us/articles/8137753618957-Configuring-admin-webinar-templates). For a list of webinar templates, use the [**List webinar templates**](/docs/api/rest/reference/zoom-api/methods#operation/listWebinarTemplates) API",
            "example": "5Cj3ceXoStO6TGOVvIOVPA==",
            "x-ballerina-name": "templateId"
          }
        },
        "description": "Webinar object"
      },
      "MeetingRegistrantAllOf1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "9tboDiHUQAeOnbmudzWa5g"
          }
        }
      },
      "WebinarswebinarIdregistrantsCustomQuestions": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The custom question's title",
            "example": "What do you hope to learn from this?"
          },
          "value": {
            "maxLength": 128,
            "type": "string",
            "description": "The custom question's response value. This has a limit of 128 characters",
            "example": "Look forward to learning how you come up with new recipes and what other services you offer."
          }
        },
        "description": "Information about custom questions"
      },
      "CloudRecordingRegistrationList": {
        "title": "Cloud recording registration list",
        "type": "object",
        "description": "Information about the cloud recording registrations",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "page_number": {
                "type": "integer",
                "description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination",
                "example": 1,
                "deprecated": true,
                "default": 1,
                "x-ballerina-name": "pageNumber"
              },
              "next_page_token": {
                "type": "string",
                "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
                "example": "w7587w4eiyfsudgf",
                "x-ballerina-name": "nextPageToken"
              },
              "total_records": {
                "type": "integer",
                "description": "The total number of all the records available across pages",
                "example": 20,
                "x-ballerina-name": "totalRecords"
              },
              "page_count": {
                "type": "integer",
                "description": "The number of pages returned for the request made",
                "example": 1,
                "x-ballerina-name": "pageCount"
              },
              "page_size": {
                "maximum": 300,
                "type": "integer",
                "description": "The number of records returned with a single API call",
                "example": 30,
                "default": 30,
                "x-ballerina-name": "pageSize"
              }
            },
            "description": "Pagination object"
          },
          {
            "type": "object",
            "properties": {
              "registrants": {
                "type": "array",
                "description": "Information about the cloud recording registrants",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The registrant's ID.",
                          "example": "3Z7sEm0TQQieLav3c3OD_g"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "Registrant.",
                      "allOf": [
                        {
                          "required": [
                            "email",
                            "first_name"
                          ],
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string",
                              "description": "The registrant's ZIP or postal code.",
                              "example": "94045"
                            },
                            "country": {
                              "type": "string",
                              "description": "The registrant's two-letter [country code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries).",
                              "example": "US"
                            },
                            "custom_questions": {
                              "type": "array",
                              "description": "Information about custom questions.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "title": {
                                    "type": "string",
                                    "description": "The custom question's title.",
                                    "example": "What do you hope to learn from this?"
                                  },
                                  "value": {
                                    "maxLength": 128,
                                    "type": "string",
                                    "description": "The custom question's response value. This has a limit of 128 characters.",
                                    "example": "Look forward to learning how you come up with new recipes and what other services you offer."
                                  }
                                },
                                "description": "Information about custom questions."
                              },
                              "x-ballerina-name": "customQuestions"
                            },
                            "purchasing_time_frame": {
                              "type": "string",
                              "description": "The registrant's purchasing time frame. \n* `Within a month` \n* `1-3 months` \n* `4-6 months` \n* `More than 6 months` \n* `No timeframe`",
                              "example": "1-3 months",
                              "enum": [
                                "",
                                "Within a month",
                                "1-3 months",
                                "4-6 months",
                                "More than 6 months",
                                "No timeframe"
                              ],
                              "x-ballerina-name": "purchasingTimeFrame"
                            },
                            "address": {
                              "type": "string",
                              "description": "The registrant's address.",
                              "example": "1800 Amphibious Blvd."
                            },
                            "comments": {
                              "type": "string",
                              "description": "The registrant's questions and comments.",
                              "example": "Looking forward to the discussion."
                            },
                            "city": {
                              "type": "string",
                              "description": "The registrant's city.",
                              "example": "Mountain View"
                            },
                            "org": {
                              "type": "string",
                              "description": "The registrant's organization.",
                              "example": "Cooking Org"
                            },
                            "last_name": {
                              "maxLength": 64,
                              "type": "string",
                              "description": "The registrant's last name.",
                              "example": "Chill",
                              "x-ballerina-name": "lastName"
                            },
                            "no_of_employees": {
                              "type": "string",
                              "description": "The registrant's number of employees. \n* `1-20` \n* `21-50` \n* `51-100` \n* `101-250` \n* `251-500` \n* `501-1,000` \n* `1,001-5,000` \n* `5,001-10,000` \n* `More than 10,000`",
                              "example": "1-20",
                              "enum": [
                                "",
                                "1-20",
                                "21-50",
                                "51-100",
                                "101-250",
                                "251-500",
                                "501-1,000",
                                "1,001-5,000",
                                "5,001-10,000",
                                "More than 10,000"
                              ],
                              "x-ballerina-name": "noOfEmployees"
                            },
                            "industry": {
                              "type": "string",
                              "description": "The registrant's industry.",
                              "example": "Food"
                            },
                            "phone": {
                              "type": "string",
                              "description": "The registrant's phone number.",
                              "example": "5550100"
                            },
                            "role_in_purchase_process": {
                              "type": "string",
                              "description": "The registrant's role in the purchase process. \n* `Decision Maker` \n* `Evaluator/Recommender` \n* `Influencer` \n* `Not involved`",
                              "example": "Influencer",
                              "enum": [
                                "",
                                "Decision Maker",
                                "Evaluator/Recommender",
                                "Influencer",
                                "Not involved"
                              ],
                              "x-ballerina-name": "roleInPurchaseProcess"
                            },
                            "state": {
                              "type": "string",
                              "description": "The registrant's state or province.",
                              "example": "CA"
                            },
                            "first_name": {
                              "maxLength": 64,
                              "type": "string",
                              "description": "The registrant's first name.",
                              "example": "Jill",
                              "x-ballerina-name": "firstName"
                            },
                            "job_title": {
                              "type": "string",
                              "description": "The registrant's job title.",
                              "example": "Chef",
                              "x-ballerina-name": "jobTitle"
                            },
                            "email": {
                              "maxLength": 128,
                              "type": "string",
                              "description": "The registrant's email address. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for return value details.",
                              "format": "email",
                              "example": "jchill@example.com"
                            },
                            "status": {
                              "type": "string",
                              "description": "The registrant's status. \n* `approved` - Registrant is approved. \n* `denied` - Registrant is denied. \n* `pending` - Registrant is waiting for approval.",
                              "example": "approved",
                              "enum": [
                                "approved",
                                "denied",
                                "pending"
                              ]
                            }
                          },
                          "description": "Information about the registrant."
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "RegistrantsQuestionsBody2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WebinarRegistrantQuestions"
          }
        ]
      },
      "RegistrantsQuestionsBody1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeetingRegistrantQuestions"
          }
        ]
      },
      "MeetingsmeetingIdRecurrence": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "end_date_time": {
            "type": "string",
            "description": "Select the final date when the meeting recurs before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. Cannot be used with `end_times`",
            "format": "date-time",
            "example": "2022-04-02T15:59:00Z",
            "x-ballerina-name": "endDateTime"
          },
          "end_times": {
            "maximum": 60,
            "type": "integer",
            "description": "Select how many times the meeting should recur before it is canceled. If `end_times` is set to 0, it means there is no end time. The maximum number of recurrences is 60. Cannot be used with `end_date_time`",
            "example": 7,
            "default": 1,
            "x-ballerina-name": "endTimes"
          },
          "monthly_week": {
            "type": "integer",
            "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.   \n `-1` - Last week of the month.  \n `1` - First week of the month.  \n `2` - Second week of the month.  \n `3` - Third week of the month.  \n `4` - Fourth week of the month",
            "example": 1,
            "enum": [
              -1,
              1,
              2,
              3,
              4
            ],
            "x-enum-descriptions": [
              "Last week",
              "First week",
              "Second week",
              "Third week",
              "Fourth week"
            ],
            "x-ballerina-name": "monthlyWeek"
          },
          "monthly_week_day": {
            "type": "integer",
            "description": "Use this field only if you're scheduling a recurring meeting of type `3` to state a specific day in a week when a monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n  \n `1` - Sunday.  \n `2` - Monday.  \n `3` - Tuesday.  \n `4` -  Wednesday.  \n `5` - Thursday.  \n `6` - Friday.  \n `7` - Saturday",
            "example": 1,
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "x-enum-descriptions": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-ballerina-name": "monthlyWeekDay"
          },
          "repeat_interval": {
            "type": "integer",
            "description": "Define the interval when the meeting should recur. For instance, to schedule a meeting that recurs every two months, set this field's value as `2` and the `type` parameter's value to `3`. \n\nFor a daily meeting, the maximum interval is `99` days. For a weekly meeting, the maximum interval is `50` weeks. For a monthly meeting, the maximum value is `10` months.\n\n",
            "example": 1,
            "x-ballerina-name": "repeatInterval"
          },
          "monthly_day": {
            "type": "integer",
            "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state the day in a month when the meeting should recur. The value range is from 1 to 31.\n\nFor instance, if the meeting should recur on 23rd of each month, provide `23` as this field's value and `1` as the `repeat_interval` field's value. If the meeting should recur every three months on 23rd of the month, change the `repeat_interval` field's value to `3`",
            "example": 1,
            "default": 1,
            "x-ballerina-name": "monthlyDay"
          },
          "type": {
            "type": "integer",
            "description": "Recurrence meeting types. \n `1` - Daily.  \n `2` - Weekly.  \n `3` - Monthly",
            "example": 1,
            "enum": [
              1,
              2,
              3
            ],
            "x-enum-descriptions": [
              "Daily",
              "Weekly",
              "Monthly"
            ]
          },
          "weekly_days": {
            "type": "string",
            "description": "This field is required if you're scheduling a recurring meeting of type `2`, to state which days of the week the meeting should repeat.   \n\nThiw field's value could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `1` as this field's value.  \n   \n  **Note** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `1,3` as this field's value.\n\n   \n `1`  - Sunday.   \n `2` - Monday.  \n `3` - Tuesday.  \n `4` -  Wednesday.  \n `5` -  Thursday.  \n `6` - Friday.  \n `7` - Saturday",
            "example": "1",
            "default": "1",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7"
            ],
            "x-ballerina-name": "weeklyDays"
          }
        },
        "description": "Recurrence object. Use this object only for a meeting with type `8`, a recurring meeting with fixed time. "
      },
      "UsersuserIdmeetingsSettingsAuthenticationException": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The participant's name",
            "example": "Jill Chill"
          },
          "email": {
            "type": "string",
            "description": "The participant's email address",
            "format": "email",
            "example": "jchill@example.com"
          }
        }
      },
      "InlineResponse20120AllOf1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The webinar poll ID",
            "example": "QalIoKWLTJehBJ8e1xRrbQ"
          },
          "status": {
            "type": "string",
            "description": "The status of the webinar poll:  \n `notstart` - Poll not started  \n `started` - Poll started  \n `ended` - Poll ended  \n `sharing` - Sharing poll results",
            "example": "notstart",
            "enum": [
              "notstart",
              "started",
              "ended",
              "sharing"
            ],
            "x-enum-descriptions": [
              "Poll not start",
              "Poll started",
              "Poll ended",
              "Poll is sharing"
            ]
          }
        }
      },
      "WebinarswebinarIdlivestreamstatusSettings": {
        "type": "object",
        "properties": {
          "active_speaker_name": {
            "type": "boolean",
            "description": "Display the name of the active speaker during a live stream",
            "example": true,
            "x-ballerina-name": "activeSpeakerName"
          },
          "display_name": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Display the live stream's name",
            "example": "Jill Chill",
            "x-ballerina-name": "displayName"
          }
        },
        "description": "Update the live stream session's settings.  **Only** settings for a stopped live stream can be updated"
      },
      "InviteLinks1": {
        "title": "Invite Links",
        "type": "object",
        "properties": {
          "attendees": {
            "maxItems": 500,
            "minItems": 1,
            "type": "array",
            "description": "The attendee list",
            "items": {
              "$ref": "#/components/schemas/InviteLinks1Attendees"
            }
          }
        },
        "description": "Invite links response"
      },
      "InviteLinks2": {
        "title": "Invite links",
        "type": "object",
        "properties": {
          "attendees": {
            "maxItems": 500,
            "minItems": 1,
            "type": "array",
            "description": "The attendees list",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdinviteLinksAttendees"
            }
          },
          "ttl": {
            "maximum": 7776000,
            "minimum": 0,
            "type": "integer",
            "description": "The invite link's expiration time, in seconds. \n\nThis value defaults to `7200`",
            "format": "int64",
            "example": 1000,
            "default": 7200
          }
        },
        "description": "Invite Links"
      },
      "InlineResponse20073TrackingSources": {
        "type": "object",
        "properties": {
          "visitor_count": {
            "type": "integer",
            "description": "Number of visitors who visited the registration page from this source",
            "example": 1,
            "x-ballerina-name": "visitorCount"
          },
          "registration_count": {
            "type": "integer",
            "description": "Number of registrations made from this source",
            "example": 1,
            "x-ballerina-name": "registrationCount"
          },
          "id": {
            "type": "string",
            "description": "Unique Identifier of the tracking source",
            "example": "5516482804110"
          },
          "tracking_url": {
            "type": "string",
            "description": "Tracking URL. The URL that was shared for the registration",
            "example": "https://example.com/webinar/register/5516482804110/WN_juM2BGyLQMyQ_ZrqiGRhLg",
            "x-ballerina-name": "trackingUrl"
          },
          "source_name": {
            "type": "string",
            "description": "Name of the source (platform) where the registration URL was shared",
            "example": "https://example.com",
            "x-ballerina-name": "sourceName"
          }
        }
      },
      "MeetingsmeetingIdSettingsResources": {
        "type": "object",
        "properties": {
          "permission_level": {
            "type": "string",
            "description": "The permission levels for users to access the whiteboard. \n* `editor` - Users with link access can edit the board. \n* `commenter` - Users with link access can comment on the board. \n* `viewer` - Users with link access can view the board",
            "example": "editor",
            "default": "editor",
            "enum": [
              "editor",
              "commenter",
              "viewer"
            ],
            "x-ballerina-name": "permissionLevel"
          },
          "resource_type": {
            "type": "string",
            "description": "The resource type",
            "example": "whiteboard",
            "enum": [
              "whiteboard"
            ],
            "x-ballerina-name": "resourceType"
          },
          "resource_id": {
            "type": "string",
            "description": "The resource ID",
            "example": "X4Hy02w3QUOdskKofgb9Jg",
            "x-ballerina-name": "resourceId"
          }
        }
      },
      "InlineResponse2017AllOf1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The template name",
            "example": "My Meeting Template"
          },
          "id": {
            "type": "string",
            "description": "The template ID",
            "example": "AdxbhxCzKgSiWAw"
          }
        }
      },
      "InlineResponse2006InlineResponse2006AllOf12": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes",
            "example": "Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3",
            "x-ballerina-name": "nextPageToken"
          },
          "total_records": {
            "type": "integer",
            "description": "The number of all records available across pages",
            "example": 1,
            "x-ballerina-name": "totalRecords"
          },
          "page_count": {
            "type": "integer",
            "description": "The number of pages returned for the request made",
            "example": 1,
            "x-ballerina-name": "pageCount"
          },
          "page_size": {
            "maximum": 300,
            "type": "integer",
            "description": "The number of records returned within a single API call",
            "example": 30,
            "default": 30,
            "x-ballerina-name": "pageSize"
          }
        },
        "description": "The pagination object"
      },
      "TSPAccountsList": {
        "title": "TSP Accounts List",
        "required": [
          "conference_code",
          "leader_pin"
        ],
        "type": "object",
        "properties": {
          "dial_in_numbers": {
            "type": "array",
            "description": "List of dial in numbers",
            "items": {
              "$ref": "#/components/schemas/UsersuserIdtspDialInNumbers"
            },
            "x-ballerina-name": "dialInNumbers"
          },
          "conference_code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "Conference code. A numeric value, with a length less than 16",
            "example": "0125",
            "x-ballerina-name": "conferenceCode"
          },
          "leader_pin": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "Leader PIN: numeric value, length is less than 16",
            "example": "US_TSP_TB",
            "x-ballerina-name": "leaderPin"
          },
          "tsp_bridge": {
            "type": "string",
            "description": "Telephony bridge",
            "example": "US_TSP_TB",
            "enum": [
              "US_TSP_TB",
              "EU_TSP_TB"
            ],
            "x-ballerina-name": "tspBridge"
          }
        },
        "description": "List of TSP accounts"
      },
      "InlineResponse20051AnswerDetails": {
        "type": "object",
        "properties": {
          "create_time": {
            "type": "string",
            "description": "Content submission time",
            "example": "2022-03-15T07:50:00Z",
            "x-ballerina-name": "createTime"
          },
          "user_id": {
            "type": "string",
            "description": "The user ID of the user who answered the question. This value returns blank for external users",
            "example": "Cn_5wJ9mRNGyYOmpjVufBQ",
            "x-ballerina-name": "userId"
          },
          "name": {
            "type": "string",
            "description": "User display name, including the host or participant. ",
            "example": "Paul"
          },
          "type": {
            "type": "string",
            "description": "Type of answer",
            "example": "default",
            "default": "default",
            "enum": [
              "default",
              "host_answered_publicly",
              "host_answered_privately",
              "participant_commented",
              "host_answered"
            ],
            "x-enum-description": [
              "default - default value, does not represent any type",
              "host_answered - deprecated, split into host_answered_publicly and host_answered_privately",
              "host_answered_publicly - host answered the question publicly",
              "host_answered_privately - host answered the question privately",
              "participant_commented - comment from the participant"
            ]
          },
          "email": {
            "type": "string",
            "description": "Participant's email. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details",
            "example": "paul@example.com"
          },
          "content": {
            "maxLength": 1024,
            "type": "string",
            "description": "The answer from the host or the comment from a participant",
            "example": "fine"
          }
        }
      },
      "InlineResponse20032BillingReports": {
        "type": "object",
        "properties": {
          "end_date": {
            "type": "string",
            "description": "End date of the billing period",
            "format": "date",
            "example": "2022-03-25",
            "x-ballerina-name": "endDate"
          },
          "tax_amount": {
            "type": "string",
            "description": "Total tax amount for this billing period",
            "example": "456",
            "x-ballerina-name": "taxAmount"
          },
          "total_amount": {
            "type": "string",
            "description": "Total billing amount for this billing period",
            "example": "456",
            "x-ballerina-name": "totalAmount"
          },
          "id": {
            "type": "string",
            "description": "Unique Identifier of the report. Use this ID to retrieve billing invoice via the &quot;Get Billing Invoices API&quot;. \n\nYou can also use this ID to export a CSV file of the billing report from this URL: `https://zoom.us/account/report/billing/export?id={id}`",
            "example": "indfhgfhfho"
          },
          "type": {
            "type": "integer",
            "description": "Type of the billing report. The value should be either of the following:  \n \n`0` - Detailed Billing Reports\n`1` - Custom Billing Reports",
            "example": 1,
            "enum": [
              0,
              1
            ]
          },
          "start_date": {
            "type": "string",
            "description": "Start date of the billing period",
            "format": "date",
            "example": "2022-03-25",
            "x-ballerina-name": "startDate"
          }
        }
      },
      "PollList1Polls": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PollsAllOf11"
          },
          {
            "$ref": "#/components/schemas/MeetingAndWebinarPollingObject8"
          }
        ]
      },
      "UsersuserIdwebinarsSettings": {
        "type": "object",
        "properties": {
          "post_webinar_survey": {
            "type": "boolean",
            "description": "Zoom will open a survey page in attendees' browsers after leaving the webinar",
            "example": true,
            "x-ballerina-name": "postWebinarSurvey"
          },
          "authentication_option": {
            "type": "string",
            "description": "Specify the authentication type for users to join a Webinar with`meeting_authentication` setting set to `true`. The value of this field can be retrieved from the `id` field within `authentication_options` array in the response of [**Get user settings**](/docs/api/rest/reference/zoom-api/methods#operation/userSettings) API",
            "example": "signIn_D8cJuqWVQ623CI4Q8yQK0Q",
            "x-ballerina-name": "authenticationOption"
          },
          "email_language": {
            "type": "string",
            "description": "Set the email language.\n`en-US`,`de-DE`,`es-ES`,`fr-FR`,`id-ID`,`jp-JP`,`nl-NL`,`pl-PL`,`pt-PT`,`ru-RU`,`tr-TR`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`",
            "example": "en-US",
            "x-ballerina-name": "emailLanguage"
          },
          "allow_host_control_participant_mute_state": {
            "type": "boolean",
            "description": "Whether to allow the host and co-hosts to fully control the mute state of participants. Not supported for simulive webinar. If not provided, the default value will be based on the user's setting",
            "example": false,
            "x-ballerina-name": "allowHostControlParticipantMuteState"
          },
          "sign_language_interpretation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsersuserIdwebinarsSettingsSignLanguageInterpretation"
              }
            ],
            "x-ballerina-name": "signLanguageInterpretation"
          },
          "send_1080p_video_to_attendees": {
            "type": "boolean",
            "description": "Whether to always send 1080p video to attendees. This value defaults to `false`.(Not supported for simulive webinar.)",
            "example": false,
            "default": false,
            "x-ballerina-name": "send1080pVideoToAttendees"
          },
          "show_share_button": {
            "type": "boolean",
            "description": "Show social share buttons on the registration page",
            "example": true,
            "x-ballerina-name": "showShareButton"
          },
          "hd_video": {
            "type": "boolean",
            "description": "Default to HD video.(Not supported for simulive webinar.)",
            "example": false,
            "default": false,
            "x-ballerina-name": "hdVideo"
          },
          "registration_type": {
            "type": "integer",
            "description": "Registration types. Only used for recurring webinars with a fixed time.  \n `1` - Attendees register once and can attend any of the webinar sessions.  \n `2` - Attendees need to register for each session in order to attend.  \n `3` - Attendees register once and can choose one or more sessions to attend",
            "example": 1,
            "default": 1,
            "enum": [
              1,
              2,
              3
            ],
            "x-enum-descriptions": [
              "Attendees register once and can attend any of the occurrences",
              "Attendees need to register for each occurrence to attend",
              "Attendees register once and can choose one or more occurrences to attend"
            ],
            "x-ballerina-name": "registrationType"
          },
          "contact_email": {
            "type": "string",
            "description": "Contact email for registration",
            "example": "jchill@example.com",
            "x-ballerina-name": "contactEmail"
          },
          "allow_multiple_devices": {
            "type": "boolean",
            "description": "Allow attendees to join from multiple devices",
            "example": true,
            "x-ballerina-name": "allowMultipleDevices"
          },
          "meeting_authentication": {
            "type": "boolean",
            "description": "Only [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) users can join meeting if the value of this field is set to `true`",
            "example": true,
            "x-ballerina-name": "meetingAuthentication"
          },
          "survey_url": {
            "type": "string",
            "description": "Survey URL for post webinar survey",
            "example": "https://example.com",
            "x-ballerina-name": "surveyUrl"
          },
          "alternative_hosts": {
            "type": "string",
            "description": "Alternative host emails or IDs. Multiple values separated by comma",
            "example": "jchill@example.com;thill@example.com",
            "x-ballerina-name": "alternativeHosts"
          },
          "alternative_host_update_polls": {
            "type": "boolean",
            "description": "Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher",
            "example": true,
            "x-ballerina-name": "alternativeHostUpdatePolls"
          },
          "follow_up_absentees_email_notification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsersuserIdwebinarsSettingsFollowUpAbsenteesEmailNotification"
              }
            ],
            "x-ballerina-name": "followUpAbsenteesEmailNotification"
          },
          "add_audio_watermark": {
            "type": "boolean",
            "description": "Add audio watermark that identifies the participants. Not supported for simulive webinar. If not provided, the default value will be based on the user's setting",
            "example": true,
            "x-ballerina-name": "addAudioWatermark"
          },
          "audio": {
            "type": "string",
            "description": "Determine how participants can join the audio portion of the meeting.(Not supported for simulive webinar.)",
            "example": "telephony",
            "default": "both",
            "enum": [
              "both",
              "telephony",
              "voip",
              "thirdParty"
            ],
            "x-enum-descriptions": [
              "Both Telephony and VoIP",
              "Telephony only",
              "VoIP only",
              "Third party audio conference"
            ]
          },
          "practice_session": {
            "type": "boolean",
            "description": "Enable practice session",
            "example": false,
            "default": false,
            "x-ballerina-name": "practiceSession"
          },
          "enforce_login_domains": {
            "type": "string",
            "description": "Only signed-in users with specified domains can join meetings.\n\n**This field is deprecated and will not be supported in future.**   \n \n  Instead of this field, use the `authentication_domains` field for this webinar. ",
            "example": "example.com",
            "deprecated": true,
            "x-ballerina-name": "enforceLoginDomains"
          },
          "global_dial_in_countries": {
            "type": "array",
            "description": "List of global dial-in countries",
            "items": {
              "type": "string",
              "example": "US"
            },
            "x-ballerina-name": "globalDialInCountries"
          },
          "registrants_restrict_number": {
            "maximum": 20000,
            "minimum": 0,
            "type": "integer",
            "description": "Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number",
            "example": 100,
            "default": 0,
            "x-ballerina-name": "registrantsRestrictNumber"
          },
          "question_and_answer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsersuserIdwebinarsSettingsQuestionAndAnswer"
              }
            ],
            "x-ballerina-name": "questionAndAnswer"
          },
          "contact_name": {
            "type": "string",
            "description": "Contact name for registration",
            "example": "Jill Chill",
            "x-ballerina-name": "contactName"
          },
          "attendees_and_panelists_reminder_email_notification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsersuserIdwebinarsSettingsAttendeesAndPanelistsReminderEmailNotification"
              }
            ],
            "x-ballerina-name": "attendeesAndPanelistsReminderEmailNotification"
          },
          "registrants_email_notification": {
            "type": "boolean",
            "description": "Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field",
            "example": true,
            "x-ballerina-name": "registrantsEmailNotification"
          },
          "approval_type": {
            "type": "integer",
            "description": "The default value is `2`. To enable registration required, set the approval type to `0` or `1`.  Values include:  \n \n\n`0` - Automatically approve.  \n `1` - Manually approve.  \n `2` - No registration required",
            "example": 0,
            "default": 2,
            "enum": [
              0,
              1,
              2
            ],
            "x-enum-descriptions": [
              "Automatically Approve",
              "Manually Approve",
              "No Registration Required"
            ],
            "x-ballerina-name": "approvalType"
          },
          "close_registration": {
            "type": "boolean",
            "description": "Close registration after event date",
            "example": true,
            "deprecated": true,
            "x-ballerina-name": "closeRegistration"
          },
          "auto_recording": {
            "type": "string",
            "description": "Automatic recording. Not supported for simulive webinar.   \n `local` - Record on local.  \n `cloud` -  Record on cloud.  \n `none` - Disabled",
            "example": "cloud",
            "default": "none",
            "enum": [
              "local",
              "cloud",
              "none"
            ],
            "x-enum-descriptions": [
              "Record to local device",
              "Record to cloud",
              "No Recording"
            ],
            "x-ballerina-name": "autoRecording"
          },
          "host_video": {
            "type": "boolean",
            "description": "Start video when host joins webinar.(Not supported for simulive webinar.)",
            "example": true,
            "x-ballerina-name": "hostVideo"
          },
          "language_interpretation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsersuserIdwebinarsSettingsLanguageInterpretation"
              }
            ],
            "x-ballerina-name": "languageInterpretation"
          },
          "panelists_video": {
            "type": "boolean",
            "description": "Start video when panelists join webinar. Not supported for simulive webinar",
            "example": true,
            "x-ballerina-name": "panelistsVideo"
          },
          "add_watermark": {
            "type": "boolean",
            "description": "Add watermark that identifies the viewing participant. Not supported for simulive webinar. If not provided, the default value will be based on the user's setting",
            "example": true,
            "x-ballerina-name": "addWatermark"
          },
          "enforce_login": {
            "type": "boolean",
            "description": "Only signed-in users can join this meeting. \n\n**This field is deprecated and will not be supported in future.**   \n   \n  Instead of this field, use the `meeting_authentication`, `authentication_option`, or `authentication_domains` fields to establish the authentication mechanism for this Webinar. ",
            "example": true,
            "deprecated": true,
            "x-ballerina-name": "enforceLogin"
          },
          "on_demand": {
            "type": "boolean",
            "description": "Make the webinar on-demand. Not supported for simulive webinar",
            "example": false,
            "default": false,
            "x-ballerina-name": "onDemand"
          },
          "hd_video_for_attendees": {
            "type": "boolean",
            "description": "Whether HD video for attendees is enabled. This value defaults to `false`.(Not supported for simulive webinar.)",
            "example": false,
            "default": false,
            "x-ballerina-name": "hdVideoForAttendees"
          },
          "panelists_invitation_email_notification": {
            "type": "boolean",
            "description": "Send invitation email to panelists. If `false`, do not send invitation email to panelists",
            "example": true,
            "x-ballerina-name": "panelistsInvitationEmailNotification"
          },
          "panelist_authentication": {
            "type": "boolean",
            "description": "Require panelists to authenticate to join. If not provided, the default value will be based on the user's setting",
            "example": true,
            "x-ballerina-name": "panelistAuthentication"
          },
          "enable_session_branding": {
            "type": "boolean",
            "description": "Whether the **Webinar Session Branding** setting is enabled. This setting lets hosts visually customize a webinar by setting a session background. This also lets hosts set Virtual Background and apply name tags to hosts, alternative hosts, panelists, interpreters, and speakers",
            "example": true,
            "x-ballerina-name": "enableSessionBranding"
          },
          "audio_conference_info": {
            "maxLength": 2048,
            "type": "string",
            "description": "Third party audio conference info",
            "example": "test",
            "x-ballerina-name": "audioConferenceInfo"
          },
          "authentication_domains": {
            "type": "string",
            "description": "Meeting authentication domains. This option allows you to specify the rule so that Zoom users whose email address contains a certain domain can join the webinar. You can either provide multiple comma-separated domains, use a wildcard for listing domains, or use both methods",
            "example": "example.com",
            "x-ballerina-name": "authenticationDomains"
          },
          "follow_up_attendees_email_notification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsersuserIdwebinarsSettingsFollowUpAttendeesEmailNotification"
              }
            ],
            "x-ballerina-name": "followUpAttendeesEmailNotification"
          },
          "email_in_attendee_report": {
            "type": "boolean",
            "description": "Whether to include guest's email addresses in webinars' attendee reports",
            "example": true,
            "x-ballerina-name": "emailInAttendeeReport"
          }
        },
        "description": "Create webinar settings"
      },
      "InlineResponse20047AllOf1": {
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination",
            "example": 1,
            "deprecated": true,
            "default": 1,
            "x-ballerina-name": "pageNumber"
          },
          "next_page_token": {
            "type": "string",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes",
            "example": "w7587w4eiyfsudgf",
            "x-ballerina-name": "nextPageToken"
          },
          "total_records": {
            "type": "integer",
            "description": "The total number of all the records available across pages",
            "example": 20,
            "x-ballerina-name": "totalRecords"
          },
          "page_count": {
            "type": "integer",
            "description": "The number of pages returned for the request made",
            "example": 1,
            "x-ballerina-name": "pageCount"
          },
          "page_size": {
            "maximum": 300,
            "type": "integer",
            "description": "The number of records returned with a single API call",
            "example": 30,
            "default": 30,
            "x-ballerina-name": "pageSize"
          }
        },
        "description": "Pagination Object"
      },
      "BrandingVirtualBackgroundsBody": {
        "required": [
          "file"
        ],
        "type": "object",
        "properties": {
          "set_default_for_all_panelists": {
            "type": "boolean",
            "description": "Whether to set the virtual background file as the new default for all panelists. This includes panelists not currently assigned a default virtual background",
            "example": true,
            "default": true,
            "x-ballerina-name": "setDefaultForAllPanelists"
          },
          "default": {
            "type": "boolean",
            "description": "Whether set the file as the default virtual background file",
            "example": true,
            "default": false
          },
          "file": {
            "type": "string",
            "description": "The vvirtual background's file path, in binary format",
            "format": "binary",
            "example": "Vm0wd2QyUXlVWGxWV0d4V1YwZDRWMVl3WkRSV01WbDNXa1JTVjAxV2JETlhhMUpUVjBaS2RHVkdXbFpOYWtFeFZtcEJlRll5U2tWVWJHaG9UV3N3ZUZadGNFZFpWMDE1VTJ0V1ZXSkhhRzlVVjNOM1pVWmtWMXBFVWxSTmF6RTBWMnRvUjFWdFNrZFhiR2hhWVRKb1JGWldXbUZqVmtaMFVteHdWMDFFUlRGV1ZFb3dWakZhV0ZOcmFHaFNlbXhXVm0xNFlVMHhXbk5YYlVaclVqQTFSMWRyV25kV01ERkZVbFJHVjFaRmIzZFdha1poVjBaT2NtRkhhRk5sYlhoWFZtMXdUMVF3TUhoalJscFlZbFZhY1ZadGRHRk5SbFowWlVaT1ZXSlZXVEpWYkZKSFZqRmFSbUl6WkZkaGExcG9WakJhVDJOdFJraGhSazVzWWxob1dGWnRNSGRsUjBsNFUydGtXR0pIVWxsWmJGWmhZMnhXY1ZKdFJsUlNiR3cxVkZaU1UxWnJNWEpqUld4aFUwaENTRlpxU2tabFZsWlpXa1p3YkdFelFrbFhXSEJIVkRKU1YxWnVVbWhTYXpWeldXeG9iMWRHV25STldHUlZUVlpHTTFSVmFHOWhiRXB6WTBac1dtSkdXbWhaTW5oWFkxWkdWVkpzVGs1WFJVcElWbXBLTkZReFdsaFRhMlJxVW14d1dGbHNhRk5OTVZweFUydDBWMVpyY0ZwWGExcDNWakZLVjJOSWJGZFdSVXBvVmtSS1QyTXlUa1poUjNCVFlYcFdXVlpYY0U5aU1rbDRWMWhvWVZKR1NuQlVWbHBYVGtaYVdHUkhkRmhTTUhCNVZHeGFjMWR0U2tkWGJXaGFUVzVvV0ZreFdrZFdWa3B6VkdzMVdGSlZjRWxXYlhCTFRrWlJlRmRzYUZSaE1sSnhWVzB4TkdGR1ZYZGhSVTVVVW14d2VGVXlkR0ZpUmxwelYyeHdXR0V4Y0ROWmEyUkdaV3hHY21KR1pHbFhSVXBKVm10U1MxVXhXWGhYYmxaVllrZG9jRlpxU205bGJHUllaVWM1YVUxcmJEUldNalZUVkd4a1NGVnNXbFZXTTFKNlZHeGFWMlJIVWtoa1IyaHBVbGhCZDFac1pEUmpNV1IwVTJ0a1dHSlhhR0ZVVnpWdlYwWnJlRmRyZEd0U2EzQjZWbGQ0YTJGWFJYZGpSV3hYWWxoQ1RGUnJXbEpsUm1SellVWlNhRTFzU25oV1Z6RTBaREZrUjJKSVRtaFNlbXh6V1d0YWQyVkdWblJOVldSVlRXdHdSMVl5ZUhkWGJGcFhZMGhLVjFaRldreFdNVnBIWTIxS1IxcEdaRTVOUlhCS1ZtMTBVMU14VlhoWFdHaFlZbXhhVmxsclpHOWpSbHB4VkcwNVYxWnNjRWhYVkU1dllWVXhjMU51Y0ZkTmFsWlVWa2Q0YTFOR1ZuTlhiRlpYVFRGS05sWkhlR0ZXTWxKSVZXdG9hMUp0YUZSVVZXaERVMnhhYzFwRVVtcE5WMUl3VlRKMGIyRkdTbk5UYkdoVlZsWndNMVpyV21GalZrNXlXa1pPYVZKcmNEWldiR040WXpGVmQwMUlhRk5oYkhCWVdWZDBkbVF4V2xWU2JGcHNVbTFTTVZVeWN6RlhSa3BaVVc1b1YxWjZRalJaYWtaYVpVWldjMkZGT1ZkbGJYaDZWMWQwWVdReVZrZFdibEpPVmxkU1ZsUlhkSGRTTVZsNVpVaGtXR0pHY0ZoWk1HaExWakZhUmxkcmVGZGhhM0JRVld4YWEyTXhjRWhpUm1oVFZsaENTMVp0TVRCVk1VMTRWbGhvV0ZkSGFGbFpiWGhoVmpGc2MxcEhPVmRTYlhoYVdUQmFhMkpIU2toVmJHeGhWbGROTVZsV1ZYaFhSbFp5WVVaa1RtRnNXbFZXYTJRMFZERk9TRkpyWkZKaVJuQnZXVlJHZDFOV1drZFZhMlJXVFZad01GVnRkRzlWUmxsNVlVaENWbUpIYUVOYVJFWmhZekZ3UlZWdGNFNVdNVWwzVmxSS01HSXlSa2RUYms1VVlrZG9WbFpzV25kTk1WcHlWMjFHYWxacmNEQmFSV1F3VlRKRmVsRllaRmhpUmxwb1dWUktSMVl4WkhWVGJXeHNZVEZ3V1ZkWGVHOVJNVkpIVlc1S1dHSkZjSE5XYlhSM1pWWmtjbGR0T1doV01Ga3lWbTAxYjFZeFdrWlRia3BWWVRGd2NsVnFSbGRqTVhCSVVteE9iR0pZYUZGV2ExcGhXVmRSZVZaclpGZGliRXB5VlRCa1UyTkdWbkZSYm1SWFRWWnNOVnBGYUU5WFIwcEhZMFpvV2sxSGFHaFdha3BIWTIxT1JtVkdaR2hoTVhCUlYxUkplRk14U1hoalJXaHBVbTFvVkZac2FFTlRNVnAwVFZSQ1ZrMVZiRFZWYkdodlYwWmtTR1ZHV2xwV1JWb3pXVlZhVjJOV1RuUlBWbVJUWWtWd1dsWkhlR3BPVmxsNFYyNU9hbEpYYUZsV2ExVXhaR3hzVjFaWWFGaFNiRm94V1RCYWExUnNXWGxoUkVwWFlXdEtjbFY2Um10V01WcDFVMnhDVjJKSVFuZFdiWFJYVm0xUmVGZHVSbEppVlZwWVdXeGFZVk5XVm5Sa1J6bFdVbXhzTlZsVmFFTldiVXBJWVVWU1YwMVdjR2haTVZwUFkxWldjMWRyTlZkTlZXd3pWbXhTUzAxSFJYaGFSV2hVWWtkb2IxVnFRbUZXYkZwMFpVaGtUazFZUWxsYVZXaExZa1paZUZkcmNGaGhNWEJRVmtkNFlXTnRUa1ZXYkdSVFRUSm9iMVpyVWt0U01XUkhVMnhzWVZJelFsUldhazV2VjFaa1dHVkhPVkpOVmtwSVZsYzFTMWRIU2taalNFNVdZbFJHVkZwWGVITldiR1J6Vkcxb1UxWkZXalpXVkVreFlqRlplRmRZY0ZaaVIyaFpWbTE0ZDFsV2NGWlhiWFJyVm10d2VsWnRNVzlVYkVwSFYyMUdWMkpIVGpSVWEyUlNaVlphY2xwR1pHbGlSWEI1VmxSQ2ExVXlUa2RXYmtaU1ltMVNXRlJXV25OT1ZuQkdZVVU1V0ZJd2NFaFpNRnB2VjJzeFNHRkZlRmROYm1ob1ZqQmFWMk5zY0VoU2JHUlhUVlZ3VWxac1VrTldhelZYVjFob2FsSlhVbWhWYlhNeFYwWlpkMVpyZEU1aVJuQXdWRlpTUTFack1WWk5WRkpYVm0xb2VsWnRNVVpsVmxaelYyeHdhVmRHU1hwWFZsWmhWakpTU0ZacldtdFNNMEpVV1d0b1EwNUdXbkpaTTJSUFZqQldOVlV5ZEd0aGJFcFlZVVpvV21KR1NrTlVWbHBoVjBkTmVtRkdhRk5pUm5BMlYxWldZV0V4VW5OWFdHeG9Va1Z3V0ZSV1duZGhSbFkyVW10MGFrMVdTakZXVjNoUFlWWkplRk51V2xoV2JFcElXa1JHVDFZeFpISmhSM1JUVFVad1dsZFhlR0ZaVms1WFZtNVNhMUo2YkZkVmJYaDNUVVphV0U1VlRsZE5hM0JKV1ZWV1UxWnJNWFZoUjJoYVpXdGFNMVZzV2xka1IwNUdUbFprVGxaWGQzcFdiWGhUVXpBeFNGSllhR0ZTVjJoVldXdGtiMkl4Vm5STlZ6bFhZa1p3ZWxZeU5XdFVhekZaVVd4c1lWWlhhRXhaYTFwYVpVWmtjbU5HYUdoTldFSlJWbXRrTkZsWFRuUlRXSEJoVW0xb2NGVnRlSGRpTVdSWFZXdDBVMDFXYkRSV1IzaHpZV3hLZFZGck9WVldla1oyVmpGYVlWSXhiRFpTYld4T1ZqRktTVlpxU1RGU01WVjVVMnRhYWxORk5WZFpiRkpIVmtaWmVXVkhkR3BpUm5CV1ZXMTRiMVV5UlhwUmJVWlhWbTFSTUZsNlJtdFNNV1IxVld4YWFHSklRbGRXYlRFMFpESldjMWR1UmxOaVIxSnhWRlprVTJWc2JGWmFTRTVvVm14d2VWa3dXbmRXTWtwSVZHcFNWV0V5VWxOYVZscGhZMnh3UjFwSGJHbFNXRUpSVm0weE5HRXhWWGhhUldSV1lrWndWMWxVU2xOak1WcDBaVVYwYkdKR2NEQlVWVkpYVmpBeFJWSnNaRnBpYmtKTVZtMHhTMWRXVm5WWGJHUm9ZVEZ3YjFaWE1UUmhNazUwVm10a1lWSXlhRzlVVkVKTFZXeGFjMWt6YUU5U2JYaFpWa1pvYjJGc1NsaGhTRUpXWWxoTmVGWkVSbUZqTVdSelkwZDRhVkp1UVhkWGJGWnJVakZhY2sxV1dtbFNSa3BoV1ZSR2QyTnNXWGRhUlhScVlsVTFSMVF4V210aFZtUklXak53VjJGclNtaFpla1pyVjBaU2NscEhSbE5pVmtwVlYxZDBZV1F3TlZkWGJsSk9Wa1ZLWVZadGVFZE9SbHAwWlVaa1ZXSkZjRWxaTTNCeVVGRTlQUT09"
          }
        }
      },
      "InlineResponse20114TrackingFields": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "Tracking fields type",
            "example": "field1"
          },
          "value": {
            "type": "string",
            "description": "Tracking fields value",
            "example": "value1"
          }
        }
      },
      "MeetingInstancesMeetings": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/MeetingsAllOf12"
          }
        ]
      },
      "InlineResponse20063SettingsQuestionAndAnswer": {
        "type": "object",
        "properties": {
          "allow_auto_reply": {
            "type": "boolean",
            "description": "If simulive webinar, \n\n* `true` - allow auto-reply to attendees. \n\n* `false` - don't allow auto-reply to the attendees",
            "example": true,
            "x-ballerina-name": "allowAutoReply"
          },
          "allow_anonymous_questions": {
            "type": "boolean",
            "description": "* `true` - Allow participants to send questions without providing their name to the host, co-host, and panelists.\n\n* `false` - Do not allow anonymous questions",
            "example": true,
            "x-ballerina-name": "allowAnonymousQuestions"
          },
          "answer_questions": {
            "type": "string",
            "description": "Indicate whether you want attendees to be able to view answered questions only or view all questions.\n\n* `only` - Attendees are able to view answered questions only.\n\n*  `all` - Attendees are able to view all questions submitted in the Q&amp;A",
            "example": "all",
            "enum": [
              "only",
              "all"
            ],
            "x-ballerina-name": "answerQuestions"
          },
          "enable": {
            "type": "boolean",
            "description": "* `true` - Enable [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.\n\n* `false` - Disable Q&amp;A for webinar",
            "example": true
          },
          "allow_submit_questions": {
            "type": "boolean",
            "description": "* `true` - Allow participants to submit questions.\n\n* `false` - Do not allow submit questions",
            "example": true,
            "x-ballerina-name": "allowSubmitQuestions"
          },
          "attendees_can_comment": {
            "type": "boolean",
            "description": "* `true` - Attendees can answer questions or leave a comment in the question thread.\n\n* `false` - Attendees can not answer questions or leave a comment in the question thread",
            "example": true,
            "x-ballerina-name": "attendeesCanComment"
          },
          "auto_reply_text": {
            "type": "string",
            "description": "If `allow_auto_reply` = true, the text to be included in the automatic response. ",
            "example": "Thank you for your question. We will get back to you shortly.",
            "x-ballerina-name": "autoReplyText"
          },
          "attendees_can_upvote": {
            "type": "boolean",
            "description": "* `true` - Attendees can click the thumbs up button to bring popular questions to the top of the Q&amp;A window.\n\n* `false` - Attendees can not click the thumbs up button on questions",
            "example": true,
            "x-ballerina-name": "attendeesCanUpvote"
          }
        },
        "description": "[Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar"
      },
      "InlineResponse20013SettingsSignLanguageInterpretation": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "Whether to enable [sign language interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar) for the meeting",
            "example": true
          },
          "interpreters": {
            "maximum": 20,
            "type": "array",
            "description": "Information about the meeting's sign language interpreters",
            "items": {
              "$ref": "#/components/schemas/UsersuserIdwebinarsSettingsSignLanguageInterpretationInterpreters"
            }
          }
        },
        "description": "The meeting's [sign language interpretation settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar). Make sure to add the language in the web portal in order to use it in the API. See link for details. \n\n**Note:** If this feature is not enabled on the host's account, this setting will **not** be applied to the meeting"
      },
      "MeetingsmeetingIdSettingsQuestionAndAnswer": {
        "type": "object",
        "properties": {
          "question_visibility": {
            "type": "string",
            "description": "Indicate whether you want attendees to be able to view answered questions only or view all questions.\n\n* `answered` - Attendees are able to view answered questions only.\n\n*  `all` - Attendees are able to view all questions submitted in the Q&amp;A",
            "example": "all",
            "enum": [
              "answered",
              "all"
            ],
            "x-ballerina-name": "questionVisibility"
          },
          "allow_anonymous_questions": {
            "type": "boolean",
            "description": "* `true` - Allow participants to send questions without providing their name to the host, co-host, and panelists..\n\n* `false` - Do not allow anonymous questions.(Not supported for simulive meeting.)",
            "example": true,
            "x-ballerina-name": "allowAnonymousQuestions"
          },
          "enable": {
            "type": "boolean",
            "description": "* `true` - Enable [Q&amp;A](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065237) for meeting.\n\n* `false` - Disable Q&amp;A for meeting",
            "example": true
          },
          "allow_submit_questions": {
            "type": "boolean",
            "description": "* `true`: Allow participants to submit questions.\n\n* `false`: Do not allow submit questions",
            "example": true,
            "x-ballerina-name": "allowSubmitQuestions"
          },
          "attendees_can_comment": {
            "type": "boolean",
            "description": "* `true` - Attendees can answer questions or leave a comment in the question thread.\n\n* `false` - Attendees can not answer questions or leave a comment in the question thread",
            "example": true,
            "x-ballerina-name": "attendeesCanComment"
          },
          "attendees_can_upvote": {
            "type": "boolean",
            "description": "* `true` - Attendees can click the thumbs up button to bring popular questions to the top of the Q&amp;A window.\n\n* `false` - Attendees can not click the thumbs up button on questions",
            "example": true,
            "x-ballerina-name": "attendeesCanUpvote"
          }
        },
        "description": "[Q&amp;A](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065237) for meeting"
      },
      "RegistrationList": {
        "title": "Registration List",
        "type": "object",
        "description": "List of users",
        "allOf": [
          {
            "$ref": "#/components/schemas/RegistrationListAllOf1"
          },
          {
            "$ref": "#/components/schemas/RegistrationListRegistrationListAllOf12"
          }
        ]
      },
      "MeetingsmeetingIdSettingsCustomKeys": {
        "type": "object",
        "properties": {
          "value": {
            "maxLength": 256,
            "type": "string",
            "description": "Value of the custom key associated with the user",
            "example": "value1"
          },
          "key": {
            "maxLength": 64,
            "type": "string",
            "description": "Custom key associated with the user",
            "example": "key1"
          }
        }
      },
      "PollList1AllOf1": {
        "type": "object",
        "properties": {
          "total_records": {
            "type": "integer",
            "description": "The number of all records available across pages",
            "example": 1,
            "x-ballerina-name": "totalRecords"
          },
          "polls": {
            "type": "array",
            "description": "An array of polls",
            "items": {
              "$ref": "#/components/schemas/PollList1Polls"
            }
          }
        }
      },
      "InlineResponse2002PhysicalFiles": {
        "type": "object",
        "properties": {
          "file_name": {
            "type": "string",
            "description": "The physical file's name",
            "example": "Screenshot 2025-02-12 at 10.42.27 AM.png",
            "x-ballerina-name": "fileName"
          },
          "file_id": {
            "type": "string",
            "description": "The physical file's unique ID",
            "example": "pvKocCqVSMygaOcKus5Afw",
            "x-ballerina-name": "fileId"
          },
          "download_url": {
            "type": "string",
            "description": "The URL to download the the archive file. \n\n **OAuth apps** \n\n If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](/docs/integrations/oauth/) to download the file. For example: \n\n `https://{{base-domain}}/rec/archive/attached/download/xxx--header 'Authorization: Bearer {{OAuth-access-token}}'` ",
            "example": "https://local.zoom.us/rec/archive/attached/download/HBAXbHc15BXbnq0JoDu6tc5MWlww9MAo9JJq2d14VAWkpcT5FEA.AK5calud4EJB7bMq",
            "x-ballerina-name": "downloadUrl"
          },
          "file_size": {
            "type": "integer",
            "description": "The physical file's size, in bytes",
            "example": 540680,
            "x-ballerina-name": "fileSize"
          }
        }
      },
      "WebinarRegistrantWebinarRegistrantWebinarRegistrantAllOf123": {
        "type": "object",
        "properties": {
          "join_url": {
            "type": "string",
            "format": "string",
            "example": "https://example.com/j/11111",
            "x-ballerina-name": "joinUrl"
          },
          "create_time": {
            "type": "string",
            "format": "date-time",
            "example": "2022-03-26T06:44:14Z",
            "x-ballerina-name": "createTime"
          },
          "status": {
            "type": "string",
            "example": "approved"
          }
        }
      },
      "MeetingsmeetingIdrecordingsregistrantsAllOf1": {
        "required": [
          "email",
          "first_name"
        ],
        "type": "object",
        "properties": {
          "zip": {
            "type": "string",
            "description": "The registrant's ZIP or postal code",
            "example": "94045"
          },
          "country": {
            "type": "string",
            "description": "The registrant's two-letter [country code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries)",
            "example": "US"
          },
          "custom_questions": {
            "type": "array",
            "description": "Information about custom questions",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdrecordingsregistrantsCustomQuestions"
            },
            "x-ballerina-name": "customQuestions"
          },
          "purchasing_time_frame": {
            "type": "string",
            "description": "The registrant's purchasing time frame. \n* `Within a month` \n* `1-3 months` \n* `4-6 months` \n* `More than 6 months` \n* `No timeframe`",
            "example": "1-3 months",
            "enum": [
              "",
              "Within a month",
              "1-3 months",
              "4-6 months",
              "More than 6 months",
              "No timeframe"
            ],
            "x-ballerina-name": "purchasingTimeFrame"
          },
          "address": {
            "type": "string",
            "description": "The registrant's address",
            "example": "1800 Amphibious Blvd."
          },
          "comments": {
            "type": "string",
            "description": "The registrant's questions and comments",
            "example": "Looking forward to the discussion."
          },
          "city": {
            "type": "string",
            "description": "The registrant's city",
            "example": "Mountain View"
          },
          "org": {
            "type": "string",
            "description": "The registrant's organization",
            "example": "Cooking Org"
          },
          "last_name": {
            "maxLength": 64,
            "type": "string",
            "description": "The registrant's last name",
            "example": "Chill",
            "x-ballerina-name": "lastName"
          },
          "no_of_employees": {
            "type": "string",
            "description": "The registrant's number of employees. \n* `1-20` \n* `21-50` \n* `51-100` \n* `101-250` \n* `251-500` \n* `501-1,000` \n* `1,001-5,000` \n* `5,001-10,000` \n* `More than 10,000`",
            "example": "1-20",
            "enum": [
              "",
              "1-20",
              "21-50",
              "51-100",
              "101-250",
              "251-500",
              "501-1,000",
              "1,001-5,000",
              "5,001-10,000",
              "More than 10,000"
            ],
            "x-ballerina-name": "noOfEmployees"
          },
          "industry": {
            "type": "string",
            "description": "The registrant's industry",
            "example": "Food"
          },
          "phone": {
            "type": "string",
            "description": "The registrant's phone number",
            "example": "5550100"
          },
          "role_in_purchase_process": {
            "type": "string",
            "description": "The registrant's role in the purchase process. \n* `Decision Maker` \n* `Evaluator/Recommender` \n* `Influencer` \n* `Not involved`",
            "example": "Influencer",
            "enum": [
              "",
              "Decision Maker",
              "Evaluator/Recommender",
              "Influencer",
              "Not involved"
            ],
            "x-ballerina-name": "roleInPurchaseProcess"
          },
          "state": {
            "type": "string",
            "description": "The registrant's state or province",
            "example": "CA"
          },
          "first_name": {
            "maxLength": 64,
            "type": "string",
            "description": "The registrant's first name",
            "example": "Jill",
            "x-ballerina-name": "firstName"
          },
          "job_title": {
            "type": "string",
            "description": "The registrant's job title",
            "example": "Chef",
            "x-ballerina-name": "jobTitle"
          },
          "email": {
            "maxLength": 128,
            "type": "string",
            "description": "The registrant's email address. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for return value details",
            "format": "email",
            "example": "jchill@example.com"
          },
          "status": {
            "type": "string",
            "description": "The registrant's status. \n* `approved` - Registrant is approved. \n* `denied` - Registrant is denied. \n* `pending` - Registrant is waiting for approval",
            "example": "approved",
            "enum": [
              "approved",
              "denied",
              "pending"
            ]
          }
        },
        "description": "Information about the registrant"
      },
      "MeetingsmeetingIdregistrantsquestionsQuestions": {
        "type": "object",
        "properties": {
          "required": {
            "type": "boolean",
            "description": "Indicates whether or not the displayed fields are required to be filled out by registrants",
            "example": true
          },
          "field_name": {
            "type": "string",
            "description": "The question's field name",
            "example": "last_name",
            "enum": [
              "last_name",
              "address",
              "city",
              "country",
              "zip",
              "state",
              "phone",
              "industry",
              "org",
              "job_title",
              "purchasing_time_frame",
              "role_in_purchase_process",
              "no_of_employees",
              "comments"
            ],
            "x-ballerina-name": "fieldName"
          }
        }
      },
      "LiveMeetingsmeetingIdeventsParamsH323Headers": {
        "type": "object",
        "properties": {
          "from_display_name": {
            "maxLength": 64,
            "type": "string",
            "description": "Custom name that will be used within the h323 Header",
            "example": "display name",
            "x-ballerina-name": "fromDisplayName"
          },
          "to_display_name": {
            "maxLength": 64,
            "type": "string",
            "description": "Custom remote name that will be used within the meeting",
            "example": "display name",
            "x-ballerina-name": "toDisplayName"
          }
        },
        "description": "Enable customers to leverage services that require customization of the FROM header to identify the caller. Use this field if you pass the `participant.invite.room_system_callout` value for the `method` field and the `h323` value for the `call_type` field"
      },
      "UsersuserIdmeetingsTrackingFields": {
        "required": [
          "field"
        ],
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "The tracking field's label",
            "example": "field1"
          },
          "value": {
            "type": "string",
            "description": "The tracking field's value",
            "example": "value1"
          }
        }
      },
      "TSPAccountDialInNumbers": {
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "Dial-in number: length is less than 16",
            "example": "+1 1000200200"
          },
          "code": {
            "maxLength": 6,
            "type": "string",
            "description": "Country code",
            "example": "1"
          },
          "country_label": {
            "maxLength": 10,
            "type": "string",
            "description": "Country Label, if passed, will display in place of code",
            "example": "America",
            "x-ballerina-name": "countryLabel"
          },
          "type": {
            "type": "string",
            "description": "Dial-in number types:  \n `toll` - Toll number.  \n `tollfree` -Toll free number.   \n  `media_link` - Media link phone number. This is used for PSTN integration instead of a paid bridge number",
            "example": "toll",
            "enum": [
              "toll",
              "tollfree",
              "media_link"
            ],
            "x-enum-descriptions": [
              "Toll number <br/>",
              "Toll free number <br/>",
              "Media link phone number <br/>"
            ]
          }
        }
      },
      "InlineResponse20013SettingsGlobalDialInNumbers": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "Country code, such as BR",
            "example": "US"
          },
          "number": {
            "type": "string",
            "description": "Phone number, such as +1 2332357613",
            "example": "+1 1000200200"
          },
          "city": {
            "type": "string",
            "description": "City of the number, if any. For example, Chicago",
            "example": "New York"
          },
          "country_name": {
            "type": "string",
            "description": "Full name of country, such as Brazil",
            "example": "US",
            "x-ballerina-name": "countryName"
          },
          "type": {
            "type": "string",
            "description": "Type of number. ",
            "example": "toll",
            "enum": [
              "toll",
              "tollfree"
            ]
          }
        }
      },
      "WebinarSurveyObject1": {
        "title": "Webinar survey object",
        "type": "object",
        "properties": {
          "show_in_the_browser": {
            "type": "boolean",
            "description": "Whether the **Show in the browser when the webinar ends** option is enabled. \n* `true` - Enabled. \n* `false` - Disabled. \n\n This value defaults to `true`",
            "example": true,
            "default": true,
            "x-ballerina-name": "showInTheBrowser"
          },
          "custom_survey": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebinarswebinarIdsurveyCustomSurvey"
              }
            ],
            "x-ballerina-name": "customSurvey"
          },
          "show_in_the_follow_up_email": {
            "type": "boolean",
            "description": "Whether the **Show the link on the follow-up email** option is enabled. \n* `true` - Enabled. \n* `false` - Disabled. \n\n This value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "showInTheFollowUpEmail"
          },
          "third_party_survey": {
            "maxLength": 64,
            "type": "string",
            "description": "The link to the third party webinar survey",
            "example": "https://example.com",
            "x-ballerina-name": "thirdPartySurvey"
          }
        },
        "description": "Information about the webinar survey"
      },
      "InlineResponse20034InlineResponse20034AllOf12": {
        "type": "object",
        "properties": {
          "cloud_recording_storage": {
            "type": "array",
            "description": "Array of cloud usage objects",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20034CloudRecordingStorage"
            },
            "x-ballerina-name": "cloudRecordingStorage"
          }
        }
      },
      "InlineResponse2002ArchiveFiles": {
        "required": [
          "download_url",
          "encryption_fingerprint",
          "file_extension",
          "file_size",
          "file_type",
          "id",
          "individual",
          "participant_join_time",
          "participant_leave_time",
          "recording_type",
          "status"
        ],
        "type": "object",
        "properties": {
          "file_path": {
            "type": "string",
            "description": "The file path to the on-premise account archive file. \n\n **Note:** The API only returns this field for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). It does **not** return the `download_url` field",
            "example": "/9090876528/path01/demo.mp4",
            "x-ballerina-name": "filePath"
          },
          "participant_leave_time": {
            "type": "string",
            "description": "The leave time for the generated recording file. If this value is returned when the individual value is true, then it is the recording file's participant leave time. When the individual value is false, it returns the leave time for the archiving gateway",
            "format": "date-time",
            "example": "2021-03-12T02:12:27Z",
            "x-ballerina-name": "participantLeaveTime"
          },
          "storage_location": {
            "type": "string",
            "description": "The region where the file is stored. This field returns only `Enable Distributed Compliance Archiving` op feature is enabled",
            "example": "US",
            "enum": [
              "US",
              "AU",
              "BR",
              "CA",
              "EU",
              "IN",
              "JP",
              "SG",
              "CH"
            ],
            "x-ballerina-name": "storageLocation"
          },
          "individual": {
            "type": "boolean",
            "description": "Whether the archive file is an individual recording file. \n* `true` - An individual recording file. \n * `false` - An entire meeting file",
            "example": true
          },
          "encryption_fingerprint": {
            "type": "string",
            "description": "The archived file's encryption fingerprint, using the SHA256 hash algorithm",
            "example": "abf85f0fe6a4db3cdd8c37e505e1dd18a34d9696170a14b5bc6395677472cf43",
            "x-ballerina-name": "encryptionFingerprint"
          },
          "number_of_messages": {
            "type": "integer",
            "description": "The number of `TXT` or `JSON` file messages. This field returns only when the `file_extension` is `JSON` or `TXT`",
            "example": 150,
            "x-ballerina-name": "numberOfMessages"
          },
          "auto_delete": {
            "type": "boolean",
            "description": "Whether to auto delete the archived file.\n\n **Prerequisites:** \n\n* The \"Tag Archiving Files for Deletion\" feature must be enabled in OP. Contact [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003) to open\n",
            "example": false,
            "x-ballerina-name": "autoDelete"
          },
          "participant_join_time": {
            "type": "string",
            "description": "The join time for the generated recording file. If this value is returned when the individual value is true, then it is the recording file's participant join time. When the individual value is false, it returns the join time for the archiving gateway",
            "format": "date-time",
            "example": "2021-03-12T02:07:27Z",
            "x-ballerina-name": "participantJoinTime"
          },
          "file_size": {
            "type": "integer",
            "description": "The archived file's size, in bytes",
            "example": 165743,
            "x-ballerina-name": "fileSize"
          },
          "file_type": {
            "type": "string",
            "description": "The archive file's type. \n* `MP4` - Video file. \n* `M4A` - Audio-only file. \n* `CHAT` - A TXT file containing in-meeting chat messages. \n* `CC` - A file containing the closed captions of the recording, in VTT file format. \n* `CHAT_MESSAGE` - A JSON file encoded in base64 format containing chat messages. The file also includes waiting room chats, deleted messages, meeting emojis and non-verbal feedback.  \n*  `TRANSCRIPT` - A JSON file include audio transcript wording. \n* `SUB_GROUP_MEMBER_LOG` - A JSON file containing records of members entering and leaving the subgroup",
            "example": "CHAT",
            "enum": [
              "MP4",
              "M4A",
              "CHAT",
              "CC",
              "CHAT_MESSAGE",
              "TRANSCRIPT",
              "SUB_GROUP_MEMBER_LOG"
            ],
            "x-ballerina-name": "fileType"
          },
          "recording_type": {
            "type": "string",
            "description": "The archive file's recording type. \n* `shared_screen_with_speaker_view` \n* `audio_only` \n* `chat_file` \n* `closed_caption` \n* `chat_message` \n* `audio_transcript` \n\n For more information, read our [Managing and sharing cloud recordings](https://support.zoom.us/hc/en-us/articles/205347605-Managing-and-sharing-cloud-recordings#h_9898497b-e736-4980-a749-d55608f10773) documentation",
            "example": "chat_message",
            "enum": [
              "shared_screen_with_speaker_view",
              "audio_only",
              "chat_file",
              "closed_caption",
              "chat_message",
              "audio_transcript"
            ],
            "x-ballerina-name": "recordingType"
          },
          "download_url": {
            "type": "string",
            "description": "The URL to download the the archive file. \n\n **OAuth apps** \n\n If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](/docs/integrations/oauth/) to download the file. For example: \n\n `https://{{base-domain}}/rec/archive/download/xxx--header 'Authorization: Bearer {{OAuth-access-token}}'` \n\n **Note:** This field does **not** return for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). Instead, this API will return the `file_path` field",
            "example": "https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngBBBB",
            "x-ballerina-name": "downloadUrl"
          },
          "file_extension": {
            "type": "string",
            "description": "The archived file's extension",
            "example": "JSON",
            "x-ballerina-name": "fileExtension"
          },
          "id": {
            "type": "string",
            "description": "The archive file's unique ID",
            "example": "a2f19f96-9294-4f51-8134-6f0eea108eb2"
          },
          "participant_email": {
            "type": "string",
            "description": "The individual recording file's participant email address. This value is returned when the `individual` value is `true`. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](/docs/api/using-zoom-apis/#email-address-display-rules) for details",
            "format": "email",
            "example": "jchill@example.com",
            "x-ballerina-name": "participantEmail"
          },
          "status": {
            "type": "string",
            "description": "The archived file's processing status. \n* `completed` - The processing of the file is complete. \n* `processing` - The file is processing. \n* `failed` - The processing of the file failed",
            "example": "completed",
            "enum": [
              "completed",
              "processing",
              "failed"
            ]
          }
        }
      },
      "WebinarswebinarIdregistrantsAllOf1": {
        "required": [
          "email",
          "first_name"
        ],
        "type": "object",
        "properties": {
          "zip": {
            "type": "string",
            "description": "The registrant's ZIP or postal code",
            "example": "94045"
          },
          "country": {
            "type": "string",
            "description": "The registrant's two-letter [country code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries)",
            "example": "US"
          },
          "custom_questions": {
            "type": "array",
            "description": "Information about custom questions",
            "items": {
              "$ref": "#/components/schemas/WebinarswebinarIdregistrantsCustomQuestions"
            },
            "x-ballerina-name": "customQuestions"
          },
          "purchasing_time_frame": {
            "type": "string",
            "description": "The registrant's purchasing time frame: \n* `Within a month` \n* `1-3 months` \n* `4-6 months` \n* `More than 6 months` \n* `No timeframe`",
            "example": "1-3 months",
            "enum": [
              "",
              "Within a month",
              "1-3 months",
              "4-6 months",
              "More than 6 months",
              "No timeframe"
            ],
            "x-ballerina-name": "purchasingTimeFrame"
          },
          "address": {
            "type": "string",
            "description": "The registrant's address",
            "example": "1800 Amphibious Blvd."
          },
          "comments": {
            "type": "string",
            "description": "The registrant's questions and comments",
            "example": "Looking forward to the discussion."
          },
          "city": {
            "type": "string",
            "description": "The registrant's city",
            "example": "Mountain View"
          },
          "org": {
            "type": "string",
            "description": "The registrant's organization",
            "example": "Cooking Org"
          },
          "last_name": {
            "maxLength": 64,
            "type": "string",
            "description": "The registrant's last name",
            "example": "Chill",
            "x-ballerina-name": "lastName"
          },
          "no_of_employees": {
            "type": "string",
            "description": "The registrant's number of employees: \n* `1-20` \n* `21-50` \n* `51-100` \n* `101-500` \n* `500-1,000` \n* `1,001-5,000` \n* `5,001-10,000` \n* `More than 10,000`",
            "example": "1-20",
            "enum": [
              "",
              "1-20",
              "21-50",
              "51-100",
              "101-500",
              "500-1,000",
              "1,001-5,000",
              "5,001-10,000",
              "More than 10,000"
            ],
            "x-ballerina-name": "noOfEmployees"
          },
          "industry": {
            "type": "string",
            "description": "The registrant's industry",
            "example": "Food"
          },
          "phone": {
            "type": "string",
            "description": "The registrant's phone number",
            "example": "5550100"
          },
          "role_in_purchase_process": {
            "type": "string",
            "description": "The registrant's role in the purchase process: \n* `Decision Maker` \n* `Evaluator/Recommender` \n* `Influencer` \n* `Not involved`",
            "example": "Influencer",
            "enum": [
              "",
              "Decision Maker",
              "Evaluator/Recommender",
              "Influencer",
              "Not involved"
            ],
            "x-ballerina-name": "roleInPurchaseProcess"
          },
          "state": {
            "type": "string",
            "description": "The registrant's state or province",
            "example": "CA"
          },
          "first_name": {
            "maxLength": 64,
            "type": "string",
            "description": "The registrant's first name",
            "example": "Jill",
            "x-ballerina-name": "firstName"
          },
          "job_title": {
            "type": "string",
            "description": "The registrant's job title",
            "example": "Chef",
            "x-ballerina-name": "jobTitle"
          },
          "email": {
            "maxLength": 128,
            "type": "string",
            "description": "The registrant's email address",
            "format": "email",
            "example": "jchill@example.com"
          }
        },
        "description": "Information about the registrant"
      },
      "SipPhonesphonesServer": {
        "type": "object",
        "properties": {
          "proxy_server": {
            "type": "string",
            "description": "The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server",
            "example": "192.0.2.2",
            "x-ballerina-name": "proxyServer"
          },
          "register_server": {
            "type": "string",
            "description": "The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address",
            "example": "192.0.2.2",
            "x-ballerina-name": "registerServer"
          },
          "transport_protocol": {
            "type": "string",
            "description": "Protocols supported by the SIP provider.  \n  The value must be either `UDP`, `TCP`, `TLS`, `AUTO`",
            "example": "UDP",
            "enum": [
              "UDP",
              "TCP",
              "TLS",
              "AUTO"
            ],
            "x-ballerina-name": "transportProtocol"
          }
        },
        "description": "Defined a set of basic components of SIP network architecture, including proxy_server, register_server and transport_protocol"
      },
      "TSPAccount": {
        "title": "TSP Account",
        "required": [
          "conference_code",
          "leader_pin"
        ],
        "type": "object",
        "properties": {
          "dial_in_numbers": {
            "type": "array",
            "description": "List of dial in numbers",
            "items": {
              "$ref": "#/components/schemas/TSPAccountDialInNumbers"
            },
            "x-ballerina-name": "dialInNumbers"
          },
          "conference_code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "Conference code: numeric value, length is less than 16",
            "example": "0125",
            "x-ballerina-name": "conferenceCode"
          },
          "leader_pin": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "Leader PIN. A numeric value, with a length of less than 16",
            "example": "11189898",
            "x-ballerina-name": "leaderPin"
          },
          "id": {
            "type": "string",
            "description": "The TSP account's ID",
            "example": "1"
          },
          "tsp_bridge": {
            "type": "string",
            "description": "Telephony bridge",
            "example": "US_TSP_TB",
            "enum": [
              "US_TSP_TB",
              "EU_TSP_TB"
            ],
            "x-ballerina-name": "tspBridge"
          }
        },
        "description": "TSP account of the user"
      },
      "InlineResponse20028Meetings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeetingsAllOf1"
          }
        ]
      },
      "InlineResponse20044AllOf1": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes",
            "example": "w7587w4eiyfsudgk",
            "x-ballerina-name": "nextPageToken"
          },
          "total_records": {
            "type": "integer",
            "description": "The total number of all the records available across pages. This field does **not** return if the `query_date_type` parameter is the `meeting_start_time` or `meeting_end_time` value",
            "example": 1,
            "x-ballerina-name": "totalRecords"
          },
          "from": {
            "type": "string",
            "description": "Start date for this report",
            "format": "date",
            "example": "2019-06-20"
          },
          "to": {
            "type": "string",
            "description": "End date for this report",
            "format": "date",
            "example": "2019-07-20"
          },
          "page_count": {
            "type": "integer",
            "description": "The number of pages returned for the request made. This field does **not** return if the `query_date_type` parameter is the `meeting_start_time` or `meeting_end_time` value",
            "example": 1,
            "x-ballerina-name": "pageCount"
          },
          "page_size": {
            "type": "integer",
            "description": "The number of records returned with a single API call",
            "example": 30,
            "x-ballerina-name": "pageSize"
          }
        }
      },
      "WebinarInstancesAllOf1": {
        "type": "object",
        "properties": {
          "webinars": {
            "type": "array",
            "description": "List of ended webinar instances",
            "items": {
              "$ref": "#/components/schemas/WebinarInstancesWebinars"
            }
          }
        }
      },
      "InlineResponse2018SettingsGlobalDialInNumbers": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "The country code, such as BR",
            "example": "US"
          },
          "number": {
            "type": "string",
            "description": "A phone number, such as +1 2332357613",
            "example": "+1 1000200200"
          },
          "city": {
            "type": "string",
            "description": "City of the number, such as Chicago",
            "example": "New York"
          },
          "country_name": {
            "type": "string",
            "description": "Full name of country, such as Brazil",
            "example": "US",
            "x-ballerina-name": "countryName"
          },
          "type": {
            "type": "string",
            "description": "Type of number",
            "example": "toll",
            "enum": [
              "toll",
              "tollfree"
            ]
          }
        }
      },
      "InlineResponse2009Policy": {
        "type": "object",
        "properties": {
          "call_control": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InlineResponse2009PolicyCallControl"
              }
            ],
            "x-ballerina-name": "callControl"
          },
          "hot_desking": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InlineResponse2009PolicyHotDesking"
              }
            ],
            "x-ballerina-name": "hotDesking"
          }
        },
        "description": "The device policy"
      },
      "UserIdMeetingTemplatesBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UsersuserIdmeetingTemplatesAllOf1"
          }
        ]
      },
      "InlineResponse20061Templates": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The webinar template's name",
            "example": "Weekly Meeting Template"
          },
          "id": {
            "type": "string",
            "description": "The webinar template's ID",
            "example": "ull6574eur"
          },
          "type": {
            "type": "integer",
            "description": "The webinar template type.  `1`: Webinar template    `2`: Admin webinar template",
            "example": 1
          }
        }
      },
      "MeetingsmeetingIdinviteLinksAttendees": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "disable_audio": {
            "type": "boolean",
            "description": "Whether to disable participant audio when joining the meeting. If not provided or set to `false`, the participant audio will follow the meeting's default settings",
            "example": false,
            "default": false,
            "x-ballerina-name": "disableAudio"
          },
          "name": {
            "maxLength": 64,
            "type": "string",
            "description": "User display name",
            "example": "Jill Chill"
          },
          "disable_video": {
            "type": "boolean",
            "description": "Whether to disable participant video when joining the meeting. If not provided or set to `false`, the participant video will follow the meeting's default settings",
            "example": false,
            "default": false,
            "x-ballerina-name": "disableVideo"
          }
        }
      },
      "UsersuserIdmeetingsSettingsApprovedOrDeniedCountriesOrRegions": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "description": "Whether to allow or block users from specific countries or regions.\n* `approve` - Allow users from specific countries or regions to join the meeting. If you select this setting, include the approved countries or regions in the `approved_list` field. \n* `deny` - Block users from specific countries or regions from joining the meeting. If you select this setting, include the blocked countries or regions in the `denied_list` field",
            "example": "approve",
            "enum": [
              "approve",
              "deny"
            ]
          },
          "enable": {
            "type": "boolean",
            "description": "Whether to enable the [**Approve or block entry for users from specific countries/regions**](https://support.zoom.us/hc/en-us/articles/360060086231-Approve-or-block-entry-for-users-from-specific-countries-regions) setting",
            "example": true
          },
          "approved_list": {
            "type": "array",
            "description": "The list of approved countries or regions",
            "items": {
              "type": "string",
              "example": "CX"
            },
            "x-ballerina-name": "approvedList"
          },
          "denied_list": {
            "type": "array",
            "description": "The list of blocked countries or regions",
            "items": {
              "type": "string",
              "example": "CA"
            },
            "x-ballerina-name": "deniedList"
          }
        },
        "description": "The list of approved or blocked users from specific countries or regions who can join the meeting"
      },
      "InlineResponse200ArchiveFiles": {
        "required": [
          "download_url",
          "encryption_fingerprint",
          "file_extension",
          "file_size",
          "file_type",
          "id",
          "individual",
          "participant_join_time",
          "participant_leave_time",
          "recording_type",
          "status"
        ],
        "type": "object",
        "properties": {
          "file_path": {
            "type": "string",
            "description": "The file path to the on-premise account archive file. \n\n **Note:** The API only returns this field for [Zoom on-premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). It does **not** return the `download_url` field",
            "example": "/9090876528/path01/demo.mp4",
            "x-ballerina-name": "filePath"
          },
          "participant_leave_time": {
            "type": "string",
            "description": "The leave time for the generated recording file. If this value is returned when the individual value is `true`, it is the recording file's participant leave time. When the individual value is `false`, it returns the leave time for the archiving gateway",
            "format": "date-time",
            "example": "2021-03-12T02:12:27Z",
            "x-ballerina-name": "participantLeaveTime"
          },
          "storage_location": {
            "type": "string",
            "description": "The region where the file is stored. This field returns only `Enable Distributed Compliance Archiving` op feature is enabled",
            "example": "US",
            "enum": [
              "US",
              "AU",
              "BR",
              "CA",
              "EU",
              "IN",
              "JP",
              "SG",
              "CH"
            ],
            "x-ballerina-name": "storageLocation"
          },
          "individual": {
            "type": "boolean",
            "description": "Whether the archive file is an individual recording file. \n* `true` - An individual recording file. \n * `false` - An entire meeting file",
            "example": true
          },
          "encryption_fingerprint": {
            "type": "string",
            "description": "The archived file's encryption fingerprint, using the SHA256 hash algorithm",
            "example": "abf85f0fe6a4db3cdd8c37e505e1dd18a34d9696170a14b5bc6395677472cf43",
            "x-ballerina-name": "encryptionFingerprint"
          },
          "number_of_messages": {
            "type": "integer",
            "description": "The number of `TXT` or `JSON` file messages. This field returns only when the `file_extension` is `JSON` or `TXT`",
            "example": 150,
            "x-ballerina-name": "numberOfMessages"
          },
          "auto_delete": {
            "type": "boolean",
            "description": "Whether to auto delete the archived file.\n\n**Prerequisites:** \n\nEnable the \"Tag Archiving Files for Deletion\" feature in OP. Contact [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003) to open",
            "example": false,
            "x-ballerina-name": "autoDelete"
          },
          "participant_join_time": {
            "type": "string",
            "description": "The join time for the generated recording file. If this value is returned when the individual value is `true`, it is the recording file's participant join time. When the individual value is `false`, it returns the join time for the archiving gateway",
            "format": "date-time",
            "example": "2021-03-12T02:07:27Z",
            "x-ballerina-name": "participantJoinTime"
          },
          "file_size": {
            "type": "integer",
            "description": "The archived file's size, in bytes",
            "example": 165743,
            "x-ballerina-name": "fileSize"
          },
          "file_type": {
            "type": "string",
            "description": "The archive file's type. \n* `MP4` - Video file. \n* `M4A` - Audio-only file. \n* `CHAT` - A TXT file containing in-meeting chat messages. \n* `CC` - A file containing the closed captions of the recording, in VTT file format. \n*  `CHAT_MESSAGE` - A JSON file encoded in base64 format containing chat messages. The file also includes waiting room chats, deleted messages, meeting emojis and non-verbal feedback. \n*  `TRANSCRIPT` - A JSON file include audio transcript wording. \n* `SUB_GROUP_MEMBER_LOG` - A json file containing records of members entering and leaving the subgroup",
            "example": "CHAT",
            "enum": [
              "MP4",
              "M4A",
              "CHAT",
              "CC",
              "CHAT_MESSAGE",
              "TRANSCRIPT",
              "SUB_GROUP_MEMBER_LOG"
            ],
            "x-ballerina-name": "fileType"
          },
          "recording_type": {
            "type": "string",
            "description": "The archive file's recording type. \n* `shared_screen_with_speaker_view` \n* `audio_only` \n* `chat_file` \n* `closed_caption` \n* `chat_message` \n* `audio_transcript` \n\n For more information, read our [Managing and sharing cloud recordings](https://support.zoom.us/hc/en-us/articles/205347605-Managing-and-sharing-cloud-recordings#h_9898497b-e736-4980-a749-d55608f10773) documentation",
            "example": "chat_message",
            "enum": [
              "shared_screen_with_speaker_view",
              "audio_only",
              "chat_file",
              "closed_caption",
              "chat_message",
              "audio_transcript"
            ],
            "x-ballerina-name": "recordingType"
          },
          "download_url": {
            "type": "string",
            "description": "The URL to download the the archive file. \n\n **OAuth apps** \n\n If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](/docs/integrations/oauth/) to download the file. For example, `https://{{base-domain}}/rec/archive/download/xxx--header 'Authorization: Bearer {{OAuth-access-token}}'` \n\n **Note:** This field does **not** return for [Zoom on-premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). Instead, this API will return the `file_path` field",
            "example": "https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngBBBB",
            "x-ballerina-name": "downloadUrl"
          },
          "file_extension": {
            "type": "string",
            "description": "The archived file's extension",
            "example": "JSON",
            "x-ballerina-name": "fileExtension"
          },
          "id": {
            "type": "string",
            "description": "The archive file's unique ID",
            "example": "a2f19f96-9294-4f51-8134-6f0eea108eb2"
          },
          "participant_email": {
            "type": "string",
            "description": "The individual recording file's participant email address. This value is returned when the `individual` value is `true`. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](/docs/api/using-zoom-apis/#email-address-display-rules) for details",
            "format": "email",
            "example": "jchill@example.com",
            "x-ballerina-name": "participantEmail"
          },
          "status": {
            "type": "string",
            "description": "The archived file's processing status. \n* `completed` - The processing of the file is complete. \n* `processing` - The file is processing. \n* `failed` - The processing of the file failed",
            "example": "completed",
            "enum": [
              "completed",
              "processing",
              "failed"
            ]
          }
        }
      },
      "RecurrenceWebinar2": {
        "title": "Recurrence webinar",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "end_date_time": {
            "type": "string",
            "description": "Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. Can't be used with `end_times`",
            "format": "date-time",
            "example": "2022-04-02T15:59:00Z",
            "x-ballerina-name": "endDateTime"
          },
          "end_times": {
            "maximum": 60,
            "type": "integer",
            "description": "Select how many times the webinar will recur before it is canceled. The maximum number of recurring is 60. Can't be used with `end_date_time`",
            "example": 7,
            "default": 1,
            "x-ballerina-name": "endTimes"
          },
          "monthly_week": {
            "type": "integer",
            "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.**   \n `-1` - Last week of the month.  \n `1` - First week of the month.  \n `2` - Second week of the month.  \n `3` - Third week of the month.  \n `4` - Fourth week of the month",
            "example": 1,
            "enum": [
              -1,
              1,
              2,
              3,
              4
            ],
            "x-enum-descriptions": [
              "Last week",
              "First week",
              "Second week",
              "Third week",
              "Fourth week"
            ],
            "x-ballerina-name": "monthlyWeek"
          },
          "monthly_week_day": {
            "type": "integer",
            "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field.   \n `1` - Sunday.  \n `2` - Monday.  \n `3` - Tuesday.  \n `4` -  Wednesday.  \n `5` - Thursday.  \n `6` - Friday.  \n `7` - Saturday",
            "example": 1,
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "x-enum-descriptions": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-ballerina-name": "monthlyWeekDay"
          },
          "repeat_interval": {
            "type": "integer",
            "description": "Define the interval when the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months",
            "example": 1,
            "x-ballerina-name": "repeatInterval"
          },
          "monthly_day": {
            "type": "integer",
            "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month the webinar should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`",
            "example": 1,
            "x-ballerina-name": "monthlyDay"
          },
          "type": {
            "type": "integer",
            "description": "Recurrence webinar types. \n `1` - Daily.  \n `2` - Weekly.  \n `3` - Monthly",
            "example": 1,
            "enum": [
              1,
              2,
              3
            ],
            "x-enum-descriptions": [
              "Daily",
              "Weekly",
              "Monthly"
            ]
          },
          "weekly_days": {
            "type": "string",
            "description": "Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat.   \n  The value for this field could be a number between `1` to `7` in string format. For instance, if the Webinar should recur on Sunday, provide `1` as the value of this field.\n\n**Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the webinar should recur on Sundays and Tuesdays, provide `1,3` as the value of this field.\n\n  \n `1` - Sunday.   \n `2` - Monday.  \n `3` - Tuesday.  \n `4` -  Wednesday.  \n `5` -  Thursday.  \n `6` - Friday.  \n `7` - Saturday.\n\n",
            "example": "1",
            "x-ballerina-name": "weeklyDays"
          }
        },
        "description": "Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time. "
      },
      "MeetingsmeetingIdSettingsSignLanguageInterpretation": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "Whether to enable [sign language interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar) for the meeting",
            "example": true
          },
          "interpreters": {
            "maximum": 20,
            "type": "array",
            "description": "Information about the meeting's sign language interpreters",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsSignLanguageInterpretationInterpreters"
            }
          }
        },
        "description": "The meeting's [sign language interpretation settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar). Make sure to add the language in the web portal in order to use it in the API. See link for details. \n\n**Note:** If this feature is not enabled on the host's account, this setting will **not** be applied to the meeting"
      },
      "InviteLinks": {
        "title": "Invite Links",
        "type": "object",
        "properties": {
          "attendees": {
            "maxItems": 500,
            "minItems": 1,
            "type": "array",
            "description": "The attendees list",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdinviteLinksAttendees"
            }
          },
          "ttl": {
            "maximum": 7776000,
            "minimum": 0,
            "type": "integer",
            "description": "The invite link's expiration time, in seconds. \n\nThis value defaults to `7200`",
            "format": "int64",
            "example": 1000,
            "default": 7200
          }
        },
        "description": "Invite links"
      },
      "UsersuserIdwebinarsSettingsLanguageInterpretation": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "Whether to enable [language interpretation](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0064768) for the webinar. If not provided, the default value will be based on the user's setting",
            "example": true
          },
          "interpreters": {
            "type": "array",
            "description": "Information about the webinar's language interpreters",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsLanguageInterpretationInterpreters"
            }
          }
        },
        "description": "The webinar's [language interpretation settings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0064768). Make sure to add the language in the web portal in order to use it in the API. See link for details. \n\n**Note:** This feature is only available for certain Webinar add-on, Education, and Business and higher plans. If this feature is not enabled on the host's account, this setting will **not** be applied to the webinar. This is not supported for simulive webinars"
      },
      "RecurrenceWebinar1": {
        "title": "Recurrence webinar",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "end_date_time": {
            "type": "string",
            "description": "Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with `end_times`.)",
            "format": "date-time",
            "example": "2022-04-02T15:59:00Z",
            "x-ballerina-name": "endDateTime"
          },
          "end_times": {
            "maximum": 60,
            "type": "integer",
            "description": "Select how many times the webinar will recur before it is canceled. The maximum number of recurring is 60. Cannot be used with `end_date_time`",
            "example": 7,
            "default": 1,
            "x-ballerina-name": "endTimes"
          },
          "monthly_week": {
            "type": "integer",
            "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.**   \n `-1` - Last week of the month.  \n `1` - First week of the month.  \n `2` - Second week of the month.  \n `3` - Third week of the month.  \n `4` - Fourth week of the month",
            "example": 1,
            "enum": [
              -1,
              1,
              2,
              3,
              4
            ],
            "x-enum-descriptions": [
              "Last week",
              "First week",
              "Second week",
              "Third week",
              "Fourth week"
            ],
            "x-ballerina-name": "monthlyWeek"
          },
          "monthly_week_day": {
            "type": "integer",
            "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field.   \n `1` - Sunday.  \n `2` - Monday.  \n `3` - Tuesday.  \n `4` -  Wednesday.  \n `5` - Thursday.  \n `6` - Friday.  \n `7` - Saturday",
            "example": 1,
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "x-enum-descriptions": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-ballerina-name": "monthlyWeekDay"
          },
          "repeat_interval": {
            "type": "integer",
            "description": "Define the interval when the webinar should recur. For instance, to schedule a webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months",
            "example": 1,
            "x-ballerina-name": "repeatInterval"
          },
          "monthly_day": {
            "type": "integer",
            "description": "Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month, the webinar should recur. The value range is from 1 to 31.\n\nFor instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`",
            "example": 1,
            "x-ballerina-name": "monthlyDay"
          },
          "type": {
            "type": "integer",
            "description": "Recurrence webinar types.  \n `1` - Daily.  \n `2` - Weekly.  \n `3` - Monthly",
            "example": 1,
            "enum": [
              1,
              2,
              3
            ],
            "x-enum-descriptions": [
              "Daily",
              "Weekly",
              "Monthly"
            ]
          },
          "weekly_days": {
            "type": "string",
            "description": "Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat.   \n  The value for this field could be a number between `1` to `7` in string format. For instance, if the Webinar should recur on Sunday, provide `1` as the value of this field.    \n   \n  **Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the Webinar should recur on Sundays and Tuesdays provide `1,3` as the value of this field.\n\n  \n `1`  - Sunday.   \n `2` - Monday.  \n `3` - Tuesday.  \n `4` -  Wednesday.  \n `5` -  Thursday.  \n `6` - Friday.  \n `7` - Saturday.\n\n",
            "example": "1",
            "x-ballerina-name": "weeklyDays"
          }
        },
        "description": "Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time. "
      },
      "RegistrantsQuestionsBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecordingRegistrantQuestions1"
          }
        ]
      },
      "MeetingSurveyObject": {
        "title": "Meeting Survey Object",
        "type": "object",
        "properties": {
          "show_in_the_browser": {
            "type": "boolean",
            "description": "Whether the **Show in the browser when the meeting ends** option is enabled. \n* `true` - Enabled. \n* `false` - Disabled. \n\n This value defaults to `true`",
            "example": true,
            "default": true,
            "x-ballerina-name": "showInTheBrowser"
          },
          "custom_survey": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MeetingsmeetingIdsurveyCustomSurvey"
              }
            ],
            "x-ballerina-name": "customSurvey"
          },
          "third_party_survey": {
            "maxLength": 64,
            "type": "string",
            "description": "The link to the third party meeting survey",
            "example": "https://example.com",
            "x-ballerina-name": "thirdPartySurvey"
          }
        },
        "description": "Information about the meeting survey"
      },
      "PanelistsPanelistsPanelistsAllOf1123": {
        "type": "object",
        "properties": {
          "join_url": {
            "type": "string",
            "description": "Join URL",
            "example": "https://example.com/j/11111",
            "x-ballerina-name": "joinUrl"
          }
        }
      },
      "InlineResponse20071Questions": {
        "type": "object",
        "properties": {
          "required": {
            "type": "boolean",
            "description": "State whether the selected fields are required or optional",
            "example": true
          },
          "field_name": {
            "type": "string",
            "description": "Field name",
            "example": "last_name",
            "enum": [
              "last_name",
              "address",
              "city",
              "country",
              "zip",
              "state",
              "phone",
              "industry",
              "org",
              "job_title",
              "purchasing_time_frame",
              "role_in_purchase_process",
              "no_of_employees",
              "comments"
            ],
            "x-enum-descriptions": [
              "Last Name",
              "Address",
              "City",
              "Country/Region",
              "Zip/Postal Code",
              "State/Province",
              "Phone",
              "Industry",
              "Organization",
              "Job Title",
              "Purchasing Time Frame",
              "Role in Purchase Process",
              "Number of Employees",
              "Questions & Comments"
            ],
            "x-ballerina-name": "fieldName"
          }
        }
      },
      "InlineResponse2018TrackingFields": {
        "type": "object",
        "properties": {
          "visible": {
            "type": "boolean",
            "description": "Indicates whether the [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) is visible in the meeting scheduling options in the Zoom Web Portal or not.\n\n`true`: Tracking field is visible.   \n \n\n`false`: Tracking field is not visible to the users in the meeting options in the Zoom Web Portal but the field was used while scheduling this meeting via API. An invisible tracking field can be used by users while scheduling meetings via API only. ",
            "example": true
          },
          "field": {
            "type": "string",
            "description": "The tracking field's label",
            "example": "field1"
          },
          "value": {
            "type": "string",
            "description": "The tracking field's value",
            "example": "value1"
          }
        }
      },
      "PanelistsPanelistsPanelistsPanelistsAllOf11234": {
        "type": "object",
        "properties": {
          "name_tag_name": {
            "type": "string",
            "description": "The panelist's name to display in the name tag",
            "example": "name",
            "x-ballerina-name": "nameTagName"
          },
          "name_tag_pronouns": {
            "type": "string",
            "description": "The pronouns to display in the name tag",
            "example": "pronouns",
            "x-ballerina-name": "nameTagPronouns"
          },
          "name_tag_description": {
            "type": "string",
            "description": "The description for the name tag, such as the person's title",
            "example": "description",
            "x-ballerina-name": "nameTagDescription"
          },
          "virtual_background_id": {
            "type": "string",
            "description": "The virtual background's ID",
            "example": "xHhPyb8ERMCmiC5njPjFdQ",
            "x-ballerina-name": "virtualBackgroundId"
          },
          "name_tag_id": {
            "type": "string",
            "description": "The name tag ID to bind",
            "example": "xHhPyb8ERMCmiC5njPjFdQ",
            "x-ballerina-name": "nameTagId"
          }
        }
      },
      "MeetingsmeetingIdSettingsLanguageInterpretation": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "Whether to enable [language interpretation](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0064768) for the meeting",
            "example": true
          },
          "interpreters": {
            "type": "array",
            "description": "Information about the meeting's language interpreters",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsLanguageInterpretationInterpreters"
            }
          }
        },
        "description": "The meeting's [language interpretation settings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0064768). Make sure to add the language in the web portal in order to use it in the API. See link for details.\n\n**Note:** This feature is only available for certain Meeting add-on, Education, and Business and higher plans. If this feature is not enabled on the host's account, this setting will **not** be applied to the meeting"
      },
      "InlineResponse20020CustomQuestions": {
        "type": "object",
        "properties": {
          "answers": {
            "type": "array",
            "description": "Answer choices for the question. Can not be used for `short` question type as this type of question requires registrants to type out the answer",
            "items": {
              "type": "string",
              "example": "Good"
            }
          },
          "title": {
            "type": "string",
            "description": "Title of the custom question",
            "example": "How are you?"
          },
          "type": {
            "type": "string",
            "description": "Type of the question being asked",
            "example": "short",
            "enum": [
              "short",
              "single"
            ],
            "x-enum-descriptions": [
              "Short Answer",
              "Single Answer"
            ]
          },
          "required": {
            "type": "boolean",
            "description": "Whether or not the custom question is required to be answered by participants or not",
            "example": true
          }
        }
      },
      "PollsAllOf1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The poll ID",
            "example": "QalIoKWLTJehBJ8e1xRrbQ"
          },
          "status": {
            "type": "string",
            "description": "The meeting poll's status.\n`notstart` - Poll not started\n`started` - Poll started\n`ended` - Poll ended\n`sharing` - Sharing poll results\n`deactivated` - Poll deactivated",
            "example": "notstart",
            "enum": [
              "notstart",
              "started",
              "ended",
              "sharing",
              "deactivated"
            ]
          }
        }
      },
      "InlineResponse2001StatisticByFileStatus": {
        "type": "object",
        "properties": {
          "processing_file_count": {
            "type": "integer",
            "description": "The number of processing files",
            "example": 1,
            "x-ballerina-name": "processingFileCount"
          },
          "failed_file_count": {
            "type": "integer",
            "description": "The number of failed files",
            "example": 1,
            "x-ballerina-name": "failedFileCount"
          },
          "completed_file_count": {
            "type": "integer",
            "description": "The number of completed files",
            "example": 1,
            "x-ballerina-name": "completedFileCount"
          }
        },
        "description": "Statistics about archive files, by file status"
      },
      "RegistrationList2RegistrationList2AllOf12": {
        "type": "object",
        "properties": {
          "registrants": {
            "type": "array",
            "description": "List of registrant objects",
            "items": {
              "$ref": "#/components/schemas/RegistrationList2Registrants"
            }
          }
        }
      },
      "LiveMeetingsmeetingIdrtmsAppstatusSettings": {
        "required": [
          "client_id"
        ],
        "type": "object",
        "properties": {
          "participant_user_id": {
            "type": "string",
            "description": "The participant's user ID. This field is optional. If not provided, the user ID will be automatically obtained from the authentication token. This value matches the `id` field in the [**Get a user**](/docs/api/users/#tag/users/GET/users/{userId}) API response. Use this field if you pass the `start` or `stop` value for the `action` field",
            "example": "30R7kT7bTIKSNUFEuH_Qlg",
            "x-ballerina-name": "participantUserId"
          },
          "client_id": {
            "type": "string",
            "description": "The unique identifier of the authorized app, configured in the Account Settings under **Allow apps to access meeting content**. This app must have host approval to access in-meeting content. Use this field if you pass the `start` or `stop` value for the `action` field",
            "example": "a_Zu0X_FVBUycmEi9ms5hg",
            "x-ballerina-name": "clientId"
          }
        },
        "description": "The participant's RTMS app settings"
      },
      "TheMeetingAndWebinarPollingObject": {
        "title": "The meeting and Webinar polling object.",
        "type": "object",
        "properties": {
          "questions": {
            "type": "array",
            "description": "The information about the poll's questions",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdpollsQuestions"
            }
          },
          "anonymous": {
            "type": "boolean",
            "description": "Whether meeting participants answer poll questions anonymously. \n\nThis value defaults to `false`",
            "example": true,
            "default": false
          },
          "poll_type": {
            "type": "integer",
            "description": "The type of poll: \n* `1` &mdash; Poll. \n* `2` &mdash; Advanced Poll. This feature must be enabled in your Zoom account. \n* `3` &mdash; Quiz. This feature must be enabled in your Zoom account. \n\n This value defaults to `1`",
            "example": 2,
            "enum": [
              1,
              2,
              3
            ],
            "x-ballerina-name": "pollType"
          },
          "title": {
            "maxLength": 64,
            "type": "string",
            "description": "The poll's title, up to 64 characters",
            "example": "Learn something new"
          }
        },
        "description": "The information about meeting and webinar polling"
      },
      "InlineResponse2006InlineResponse2006InlineResponse2006AllOf123": {
        "type": "object",
        "properties": {
          "meetings": {
            "type": "array",
            "description": "List of recordings",
            "items": {
              "$ref": "#/components/schemas/InlineResponse2006Meetings"
            }
          }
        }
      },
      "InlineResponse20039AllOf1": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes",
            "example": "Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3",
            "x-ballerina-name": "nextPageToken"
          },
          "total_records": {
            "type": "integer",
            "description": "The number of all records available across pages",
            "example": 1,
            "x-ballerina-name": "totalRecords"
          },
          "page_count": {
            "type": "integer",
            "description": "The number of pages returned for the request made",
            "example": 1,
            "x-ballerina-name": "pageCount"
          },
          "page_size": {
            "maximum": 300,
            "type": "integer",
            "description": "The number of records returned within a single API call",
            "example": 30,
            "default": 30,
            "x-ballerina-name": "pageSize"
          }
        },
        "description": "Pagination object"
      },
      "InlineResponse20036CustomFields": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The custom attribute's value",
            "example": "test"
          },
          "key": {
            "type": "string",
            "description": "The custom attribute's name",
            "example": "attribute 1"
          }
        }
      },
      "MeetingsmeetingIdlivestreamstatusSettings": {
        "type": "object",
        "properties": {
          "layout": {
            "type": "string",
            "description": "The layout of the meeting's livestream. Use this field if you pass the `start` or `mode` value for the `action` field.\r\n* `follow_host` - Follow host view.\r\n* `gallery_view` - Gallery view.\r\n* `speaker_view` - Speaker view",
            "example": "follow_host",
            "default": "follow_host",
            "enum": [
              "follow_host",
              "gallery_view",
              "speaker_view"
            ]
          },
          "active_speaker_name": {
            "type": "boolean",
            "description": "Whether to display the name of the active speaker during a meeting's livestream. Use this field if you pass the `start` value for the `action` field",
            "example": true,
            "x-ballerina-name": "activeSpeakerName"
          },
          "display_name": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The display name of the meeting's livestream. Use this field if you pass the `start` value for the `action` field",
            "example": "Jill Chill",
            "x-ballerina-name": "displayName"
          },
          "close_caption": {
            "type": "string",
            "description": "The livestream's closed caption type for this session. Use this field if you pass the `start` or `mode` value for the `action` field.\r\n* `burnt-in` - Burnt in captions.\r\n* `embedded` - Embedded captions.\r\n* `off` - Turn off captions",
            "example": "burnt-in",
            "default": "burnt-in",
            "enum": [
              "burnt-in",
              "embedded",
              "off"
            ],
            "x-ballerina-name": "closeCaption"
          }
        },
        "description": "The meeting's livestreaming settings"
      },
      "WebinarRegistrantAllOf1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "95204914252"
          }
        }
      },
      "NameTagsnameTagIdBody": {
        "type": "object",
        "properties": {
          "set_default_for_all_panelists": {
            "type": "boolean",
            "description": "Whether to set the name tag as the new default for all panelists or not, including panelists not currently assigned a default name tag",
            "example": true,
            "default": true,
            "x-ballerina-name": "setDefaultForAllPanelists"
          },
          "accent_color": {
            "type": "string",
            "description": "The name tag's accent color",
            "format": "Hex color code",
            "example": "0e72ed",
            "x-ballerina-name": "accentColor"
          },
          "background_color": {
            "type": "string",
            "description": "The name tag's background color",
            "format": "Hex color code",
            "example": "0e72ed",
            "x-ballerina-name": "backgroundColor"
          },
          "name": {
            "type": "string",
            "description": "The name tag's name.\n\n**Note:** This value cannot exceed more than 50 characters",
            "example": "name"
          },
          "text_color": {
            "type": "string",
            "description": "The name tag's text color",
            "format": "Hex color code",
            "example": "0e72ed",
            "x-ballerina-name": "textColor"
          },
          "is_default": {
            "type": "boolean",
            "description": "Whether set the name tag as the default name tag or not",
            "example": true,
            "default": false,
            "x-ballerina-name": "isDefault"
          }
        },
        "description": "Name tag information"
      },
      "InlineResponse20046Users": {
        "type": "object",
        "properties": {
          "meeting_minutes": {
            "type": "integer",
            "description": "Number of meeting minutes for user",
            "example": 342,
            "x-ballerina-name": "meetingMinutes"
          },
          "user_name": {
            "type": "string",
            "description": "User display name",
            "example": "Jill Chill",
            "x-ballerina-name": "userName"
          },
          "meetings": {
            "type": "integer",
            "description": "Number of meetings for user",
            "example": 45
          },
          "dept": {
            "type": "string",
            "description": "User department",
            "example": "HR"
          },
          "id": {
            "type": "string",
            "description": "User ID",
            "example": "2pyjK5VNQHadb2BY6Z4GbA"
          },
          "type": {
            "type": "integer",
            "description": "User type",
            "example": 1
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "jchill@example.com"
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes that have been assigned to the user",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20046CustomAttributes"
            },
            "x-ballerina-name": "customAttributes"
          },
          "participants": {
            "type": "integer",
            "description": "Number of participants in meetings for user",
            "example": 56
          }
        },
        "description": "user object"
      },
      "MeetingsmeetingIdpollsQuestions": {
        "type": "object",
        "properties": {
          "answer_required": {
            "type": "boolean",
            "description": "Whether participants must answer the question: \n* `true` &mdash; The participant must answer the question. \n* `false` &mdash; The participant does not need to answer the question. \n\n**Note:** \n* When the poll's `type` value is `1` (Poll), this value defaults to `true`. \n* When the poll's `type` value is the `2` (Advanced Poll) or `3` (Quiz) values, this value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "answerRequired"
          },
          "answer_min_character": {
            "minimum": 1,
            "type": "integer",
            "description": "The allowed minimum number of characters. This field only applies to `short_answer` and `long_answer` polls. You must provide at least a **one** character minimum value",
            "example": 1,
            "x-ballerina-name": "answerMinCharacter"
          },
          "rating_min_value": {
            "minimum": 0,
            "type": "integer",
            "description": "The rating scale's minimum value. This value cannot be less than zero. \n\nThis field only applies to the `rating_scale` poll",
            "example": 0,
            "x-ballerina-name": "ratingMinValue"
          },
          "answers": {
            "minItems": 2,
            "type": "array",
            "description": "The poll question's available answers. This field requires a **minimum** of two answers. \n\n* For `single` and `multiple` polls, you can only provide a maximum of 10 answers. \n* For `matching` polls, you can only provide a maximum of 16 answers. \n* For `rank_order` polls, you can only provide a maximum of seven answers",
            "items": {
              "type": "string",
              "example": "Extremely useful"
            }
          },
          "type": {
            "type": "string",
            "description": "The poll's question and answer type: \n* `single` &mdash; Single choice. \n* `multiple` &mdash; Multiple choice. \n* `matching` &mdash; Matching. \n* `rank_order` &mdash; Rank order. \n* `short_answer` &mdash; Short answer. \n* `long_answer` &mdash; Long answer. \n* `fill_in_the_blank` &mdash; Fill in the blank. \n* `rating_scale` &mdash; Rating scale",
            "example": "single",
            "enum": [
              "single",
              "multiple",
              "matching",
              "rank_order",
              "short_answer",
              "long_answer",
              "fill_in_the_blank",
              "rating_scale"
            ],
            "x-enum-descriptions": [
              "Single choice",
              "Multiple choice",
              "Matching",
              "Rank order",
              "Short answer",
              "Long answer",
              "Fill in the blank",
              "Rating scale"
            ]
          },
          "answer_max_character": {
            "type": "integer",
            "description": "The allowed maximum number of characters. This field only applies to `short_answer` and `long_answer` polls: \n* For `short_answer` polls, a maximum of 500 characters. \n* For `long_answer` polls, a maximum of 2,000 characters",
            "example": 200,
            "x-ballerina-name": "answerMaxCharacter"
          },
          "rating_max_value": {
            "maximum": 10,
            "type": "integer",
            "description": "The rating scale's maximum value, up to a maximum value of 10. \n\nThis field only applies to the `rating_scale` poll",
            "example": 4,
            "x-ballerina-name": "ratingMaxValue"
          },
          "right_answers": {
            "minItems": 1,
            "type": "array",
            "description": "The poll question's correct answer(s). This field is **required** if the poll's `type` value is `3` (Quiz). \n\n For `single` and `matching` polls, this field only accepts one answer",
            "items": {
              "type": "string",
              "example": "Good"
            },
            "x-ballerina-name": "rightAnswers"
          },
          "show_as_dropdown": {
            "type": "boolean",
            "description": "Whether to display the radio selection as a drop-down box: \n* `true` &mdash; Show as a drop-down box. \n* `false` &mdash; Do not show as a drop-down box. \n\nThis value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "showAsDropdown"
          },
          "rating_min_label": {
            "type": "string",
            "description": "The low score label for the `rating_min_value` field. \n\nThis field only applies to the `rating_scale` poll",
            "example": "Not likely",
            "x-ballerina-name": "ratingMinLabel"
          },
          "case_sensitive": {
            "type": "boolean",
            "description": "Whether the correct answer is case sensitive. This field only applies to `fill_in_the_blank` polls: \n* `true` &mdash; The answer is case-sensitive. \n* `false` &mdash; The answer is not case-sensitive. \n\nThis value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "caseSensitive"
          },
          "name": {
            "maxLength": 1024,
            "type": "string",
            "description": "The poll question, up to 1024 characters. \n\nFor `fill_in_the_blank` polls, this field is the poll's question. For each value that the user must fill in, ensure that there are the same number of `right_answers` values",
            "example": "How useful was this meeting?"
          },
          "rating_max_label": {
            "type": "string",
            "description": "The high score label for the `rating_max_value` field. \n\nThis field only applies to the `rating_scale` poll",
            "example": "Extremely Likely",
            "x-ballerina-name": "ratingMaxLabel"
          },
          "prompts": {
            "type": "array",
            "description": "The information about the prompt questions. This field only applies to `matching` and `rank_order` polls. You **must** provide a minimum of two prompts, up to a maximum of 10 prompts",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdbatchPollsPrompts"
            }
          }
        }
      },
      "InlineResponse20049InlineResponse20049AllOf12": {
        "type": "object",
        "properties": {
          "participants": {
            "type": "array",
            "description": "Information about the webinar participant",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20049Participants"
            }
          }
        }
      },
      "PollsQuestions": {
        "type": "object",
        "properties": {
          "answer_required": {
            "type": "boolean",
            "description": "Whether participants must answer the question: \n* `true` &mdash; The participant must answer the question. \n* `false` &mdash; The participant does not need to answer the question. \n\n**Note:** \n* When the poll's `type` value is `1` (Poll), this value defaults to `true`. \n* When the poll's `type` value is the `2` (Advanced Poll) or `3` (Quiz) values, this value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "answerRequired"
          },
          "answer_min_character": {
            "minimum": 1,
            "type": "integer",
            "description": "The allowed minimum number of characters. This field only applies to `short_answer` and `long_answer` polls. You must provide at least a **one** character minimum value",
            "example": 1,
            "x-ballerina-name": "answerMinCharacter"
          },
          "rating_min_value": {
            "minimum": 0,
            "type": "integer",
            "description": "The rating scale's minimum value. This value cannot be less than zero. \n\nThis field only applies to the `rating_scale` poll",
            "example": 0,
            "x-ballerina-name": "ratingMinValue"
          },
          "answers": {
            "minItems": 2,
            "type": "array",
            "description": "The poll question's available answers. This field requires a **minimum** of two answers. \n\n* For `single` and `multiple` polls, you can only provide a maximum of 10 answers. \n* For `matching` polls, you can only provide a maximum of 16 answers. \n* For `rank_order` polls, you can only provide a maximum of seven answers",
            "items": {
              "type": "string",
              "example": "Extremely useful"
            }
          },
          "type": {
            "type": "string",
            "description": "The poll's question and answer type: \n* `single` &mdash; Single choice. \n* `multiple` &mdash; Multiple choice. \n* `matching` &mdash; Matching. \n* `rank_order` &mdash; Rank order. \n* `short_answer` &mdash; Short answer. \n* `long_answer` &mdash; Long answer. \n* `fill_in_the_blank` &mdash; Fill in the blank. \n* `rating_scale` &mdash; Rating scale",
            "example": "single",
            "enum": [
              "single",
              "multiple",
              "matching",
              "rank_order",
              "short_answer",
              "long_answer",
              "fill_in_the_blank",
              "rating_scale"
            ],
            "x-enum-descriptions": [
              "Single choice",
              "Multiple choice",
              "Matching",
              "Rank order",
              "Short answer",
              "Long answer",
              "Fill in the blank",
              "Rating scale"
            ]
          },
          "answer_max_character": {
            "type": "integer",
            "description": "The allowed maximum number of characters. This field only applies to `short_answer` and `long_answer` polls: \n* For `short_answer` polls, a maximum of 500 characters. \n* For `long_answer` polls, a maximum of 2,000 characters",
            "example": 200,
            "x-ballerina-name": "answerMaxCharacter"
          },
          "rating_max_value": {
            "maximum": 10,
            "type": "integer",
            "description": "The rating scale's maximum value, up to a maximum value of 10. \n\nThis field only applies to the `rating_scale` poll",
            "example": 4,
            "x-ballerina-name": "ratingMaxValue"
          },
          "right_answers": {
            "minItems": 1,
            "type": "array",
            "description": "The poll question's correct answer(s). This field is **required** if the poll's `type` value is `3` (Quiz). \n\n For `single` and `matching` polls, this field only accepts one answer",
            "items": {
              "type": "string",
              "example": "Good"
            },
            "x-ballerina-name": "rightAnswers"
          },
          "show_as_dropdown": {
            "type": "boolean",
            "description": "Whether to display the radio selection as a drop-down box: \n* `true` &mdash; Show as a drop-down box. \n* `false` &mdash; Do not show as a drop-down box. \n\nThis value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "showAsDropdown"
          },
          "rating_min_label": {
            "type": "string",
            "description": "The low score label for the `rating_min_value` field. \n\nThis field only applies to the `rating_scale` poll",
            "example": "Not likely",
            "x-ballerina-name": "ratingMinLabel"
          },
          "case_sensitive": {
            "type": "boolean",
            "description": "Whether the correct answer is case sensitive. This field only applies to `fill_in_the_blank` polls: \n* `true` &mdash; The answer is case-sensitive. \n* `false` &mdash; The answer is not case-sensitive. \n\nThis value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "caseSensitive"
          },
          "name": {
            "maxLength": 1024,
            "type": "string",
            "description": "The poll question, up to 1024 characters. \n\nFor `fill_in_the_blank` polls, this field is the poll's question. For each value that the user must fill in, ensure that there are the same number of `right_answers` values",
            "example": "How useful was this meeting?"
          },
          "rating_max_label": {
            "type": "string",
            "description": "The high score label for the `rating_max_value` field. \n\nThis field only applies to the `rating_scale` poll",
            "example": "Extremely Likely",
            "x-ballerina-name": "ratingMaxLabel"
          },
          "prompts": {
            "type": "array",
            "description": "Information about the prompt questions. This field only applies to `matching` and `rank_order` polls. You **must** provide a minimum of two prompts, up to a maximum of 10 prompts",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdbatchPollsPrompts"
            }
          }
        }
      },
      "InlineResponse200PhysicalFiles": {
        "type": "object",
        "properties": {
          "file_name": {
            "type": "string",
            "description": "The physical file's name",
            "example": "Screenshot 2025-02-12 at 10.42.27 AM.png",
            "x-ballerina-name": "fileName"
          },
          "file_id": {
            "type": "string",
            "description": "The physical file's unique ID",
            "example": "pvKocCqVSMygaOcKus5Afw",
            "x-ballerina-name": "fileId"
          },
          "download_url": {
            "type": "string",
            "description": "The URL to download the the archive file. \n\n **OAuth apps** \n\n If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](/docs/integrations/oauth/) to download the file. \n\n Example: \n\n `https://{{base-domain}}/rec/archive/attached/download/xxx--header 'Authorization: Bearer {{OAuth-access-token}}'` ",
            "example": "https://example.com/rec/archive/attached/download/HBAXbHc15BXbnq0JoDu6tc5MWlww9MAo9JJq2d14VAWkpcT5FEA.AK5calud4EJB7bMq",
            "x-ballerina-name": "downloadUrl"
          },
          "file_size": {
            "type": "integer",
            "description": "The physical file's size, in bytes",
            "example": 540680,
            "x-ballerina-name": "fileSize"
          }
        }
      },
      "WebinarIdLivestreamBody": {
        "required": [
          "page_url",
          "stream_key",
          "stream_url"
        ],
        "type": "object",
        "properties": {
          "page_url": {
            "maxLength": 1024,
            "type": "string",
            "description": "The webinar live stream page's URL",
            "format": "uri",
            "example": "https://example.com/livestream/123",
            "x-ballerina-name": "pageUrl"
          },
          "resolution": {
            "type": "string",
            "description": "The number of pixels in each dimension that the video camera can display, required when a user enables 1080p. Use a value of `720p` or `1080p`",
            "example": "720p"
          },
          "stream_key": {
            "maxLength": 512,
            "type": "string",
            "description": "The webinar live stream name and key",
            "example": "contact-it@example.com",
            "x-ballerina-name": "streamKey"
          },
          "stream_url": {
            "maxLength": 1024,
            "type": "string",
            "description": "The webinar live stream URL",
            "example": "https://example.com/livestream",
            "x-ballerina-name": "streamUrl"
          }
        },
        "description": "Webinar live stream"
      },
      "MeetingsmeetingIdSettings": {
        "type": "object",
        "properties": {
          "breakout_room": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MeetingsmeetingIdSettingsBreakoutRoom"
              }
            ],
            "x-ballerina-name": "breakoutRoom"
          },
          "allow_host_control_participant_mute_state": {
            "type": "boolean",
            "description": "Whether to allow the host and co-hosts to fully control the mute state of participants",
            "example": false,
            "default": false,
            "x-ballerina-name": "allowHostControlParticipantMuteState"
          },
          "summary_template_id": {
            "type": "string",
            "description": "The summary template ID used to generate a meeting summary based on a predefined template. To get available summary templates, use the **Get user summary templates** API. To enable this feature for your account, please [contact Zoom Support](https://support.zoom.com/hc/en)",
            "example": "1e1356ad",
            "x-ballerina-name": "summaryTemplateId"
          },
          "custom_keys": {
            "maxItems": 10,
            "type": "array",
            "description": "Custom keys and values assigned to the meeting",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsCustomKeys"
            },
            "x-ballerina-name": "customKeys"
          },
          "global_dial_in_numbers": {
            "type": "array",
            "description": "Global dial-in countries or regions",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsGlobalDialInNumbers"
            },
            "x-ballerina-name": "globalDialInNumbers"
          },
          "show_share_button": {
            "type": "boolean",
            "description": "Show social share buttons on the meeting registration page.\nThis setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting)",
            "example": true,
            "x-ballerina-name": "showShareButton"
          },
          "registrants_confirmation_email": {
            "type": "boolean",
            "description": "Whether to send registrants an email confirmation.\n* `true` - Send a confirmation email.\n* `false` - Do not send a confirmation email",
            "example": true,
            "x-ballerina-name": "registrantsConfirmationEmail"
          },
          "approved_or_denied_countries_or_regions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MeetingsmeetingIdSettingsApprovedOrDeniedCountriesOrRegions"
              }
            ],
            "x-ballerina-name": "approvedOrDeniedCountriesOrRegions"
          },
          "continuous_meeting_chat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MeetingsmeetingIdSettingsContinuousMeetingChat"
              }
            ],
            "x-ballerina-name": "continuousMeetingChat"
          },
          "allow_multiple_devices": {
            "type": "boolean",
            "description": "Allow attendees to join the meeting from multiple devices. This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting)",
            "example": true,
            "x-ballerina-name": "allowMultipleDevices"
          },
          "meeting_authentication": {
            "type": "boolean",
            "description": "`true`- Only authenticated users can join meetings",
            "example": true,
            "x-ballerina-name": "meetingAuthentication"
          },
          "alternative_hosts": {
            "type": "string",
            "description": "A semicolon-separated list of the meeting's alternative hosts' email addresses or IDs",
            "example": "jchill@example.com;thill@example.com",
            "x-ballerina-name": "alternativeHosts"
          },
          "alternative_host_update_polls": {
            "type": "boolean",
            "description": "Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher",
            "example": true,
            "x-ballerina-name": "alternativeHostUpdatePolls"
          },
          "device_testing": {
            "type": "boolean",
            "description": "Enable the device testing",
            "example": false,
            "default": false,
            "x-ballerina-name": "deviceTesting"
          },
          "participant_video": {
            "type": "boolean",
            "description": "Start video when participants join the meeting",
            "example": false,
            "x-ballerina-name": "participantVideo"
          },
          "calendar_type": {
            "type": "integer",
            "description": "The type of calendar integration used to schedule the meeting. \n* `1` - [Zoom Outlook add-in](https://support.zoom.us/hc/en-us/articles/360031592971-Getting-started-with-Outlook-plugin-and-add-in) \n* `2` - [Zoom for Google Workspace add-on](https://support.zoom.us/hc/en-us/articles/360020187492-Using-the-Zoom-for-Google-Workspace-add-on)\n\nWorks with the `private_meeting` field to determine whether to share details of meetings",
            "example": 1,
            "enum": [
              1,
              2
            ],
            "x-enum-descriptions": [
              "Outlook",
              "Google Calendar"
            ],
            "x-ballerina-name": "calendarType"
          },
          "in_meeting": {
            "type": "boolean",
            "description": "Host meeting in India",
            "example": false,
            "deprecated": true,
            "default": false,
            "x-ballerina-name": "inMeeting"
          },
          "mute_upon_entry": {
            "type": "boolean",
            "description": "Mute participants upon entry",
            "example": false,
            "default": false,
            "x-ballerina-name": "muteUponEntry"
          },
          "global_dial_in_countries": {
            "type": "array",
            "description": "List of global dial-in countries",
            "items": {
              "type": "string",
              "example": "US"
            },
            "x-ballerina-name": "globalDialInCountries"
          },
          "question_and_answer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MeetingsmeetingIdSettingsQuestionAndAnswer"
              }
            ],
            "x-ballerina-name": "questionAndAnswer"
          },
          "join_before_host": {
            "type": "boolean",
            "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings",
            "example": true,
            "default": false,
            "x-ballerina-name": "joinBeforeHost"
          },
          "host_save_video_order": {
            "type": "boolean",
            "description": "Whether the **Allow host to save video order** feature is enabled",
            "example": true,
            "x-ballerina-name": "hostSaveVideoOrder"
          },
          "watermark": {
            "type": "boolean",
            "description": "Add a watermark when viewing a shared screen",
            "example": false,
            "default": false
          },
          "approval_type": {
            "type": "integer",
            "description": "Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.**   \n   \n \n\n`0` - Automatically approve.  \n `1` - Manually approve.  \n `2` - No registration required",
            "example": 0,
            "default": 2,
            "enum": [
              0,
              1,
              2
            ],
            "x-enum-descriptions": [
              "Automatically Approve",
              "Manually Approve",
              "No Registration Required"
            ],
            "x-ballerina-name": "approvalType"
          },
          "close_registration": {
            "type": "boolean",
            "description": "Close registration after the event date",
            "example": false,
            "default": false,
            "x-ballerina-name": "closeRegistration"
          },
          "internal_meeting": {
            "type": "boolean",
            "description": "Whether to set the meeting as an internal meeting",
            "example": false,
            "default": false,
            "x-ballerina-name": "internalMeeting"
          },
          "authentication_exception": {
            "type": "array",
            "description": "The participants added here will receive unique meeting invite links and bypass authentication",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsAuthenticationException"
            },
            "x-ballerina-name": "authenticationException"
          },
          "jbh_time": {
            "type": "integer",
            "description": "If the value of `join_before_host` field is set to true, use this field to indicate time limits for a participant to join a meeting before a host.\n\n*  `0` - Allow participant to join anytime.\n*  `5` - Allow participant to join 5 minutes before meeting start time.\n * `10` - Allow participant to join 10 minutes before meeting start time.\n * `15` - Allow participant to join 15 minutes before meeting start time",
            "example": 0,
            "enum": [
              0,
              5,
              10,
              15
            ],
            "x-ballerina-name": "jbhTime"
          },
          "audio_conference_info": {
            "maxLength": 2048,
            "type": "string",
            "description": "Third party audio conference info",
            "example": "test",
            "x-ballerina-name": "audioConferenceInfo"
          },
          "authentication_domains": {
            "type": "string",
            "description": "If user has configured [Sign Into Zoom with Specified Domains](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated",
            "example": "example.com",
            "x-ballerina-name": "authenticationDomains"
          },
          "who_will_receive_summary": {
            "type": "integer",
            "description": "Defines who will receive a summary after this meeting. This field is applicable only when `auto_start_meeting_summary` is set to `true`.\r\n* `1` - Only meeting host.\r\n* `2` - Only meeting host, co-hosts, and alternative hosts.\r\n* `3` - Only meeting host and meeting invitees in our organization.\r\n* `4` - All meeting invitees including those outside of our organization",
            "example": 1,
            "enum": [
              1,
              2,
              3,
              4
            ],
            "x-ballerina-name": "whoWillReceiveSummary"
          },
          "meeting_invitees": {
            "type": "array",
            "description": "A list of the meeting's invitees",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsMeetingInvitees"
            },
            "x-ballerina-name": "meetingInvitees"
          },
          "encryption_type": {
            "type": "string",
            "description": "Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features such cloud recording and phone/SIP/H.323 dial-in, will be **automatically disabled**.   \n\n`enhanced_encryption` - Enhanced encryption. Encryption is stored in the cloud if you enable this option.   \n \n\n`e2ee` - [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the features join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions",
            "example": "enhanced_encryption",
            "enum": [
              "enhanced_encryption",
              "e2ee"
            ],
            "x-ballerina-name": "encryptionType"
          },
          "authentication_option": {
            "type": "string",
            "description": "Meeting authentication option ID",
            "example": "signIn_D8cJuqWVQ623CI4Q8yQK0Q",
            "x-ballerina-name": "authenticationOption"
          },
          "sign_language_interpretation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MeetingsmeetingIdSettingsSignLanguageInterpretation"
              }
            ],
            "x-ballerina-name": "signLanguageInterpretation"
          },
          "disable_participant_video": {
            "type": "boolean",
            "description": "Whether to disable the participant video during a meeting. To enable this feature for your account, [contact Zoom Support](https://support.zoom.us/hc/en-us)",
            "example": false,
            "default": false,
            "x-ballerina-name": "disableParticipantVideo"
          },
          "focus_mode": {
            "type": "boolean",
            "description": "Whether the [**Focus Mode** feature](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode) is enabled when the meeting starts",
            "example": true,
            "x-ballerina-name": "focusMode"
          },
          "registration_type": {
            "type": "integer",
            "description": "Registration type. Used for recurring meeting with fixed time only.\n `1` - Attendees register once and can attend any of the occurrences.  \n `2` - Attendees need to register for each occurrence to attend.  \n `3` - Attendees register once and can choose one or more occurrences to attend",
            "example": 1,
            "default": 1,
            "enum": [
              1,
              2,
              3
            ],
            "x-enum-descriptions": [
              "Attendees register once and can attend any of the occurrences",
              "Attendees need to register for each occurrence to attend",
              "Attendees register once and can choose one or more occurrences to attend"
            ],
            "x-ballerina-name": "registrationType"
          },
          "contact_email": {
            "type": "string",
            "description": "Contact email for registration",
            "example": "jchill@example.com",
            "x-ballerina-name": "contactEmail"
          },
          "waiting_room": {
            "type": "boolean",
            "description": "Enable waiting room",
            "example": false,
            "default": false,
            "x-ballerina-name": "waitingRoom"
          },
          "audio": {
            "type": "string",
            "description": "Determine how participants can join the audio portion of the meeting.  \n `both` - Both Telephony and VoIP.  \n `telephony` - Telephony only.  \n `voip` - VoIP only.  \n `thirdParty` - Third party audio conference",
            "example": "telephony",
            "default": "both",
            "enum": [
              "both",
              "telephony",
              "voip",
              "thirdParty"
            ],
            "x-enum-descriptions": [
              "Both Telephony and VoIP",
              "Telephony only",
              "VoIP only",
              "Third party audio conference"
            ]
          },
          "authentication_name": {
            "type": "string",
            "description": "Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)",
            "example": "Sign in to Zoom",
            "x-ballerina-name": "authenticationName"
          },
          "enforce_login_domains": {
            "type": "string",
            "description": "Only signed in users with specified domains can join meetings.\n\n**This field is deprecated and will not be supported in the future.**    \n   \n As an alternative, use the `meeting_authentication`, `authentication_option`. and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting",
            "example": "example.com",
            "deprecated": true,
            "x-ballerina-name": "enforceLoginDomains"
          },
          "who_can_ask_questions": {
            "type": "integer",
            "description": "Defines who can ask questions about this meeting's transcript. This field is applicable only when `auto_start_ai_companion_questions` is set to `true`.\r\n* `1` - All participants and invitees.\r\n* `2` - All participants only from when they join.\r\n* `3` - Only meeting host.\r\n* `4` - Participants and invitees in our organization.\r\n* `5` - Participants in our organization only from when they join",
            "example": 1,
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "x-ballerina-name": "whoCanAskQuestions"
          },
          "contact_name": {
            "type": "string",
            "description": "Contact name for registration",
            "example": "Jill Chill",
            "x-ballerina-name": "contactName"
          },
          "cn_meeting": {
            "type": "boolean",
            "description": "Host the meeting in China",
            "example": false,
            "deprecated": true,
            "default": false,
            "x-ballerina-name": "cnMeeting"
          },
          "registrants_email_notification": {
            "type": "boolean",
            "description": "Whether to send registrants email notifications about their registration approval, cancellation, or rejection.\n\n* `true` - Send an email notification.\n* `false` - Do not send an email notification.\n\n Set this value to `true` to also use the `registrants_confirmation_email` parameter",
            "example": true,
            "x-ballerina-name": "registrantsEmailNotification"
          },
          "alternative_hosts_email_notification": {
            "type": "boolean",
            "description": "Flag to determine whether to send email notifications to alternative hosts, default value is true",
            "example": true,
            "default": true,
            "x-ballerina-name": "alternativeHostsEmailNotification"
          },
          "use_pmi": {
            "type": "boolean",
            "description": "Use a [personal meeting ID (PMI)](/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi). Only used for scheduled meetings and recurring meetings with no fixed time",
            "example": false,
            "default": false,
            "x-ballerina-name": "usePmi"
          },
          "resources": {
            "type": "array",
            "description": "The meeting's resources",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsResources"
            }
          },
          "auto_recording": {
            "type": "string",
            "description": "Automatic recording. \n `local` - Record on local.  \n `cloud` -  Record on cloud.  \n `none` - Disabled",
            "example": "cloud",
            "default": "none",
            "enum": [
              "local",
              "cloud",
              "none"
            ],
            "x-enum-descriptions": [
              "Record to local device",
              "Record to cloud",
              "No Recording"
            ],
            "x-ballerina-name": "autoRecording"
          },
          "host_video": {
            "type": "boolean",
            "description": "Start video when the host joins the meeting",
            "example": true,
            "x-ballerina-name": "hostVideo"
          },
          "language_interpretation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MeetingsmeetingIdSettingsLanguageInterpretation"
              }
            ],
            "x-ballerina-name": "languageInterpretation"
          },
          "enforce_login": {
            "type": "boolean",
            "description": "Only signed in users can join this meeting.\n\n**This field is deprecated and will not be supported in the future.**    \n   \n As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting",
            "example": true,
            "deprecated": true,
            "x-ballerina-name": "enforceLogin"
          },
          "auto_start_meeting_summary": {
            "type": "boolean",
            "description": "Whether to automatically start meeting summary",
            "example": false,
            "default": false,
            "x-ballerina-name": "autoStartMeetingSummary"
          },
          "auto_start_ai_companion_questions": {
            "type": "boolean",
            "description": "Whether to automatically start AI Companion questions",
            "example": false,
            "default": false,
            "x-ballerina-name": "autoStartAiCompanionQuestions"
          },
          "participant_focused_meeting": {
            "type": "boolean",
            "description": "Whether to set the meeting as a participant focused meeting",
            "example": false,
            "default": false,
            "x-ballerina-name": "participantFocusedMeeting"
          },
          "private_meeting": {
            "type": "boolean",
            "description": "Whether the meeting is set as private",
            "example": false,
            "x-ballerina-name": "privateMeeting"
          },
          "email_in_attendee_report": {
            "type": "boolean",
            "description": "Whether to include authenticated guest's email addresses in meetings' attendee reports",
            "example": true,
            "x-ballerina-name": "emailInAttendeeReport"
          },
          "email_notification": {
            "type": "boolean",
            "description": "Whether to send email notifications to [alternative hosts](https://support.zoom.us/hc/en-us/articles/208220166) and [users with scheduling privileges](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-privilege). This value defaults to `true`",
            "example": true,
            "default": true,
            "x-ballerina-name": "emailNotification"
          }
        },
        "description": "Meeting settings"
      },
      "WebinarRegistrantQuestions1": {
        "title": "Webinar Registrant Questions",
        "type": "object",
        "properties": {
          "custom_questions": {
            "type": "array",
            "description": "Array of Registrant Custom Questions",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20071CustomQuestions"
            },
            "x-ballerina-name": "customQuestions"
          },
          "questions": {
            "type": "array",
            "description": "Array of registration fields whose values should be provided by registrants during registration",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20071Questions"
            }
          }
        },
        "description": "Webinar Registrant Questions"
      },
      "InlineResponse20060Questions": {
        "type": "object",
        "properties": {
          "question_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20060QuestionDetails"
            },
            "x-ballerina-name": "questionDetails"
          },
          "name": {
            "type": "string",
            "description": "Name of the user. If `anonymous` option is enabled for the Q&amp;A, the participant's information will be kept anonymous and the value of `name` field will be `Anonymous Attendee`",
            "example": "Jill Chill"
          },
          "email": {
            "type": "string",
            "description": "Email address of the user. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details",
            "example": "jchill@example.com"
          }
        }
      },
      "InlineResponse20019": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse20019AllOf1"
          },
          {
            "$ref": "#/components/schemas/MeetingAndWebinarPollingObject7"
          }
        ]
      },
      "InlineResponse2003InlineResponse2003AllOf12": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "The cloud recording's password.\nInclude fields in the response. The password field requires the user role of the authorized account to enable the `View Recording Content` permission",
            "example": "981651"
          },
          "recording_play_passcode": {
            "type": "string",
            "description": "The cloud recording's passcode to be used in the URL. Directly splice this recording's passcode in `play_url` or `share_url` with `?pwd=` to access and play. Example: 'https://zoom.us/rec/share/**************?pwd=yNYIS408EJygs7rE5vVsJwXIz4-VW7MH'",
            "example": "yNYIS408EJygs7rE5vVsJwXIz4-VW7MH",
            "x-ballerina-name": "recordingPlayPasscode"
          },
          "download_access_token": {
            "type": "string",
            "description": "The JWT token to download the meeting's recording. This response only returns if the `download_access_token` is included in the `include_fields` query parameter",
            "example": "abJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJodHRwczovL2V2ZW50Lnpvb20udXMiLCJhY2NvdW50SWQiOiJNdDZzdjR1MFRBeVBrd2dzTDJseGlBIiwiYXVkIjoiaHR0cHM6Ly9vYXV0aC56b29tLnVzIiwibWlkIjoieFp3SEc0c3BRU2VuekdZWG16dnpiUT09IiwiZXhwIjoxNjI2MTM5NTA3LCJ1c2VySWQiOiJEWUhyZHBqclMzdWFPZjdkUGtrZzh3In0.a6KetiC6BlkDhf1dP4KBGUE1bb2brMeraoD45yhFx0eSSSTFdkHQnsKmlJQ-hdo9Zy-4vQw3rOxlyoHv583JyZ",
            "x-ballerina-name": "downloadAccessToken"
          }
        }
      },
      "WebinarIdBatchRegistrantsBody": {
        "type": "object",
        "properties": {
          "registrants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebinarswebinarIdbatchRegistrantsRegistrants"
            }
          },
          "auto_approve": {
            "type": "boolean",
            "description": "If a meeting was scheduled with approval_type `1` (manual approval), but you want to automatically approve registrants added via this API, set the value of this field to `true`. \n\nYou **cannot** use this field to change approval setting for a meeting that was originally scheduled with approval_type `0` (automatic approval)",
            "example": true,
            "x-ballerina-name": "autoApprove"
          }
        }
      },
      "InlineResponse20056DialInNumbers": {
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "Dial-in number. Length is less than 16",
            "example": "+1 1000200200"
          },
          "code": {
            "maxLength": 6,
            "type": "string",
            "description": "Country code",
            "example": "1"
          },
          "country_label": {
            "maxLength": 10,
            "type": "string",
            "description": "Country label, if passed, will display in place of code",
            "example": "America",
            "x-ballerina-name": "countryLabel"
          },
          "type": {
            "type": "string",
            "description": "Dial-in number types. \n `toll` - Toll number.  \n `tollfree` - Toll free number.  \n \n`media_link` - Media link",
            "example": "toll",
            "enum": [
              "toll",
              "tollfree",
              "media_link"
            ],
            "x-enum-descriptions": [
              "Toll number <br/>",
              "Toll free number <br/>",
              "Media link phone number <br/>"
            ]
          }
        }
      },
      "UsersuserIdmeetingsSettingsContinuousMeetingChat": {
        "type": "object",
        "properties": {
          "auto_add_meeting_participants": {
            "type": "boolean",
            "description": "Whether to enable the **Automatically add meeting participants** setting",
            "example": true,
            "deprecated": true,
            "x-ballerina-name": "autoAddMeetingParticipants"
          },
          "enable": {
            "type": "boolean",
            "description": "Whether to enable the **Enable continuous meeting chat** setting. The default value is based on user settings. When the **Enable continuous meeting chat** setting is enabled, the default value is true. When the setting is disabled, the default value is false",
            "example": true
          },
          "auto_add_invited_external_users": {
            "type": "boolean",
            "description": "Whether to enable the **Automatically add invited external users** setting",
            "example": true,
            "deprecated": true,
            "x-ballerina-name": "autoAddInvitedExternalUsers"
          },
          "who_is_added": {
            "type": "string",
            "description": "Who is added to the continuous meeting chat. Invitees are users added during scheduling. Participants are users who join the meeting.\r\n* `all_users` - For all users, including external invitees and meeting participants.\r\n* `org_invitees_and_participants` - Only for meeting invitees and participants in your organization.\r\n* `org_invitees` - Only for meeting invitees in your organization",
            "example": "all_users",
            "enum": [
              "all_users",
              "org_invitees_and_participants",
              "org_invitees"
            ],
            "x-ballerina-name": "whoIsAdded"
          }
        },
        "description": "Information about the **Enable continuous meeting chat** feature"
      },
      "InlineResponse2008Groups": {
        "type": "object",
        "properties": {
          "zdm_group_id": {
            "type": "string",
            "description": "The ZDM group's unique ID",
            "example": "ff49588c-92c4-4406-99e6-1942d8a61a7b",
            "x-ballerina-name": "zdmGroupId"
          },
          "name": {
            "type": "string",
            "description": "The ZDM group's name",
            "example": "HeFei-group"
          },
          "description": {
            "type": "string",
            "description": "The ZDM group's describe",
            "example": "Group in Hefei region"
          }
        }
      },
      "MeetingIdPollsBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TheMeetingAndWebinarPollingObject"
          }
        ]
      },
      "MeetingId1MeetingId1OneOf12": {
        "type": "string",
        "example": "4444AAAiAAAAAiAiAiiAii=="
      },
      "LiveMeetingsmeetingIdeventsParamsSipHeadersAdditionalHeaders": {
        "type": "object",
        "properties": {
          "value": {
            "maxLength": 256,
            "type": "string",
            "description": "Additional custom SIP header's value",
            "example": "X-body1"
          },
          "key": {
            "maxLength": 32,
            "type": "string",
            "description": "Additional custom SIP header's key",
            "example": "X-Header1"
          }
        }
      },
      "InlineResponse20052SurveyAnswers": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The participant's display name. **Allow participants to answer questions anonymously** setting is enabled for a [survey](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0057559), the participant's survey information is kept anonymous and the `name` field will return the &quot;Anonymous Attendee&quot; value",
            "example": "Jill Chill"
          },
          "last_name": {
            "type": "string",
            "description": "The participant's last name. If the **Allow participants to answer questions anonymously** setting is enabled for a [survey](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0057559), the participant's survey information is kept anonymous and the `last_name` field will return the &quot;Anonymous Attendee&quot; value",
            "example": "Chill",
            "x-ballerina-name": "lastName"
          },
          "first_name": {
            "type": "string",
            "description": "The participant's first name. If the **Allow participants to answer questions anonymously** setting is enabled for a [survey](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0057559), the participant's survey information is kept anonymous and the `first_name` field will return the &quot;Anonymous Attendee&quot; value",
            "example": "Jill",
            "x-ballerina-name": "firstName"
          },
          "email": {
            "type": "string",
            "description": "The participant's email address",
            "format": "email",
            "example": "jchill@example.com"
          },
          "answer_details": {
            "type": "array",
            "description": "Information about the user's questions and answers",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20052AnswerDetails"
            },
            "x-ballerina-name": "answerDetails"
          }
        }
      },
      "WebinarswebinarIdsurveyCustomSurveyQuestions": {
        "type": "object",
        "properties": {
          "rating_min_label": {
            "maxLength": 50,
            "type": "string",
            "description": "The low score label used for the `rating_min_value` field, up to 50 characters. \n\n This field only applies to the `rating_scale` survey",
            "example": "Not likely",
            "x-ballerina-name": "ratingMinLabel"
          },
          "answer_required": {
            "type": "boolean",
            "description": "Whether participants must answer the question. \n* `true` - The participant must answer the question. \n* `false` - The participant does not need to answer the question. \n\n This value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "answerRequired"
          },
          "answer_min_character": {
            "minimum": 1,
            "type": "integer",
            "description": "The allowed minimum number of characters. This field only applies to `short_answer` and `long_answer` questions. You must provide at least a **one** character minimum value",
            "example": 1,
            "x-ballerina-name": "answerMinCharacter"
          },
          "rating_min_value": {
            "minimum": 0,
            "type": "integer",
            "description": "The rating scale's minimum value. This value can't be less than zero. \n\n This field only applies to the `rating_scale` survey",
            "example": 1,
            "x-ballerina-name": "ratingMinValue"
          },
          "name": {
            "type": "string",
            "description": "The survey question, up to 420 characters",
            "example": "How useful was this webinar?"
          },
          "answers": {
            "minItems": 2,
            "type": "array",
            "description": "The survey question's available answers. This field requires a **minimum** of two answers. \n\n* For `single` and `multiple` questions, you can only provide a maximum of 50 answers. \n* For `matching` polls, you can only provide a maximum of 16 answers. \n* For `rank_order` polls, you can only provide a maximum of seven answers",
            "items": {
              "maxLength": 200,
              "type": "string",
              "example": "Extremely useful"
            }
          },
          "type": {
            "type": "string",
            "description": "The survey's question and answer type. \n* `single` - Single choice. \n* `multiple` - Multiple choice. \n* `matching` - Matching. \n* `rank_order` - Rank order \n* `short_answer` - Short answer \n* `long_answer` - Long answer. \n* `fill_in_the_blank` - Fill in the blank \n* `rating_scale` - Rating scale",
            "example": "single",
            "enum": [
              "single",
              "multiple",
              "matching",
              "rank_order",
              "short_answer",
              "long_answer",
              "fill_in_the_blank",
              "rating_scale"
            ],
            "x-enum-descriptions": [
              "Single choice",
              "Multiple choice",
              "Matching",
              "Rank order",
              "Short answer",
              "Long answer",
              "Fill in the blank",
              "Rating scale"
            ]
          },
          "rating_max_label": {
            "maxLength": 50,
            "type": "string",
            "description": "The high score label used for the `rating_max_value` field, up to 50 characters. \n\n This field only applies to the `rating_scale` survey",
            "example": "Extremely Likely",
            "x-ballerina-name": "ratingMaxLabel"
          },
          "answer_max_character": {
            "type": "integer",
            "description": "The allowed maximum number of characters. This field only applies to `short_answer` and `long_answer` questions. \n* For `short_answer` question, a maximum of 500 characters. \n* For `long_answer` question, a maximum of 2,000 characters",
            "example": 200,
            "x-ballerina-name": "answerMaxCharacter"
          },
          "rating_max_value": {
            "maximum": 10,
            "type": "integer",
            "description": "The rating scale's maximum value, up to a maximum value of 10. \n\n This field only applies to the `rating_scale` survey",
            "example": 4,
            "x-ballerina-name": "ratingMaxValue"
          },
          "show_as_dropdown": {
            "type": "boolean",
            "description": "Whether to display the radio selection as a drop-down box. \n* `true` - Show as a drop-down box. \n* `false` - Do not show as a drop-down box. \n\n This value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "showAsDropdown"
          },
          "prompts": {
            "maxItems": 10,
            "minItems": 2,
            "type": "array",
            "description": "Information about the prompt questions. This field only applies to `matching` and `rank_order` questions. You **must** provide a minimum of two prompts, up to a maximum of 10 prompts",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdsurveyCustomSurveyPrompts"
            }
          }
        }
      },
      "InlineResponse20021": {
        "type": "object",
        "properties": {
          "participant_identifier_code": {
            "type": "string",
            "description": "This value identifies the meeting participant. It is automatically embedded in the SIP URI if the API caller has a CRC (Conference Room Connector) plan",
            "example": "30qonrvgy",
            "x-ballerina-name": "participantIdentifierCode"
          },
          "paid_crc_plan_participant": {
            "type": "boolean",
            "description": "Whether the API caller has a CRC (Conference Room Connector) plan",
            "example": true,
            "x-ballerina-name": "paidCrcPlanParticipant"
          },
          "sip_dialing": {
            "type": "string",
            "description": "The meeting's encoded SIP URI",
            "example": "9678722567.xxxx....30qonrvgy@zoomcrc.com",
            "x-ballerina-name": "sipDialing"
          },
          "expire_in": {
            "type": "integer",
            "description": "The number of seconds the encoded SIP URI is valid before it expires",
            "format": "int64",
            "example": 7200,
            "x-ballerina-name": "expireIn"
          }
        },
        "description": "Information about the meeting's encoded SIP URI"
      },
      "InlineResponse20020": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeetingRegistrantQuestions1"
          }
        ]
      },
      "InlineResponse20023": {
        "type": "object",
        "properties": {
          "user_email": {
            "type": "string",
            "description": "The user's email address",
            "format": "email",
            "example": "jchill@example.com",
            "x-ballerina-name": "userEmail"
          },
          "participants_count": {
            "type": "integer",
            "description": "The number of meeting participants",
            "example": 2,
            "x-ballerina-name": "participantsCount"
          },
          "total_minutes": {
            "type": "integer",
            "description": "The total number of minutes attended by the meeting's host and participants",
            "example": 55,
            "x-ballerina-name": "totalMinutes"
          },
          "user_name": {
            "type": "string",
            "description": "The user's display name",
            "example": "Jill Chill",
            "x-ballerina-name": "userName"
          },
          "end_time": {
            "type": "string",
            "description": "The meeting's end date and time",
            "format": "date-time",
            "example": "2021-07-13T23:00:51Z",
            "x-ballerina-name": "endTime"
          },
          "dept": {
            "type": "string",
            "description": "The meeting host's department",
            "example": "Developers"
          },
          "source": {
            "type": "string",
            "description": "Whether the meeting was created directly through Zoom or via an API request: \n* If the meeting was created via an OAuth app, this field returns the OAuth app's name. \n* If the meeting was created via JWT or the Zoom Web Portal, this returns the `Zoom` value",
            "example": "Zoom"
          },
          "type": {
            "type": "integer",
            "description": "The meeting type. \n* `0` - A prescheduled meeting. \n* `1` - An instant meeting. \n* `2` - A scheduled meeting. \n* `3` - A recurring meeting with no fixed time. \n* `4` - A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* `7` - A [PAC (personal audio conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* `8` - A recurring meeting with a fixed time",
            "example": 1,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              7,
              8
            ]
          },
          "uuid": {
            "type": "string",
            "description": "The meeting's UUID. You must [double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) this value if the meeting UUID begins with a `/` character or contains the `//` character",
            "example": "4444AAAiAAAAAiAiAiiAii=="
          },
          "host_id": {
            "type": "string",
            "description": "The host's ID",
            "example": "x1yCzABCDEfg23HiJKl4mN",
            "x-ballerina-name": "hostId"
          },
          "duration": {
            "type": "integer",
            "description": "The meeting's duration, in minutes",
            "example": 60
          },
          "start_time": {
            "type": "string",
            "description": "The meeting's start date and time",
            "format": "date-time",
            "example": "2021-07-13T21:44:51Z",
            "x-ballerina-name": "startTime"
          },
          "topic": {
            "type": "string",
            "description": "The meeting's topic",
            "example": "My Meeting"
          },
          "id": {
            "type": "integer",
            "description": "The [meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID)",
            "format": "int64",
            "example": 5638296721
          }
        }
      },
      "InlineResponse20022": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "The generated meeting token",
            "example": "https://example.com/closedcaption?id=200610693&ns=GZHkEA==&expire=86400&spparams=id%2Cns%2Cexpire&signature=nYtXJqRKCW"
          }
        },
        "description": "Information about the meeting token"
      },
      "InlineResponse20054Phones": {
        "type": "object",
        "properties": {
          "server": {
            "$ref": "#/components/schemas/SipPhonesphonesServer"
          },
          "password": {
            "type": "string",
            "description": "The password generated for the user in the SIP account\n",
            "example": "apassword1"
          },
          "user_email": {
            "type": "string",
            "description": "The email address of the user to associate with the SIP Phone. Can add `.pc`, `.mobile`, `.pad` at the end of the email (for example, `user@example.com.pc`) to add accounts for different platforms for the same user",
            "format": "email",
            "example": "jchill@example.com",
            "x-ballerina-name": "userEmail"
          },
          "server_3": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipPhonesphonesServer"
              }
            ],
            "x-ballerina-name": "server3"
          },
          "voice_mail": {
            "type": "string",
            "description": "The number to dial for checking voicemail",
            "example": "4000",
            "x-ballerina-name": "voiceMail"
          },
          "server_2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipPhonesphonesServer"
              }
            ],
            "x-ballerina-name": "server2"
          },
          "user_name": {
            "type": "string",
            "description": "The phone number associated with the user in the SIP account. ",
            "example": "Jill Chill",
            "x-ballerina-name": "userName"
          },
          "domain": {
            "type": "string",
            "description": "The name or IP address of your provider's SIP domain",
            "example": "example.com"
          },
          "display_number": {
            "maxLength": 64,
            "type": "string",
            "description": "The displayed phone number associated with the user can be either in extension format or E.164 format. You can specify the displayed number when the dialable number differs from the SIP username",
            "example": "5551110105",
            "x-ballerina-name": "displayNumber"
          },
          "authorization_name": {
            "type": "string",
            "description": "The authorization name of the user that is registered for SIP phone",
            "example": "testname",
            "x-ballerina-name": "authorizationName"
          },
          "phone_id": {
            "type": "string",
            "description": "The SIP phone ID",
            "example": "123456",
            "x-ballerina-name": "phoneId"
          },
          "registration_expire_time": {
            "type": "integer",
            "description": "The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server. ",
            "example": 60,
            "x-ballerina-name": "registrationExpireTime"
          }
        }
      },
      "InlineResponse20025": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "string",
            "description": "The start time of the meeting",
            "format": "date-time",
            "example": "2022-03-26T05:37:59Z",
            "x-ballerina-name": "startTime"
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20025Questions"
            }
          },
          "id": {
            "type": "integer",
            "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in **long** format(represented as int64 data type in JSON), also known as the meeting number",
            "format": "int64",
            "example": 93398114182
          },
          "uuid": {
            "type": "string",
            "description": "Meeting UUID",
            "example": "Vg8IdgluR5WDeWIkpJlElQ=="
          }
        }
      },
      "InlineResponse20024": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse20024AllOf1"
          },
          {
            "$ref": "#/components/schemas/InlineResponse20024InlineResponse20024AllOf12"
          }
        ]
      },
      "InlineResponse20027": {
        "type": "object",
        "properties": {
          "templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20027Templates"
            }
          },
          "total_records": {
            "type": "integer",
            "description": "Total records found for this request",
            "example": 1,
            "x-ballerina-name": "totalRecords"
          }
        }
      },
      "InlineResponse20026": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "string",
            "description": "The meeting's start time",
            "format": "date-time",
            "example": "2022-03-26T06:44:14Z",
            "x-ballerina-name": "startTime"
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20026Questions"
            }
          },
          "id": {
            "type": "integer",
            "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in **long** format, represented as int64 data type in JSON, also known as the meeting number",
            "format": "int64",
            "example": 95204914252
          },
          "uuid": {
            "type": "string",
            "description": "Meeting UUID",
            "example": "Bznyg8KZTdCVbQxvS/oZ7w=="
          }
        }
      },
      "InlineResponse20029": {
        "type": "object",
        "properties": {
          "total_records": {
            "type": "integer",
            "description": "The total number of all records available across all pages",
            "example": 1,
            "x-ballerina-name": "totalRecords"
          },
          "meetings": {
            "type": "array",
            "description": "List of upcoming meeting objects",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20029Meetings"
            }
          }
        }
      },
      "MeetingsmeetingIdSettingsLanguageInterpretationInterpreters": {
        "type": "object",
        "properties": {
          "languages": {
            "type": "string",
            "description": "A comma-separated list of the interpreter's languages. The string must contain exactly two country IDs.\n\nOnly system-supported languages are allowed: `US` (English), `CN` (Chinese), `JP` (Japanese), `DE` (German), `FR` (French), `RU` (Russian), `PT` (Portuguese), `ES` (Spanish), and `KR` (Korean).\n\nFor example, to set an interpreter translating from English to Chinese, use `US,CN`",
            "example": "US,FR",
            "deprecated": true
          },
          "interpreter_languages": {
            "type": "string",
            "description": "A comma-separated list of the interpreter's languages. The string must contain exactly two languages.\n\nTo get this value, use the `language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](/docs/api/users/#tag/users/GET/users/{userId}/settings) API response.\n\n**languages**: System-supported languages include `English`, `Chinese`, `Japanese`, `German`, `French`, `Russian`, `Portuguese`, `Spanish`, and `Korean`.\n\n**custom_languages**: User-defined languages added by the user.\n\nFor example, an interpreter translating between English and French should use `English,French`",
            "example": "English,French",
            "x-ballerina-name": "interpreterLanguages"
          },
          "email": {
            "type": "string",
            "description": "The interpreter's email address",
            "format": "email",
            "example": "interpreter@example.com"
          }
        }
      },
      "InlineResponse20013SettingsApprovedOrDeniedCountriesOrRegions": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "description": "Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting.   \n   \n \n`approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.  \n   \n \n`deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`",
            "example": "approve",
            "enum": [
              "approve",
              "deny"
            ]
          },
          "enable": {
            "type": "boolean",
            "description": "`true` - Setting enabled to either allow users or block users from specific regions to join your meetings.   \n \n\n`false` - Setting disabled",
            "example": true
          },
          "approved_list": {
            "type": "array",
            "description": "List of countries/regions from where participants can join this meeting. ",
            "items": {
              "type": "string",
              "example": "CX"
            },
            "x-ballerina-name": "approvedList"
          },
          "denied_list": {
            "type": "array",
            "description": "List of countries or regions from where participants can not join this meeting. ",
            "items": {
              "type": "string",
              "example": "CA"
            },
            "x-ballerina-name": "deniedList"
          }
        },
        "description": "Approve or block users from specific regions/countries from joining this meeting. \n"
      },
      "InlineResponse20028": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse20028AllOf1"
          },
          {
            "$ref": "#/components/schemas/InlineResponse20028InlineResponse20028AllOf12"
          }
        ]
      },
      "InlineResponse200Meetings": {
        "required": [
          "account_name",
          "archive_files",
          "complete_time",
          "duration",
          "duration_in_second",
          "host_id",
          "id",
          "is_breakout_room",
          "meeting_type",
          "recording_count",
          "start_time",
          "status",
          "timezone",
          "topic",
          "total_size",
          "type",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "physical_files": {
            "type": "array",
            "description": "Information about the physical files",
            "items": {
              "$ref": "#/components/schemas/InlineResponse200PhysicalFiles"
            },
            "x-ballerina-name": "physicalFiles"
          },
          "timezone": {
            "type": "string",
            "description": "The meeting or webinar's [timezone](/docs/api/references/abbreviations/#timezones)",
            "example": "Asia/Shanghai"
          },
          "total_size": {
            "type": "integer",
            "description": "The total size of the archive file, in bytes",
            "example": 364463,
            "x-ballerina-name": "totalSize"
          },
          "meeting_type": {
            "type": "string",
            "description": "Whether the meeting or webinar is internal or external. \n* `internal` - An internal meeting or webinar. \n* `external` - An external meeting or webinar. \n\n The `id`, `host_id`, and `topic` PII (Personal Identifiable Information) values in this response are removed when this value is `external`",
            "example": "internal",
            "enum": [
              "internal",
              "external"
            ],
            "x-ballerina-name": "meetingType"
          },
          "recording_count": {
            "type": "integer",
            "description": "The number of archived files returned in the API call response",
            "example": 2,
            "x-ballerina-name": "recordingCount"
          },
          "is_breakout_room": {
            "type": "boolean",
            "description": "Whether the room is a [breakout room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms)",
            "example": false,
            "x-ballerina-name": "isBreakoutRoom"
          },
          "type": {
            "type": "integer",
            "description": "The type of archived meeting or webinar. \n\n Meeting recordings use these archive types. \n* `1` - Instant meeting. \n* `2` - Scheduled meeting. \n* `3` - A recurring meeting with no fixed time. \n* `4` - A meeting created via PMI (Personal Meeting ID). \n* `7` - A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). \n* `8` - Recurring meeting with a fixed time. \n\n Webinar recordings use these archive types. \n* `5` - A webinar. \n* `6` - A recurring webinar without a fixed time. \n* `9` - A recurring webinar with a fixed time. \n\n If the recording is **not** from a meeting or webinar: \n\n* `100` - A [breakout room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms)",
            "example": 1,
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              100
            ]
          },
          "uuid": {
            "type": "string",
            "description": "The recorded meeting or webinar instance's universally unique identifier (UUID). Each meeting or webinar instance generates a UUID",
            "example": "yO3dfhh3t467UkQ=="
          },
          "host_id": {
            "type": "string",
            "description": "The ID of the user set as the host of the archived meeting or webinar",
            "example": "Dhjdfgdkg8w",
            "x-ballerina-name": "hostId"
          },
          "duration": {
            "type": "integer",
            "description": "The meeting or webinar's scheduled duration",
            "example": 1
          },
          "start_time": {
            "type": "string",
            "description": "The meeting or webinar's start time",
            "format": "date-time",
            "example": "2021-04-26T05:23:18Z",
            "x-ballerina-name": "startTime"
          },
          "complete_time": {
            "type": "string",
            "description": "The meeting or webinar's archive completion time",
            "format": "date-time",
            "example": "2021-03-12T02:57:27Z",
            "anyOf": [
              {
                "minLength": 1,
                "type": "object",
                "description": "The archive completion time.",
                "format": "date-time",
                "example": "2021-03-12T02:12:27Z"
              },
              {
                "type": "string",
                "description": "An empty string.",
                "enum": [
                  ""
                ]
              }
            ],
            "x-ballerina-name": "completeTime"
          },
          "group_id": {
            "type": "string",
            "description": "Primary group IDs of participants who belong to your account. Each group ID is separated by a comma",
            "example": "pvFIYKSDTum9iCDOOtQL4w,_FsqLyI0RlO6LVPeUVWi8g",
            "x-ballerina-name": "groupId"
          },
          "account_name": {
            "type": "string",
            "description": "The user's account name",
            "example": "account_01",
            "x-ballerina-name": "accountName"
          },
          "topic": {
            "type": "string",
            "description": "The meeting or webinar topic",
            "example": "My Personal Meeting Room"
          },
          "id": {
            "type": "integer",
            "description": "The meeting or webinar ID, either `meetingId` or `webinarId`",
            "format": "int64",
            "example": 553068284
          },
          "parent_meeting_id": {
            "type": "string",
            "description": "The parent meeting's universally unique ID (UUID). Each meeting or webinar instance generates a UUID. If the `is_breakout_room` value is `true`, the API returns this value",
            "example": "atsXxhSEQWit9t+U02HXNQ==",
            "x-ballerina-name": "parentMeetingId"
          },
          "duration_in_second": {
            "type": "integer",
            "description": "The meeting or webinar's duration, in seconds",
            "example": 1800,
            "x-ballerina-name": "durationInSecond"
          },
          "archive_files": {
            "type": "array",
            "description": "Information about the archive files",
            "items": {
              "$ref": "#/components/schemas/InlineResponse200ArchiveFiles"
            },
            "x-ballerina-name": "archiveFiles"
          },
          "status": {
            "type": "string",
            "description": "The archive's processing status. \n* `completed` - The archive's processing is complete. \n* `processing` - The archive is processing",
            "example": "completed",
            "enum": [
              "completed",
              "processing"
            ]
          }
        }
      },
      "RtmsAppStatusBody": {
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/LiveMeetingsmeetingIdrtmsAppstatusSettings"
          },
          "action": {
            "type": "string",
            "description": "The participant's RTMS app status.\n* `start` - Start an RTMS.\n* `stop` - Stop an ongoing RTMS",
            "example": "start",
            "enum": [
              "start",
              "stop"
            ]
          }
        },
        "description": "The participant's RTMS app status"
      },
      "WebinarswebinarIdSettingsQuestionAndAnswer": {
        "type": "object",
        "properties": {
          "allow_auto_reply": {
            "type": "boolean",
            "description": "If simulive webinar, \n\n* `true` - allow auto-reply to attendees. \n\n* `false` - don't allow auto-reply to the attendees",
            "example": true,
            "x-ballerina-name": "allowAutoReply"
          },
          "allow_anonymous_questions": {
            "type": "boolean",
            "description": "* `true` - Allow participants to send questions without providing their name to the host, co-host, and panelists..\n\n* `false` - Do not allow anonymous questions",
            "example": true,
            "x-ballerina-name": "allowAnonymousQuestions"
          },
          "answer_questions": {
            "type": "string",
            "description": "Indicate whether you want attendees to be able to view answered questions only or view all questions.\n\n* `only` - Attendees are able to view answered questions only.\n\n*  `all` - Attendees are able to view all questions submitted in the Q&amp;A",
            "example": "all",
            "enum": [
              "only",
              "all"
            ],
            "x-ballerina-name": "answerQuestions"
          },
          "enable": {
            "type": "boolean",
            "description": "* `true` - Enable [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.\n\n* `false` - Disable Q&amp;A for webinar",
            "example": true
          },
          "allow_submit_questions": {
            "type": "boolean",
            "description": "* `true` - Allow participants to submit questions.\n\n* `false` - Do not allow submit questions",
            "example": true,
            "x-ballerina-name": "allowSubmitQuestions"
          },
          "attendees_can_comment": {
            "type": "boolean",
            "description": "* `true` - Attendees can answer questions or leave a comment in the question thread.\n\n* `false` - Attendees can't answer questions or leave a comment in the question thread",
            "example": true,
            "x-ballerina-name": "attendeesCanComment"
          },
          "auto_reply_text": {
            "type": "string",
            "description": "If `allow_auto_reply` = true, the text to be included in the automatic response. ",
            "example": "Thank you for your question. We will get back to you shortly.",
            "x-ballerina-name": "autoReplyText"
          },
          "attendees_can_upvote": {
            "type": "boolean",
            "description": "* `true` - Attendees can click the thumbs up button to bring popular questions to the top of the Q&amp;A window.\n\n* `false` - Attendees can't click the thumbs up button on questions",
            "example": true,
            "x-ballerina-name": "attendeesCanUpvote"
          }
        },
        "description": "[Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar"
      },
      "InlineResponse2006AllOf1": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "The start date",
            "format": "date",
            "example": "2022-01-01"
          },
          "to": {
            "type": "string",
            "description": "The end date",
            "format": "date",
            "example": "2022-04-01"
          }
        },
        "description": "DateTime Object"
      },
      "InlineResponse2018Occurrences": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "integer",
            "description": "Duration",
            "example": 60
          },
          "start_time": {
            "type": "string",
            "description": "Start time",
            "format": "date-time",
            "example": "2022-03-25T07:46:00Z",
            "x-ballerina-name": "startTime"
          },
          "occurrence_id": {
            "type": "string",
            "description": "Occurrence ID. The unique identifier for an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences",
            "example": "1648194360000",
            "x-ballerina-name": "occurrenceId"
          },
          "status": {
            "type": "string",
            "description": "Occurrence status. \n `available` - Available occurrence.  \n `deleted` -  Deleted occurrence",
            "example": "available",
            "enum": [
              "available",
              "deleted"
            ]
          }
        },
        "description": "Occurrence object. This object is only returned for recurring webinars"
      },
      "InlineResponse20064Wallpaper": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The wallpaper's file ID",
            "example": "zazQjwDuQkS3Q2EprNd7jQ"
          }
        },
        "description": "Information about the webinar's [wallpaper] file"
      },
      "RegistrantsRegistrantsRegistrantsAllOf1223": {
        "type": "object",
        "properties": {
          "join_url": {
            "type": "string",
            "description": "The URL that an approved registrant can use to join the meeting or webinar",
            "format": "string",
            "example": "https://example.com/j/11111",
            "x-ballerina-name": "joinUrl"
          },
          "create_time": {
            "type": "string",
            "description": "The time when the registrant registered",
            "format": "date-time",
            "example": "2022-03-22T05:59:09Z",
            "x-ballerina-name": "createTime"
          },
          "status": {
            "type": "string",
            "description": "The status of the registrant's registration.   \n  `approved` - User has been successfully approved for the webinar.  \n  `pending` -  The registration is still pending.  \n  `denied` - User has been denied from joining the webinar",
            "example": "approved"
          }
        }
      },
      "MeetingsAllOf12": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "string",
            "description": "Start time",
            "format": "date-time",
            "example": "2022-03-26T05:37:59Z",
            "x-ballerina-name": "startTime"
          },
          "uuid": {
            "type": "string",
            "description": "Meeting UUID. Unique meeting ID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). [Double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.\n\n",
            "example": "Vg8IdgluR5WDeWIkpJlElQ=="
          }
        }
      },
      "MeetingsAllOf11": {
        "description": "The recording meeting object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "recording_play_passcode": {
                "type": "string",
                "description": "The cloud recording's passcode to be used in the URL. \nInclude fields in the response. The password field requires the user role of the authorized account to enable the **View Recording Content** permission to be returned.\nThis recording's passcode can be directly spliced in `play_url` or `share_url` with `?pwd=` to access and play. For example, 'https://zoom.us/rec/share/**************?pwd=yNYIS408EJygs7rE5vVsJwXIz4-VW7MH'. If you want to use this field, please contact Zoom support",
                "example": "yNYIS408EJygs7rE5vVsJwXIz4-VW7MH",
                "x-ballerina-name": "recordingPlayPasscode"
              },
              "total_size": {
                "type": "integer",
                "description": "The total file size of the recording. This includes the `recording_files` and `participant_audio_files` files",
                "format": "int64",
                "example": 22,
                "x-ballerina-name": "totalSize"
              },
              "auto_delete": {
                "type": "boolean",
                "description": "Auto-delete status of a meeting's [cloud recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).  \n\nPrerequisite: To get the auto-delete status, the host of the recording must have the recording setting **Delete cloud recordings after a specified number of days** enabled. ",
                "example": true,
                "x-ballerina-name": "autoDelete"
              },
              "recording_count": {
                "type": "integer",
                "description": "Number of recording files returned in the response of this API call. This includes the `recording_files` and  `participant_audio_files` files",
                "example": 22,
                "x-ballerina-name": "recordingCount"
              },
              "type": {
                "type": "string",
                "description": "The recording's associated type of meeting or webinar: \n\nIf the recording is of a meeting: \n* `1` - Instant meeting. \n* `2` - Scheduled meeting. \n* `3` - A recurring meeting with no fixed time. \n* `4` - A meeting created viaPersonal Meeting ID (PMI). \n* `7` - A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). \n* `8` - Recurring meeting with a fixed time. \n\nIf the recording is of a webinar: \n* `5` - A webinar. \n* `6` - A recurring webinar without a fixed time \n* `9` - A recurring webinar with a fixed time.\n\nIf the recording is **not** from a meeting or webinar: \n\n* `99` - A recording uploaded via the [**Recordings**](https://zoom.us/recording) interface on the Zoom Web Portal",
                "example": "1",
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "6",
                  "7",
                  "8",
                  "9",
                  "99"
                ],
                "x-enum-descriptions": [
                  "Instant Meeting",
                  "Scheduled Meeting",
                  "Recurring Meeting with no fixed time",
                  "Meeting created using a Personal Meeting ID",
                  "A webinar",
                  "Recurring webinar without a fixed time",
                  "Personal Audio Conference",
                  "Recurring meeting with a fixed time",
                  "Recurring webinar with a fixed time",
                  "A recording uploaded"
                ]
              },
              "uuid": {
                "type": "string",
                "description": "Unique Meeting Identifier. Each instance of the meeting will have its own UUID",
                "example": "BOKXuumlTAGXuqwr3bLyuQ=="
              },
              "host_id": {
                "type": "string",
                "description": "ID of the user set as host of meeting",
                "example": "_0ctZtY0REqWalTmwvrdIw",
                "x-ballerina-name": "hostId"
              },
              "duration": {
                "type": "integer",
                "description": "Meeting duration",
                "example": 20
              },
              "start_time": {
                "type": "string",
                "description": "The time when the meeting started",
                "format": "date-time",
                "example": "2021-03-18T05:41:36Z",
                "x-ballerina-name": "startTime"
              },
              "auto_delete_date": {
                "type": "string",
                "description": "The date when the recording will be auto-deleted when `auto_delete` is `true`. Otherwise, no date will be returned",
                "example": "2028-07-12",
                "x-ballerina-name": "autoDeleteDate"
              },
              "account_id": {
                "type": "string",
                "description": "Unique Identifier of the user account",
                "example": "Cx3wERazSgup7ZWRHQM8-w",
                "x-ballerina-name": "accountId"
              },
              "topic": {
                "type": "string",
                "description": "Meeting topic",
                "example": "My Personal Meeting"
              },
              "id": {
                "type": "integer",
                "description": "Meeting ID - also known as the meeting number",
                "example": 6840331990
              }
            }
          },
          {
            "description": "List of recording file",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "recording_files": {
                    "type": "array",
                    "description": "List of recording file",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "file_path": {
                              "type": "string",
                              "description": "The file path to the On-Premise account recording. \n\n**Note:** This API only returns this field for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). It does **not** return the `download_url` field.",
                              "example": "/9090876528/path01/demo.mp4",
                              "x-ballerina-name": "filePath"
                            },
                            "play_url": {
                              "type": "string",
                              "description": "The URL to play a recording file.",
                              "example": "https://example.com/rec/play/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                              "x-ballerina-name": "playUrl"
                            },
                            "meeting_id": {
                              "type": "string",
                              "description": "The meeting ID. ",
                              "example": "L0AGOEPVR9m5WSOOs/d+FQ==",
                              "x-ballerina-name": "meetingId"
                            },
                            "file_size": {
                              "type": "number",
                              "description": "The recording file size.",
                              "example": 7220,
                              "x-ballerina-name": "fileSize"
                            },
                            "recording_end": {
                              "type": "string",
                              "description": "The recording end time. Response in general query.",
                              "example": "2021-03-18T05:41:36Z",
                              "x-ballerina-name": "recordingEnd"
                            },
                            "file_type": {
                              "type": "string",
                              "description": "The recording file type.  \n \n`MP4` - Video file of the recording.  \n `M4A` Audio-only file of the recording.  \n `TIMELINE` - Timestamp file of the recording in JSON file format. To get a timeline file, the **Add a timestamp to the recording** setting must be enabled in the [recording settings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-recording#h_3f14c3a4-d16b-4a3c-bbe5-ef7d24500048). The time will display in the host's timezone, set on their Zoom profile.\n  \n  `TRANSCRIPT` - Transcription file of the recording in VTT format.  \n  `CHAT` - A TXT file containing in-meeting chat messages that were sent during the meeting.  \n `CC` - File containing closed captions of the recording in VTT file format.  \n `CSV` - File containing polling data in CSV format.\n\n  \n \n\nA recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties:  \n \n\t`id`, `status`, `file_size`, `recording_type`, and `play_url`.  \n `SUMMARY` - Summary file of the recording in JSON file format.",
                              "example": "MP4",
                              "enum": [
                                "MP4",
                                "M4A",
                                "CHAT",
                                "TRANSCRIPT",
                                "CSV",
                                "TB",
                                "CC",
                                "CHAT_MESSAGE",
                                "SUMMARY"
                              ],
                              "x-ballerina-name": "fileType"
                            },
                            "recording_type": {
                              "type": "string",
                              "description": "The recording type.  \n `shared_screen_with_speaker_view(CC)`  \n `shared_screen_with_speaker_view`  \n `shared_screen_with_gallery_view`  \n `active_speaker`  \n `gallery_view`  \n `shared_screen`  \n `audio_only`  \n `audio_transcript`  \n `chat_file`  \n `poll`  \n `timeline`  \n `closed_caption`  \n `audio_interpretation`  \n `summary`  \n `summary_next_steps`  \n `summary_smart_chapters`  \n `sign_interpretation`  \n `production_studio`",
                              "example": "shared_screen_with_speaker_view",
                              "enum": [
                                "shared_screen_with_speaker_view(CC)",
                                "shared_screen_with_speaker_view",
                                "shared_screen_with_gallery_view",
                                "active_speaker",
                                "gallery_view",
                                "shared_screen",
                                "audio_only",
                                "audio_transcript",
                                "chat_file",
                                "poll",
                                "host_video",
                                "closed_caption",
                                "timeline",
                                "thumbnail",
                                "audio_interpretation",
                                "summary",
                                "summary_next_steps",
                                "summary_smart_chapters",
                                "sign_interpretation",
                                "production_studio"
                              ],
                              "x-ballerina-name": "recordingType"
                            },
                            "download_url": {
                              "type": "string",
                              "description": "The URL to download the recording. If a user has authorized and installed your OAuth app that contains recording scopes, use the `download_access_token` or the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) to download the file. Set the token as a Bearer token in the Authorization header. \n\n`curl -H 'Authorization: Bearer <ACCESS_TOKEN>' https://{{base-domain}}/rec/archive/download/xyz`. \n\n**Note:** This field does **not** return for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). Instead, this API will return the `file_path` field. The URL may be a redirect. In that case, use `curl --location` to follow redirects or use another tool, like Postman.",
                              "example": "https://example.com/rec/download/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                              "x-ballerina-name": "downloadUrl"
                            },
                            "file_extension": {
                              "type": "string",
                              "description": "The file extension type of the recording file.",
                              "example": "M4A",
                              "enum": [
                                "MP4",
                                "M4A",
                                "TXT",
                                "VTT",
                                "CSV",
                                "JSON",
                                "JPG"
                              ],
                              "x-ballerina-name": "fileExtension"
                            },
                            "id": {
                              "type": "string",
                              "description": "The recording file ID. Included in the response of general query.",
                              "example": "72576a1f-4e66-4a77-87c4-f13f9808bd76"
                            },
                            "deleted_time": {
                              "type": "string",
                              "description": "The time when recording was deleted. Returned in the response only for trash query.",
                              "example": "2021-03-18T05:41:36Z",
                              "x-ballerina-name": "deletedTime"
                            },
                            "recording_start": {
                              "type": "string",
                              "description": "The recording start time.",
                              "example": "2021-03-18T05:41:36Z",
                              "x-ballerina-name": "recordingStart"
                            },
                            "status": {
                              "type": "string",
                              "description": "The recording status.",
                              "example": "completed",
                              "enum": [
                                "completed"
                              ]
                            }
                          },
                          "description": "Recording file object."
                        }
                      ]
                    },
                    "x-ballerina-name": "recordingFiles"
                  }
                }
              }
            ]
          }
        ]
      },
      "InlineResponse20030": {
        "type": "object",
        "properties": {
          "pac_accounts": {
            "type": "array",
            "description": "Information about the PAC accounts",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20030PacAccounts"
            },
            "x-ballerina-name": "pacAccounts"
          }
        }
      },
      "InlineResponse2009PolicyHotDesking": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The device's status, either `online` or `offline`",
            "example": "online",
            "enum": [
              "online",
              "offline"
            ]
          }
        }
      },
      "InlineResponse20032": {
        "type": "object",
        "properties": {
          "billing_reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20032BillingReports"
            },
            "x-ballerina-name": "billingReports"
          },
          "currency": {
            "type": "string",
            "description": "Currency of the billed amount",
            "example": "USD"
          }
        }
      },
      "InlineResponse20031": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes",
            "example": "b43YBRLJFg3V4vsSpxvGdKIGtNbxn9h9If2",
            "x-ballerina-name": "nextPageToken"
          },
          "activity_logs": {
            "type": "array",
            "description": "Array of activity logs",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20031ActivityLogs"
            },
            "x-ballerina-name": "activityLogs"
          },
          "from": {
            "type": "string",
            "description": "Start date from which you want the activity logs report to be generated",
            "example": "2019-09-01T00:00:00Z"
          },
          "to": {
            "type": "string",
            "description": "End date until which you want the activity logs report to be generated",
            "example": "2019-09-20T00:00:00Z"
          },
          "page_size": {
            "type": "integer",
            "description": "The number of records returned with a single API call",
            "example": 30,
            "x-ballerina-name": "pageSize"
          }
        },
        "description": "Report object"
      },
      "RegistrantsRegistrantsRegistrantsAllOf123": {
        "type": "object",
        "properties": {
          "join_url": {
            "type": "string",
            "description": "The URL that an approved registrant can use to join the meeting or webinar",
            "format": "string",
            "example": "https://example.com/j/11111",
            "x-ballerina-name": "joinUrl"
          },
          "create_time": {
            "type": "string",
            "description": "The time when the registrant registered",
            "format": "date-time",
            "example": "2022-03-22T05:59:09Z",
            "x-ballerina-name": "createTime"
          },
          "participant_pin_code": {
            "type": "integer",
            "description": "The participant PIN code is used to authenticate audio participants before they join the meeting",
            "format": "int64",
            "example": 380303,
            "x-ballerina-name": "participantPinCode"
          },
          "status": {
            "type": "string",
            "description": "The status of the registrant's registration.   \n  `approved` - User has been successfully approved for the webinar.  \n  `pending` - The registration is still pending.  \n  `denied` - User has been denied from joining the webinar",
            "example": "approved"
          }
        }
      },
      "InlineResponse20034": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse20034AllOf1"
          },
          {
            "$ref": "#/components/schemas/InlineResponse20034InlineResponse20034AllOf12"
          }
        ]
      },
      "InlineResponse20033": {
        "type": "object",
        "properties": {
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20033Invoices"
            }
          },
          "currency": {
            "type": "string",
            "description": "Currency of the billed amount in the invoice",
            "example": "USD"
          }
        }
      },
      "RegistrationList1RegistrationList1AllOf12": {
        "type": "object",
        "properties": {
          "registrants": {
            "type": "array",
            "description": "List of registrant objects",
            "items": {
              "$ref": "#/components/schemas/RegistrationList1Registrants"
            }
          }
        }
      },
      "InlineResponse20036": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "example": "b43YBRLJFg3V4vsSpxvGdKIGtNbxn9h9If2",
            "x-ballerina-name": "nextPageToken"
          },
          "history_meetings": {
            "maxItems": 300,
            "type": "array",
            "description": "Array of history meetings",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20036HistoryMeetings"
            },
            "x-ballerina-name": "historyMeetings"
          },
          "page_size": {
            "type": "integer",
            "description": "The number of records returned with a single API call",
            "example": 30,
            "x-ballerina-name": "pageSize"
          }
        }
      },
      "InlineResponse20035": {
        "type": "object",
        "properties": {
          "month": {
            "type": "integer",
            "description": "Month for this report",
            "example": 3
          },
          "year": {
            "type": "integer",
            "description": "Year for this report",
            "example": 2022
          },
          "dates": {
            "type": "array",
            "description": "Array of date objects",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20035Dates"
            }
          }
        }
      },
      "MeetingIdRegistrantsBody": {
        "description": "Information about the meeting registrant",
        "allOf": [
          {
            "$ref": "#/components/schemas/MeetingsmeetingIdregistrantsAllOf1"
          },
          {
            "$ref": "#/components/schemas/MeetingsmeetingIdregistrantsmeetingsmeetingIdregistrantsAllOf12"
          },
          {
            "$ref": "#/components/schemas/MeetingsmeetingIdregistrantsmeetingsmeetingIdregistrantsmeetingsmeetingIdregistrantsAllOf123"
          }
        ]
      },
      "InlineResponse20038": {
        "type": "object",
        "properties": {
          "user_email": {
            "type": "string",
            "description": "User email",
            "example": "jchill@example.com",
            "x-ballerina-name": "userEmail"
          },
          "participants_count": {
            "type": "integer",
            "description": "Number of meeting participants",
            "example": 2,
            "x-ballerina-name": "participantsCount"
          },
          "total_minutes": {
            "type": "integer",
            "description": "Number of meeting minutes. This represents the total amount of meeting minutes attended by each participant including the host, for meetings hosted by the user. For instance if there were one host(named A) and one participant(named B) in a meeting, the value of total_minutes would be calculated as below:\n\n**total_minutes** = Total Meeting Attendance Minutes of A + Total Meeting Attendance Minutes of B",
            "example": 3,
            "x-ballerina-name": "totalMinutes"
          },
          "user_name": {
            "type": "string",
            "description": "User display name",
            "example": "Jill Chill",
            "x-ballerina-name": "userName"
          },
          "end_time": {
            "type": "string",
            "description": "Meeting end time",
            "format": "date-time",
            "example": "2022-03-15T07:42:22Z",
            "x-ballerina-name": "endTime"
          },
          "custom_keys": {
            "maxItems": 10,
            "type": "array",
            "description": "Custom keys and values assigned to the meeting",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20038CustomKeys"
            },
            "x-ballerina-name": "customKeys"
          },
          "dept": {
            "type": "string",
            "description": "Department of the host",
            "example": "HR"
          },
          "type": {
            "type": "integer",
            "description": "Meeting type",
            "example": 2
          },
          "uuid": {
            "type": "string",
            "description": "Meeting UUID. Each meeting instance will generate its own UUID(i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). [Double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it",
            "example": "iOTQZPmhTUq5a232ETb9eg=="
          },
          "duration": {
            "type": "integer",
            "description": "Meeting duration",
            "example": 2
          },
          "start_time": {
            "type": "string",
            "description": "Meeting start time",
            "format": "date-time",
            "example": "2022-03-15T07:40:46Z",
            "x-ballerina-name": "startTime"
          },
          "tracking_fields": {
            "type": "array",
            "description": "Tracking fields",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20038TrackingFields"
            },
            "x-ballerina-name": "trackingFields"
          },
          "topic": {
            "type": "string",
            "description": "Meeting topic",
            "example": "My Meeting"
          },
          "id": {
            "type": "integer",
            "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in &quot;**long**&quot; format(represented as int64 data type in JSON), also known as the meeting number",
            "format": "int64",
            "example": 3927350525
          }
        }
      },
      "InlineResponse20037": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "example": "z5qFlq5cvH7C46k7PT7BQmpnW6izoOUWWt3",
            "x-ballerina-name": "nextPageToken"
          },
          "meeting_activity_logs": {
            "maxItems": 300,
            "type": "array",
            "description": "Array of meeting activity logs",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20037MeetingActivityLogs"
            },
            "x-ballerina-name": "meetingActivityLogs"
          },
          "page_size": {
            "type": "number",
            "description": "The number of records returned with a single API call",
            "example": 30,
            "default": 30,
            "x-ballerina-name": "pageSize"
          }
        },
        "description": "Report object"
      },
      "InlineResponse20039": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse20039AllOf1"
          },
          {
            "$ref": "#/components/schemas/InlineResponse20039InlineResponse20039AllOf12"
          }
        ]
      },
      "UsersuserIdmeetingsSettingsSignLanguageInterpretation": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "Whether to enable [sign language interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar) for the meeting. If not provided, the default value will be based on the user's setting",
            "example": true
          },
          "interpreters": {
            "maximum": 20,
            "type": "array",
            "description": "Information about the meeting's sign language interpreters",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsSignLanguageInterpretationInterpreters"
            }
          }
        },
        "description": "The meeting's [sign language interpretation settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar). Make sure to add the language in the web portal in order to use it in the API. See link for details. \n\n**Note:** If this feature is not enabled on the host's account, this setting will **not** be applied to the meeting"
      },
      "MeetingsmeetingIdregistrantsstatusRegistrants": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "9tboDiHUQAeOnbmudzWa5g"
          },
          "email": {
            "type": "string",
            "example": "jchill@example.com"
          }
        }
      },
      "InlineResponse20040Questions": {
        "type": "object",
        "properties": {
          "question_details": {
            "type": "array",
            "description": "Information about the user's questions and answers",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20050QuestionDetails"
            },
            "x-ballerina-name": "questionDetails"
          },
          "name": {
            "type": "string",
            "description": "The participant's display name. If the **Allow participants to answer questions anonymously** setting is enabled for a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet), the participant's polling information is kept anonymous and the `name` field will return the &quot;Anonymous Attendee&quot; value",
            "example": "Jill Chill"
          },
          "last_name": {
            "type": "string",
            "description": "The participant's last name. If the **Allow participants to answer questions anonymously** setting is enabled for a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet), the participant's polling information is kept anonymous and the `last_name` field will return the &quot;Anonymous Attendee&quot; value",
            "example": "Chill",
            "x-ballerina-name": "lastName"
          },
          "first_name": {
            "type": "string",
            "description": "The participant's first name. If the **Allow participants to answer questions anonymously** setting is enabled for a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet), the participant's polling information is kept anonymous and the `first_name` field will return the &quot;Anonymous Attendee&quot; value",
            "example": "Jill",
            "x-ballerina-name": "firstName"
          },
          "email": {
            "type": "string",
            "description": "The participant's email address",
            "format": "email",
            "example": "jchill@example.com"
          }
        }
      },
      "RegistrationListRegistrationListAllOf12": {
        "type": "object",
        "properties": {
          "registrants": {
            "type": "array",
            "description": "List of registrant objects",
            "items": {
              "$ref": "#/components/schemas/RegistrationListRegistrants"
            }
          }
        }
      },
      "InlineResponse20058Participants": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "integer",
            "description": "Participant duration, in seconds, calculated by subtracting the `leave_time` from the `join_time` for the `user_id`. If the participant leaves and rejoins the same meeting, they will be assigned a different `user_id` and Zoom displays their new duration in a separate object. Note that because of this, the duration may not reflect the total time the user was in the meeting",
            "example": 20
          },
          "user_email": {
            "type": "string",
            "description": "Email address of the participant. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details",
            "format": "email",
            "example": "jchill@example.com",
            "x-ballerina-name": "userEmail"
          },
          "leave_time": {
            "type": "string",
            "description": "The participant's leave time",
            "format": "date-time",
            "example": "2019-02-01T12:54:12.66Z",
            "x-ballerina-name": "leaveTime"
          },
          "user_id": {
            "type": "string",
            "description": "The participant's ID. This ID is assigned to the participant upon joining the webinar and is only valid for that webinar",
            "example": "ABCDEF123456",
            "x-ballerina-name": "userId"
          },
          "failover": {
            "type": "boolean",
            "description": "Whether failover occurred during the webinar",
            "example": false
          },
          "registrant_id": {
            "type": "string",
            "description": "The participant's unique registrant ID. This field only returns if you pass the `registrant_id` value for the `include_fields` query parameter. \n\nThis field does not return if the `type` query parameter is the `live` value",
            "example": "_f08HhPJS82MIVLuuFaJPg",
            "x-ballerina-name": "registrantId"
          },
          "name": {
            "type": "string",
            "description": "The participant's name",
            "example": "Jill Chill"
          },
          "id": {
            "type": "string",
            "description": "The participant's unique identifier",
            "example": "30R7kT7bTIKSNUFEuH_Qlg"
          },
          "internal_user": {
            "type": "boolean",
            "description": "Whether the webinar participant is an internal user",
            "example": false,
            "default": false,
            "x-ballerina-name": "internalUser"
          },
          "join_time": {
            "type": "string",
            "description": "The participant's join time",
            "format": "date-time",
            "example": "2019-02-01T12:34:12.66Z",
            "x-ballerina-name": "joinTime"
          },
          "status": {
            "type": "string",
            "description": "The participant's status. \n* `in_meeting` - In a meeting. \n* `in_waiting_room` - In a waiting room",
            "example": "in_meeting",
            "enum": [
              "in_meeting",
              "in_waiting_room"
            ]
          }
        }
      },
      "WebinarswebinarIdSettingsLanguageInterpretationInterpreters": {
        "type": "object",
        "properties": {
          "languages": {
            "type": "string",
            "description": "A comma-separated list of the interpreter's languages. The string must contain exactly two country IDs.\n\nOnly system-supported languages are allowed: `US` (English), `CN` (Chinese), `JP` (Japanese), `DE` (German), `FR` (French), `RU` (Russian), `PT` (Portuguese), `ES` (Spanish), and `KR` (Korean).\n\nFor example, to set an interpreter translating from English to Chinese, use `US,CN`",
            "example": "US,FR",
            "deprecated": true
          },
          "interpreter_languages": {
            "type": "string",
            "description": "A comma-separated list of the interpreter's languages. The string must contain exactly two languages.\n\nTo get this value, use the `language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](https://developers.zoom.us/docs/api/users/#tag/users/GET/users/{userId}/settings) API response.\n\n**languages**: System-supported languages include `English`, `Chinese`, `Japanese`, `German`, `French`, `Russian`, `Portuguese`, `Spanish`, and `Korean`.\n\n**custom_languages**: User-defined languages added by the user.\n\nFor example, an interpreter translating between English and French should use `English,French`",
            "example": "English,French",
            "x-ballerina-name": "interpreterLanguages"
          },
          "email": {
            "type": "string",
            "description": "The interpreter's email address",
            "format": "email",
            "example": "interpreter@example.com"
          }
        }
      },
      "WebinarswebinarIdregistrantswebinarswebinarIdregistrantsAllOf12": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "The registrant's language preference for confirmation emails: \n* `en-US` - English (US) \n* `de-DE` - German (Germany) \n* `es-ES` - Spanish (Spain) \n* `fr-FR` - French (France) \n* `jp-JP` - Japanese \n* `pt-PT` - Portuguese (Portugal) \n* `ru-RU` - Russian \n* `zh-CN` - Chinese (PRC) \n* `zh-TW` - Chinese (Taiwan) \n* `ko-KO` - Korean \n* `it-IT` - Italian (Italy) \n* `vi-VN` - Vietnamese \n* `pl-PL` - Polish \n* `Tr-TR` - Turkish",
            "example": "en-US",
            "enum": [
              "en-US",
              "de-DE",
              "es-ES",
              "fr-FR",
              "jp-JP",
              "pt-PT",
              "ru-RU",
              "zh-CN",
              "zh-TW",
              "ko-KO",
              "it-IT",
              "vi-VN",
              "pl-PL",
              "Tr-TR"
            ]
          },
          "source_id": {
            "type": "string",
            "description": "The tracking source's unique identifier",
            "example": "4816766181770",
            "x-ballerina-name": "sourceId"
          }
        }
      },
      "TSPAccountsList1": {
        "title": "TSP Accounts List",
        "required": [
          "conference_code",
          "leader_pin"
        ],
        "type": "object",
        "properties": {
          "dial_in_numbers": {
            "type": "array",
            "description": "List of dial in numbers",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20056DialInNumbers"
            },
            "x-ballerina-name": "dialInNumbers"
          },
          "conference_code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "Conference code: numeric value, length is less than 16",
            "example": "0125",
            "x-ballerina-name": "conferenceCode"
          },
          "leader_pin": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "Leader PIN. Mumeric value, length is less than 16",
            "example": "11189898",
            "x-ballerina-name": "leaderPin"
          },
          "id": {
            "type": "string",
            "description": "The TSP account's ID",
            "example": "1",
            "enum": [
              "1",
              "2"
            ]
          },
          "tsp_bridge": {
            "type": "string",
            "description": "Telephony bridge\n",
            "example": "US_TSP_TB",
            "enum": [
              "US_TSP_TB",
              "EU_TSP_TB"
            ],
            "x-ballerina-name": "tspBridge"
          }
        },
        "description": "List of TSP accounts"
      },
      "InlineResponse20050QuestionDetails": {
        "type": "object",
        "properties": {
          "answer": {
            "type": "string",
            "description": "The user's given answer",
            "example": "I am wonderful."
          },
          "date_time": {
            "type": "string",
            "description": "The date and time at which the user answered the poll question",
            "example": "2022-02-01T12:37:12.660Z",
            "x-ballerina-name": "dateTime"
          },
          "question": {
            "type": "string",
            "description": "The poll question",
            "example": "How are you?"
          },
          "polling_id": {
            "type": "string",
            "description": "The poll's ID",
            "example": "798fGJEWrA",
            "x-ballerina-name": "pollingId"
          }
        }
      },
      "InlineResponse20041": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "string",
            "description": "Meeting start time",
            "format": "date-time",
            "example": "2022-03-15T07:40:46Z",
            "x-ballerina-name": "startTime"
          },
          "questions": {
            "type": "array",
            "description": "Array of meeting question objects",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20041Questions"
            }
          },
          "id": {
            "type": "integer",
            "description": "The meeting ID in `long` format, represented as int64 data type in JSON. Also known as the meeting number",
            "format": "int64",
            "example": 245603123123
          },
          "uuid": {
            "type": "string",
            "description": "The meeting UUID. Each meeting instance will generate its own UUID - for example, after a meeting ends, a new UUID will be generated for the next instance of the meeting. Double-encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//'",
            "example": "4444AAAiAAAAAiAiAiiAii=="
          }
        }
      },
      "TSPAccountsList2": {
        "title": "TSP Accounts List",
        "required": [
          "conference_code",
          "leader_pin"
        ],
        "type": "object",
        "properties": {
          "dial_in_numbers": {
            "type": "array",
            "description": "List of dial in numbers",
            "items": {
              "$ref": "#/components/schemas/UsersuserIdtspDialInNumbers"
            },
            "x-ballerina-name": "dialInNumbers"
          },
          "conference_code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "Conference code: numeric value, length is less than 16",
            "example": "0125",
            "x-ballerina-name": "conferenceCode"
          },
          "leader_pin": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "Leader PIN: numeric value, length is less than 16",
            "example": "US_TSP_TB",
            "x-ballerina-name": "leaderPin"
          },
          "tsp_bridge": {
            "type": "string",
            "description": "Telephony bridge",
            "example": "US_TSP_TB",
            "enum": [
              "US_TSP_TB",
              "EU_TSP_TB"
            ],
            "x-ballerina-name": "tspBridge"
          }
        },
        "description": "List of TSP accounts"
      },
      "InlineResponse20040": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "string",
            "description": "The meeting's start time",
            "format": "date-time",
            "example": "2022-02-01T12:34:12.66Z",
            "x-ballerina-name": "startTime"
          },
          "questions": {
            "type": "array",
            "description": "Information about the meeting questions",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20040Questions"
            }
          },
          "id": {
            "type": "integer",
            "description": "The [meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID)",
            "format": "int64",
            "example": 123456
          },
          "uuid": {
            "type": "string",
            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID",
            "example": "4444AAAiAAAAAiAiAiiAii=="
          }
        }
      },
      "MeetingsmeetingIdrecordingsregistrantsquestionsCustomQuestions": {
        "type": "object",
        "properties": {
          "answers": {
            "type": "array",
            "description": "Answer choices for the question. Cannot be used with short answer type",
            "items": {
              "type": "string",
              "example": "true"
            }
          },
          "title": {
            "type": "string",
            "description": "The question's title",
            "example": "What's your name?"
          },
          "type": {
            "type": "string",
            "description": "The type of registration question and answers",
            "example": "short",
            "enum": [
              "short",
              "single",
              "multiple"
            ],
            "x-enum-descriptions": [
              "Short Answer",
              "Single Answer",
              "Multiple Answer"
            ]
          },
          "required": {
            "type": "boolean",
            "description": "Whether registrants are required to answer custom questions or not",
            "example": true
          }
        }
      },
      "InlineResponse20043": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse20043AllOf1"
          },
          {
            "$ref": "#/components/schemas/InlineResponse20043InlineResponse20043AllOf12"
          }
        ]
      },
      "InlineResponse20042": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "string",
            "description": "The meeting's start time",
            "format": "date-time",
            "example": "2022-02-01T12:34:12.66Z",
            "x-ballerina-name": "startTime"
          },
          "survey_id": {
            "type": "string",
            "description": "The survey's ID",
            "example": "8SFHRTGHAAAiAAAAAiAiAiiAii==",
            "x-ballerina-name": "surveyId"
          },
          "meeting_id": {
            "type": "integer",
            "description": "The meeting ID",
            "format": "int64",
            "example": 123456,
            "x-ballerina-name": "meetingId"
          },
          "meeting_uuid": {
            "type": "string",
            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID",
            "example": "4444AAAiAAAAAiAiAiiAii==",
            "x-ballerina-name": "meetingUuid"
          },
          "survey_answers": {
            "type": "array",
            "description": "Information about the survey questions and answers",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20052SurveyAnswers"
            },
            "x-ballerina-name": "surveyAnswers"
          },
          "survey_name": {
            "type": "string",
            "description": "The name of survey",
            "example": "Survey of this meeting",
            "x-ballerina-name": "surveyName"
          }
        }
      },
      "InlineResponse20045": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse20045AllOf1"
          }
        ]
      },
      "InlineResponse20044": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse20044AllOf1"
          },
          {
            "$ref": "#/components/schemas/InlineResponse20044InlineResponse20044AllOf12"
          }
        ]
      },
      "InlineResponse20047": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse20047AllOf1"
          },
          {
            "$ref": "#/components/schemas/InlineResponse20047InlineResponse20047AllOf12"
          },
          {
            "type": "object",
            "properties": {
              "next_page_token": {
                "type": "string",
                "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes",
                "example": "w7587w4eiyfsudgk",
                "x-ballerina-name": "nextPageToken"
              }
            }
          }
        ]
      },
      "InlineResponse20046": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse20046AllOf1"
          },
          {
            "$ref": "#/components/schemas/InlineResponse20046InlineResponse20046AllOf12"
          }
        ]
      },
      "InlineResponse20049": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse20049AllOf1"
          },
          {
            "$ref": "#/components/schemas/InlineResponse20049InlineResponse20049AllOf12"
          }
        ]
      },
      "RegistrationList1Registrants": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RegistrantsAllOf11"
          },
          {
            "$ref": "#/components/schemas/RegistrantsRegistrantsAllOf112"
          },
          {
            "$ref": "#/components/schemas/RegistrantsRegistrantsRegistrantsAllOf1123"
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "The registrant's status. \n* `approved` - Registrant is approved. \n* `denied` - Registrant is denied. \n* `pending` - Registrant is waiting for approval",
                "example": "approved",
                "enum": [
                  "approved",
                  "denied",
                  "pending"
                ]
              }

            }
          }
        ]
      },
      "InlineResponse20048": {
        "type": "object",
        "properties": {
          "user_email": {
            "type": "string",
            "description": "User email",
            "example": "jchill@example.com",
            "x-ballerina-name": "userEmail"
          },
          "participants_count": {
            "type": "integer",
            "description": "Number of meeting participants",
            "example": 4,
            "x-ballerina-name": "participantsCount"
          },
          "total_minutes": {
            "type": "integer",
            "description": "Number of Webinar minutes. This represents the total amount of Webinar minutes attended by each participant including the host, for a Webinar hosted by the user. For instance if there were one host(named A) and one participant(named B) in a Webinar, the value of total_minutes would be calculated as below:\n\n**total_minutes** = Total Webinar Attendance Minutes of A + Total Webinar Attendance Minutes of B",
            "example": 3,
            "x-ballerina-name": "totalMinutes"
          },
          "user_name": {
            "type": "string",
            "description": "User display name",
            "example": "Jill Chill",
            "x-ballerina-name": "userName"
          },
          "end_time": {
            "type": "string",
            "description": "Meeting end time",
            "format": "date-time",
            "example": "2022-03-15T07:42:22Z",
            "x-ballerina-name": "endTime"
          },
          "custom_keys": {
            "maxItems": 10,
            "type": "array",
            "description": "Custom keys and values assigned to the meeting",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20038CustomKeys"
            },
            "x-ballerina-name": "customKeys"
          },
          "dept": {
            "type": "string",
            "description": "Department of the host",
            "example": "HR"
          },
          "type": {
            "type": "integer",
            "description": "Meeting type",
            "example": 4
          },
          "uuid": {
            "type": "string",
            "description": "Webinar UUID. Each webinar instance will generate its own UUID(i.e., after a meeting ends, a new UUID will be generated when the next instance of the webinar starts). [double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) the UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it",
            "example": "4444AAAiAAAAAiAiAiiAii=="
          },
          "duration": {
            "type": "integer",
            "description": "Meeting duration",
            "example": 2
          },
          "start_time": {
            "type": "string",
            "description": "Meeting start time",
            "format": "date-time",
            "example": "2022-03-15T07:40:46Z",
            "x-ballerina-name": "startTime"
          },
          "tracking_fields": {
            "type": "array",
            "description": "Tracking fields",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20038TrackingFields"
            },
            "x-ballerina-name": "trackingFields"
          },
          "topic": {
            "type": "string",
            "description": "Meeting topic",
            "example": "My Meeting"
          },
          "id": {
            "type": "integer",
            "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in &quot;**long**&quot; format(represented as int64 data type in JSON), also known as the meeting number",
            "format": "int64",
            "example": 345678902224
          }
        }
      },
      "UsersuserIdmeetingsSettings": {
        "type": "object",
        "properties": {
          "breakout_room": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsersuserIdmeetingsSettingsBreakoutRoom"
              }
            ],
            "x-ballerina-name": "breakoutRoom"
          },
          "allow_host_control_participant_mute_state": {
            "type": "boolean",
            "description": "Whether to allow the host and co-hosts to fully control the mute state of participants. If not provided, the default value will be based on the user's setting",
            "example": false,
            "x-ballerina-name": "allowHostControlParticipantMuteState"
          },
          "summary_template_id": {
            "type": "string",
            "description": "The summary template ID used to generate a meeting summary based on a predefined template. To get available summary templates, use the **Get user summary templates** API. If not provided, the default value will be based on the user's setting. To enable this feature for your account, please [contact Zoom Support](https://support.zoom.com/hc/en)",
            "example": "1e1356ad",
            "x-ballerina-name": "summaryTemplateId"
          },
          "additional_data_center_regions": {
            "type": "array",
            "description": "Add additional meeting [data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars). Provide this value as an array of [country codes](/docs/api/references/abbreviations/#countries) for the countries available as data center regions in the [**Account Profile**](https://zoom.us/account/setting) interface but have been opted out of in the [user settings](https://zoom.us/profile).\n\nFor example, the data center regions selected in your [**Account Profile**](https://zoom.us/account) are `Europe`, `Hong Kong SAR`, `Australia`, `India`, `Japan`, `China`, `United States`, and `Canada`. However, in the [**My Profile**](https://zoom.us/profile) settings, you did **not** select `India` and `Japan` for meeting and webinar traffic routing.\n\nTo include `India` and `Japan` as additional data centers, use the `[IN, TY]` value for this field",
            "items": {
              "type": "string",
              "example": "TY"
            },
            "x-ballerina-name": "additionalDataCenterRegions"
          },
          "show_share_button": {
            "type": "boolean",
            "description": "Whether to include social media sharing buttons on the meeting's registration page. This setting is only applied to meetings with registration enabled",
            "example": true,
            "x-ballerina-name": "showShareButton"
          },
          "registrants_confirmation_email": {
            "type": "boolean",
            "description": "Whether to send registrants an email confirmation. \n* `true` - Send a confirmation email. \n* `false` - Do not send a confirmation email",
            "example": true,
            "x-ballerina-name": "registrantsConfirmationEmail"
          },
          "approved_or_denied_countries_or_regions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsersuserIdmeetingsSettingsApprovedOrDeniedCountriesOrRegions"
              }
            ],
            "x-ballerina-name": "approvedOrDeniedCountriesOrRegions"
          },
          "continuous_meeting_chat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsersuserIdmeetingsSettingsContinuousMeetingChat"
              }
            ],
            "x-ballerina-name": "continuousMeetingChat"
          },
          "allow_multiple_devices": {
            "type": "boolean",
            "description": "Whether to allow attendees to join a meeting from multiple devices. This setting is only applied to meetings with registration enabled",
            "example": true,
            "x-ballerina-name": "allowMultipleDevices"
          },
          "meeting_authentication": {
            "type": "boolean",
            "description": "If true, only [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) users can join the meeting",
            "example": true,
            "x-ballerina-name": "meetingAuthentication"
          },
          "alternative_hosts": {
            "type": "string",
            "description": "A semicolon-separated list of the meeting's alternative hosts' email addresses or IDs",
            "example": "jchill@example.com;thill@example.com",
            "x-ballerina-name": "alternativeHosts"
          },
          "alternative_host_update_polls": {
            "type": "boolean",
            "description": "Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher",
            "example": true,
            "x-ballerina-name": "alternativeHostUpdatePolls"
          },
          "device_testing": {
            "type": "boolean",
            "description": "Enable the device testing",
            "example": false,
            "default": false,
            "x-ballerina-name": "deviceTesting"
          },
          "participant_video": {
            "type": "boolean",
            "description": "Whether to start meetings with the participant video on",
            "example": false,
            "x-ballerina-name": "participantVideo"
          },
          "calendar_type": {
            "type": "integer",
            "description": "The type of calendar integration used to schedule the meeting.\n* `1` - [Zoom Outlook add-in](https://support.zoom.us/hc/en-us/articles/360031592971-Getting-started-with-Outlook-plugin-and-add-in) \n* `2` - [Zoom for Google Workspace add-on](https://support.zoom.us/hc/en-us/articles/360020187492-Using-the-Zoom-for-Google-Workspace-add-on)\n\nWorks with the `private_meeting` field to determine whether to share details of meetings or not",
            "example": 1,
            "enum": [
              1,
              2
            ],
            "x-enum-descriptions": [
              "Outlook",
              "Google Calendar"
            ],
            "x-ballerina-name": "calendarType"
          },
          "in_meeting": {
            "type": "boolean",
            "description": "Whether to host the meeting in India (IN). This value defaults to `false`",
            "example": false,
            "deprecated": true,
            "default": false,
            "x-ballerina-name": "inMeeting"
          },
          "mute_upon_entry": {
            "type": "boolean",
            "description": "Whether to mute participants upon entry",
            "example": false,
            "default": false,
            "x-ballerina-name": "muteUponEntry"
          },
          "global_dial_in_countries": {
            "type": "array",
            "description": "A list of available global dial-in countries",
            "items": {
              "type": "string",
              "example": "US"
            },
            "x-ballerina-name": "globalDialInCountries"
          },
          "question_and_answer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsersuserIdmeetingsSettingsQuestionAndAnswer"
              }
            ],
            "x-ballerina-name": "questionAndAnswer"
          },
          "join_before_host": {
            "type": "boolean",
            "description": "Whether participants can join the meeting before its host. This field is only used for scheduled meetings (`2`) or recurring meetings (`3` and `8`). This value defaults to `false`.\n\nIf the [**Waiting Room** feature](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room) is enabled, this setting is **disabled**",
            "example": false,
            "default": false,
            "x-ballerina-name": "joinBeforeHost"
          },
          "host_save_video_order": {
            "type": "boolean",
            "description": "Whether the **Allow host to save video order** feature is enabled",
            "example": true,
            "x-ballerina-name": "hostSaveVideoOrder"
          },
          "watermark": {
            "type": "boolean",
            "description": "Whether to add a watermark when viewing a shared screen. If not provided, the default value will be based on the user's setting",
            "example": false
          },
          "approval_type": {
            "type": "integer",
            "description": "Enable meeting registration approval.\n* `0` - Automatically approve registration.\n* `1` - Manually approve registration.\n* `2` - No registration required.\n\nThis value defaults to `2`",
            "example": 2,
            "default": 2,
            "enum": [
              0,
              1,
              2
            ],
            "x-enum-descriptions": [
              "Automatically approve registration.",
              "Manually approve registration.",
              "No registration required."
            ],
            "x-ballerina-name": "approvalType"
          },
          "close_registration": {
            "type": "boolean",
            "description": "Whether to close registration after the event date. This value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "closeRegistration"
          },
          "push_change_to_calendar": {
            "type": "boolean",
            "description": "Whether to push meeting changes to the calendar. \n\n To enable this feature, configure the **Configure Calendar and Contacts Service** in the user's profile page of the Zoom web portal and enable the **Automatically sync Zoom calendar events information bi-directionally between Zoom and integrated calendars.** setting in the **Settings** page of the Zoom web portal.\n* `true` - Push meeting changes to the calendar.\n* `false` - Do not push meeting changes to the calendar",
            "example": false,
            "default": false,
            "x-ballerina-name": "pushChangeToCalendar"
          },
          "internal_meeting": {
            "type": "boolean",
            "description": "Whether to set the meeting as an internal meeting",
            "example": false,
            "default": false,
            "x-ballerina-name": "internalMeeting"
          },
          "authentication_exception": {
            "type": "array",
            "description": "A list of participants who can bypass meeting authentication. These participants will receive a unique meeting invite",
            "items": {
              "$ref": "#/components/schemas/UsersuserIdmeetingsSettingsAuthenticationException"
            },
            "x-ballerina-name": "authenticationException"
          },
          "jbh_time": {
            "type": "integer",
            "description": "If the value of the `join_before_host` field is `true`, this field indicates the time limits when a participant can join a meeting before the meeting's host.\n\n* `0` - Allow the participant to join the meeting at anytime.\n* `5` - Allow the participant to join 5 minutes before the meeting's start time.\n* `10` - Allow the participant to join 10 minutes before the meeting's start time.\n* `15` - Allow the participant to join 15 minutes before the meeting's start time",
            "example": 0,
            "enum": [
              0,
              5,
              10,
              15
            ],
            "x-ballerina-name": "jbhTime"
          },
          "audio_conference_info": {
            "maxLength": 2048,
            "type": "string",
            "description": "Third party audio conference information",
            "example": "test",
            "x-ballerina-name": "audioConferenceInfo"
          },
          "authentication_domains": {
            "type": "string",
            "description": "The meeting's authenticated domains. Only Zoom users whose email address contains an authenticated domain can join the meeting. Comma-separate multiple domains or use a wildcard for listing domains",
            "example": "example.com",
            "x-ballerina-name": "authenticationDomains"
          },
          "who_will_receive_summary": {
            "type": "integer",
            "description": "Defines who will receive a summary after this meeting. This field is applicable only when `auto_start_meeting_summary` is set to `true`.\n\n* `1` - Only meeting host.\n\n* `2` - Only meeting host, co-hosts, and alternative hosts.\n\n* `3` - Only meeting host and meeting invitees in our organization.\n\n* `4` - All meeting invitees including those outside of our organization. If not provided, the default value will be based on the user's setting",
            "example": 1,
            "enum": [
              1,
              2,
              3,
              4
            ],
            "x-ballerina-name": "whoWillReceiveSummary"
          },
          "meeting_invitees": {
            "type": "array",
            "description": "A list of the meeting's invitees",
            "items": {
              "$ref": "#/components/schemas/UsersuserIdmeetingsSettingsMeetingInvitees"
            },
            "x-ballerina-name": "meetingInvitees"
          },
          "encryption_type": {
            "type": "string",
            "description": "The type of [end-to-end (E2EE) encryption](https://support.zoom.us/hc/en-us/articles/360048660871) to use for the meeting. \n* `enhanced_encryption` - Enhanced encryption. Encryption is stored in the cloud when you enable this option. \n* `e2ee` - End-to-end encryption. The encryption key is stored on your local device and **cannot** be obtained by anyone else. When you use E2EE encryption, [certain features](https://support.zoom.us/hc/en-us/articles/360048660871), such as cloud recording or phone and SIP/H.323 dial-in, are **disabled**",
            "example": "enhanced_encryption",
            "enum": [
              "enhanced_encryption",
              "e2ee"
            ],
            "x-ballerina-name": "encryptionType"
          },
          "authentication_option": {
            "type": "string",
            "description": "If the `meeting_authentication` value is `true`, the type of authentication required for users to join a meeting.\n\nTo get this value, use the `authentication_options` array's `id` value in the [**Get user settings**](/docs/api-reference/zoom-api/methods#operation/userSettings) API response",
            "example": "signIn_D8cJuqWVQ623CI4Q8yQK0Q",
            "x-ballerina-name": "authenticationOption"
          },
          "sign_language_interpretation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsersuserIdmeetingsSettingsSignLanguageInterpretation"
              }
            ],
            "x-ballerina-name": "signLanguageInterpretation"
          },
          "disable_participant_video": {
            "type": "boolean",
            "description": "Whether to disable the participant video during meeting. To enable this feature for your account, please [contact Zoom Support](https://support.zoom.us/hc/en-us)",
            "example": false,
            "default": false,
            "x-ballerina-name": "disableParticipantVideo"
          },
          "focus_mode": {
            "type": "boolean",
            "description": "Whether to enable the [**Focus Mode** feature](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode) when the meeting starts",
            "example": true,
            "x-ballerina-name": "focusMode"
          },
          "registration_type": {
            "type": "integer",
            "description": "The meeting's registration type. \n* `1` - Attendees register once and can attend any meeting occurrence. \n* `2` - Attendees must register for each meeting occurrence. \n* `3` - Attendees register once and can select one or more meeting occurrences to attend.\n\nThis field is only for recurring meetings with fixed times (`8`). This value defaults to `1`",
            "example": 1,
            "default": 1,
            "enum": [
              1,
              2,
              3
            ],
            "x-enum-descriptions": [
              "Attendees register once and can attend any meeting occurrence.",
              "Attendees must register for each meeting occurrence.",
              "Attendees register once and can select one or more meeting occurrences to attend."
            ],
            "x-ballerina-name": "registrationType"
          },
          "contact_email": {
            "type": "string",
            "description": "The contact email address for meeting registration",
            "example": "jchill@example.com",
            "x-ballerina-name": "contactEmail"
          },
          "waiting_room": {
            "type": "boolean",
            "description": "Whether to enable the [**Waiting Room** feature](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room). If this value is `true`, this **disables** the `join_before_host` setting",
            "example": false,
            "x-ballerina-name": "waitingRoom"
          },
          "audio": {
            "type": "string",
            "description": "How participants join the audio portion of the meeting.\n* `both` - Both telephony and VoIP. \n* `telephony` - Telephony only. \n* `voip` - VoIP only. \n* `thirdParty` - Third party audio conference",
            "example": "telephony",
            "default": "both",
            "enum": [
              "both",
              "telephony",
              "voip",
              "thirdParty"
            ],
            "x-enum-descriptions": [
              "Telephony and VoIP.",
              "Telephony only.",
              "VoIP only.",
              "Third party audio conference."
            ]
          },
          "who_can_ask_questions": {
            "type": "integer",
            "description": "Defines who can ask questions about this meeting's transcript. This field is applicable only when `auto_start_ai_companion_questions` is set to `true`.\n\n* `1` - All participants and invitees.\n\n* `2` - All participants only from when they join.\n\n* `3` - Only meeting host.\n\n* `4` - Participants and invitees in our organization.\n\n* `5` - Participants in our organization only from when they join. If not provided, the default value will be based on the user's setting",
            "example": 1,
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "x-ballerina-name": "whoCanAskQuestions"
          },
          "contact_name": {
            "type": "string",
            "description": "The contact name for meeting registration",
            "example": "Jill Chill",
            "x-ballerina-name": "contactName"
          },
          "cn_meeting": {
            "type": "boolean",
            "description": "Whether to host the meeting in China (CN). This value defaults to `false`",
            "example": false,
            "deprecated": true,
            "default": false,
            "x-ballerina-name": "cnMeeting"
          },
          "registrants_email_notification": {
            "type": "boolean",
            "description": "Whether to send registrants email notifications about their registration approval, cancellation, or rejection.\n\n* `true` - Send an email notification.\n* `false` - Do not send an email notification.\n\n Set this value to `true` to also use the `registrants_confirmation_email` parameter",
            "example": true,
            "x-ballerina-name": "registrantsEmailNotification"
          },
          "alternative_hosts_email_notification": {
            "type": "boolean",
            "description": "Whether to send email notifications to alternative hosts. This value defaults to `true`",
            "example": true,
            "default": true,
            "x-ballerina-name": "alternativeHostsEmailNotification"
          },
          "use_pmi": {
            "type": "boolean",
            "description": "Whether to use a [Personal Meeting ID (PMI)](/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi) instead of a generated meeting ID. This field is only used for scheduled meetings (`2`), instant meetings (`1`), or recurring meetings with no fixed time (`3`). This value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "usePmi"
          },
          "resources": {
            "type": "array",
            "description": "The meeting's resources",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsResources"
            }
          },
          "auto_recording": {
            "type": "string",
            "description": "The automatic recording settings. \n* `local` - Record the meeting locally. \n* `cloud` - Record the meeting to the cloud. \n* `none` - Auto-recording disabled.\n\nThis value defaults to `none`",
            "example": "cloud",
            "default": "none",
            "enum": [
              "local",
              "cloud",
              "none"
            ],
            "x-enum-descriptions": [
              "Record the meeting locally.",
              "Record the meeting to the cloud.",
              "Auto-recording disabled."
            ],
            "x-ballerina-name": "autoRecording"
          },
          "host_video": {
            "type": "boolean",
            "description": "Whether to start meetings with the host video on",
            "example": true,
            "x-ballerina-name": "hostVideo"
          },
          "language_interpretation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UsersuserIdmeetingsSettingsLanguageInterpretation"
              }
            ],
            "x-ballerina-name": "languageInterpretation"
          },
          "auto_start_meeting_summary": {
            "type": "boolean",
            "description": "Whether to automatically start a meeting summary. If not provided, the default value will be based on the user's setting",
            "example": false,
            "x-ballerina-name": "autoStartMeetingSummary"
          },
          "auto_start_ai_companion_questions": {
            "type": "boolean",
            "description": "Whether to automatically start AI Companion questions. If not provided, the default value will be based on the user's setting",
            "example": false,
            "x-ballerina-name": "autoStartAiCompanionQuestions"
          },
          "participant_focused_meeting": {
            "type": "boolean",
            "description": "Whether to set the meeting as a participant focused meeting",
            "example": false,
            "default": false,
            "x-ballerina-name": "participantFocusedMeeting"
          },
          "private_meeting": {
            "type": "boolean",
            "description": "Whether to set the meeting as private",
            "example": false,
            "x-ballerina-name": "privateMeeting"
          },
          "email_in_attendee_report": {
            "type": "boolean",
            "description": "Whether to include authenticated guest's email addresses in meetings' attendee reports",
            "example": true,
            "x-ballerina-name": "emailInAttendeeReport"
          },
          "email_notification": {
            "type": "boolean",
            "description": "Whether to send email notifications to [alternative hosts](https://support.zoom.us/hc/en-us/articles/208220166) and [users with scheduling privileges](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-privilege). This value defaults to `true`",
            "example": true,
            "default": true,
            "x-ballerina-name": "emailNotification"
          }
        },
        "description": "Information about the meeting's settings"
      },
      "InlineResponse20039InlineResponse20039AllOf12": {
        "type": "object",
        "properties": {
          "participants": {
            "type": "array",
            "description": "Array of meeting participant objects",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20039Participants"
            }
          }
        }
      },
      "WebinarswebinarIdRecurrence": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "end_date_time": {
            "type": "string",
            "description": "Select the final date when the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. Cannot be used with `end_times`",
            "format": "date-time",
            "example": "2022-04-02T15:59:00Z",
            "x-ballerina-name": "endDateTime"
          },
          "end_times": {
            "maximum": 60,
            "type": "integer",
            "description": "Select how many times the webinar will recur before it is canceled. The maximum number of recurring is 60. Cannot be used with `end_date_time`",
            "example": 7,
            "default": 1,
            "x-ballerina-name": "endTimes"
          },
          "monthly_week": {
            "type": "integer",
            "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.**   \n `-1` - Last week of the month.  \n `1` - First week of the month.  \n `2` - Second week of the month.  \n `3` - Third week of the month.  \n `4` - Fourth week of the month",
            "example": 1,
            "enum": [
              -1,
              1,
              2,
              3,
              4
            ],
            "x-enum-descriptions": [
              "Last week",
              "First week",
              "Second week",
              "Third week",
              "Fourth week"
            ],
            "x-ballerina-name": "monthlyWeek"
          },
          "monthly_week_day": {
            "type": "integer",
            "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. \n\n  \n `1` - Sunday.  \n `2` - Monday.  \n `3` - Tuesday.  \n `4` -  Wednesday.  \n `5` - Thursday.  \n `6` - Friday.  \n `7` - Saturday",
            "example": 1,
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "x-enum-descriptions": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-ballerina-name": "monthlyWeekDay"
          },
          "repeat_interval": {
            "type": "integer",
            "description": "Define the interval when the meeting should recur. If you would like to schedule a meeting that recurs every two months, set the value of this field as `2` and the value of the `type` parameter as `3`. \n\nFor a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.\n\n",
            "example": 1,
            "x-ballerina-name": "repeatInterval"
          },
          "monthly_day": {
            "type": "integer",
            "description": "Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.\n\nIf you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. If you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`",
            "example": 1,
            "default": 1,
            "x-ballerina-name": "monthlyDay"
          },
          "type": {
            "type": "integer",
            "description": "Recurrence meeting types. \n `1` - Daily.  \n `2` - Weekly.  \n `3` - Monthly",
            "example": 1,
            "enum": [
              1,
              2,
              3
            ],
            "x-enum-descriptions": [
              "Daily",
              "Weekly",
              "Monthly"
            ]
          },
          "weekly_days": {
            "type": "string",
            "description": "This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat.   \n    \n  The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `1` as the value of this field.  \n   \n  **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `1,3` as the value of this field.\n\n   \n `1`  - Sunday.   \n `2` - Monday.  \n `3` - Tuesday.  \n `4` -  Wednesday.  \n `5` -  Thursday.  \n `6` - Friday.  \n `7` - Saturday",
            "example": "1",
            "default": "1",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7"
            ],
            "x-ballerina-name": "weeklyDays"
          }
        },
        "description": "Recurrence object. Use this object only for a meeting with type `8`, a recurring meeting with fixed time. "
      },
      "PollList1": {
        "title": "Poll List",
        "description": "The poll List",
        "allOf": [
          {
            "$ref": "#/components/schemas/PollList1AllOf1"
          }
        ]
      },
      "InlineResponse20013SettingsMeetingInvitees": {
        "type": "object",
        "properties": {
          "internal_user": {
            "type": "boolean",
            "description": "Whether the meeting invitee is an internal user",
            "example": false,
            "default": false,
            "x-ballerina-name": "internalUser"
          },
          "email": {
            "type": "string",
            "description": "The invitee's email address",
            "format": "email",
            "example": "jchill@example.com"
          }
        }
      },
      "InlineResponse20019AllOf1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The meeting poll ID",
            "example": "QalIoKWLTJehBJ8e1xRrbQ"
          },
          "status": {
            "type": "string",
            "description": "The meeting poll's status.\n`notstart` - Poll not started\n`started` - Poll started\n`ended` - Poll ended\n`sharing` - Sharing poll results\n`deactivated` - Poll deactivated",
            "example": "notstart",
            "enum": [
              "notstart",
              "started",
              "ended",
              "sharing",
              "deactivated"
            ]
          }
        }
      },
      "LiveMeetingsmeetingIdeventsParamsSipHeaders": {
        "type": "object",
        "properties": {
          "from_uri": {
            "maxLength": 256,
            "type": "string",
            "description": "Custom URI that will be used within the SIP Header. The URI must start with 'sip:' or 'sips:' as a valid URI based on parameters defined by the platform",
            "example": "sip:username@domain.company.org",
            "x-ballerina-name": "fromUri"
          },
          "additional_headers": {
            "maximum": 10,
            "type": "array",
            "description": "Ability to add 1 to 10 custom headers, each of which has a maximum length of 256 bytes to comply with SIP standards.  Custom headers would leverage header names starting with 'X-' per SIP guidelines",
            "items": {
              "$ref": "#/components/schemas/LiveMeetingsmeetingIdeventsParamsSipHeadersAdditionalHeaders"
            },
            "x-ballerina-name": "additionalHeaders"
          },
          "from_display_name": {
            "maxLength": 64,
            "type": "string",
            "description": "Custom name that will be used within the SIP Header",
            "example": "display name",
            "x-ballerina-name": "fromDisplayName"
          },
          "to_display_name": {
            "maxLength": 64,
            "type": "string",
            "description": "Custom remote name that will be used within the meeting",
            "example": "display name",
            "x-ballerina-name": "toDisplayName"
          }
        },
        "description": "Enable customers to leverage services that require customization of the FROM header to identify the caller. Use this field if you pass the `participant.invite.room_system_callout` value for the `method` field and the `sip` value for the `call_type` field"
      },
      "InlineResponse20043OperationLogs": {
        "type": "object",
        "properties": {
          "operation_detail": {
            "type": "string",
            "description": "Operation detail",
            "example": "delete user - user2@example.com",
            "x-ballerina-name": "operationDetail"
          },
          "action": {
            "type": "string",
            "description": "Action",
            "example": "delete"
          },
          "category_type": {
            "type": "string",
            "description": "Category type",
            "example": "user",
            "x-ballerina-name": "categoryType"
          },
          "time": {
            "type": "string",
            "description": "The time at which the operation was performed",
            "format": "date-time",
            "example": "2022-01-25T17:52:16Z"
          },
          "operator": {
            "type": "string",
            "description": "The user who performed the operation",
            "example": "admin@example.com"
          }
        }
      },
      "InlineResponse20050": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "string",
            "description": "The webinar's start time",
            "format": "date-time",
            "example": "2022-02-01T12:34:12.66Z",
            "x-ballerina-name": "startTime"
          },
          "questions": {
            "type": "array",
            "description": "Information about the webinar questions",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20050Questions"
            }
          },
          "id": {
            "type": "integer",
            "description": "The webinar ID",
            "format": "int64",
            "example": 123456
          },
          "uuid": {
            "type": "string",
            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID",
            "example": "4444AAAiAAAAAiAiAiiAii=="
          }
        }
      },
      "InlineResponse20052": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "string",
            "description": "The webinar's start time",
            "format": "date-time",
            "example": "2022-02-01T12:34:12.66Z",
            "x-ballerina-name": "startTime"
          },
          "survey_id": {
            "type": "string",
            "description": "The survey's ID",
            "example": "8SFHRTGHAAAiAAAAAiAiAiiAii==",
            "x-ballerina-name": "surveyId"
          },
          "webinar_uuid": {
            "type": "string",
            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID",
            "example": "4444AAAiAAAAAiAiAiiAii==",
            "x-ballerina-name": "webinarUuid"
          },
          "webinar_id": {
            "type": "integer",
            "description": "The webinar ID",
            "format": "int64",
            "example": 123456,
            "x-ballerina-name": "webinarId"
          },
          "survey_answers": {
            "type": "array",
            "description": "Information about the survey questions and answers",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20052SurveyAnswers"
            },
            "x-ballerina-name": "surveyAnswers"
          },
          "survey_name": {
            "type": "string",
            "description": "The name of survey",
            "example": "Survey of this meeting",
            "x-ballerina-name": "surveyName"
          }
        }
      },
      "InlineResponse20038CustomKeys": {
        "type": "object",
        "properties": {
          "value": {
            "maxLength": 256,
            "type": "string",
            "description": "Value of the custom key associated with the user",
            "example": "US"
          },
          "key": {
            "maxLength": 64,
            "type": "string",
            "description": "Custom key associated with the user",
            "example": "Host Nation"
          }
        }
      },
      "InlineResponse20051": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "string",
            "description": "Webinar start time",
            "format": "date-time",
            "example": "2022-03-15T07:40:46Z",
            "x-ballerina-name": "startTime"
          },
          "questions": {
            "type": "array",
            "description": "Array of webinar question objects",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20051Questions"
            }
          },
          "id": {
            "type": "integer",
            "description": "Webinar ID in `long` format, represented as int64 data type in JSON. Also known as the webinar number",
            "format": "int64",
            "example": 245603123123
          },
          "uuid": {
            "type": "string",
            "description": "Webinar UUID. Each webinar instance will generate its own UUID - after a webinar ends, a new UUID will be generated for the next instance of the webinar. Double-encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it",
            "example": "4444AAAiAAAAAiAiAiiAii=="
          }
        }
      },
      "InlineResponse20054": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string",
            "example": "Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3",
            "x-ballerina-name": "nextPageToken"
          },
          "phones": {
            "maxItems": 300,
            "type": "array",
            "description": "SIP phones object",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20054Phones"
            }
          },
          "page_size": {
            "maximum": 300,
            "type": "integer",
            "description": "The number of records returned within a single API call",
            "example": 30,
            "default": 30,
            "x-ballerina-name": "pageSize"
          }
        }
      },
      "InlineResponse20053": {
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "description": "The page number of the current results",
            "example": 1,
            "x-ballerina-name": "pageNumber"
          },
          "next_page_token": {
            "type": "string",
            "example": "Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3",
            "x-ballerina-name": "nextPageToken"
          },
          "total_records": {
            "type": "integer",
            "description": "The total number of all the records available across pages",
            "example": 20,
            "x-ballerina-name": "totalRecords"
          },
          "phones": {
            "type": "array",
            "description": "SIP phones object",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20053Phones"
            }
          },
          "page_count": {
            "type": "integer",
            "description": "The number of pages returned for the request made",
            "example": 1,
            "x-ballerina-name": "pageCount"
          },
          "page_size": {
            "type": "integer",
            "description": "The number of records returned within a single API call",
            "example": 30,
            "x-ballerina-name": "pageSize"
          }
        }
      },
      "InlineResponse20056": {
        "type": "object",
        "properties": {
          "tsp_accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TSPAccountsList1"
            },
            "x-ballerina-name": "tspAccounts"
          }
        }
      },
      "InlineResponse20010FirmwareVersions": {
        "type": "object",
        "properties": {
          "vendor": {
            "type": "string",
            "description": "The device's manufacturer",
            "example": "AudioCodes"
          },
          "model": {
            "type": "string",
            "description": "The device's model name",
            "example": "C470HD"
          },
          "version": {
            "type": "string",
            "description": "The package version",
            "example": "1.19.552"
          },
          "warn_info": {
            "type": "string",
            "description": "The prompt information for this version",
            "example": "You are about to perform an Android operating system upgrade. The change is permanent and cannot be reversed.",
            "x-ballerina-name": "warnInfo"
          }
        },
        "description": "Details of firmware that the vendor can upgrade"
      },
      "InlineResponse20055": {
        "type": "object",
        "properties": {
          "dial_in_number_unrestricted": {
            "type": "boolean",
            "description": "Control restriction on account users adding a TSP number outside of account's dial in numbers",
            "example": false,
            "x-ballerina-name": "dialInNumberUnrestricted"
          },
          "modify_credential_forbidden": {
            "type": "boolean",
            "description": "Control restriction on account users being able to modify their TSP credentials",
            "example": true,
            "x-ballerina-name": "modifyCredentialForbidden"
          },
          "dial_in_numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20055DialInNumbers"
            },
            "x-ballerina-name": "dialInNumbers"
          },
          "master_account_setting_extended": {
            "type": "boolean",
            "description": "For master account, extend its TSP setting to all sub accounts. For sub account, extend TSP setting from master account",
            "example": true,
            "x-ballerina-name": "masterAccountSettingExtended"
          },
          "enable": {
            "type": "boolean",
            "description": "Enable Telephony Service Provider for account users",
            "example": true
          },
          "tsp_provider": {
            "type": "string",
            "description": "Telephony Service Provider",
            "example": "someprovidername",
            "x-ballerina-name": "tspProvider"
          },
          "tsp_bridge": {
            "type": "string",
            "description": "Telephony bridge zone",
            "example": "US_TSP_TB",
            "enum": [
              "US_TSP_TB",
              "EU_TSP_TB"
            ],
            "x-ballerina-name": "tspBridge"
          },
          "tsp_enabled": {
            "type": "boolean",
            "description": "Enable TSP feature for account. This has to be enabled to use any other tsp settings/features",
            "example": true,
            "x-ballerina-name": "tspEnabled"
          }
        }
      },
      "InlineResponse20058": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string",
            "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes",
            "example": "Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3",
            "x-ballerina-name": "nextPageToken"
          },
          "total_records": {
            "type": "integer",
            "description": "The total number of records available across all pages",
            "example": 1,
            "x-ballerina-name": "totalRecords"
          },
          "page_count": {
            "type": "integer",
            "description": "The number of pages returned for this request",
            "example": 1,
            "x-ballerina-name": "pageCount"
          },
          "page_size": {
            "maximum": 300,
            "type": "integer",
            "description": "The total number of records returned from a single API call",
            "example": 30,
            "default": 30,
            "x-ballerina-name": "pageSize"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20058Participants"
            }
          }
        }
      },
      "InlineResponse20057": {
        "description": "Tracking field list",
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse20057AllOf1"
          }
        ]
      },
      "InlineResponse20059": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "string",
            "description": "The webinar's start time",
            "format": "date-time",
            "example": "2022-03-26T05:37:59Z",
            "x-ballerina-name": "startTime"
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20059Questions"
            }
          },
          "id": {
            "type": "integer",
            "description": "Webinar ID in **long** format, represented as int64 data type in JSON, also known as the webinar number",
            "format": "int64",
            "example": 95204914252
          },
          "uuid": {
            "type": "string",
            "description": "Webinar UUID",
            "example": "Bznyg8KZTdCVbQxvS/oZ7w=="
          }
        }
      },
      "WebinarswebinarIdregistrantsquestionsQuestions": {
        "type": "object",
        "properties": {
          "required": {
            "type": "boolean",
            "description": "State whether the selected fields are required or optional",
            "example": true
          },
          "field_name": {
            "type": "string",
            "description": "Field name",
            "example": "last_name",
            "enum": [
              "last_name",
              "address",
              "city",
              "country",
              "zip",
              "state",
              "phone",
              "industry",
              "org",
              "job_title",
              "purchasing_time_frame",
              "role_in_purchase_process",
              "no_of_employees",
              "comments"
            ],
            "x-enum-descriptions": [
              "Last name",
              "Address",
              "City",
              "Country/Region",
              "Zip/Postal code",
              "State/Province",
              "Phone",
              "Industry",
              "Organization",
              "Job title",
              "Purchasing time frame",
              "Role in purchase process",
              "Number of employees",
              "Questions & comments"
            ],
            "x-ballerina-name": "fieldName"
          }
        }
      },
      "MeetingsmeetingIdbatchPollsPolls": {
        "type": "object",
        "properties": {
          "questions": {
            "minLength": 1,
            "required": [
              "name",
              "type"
            ],
            "type": "array",
            "description": "The information about the poll's questions",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdbatchPollsQuestions"
            }
          },
          "anonymous": {
            "type": "boolean",
            "description": "Whether to allow meeting participants to answer poll questions anonymously: \n* `true` &mdash; Anonymous polls enabled. \n* `false` &mdash; Participants cannot answer poll questions anonymously. \n\nThis value defaults to `false`",
            "example": false,
            "default": false
          },
          "poll_type": {
            "type": "integer",
            "description": "The type of poll: \n* `1` &mdash; Poll. \n* `2` &mdash; Advanced Poll. This feature must be enabled in your Zoom account. \n* `3` &mdash; Quiz. This feature must be enabled in your Zoom account. \n\n This value defaults to `1`",
            "example": 2,
            "default": 1,
            "enum": [
              1,
              2,
              3
            ],
            "x-ballerina-name": "pollType"
          },
          "title": {
            "maxLength": 64,
            "type": "string",
            "description": "The poll's title, up to 64 characters",
            "example": "Learn something new"
          }
        }
      },
      "WebinarRegistrant": {
        "title": "Webinar Registrant",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebinarRegistrantAllOf1"
          },
          {
            "$ref": "#/components/schemas/WebinarRegistrantWebinarRegistrantAllOf12"
          },
          {
            "$ref": "#/components/schemas/WebinarRegistrantWebinarRegistrantWebinarRegistrantAllOf123"
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "The registrant's status: \n* `approved` &mdash; Registrant is approved. \n* `denied` &mdash; Registrant is denied. \n* `pending` &mdash; Registrant is waiting for approval",
                "example": "approved",
                "enum": [
                  "approved",
                  "denied",
                  "pending"
                ]
              }

            }
          }
        ]
      },
      "InlineResponse2009DeviceInfos": {
        "type": "object",
        "properties": {
          "device_id": {
            "type": "string",
            "description": "The device ID",
            "example": "yealink-249AD8E00476",
            "x-ballerina-name": "deviceId"
          },
          "vendor": {
            "type": "string",
            "description": "The device's manufacturer",
            "example": "Yealink"
          },
          "device_type": {
            "type": "string",
            "description": "The device type",
            "example": "Zoom Phone Appliance",
            "x-ballerina-name": "deviceType"
          },
          "model": {
            "type": "string",
            "description": "The device's model name",
            "example": "MP56"
          },
          "status": {
            "type": "string",
            "description": "The device's status, either `online` or `offline`",
            "enum": [
              "online",
              "offline"
            ]
          },
          "policy": {
            "$ref": "#/components/schemas/InlineResponse2009Policy"
          }
        }
      },
      "DevicesBody": {
        "required": [
          "device_name",
          "device_type",
          "mac_address",
          "model",
          "serial_number",
          "vendor"
        ],
        "type": "object",
        "properties": {
          "room_id": {
            "type": "string",
            "description": "The Zoom Room's ID. Only for Zoom Room devices",
            "example": "72afdc13-a289-40c3-b358-50c8b8de",
            "x-ballerina-name": "roomId"
          },
          "zdm_group_id": {
            "type": "string",
            "description": "The ZDM group ID",
            "example": "ff49588c-92c4-4406-99e6-1942d8a61a7b",
            "x-ballerina-name": "zdmGroupId"
          },
          "device_name": {
            "type": "string",
            "description": "The device's name",
            "example": "My device",
            "x-ballerina-name": "deviceName"
          },
          "user_email": {
            "type": "string",
            "description": "User email for assigning the Zoom Phone device. Only for Zoom Phone devices",
            "example": "test-user@ya.us",
            "x-ballerina-name": "userEmail"
          },
          "mac_address": {
            "type": "string",
            "description": "The device's mac address",
            "example": "01-23-45-67-89-AB",
            "x-ballerina-name": "macAddress"
          },
          "vendor": {
            "type": "string",
            "description": "The device's manufacturer",
            "example": "Poly"
          },
          "extension_number": {
            "type": "string",
            "description": "The extension number",
            "example": "802",
            "x-ballerina-name": "extensionNumber"
          },
          "serial_number": {
            "type": "string",
            "description": "The device's serial number",
            "example": "6NRN2A0",
            "x-ballerina-name": "serialNumber"
          },
          "model": {
            "type": "string",
            "description": "The device's model",
            "example": "StudioX30"
          },
          "device_type": {
            "type": "integer",
            "description": "Device type.  \n `0` - Zoom Rooms computer.  \n `1` - Zoom Rooms controller.  \n `5` - Zoom Phone appliance",
            "example": 0,
            "enum": [
              0,
              1,
              5
            ],
            "x-ballerina-name": "deviceType"
          },
          "tag": {
            "type": "string",
            "description": "The name of the tag",
            "example": "personal rooms"
          }
        }
      },
      "InlineResponse2018SettingsBreakoutRoom": {
        "type": "object",
        "properties": {
          "rooms": {
            "type": "array",
            "description": "Create a room or rooms",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsBreakoutRoomRooms"
            }
          },
          "enable": {
            "type": "boolean",
            "description": "Set this field's value to `true` to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option",
            "example": true
          }
        },
        "description": "Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4)"
      },
      "InlineResponse20026QuestionDetails": {
        "type": "object",
        "properties": {
          "answer": {
            "type": "string",
            "description": "An answer submitted for the question. The value is 'live answered' if this is a live answer",
            "example": "Good"
          },
          "question": {
            "type": "string",
            "description": "A question asked during the Q&amp;A",
            "example": "How are you?"
          }
        }
      },
      "InlineResponse20052AnswerDetails": {
        "type": "object",
        "properties": {
          "question": {
            "type": "string",
            "description": "The survey question",
            "example": "How are you?"
          },
          "answer": {
            "type": "string",
            "description": "The user's given answer",
            "example": "I am wonderful."
          },
          "date_time": {
            "type": "string",
            "description": "The date and time at which the user answered the survey question",
            "example": "2022-02-01T12:37:12.660Z",
            "x-ballerina-name": "dateTime"
          },
          "question_id": {
            "type": "string",
            "description": "The question's ID",
            "example": "798fGJEWrA",
            "x-ballerina-name": "questionId"
          }
        }
      },
      "MeetingInstances": {
        "title": "Meeting instances",
        "description": "List of Meetings",
        "allOf": [
          {
            "$ref": "#/components/schemas/MeetingInstancesAllOf1"
          }
        ]
      },
      "InlineResponse20034AllOf1": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "Start date for this report",
            "format": "date",
            "example": "2021-12-01"
          },
          "to": {
            "type": "string",
            "description": "End date for this report",
            "format": "date",
            "example": "2021-12-30"
          }
        }
      },
      "InlineResponse20024AllOf1": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes",
            "example": "Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3",
            "x-ballerina-name": "nextPageToken"
          },
          "total_records": {
            "type": "integer",
            "description": "The number of all records available across pages",
            "example": 1,
            "x-ballerina-name": "totalRecords"
          },
          "page_count": {
            "type": "integer",
            "description": "The number of pages returned for the request made",
            "example": 1,
            "x-ballerina-name": "pageCount"
          },
          "page_size": {
            "maximum": 300,
            "type": "integer",
            "description": "The number of records returned within a single API call",
            "example": 30,
            "default": 30,
            "x-ballerina-name": "pageSize"
          }
        },
        "description": "Pagination object"
      },
      "InlineResponse2009PolicyCallControl": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "This field lets the call control feature to the current device. Configure the desk phone devices to enable call control, which lets users perform desk phone's call control actions from the Zoom desktop client, including making and accepting calls. \n* `unsupported` \n* `on` \n* `off`",
            "example": "off",
            "enum": [
              "unsupported",
              "on",
              "off"
            ]
          }
        }
      },
      "WebinarSurveyObjectCustomSurveyQuestions": {
        "type": "object",
        "properties": {
          "rating_min_label": {
            "maxLength": 50,
            "type": "string",
            "description": "The low score label used for the `rating_min_value` field, up to 50 characters. \n\n This field only applies to the `rating_scale` survey",
            "example": "Not likely",
            "x-ballerina-name": "ratingMinLabel"
          },
          "answer_required": {
            "type": "boolean",
            "description": "Whether participants must answer the question. \n* `true` - The participant must answer the question. \n* `false` - The participant does not need to answer the question. \n\n This value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "answerRequired"
          },
          "answer_min_character": {
            "minimum": 1,
            "type": "integer",
            "description": "The allowed minimum number of characters. This field only applies to `short_answer` and `long_answer` questions. You must provide at least a **one** character minimum value",
            "example": 1,
            "x-ballerina-name": "answerMinCharacter"
          },
          "rating_min_value": {
            "minimum": 0,
            "type": "integer",
            "description": "The rating scale's minimum value. This value cannot be less than zero. \n\n This field only applies to the `rating_scale` survey",
            "example": 1,
            "x-ballerina-name": "ratingMinValue"
          },
          "name": {
            "type": "string",
            "description": "The survey question, up to 420 characters",
            "example": "How useful was this webinar?"
          },
          "answers": {
            "minItems": 2,
            "type": "array",
            "description": "The survey question's available answers. This field requires a **minimum** of two answers. \n\n* For `single` and `multiple` questions, you can only provide a maximum of 50 answers. \n* For `matching` polls, you can only provide a maximum of 16 answers. \n* For `rank_order` polls, you can only provide a maximum of seven answers",
            "items": {
              "maxLength": 200,
              "type": "string",
              "example": "Extremely useful"
            }
          },
          "type": {
            "type": "string",
            "description": "The survey's question and answer type. \n* `single` - Single choice. \n* `multiple` - Multiple choice. \n* `matching` - Matching. \n* `rank_order` - Rank order \n* `short_answer` - Short answer \n* `long_answer` - Long answer. \n* `fill_in_the_blank` - Fill in the blank \n* `rating_scale` - Rating scale",
            "example": "single",
            "enum": [
              "single",
              "multiple",
              "matching",
              "rank_order",
              "short_answer",
              "long_answer",
              "fill_in_the_blank",
              "rating_scale"
            ],
            "x-enum-descriptions": [
              "Single choice",
              "Multiple choice",
              "Matching",
              "Rank order",
              "Short answer",
              "Long answer",
              "Fill in the blank",
              "Rating scale"
            ]
          },
          "rating_max_label": {
            "maxLength": 50,
            "type": "string",
            "description": "The high score label used for the `rating_max_value` field, up to 50 characters. \n\n This field only applies to the `rating_scale` survey",
            "example": "Extremely Likely",
            "x-ballerina-name": "ratingMaxLabel"
          },
          "answer_max_character": {
            "type": "integer",
            "description": "The allowed maximum number of characters. This field only applies to `short_answer` and `long_answer` questions. \n* For `short_answer` question, a maximum of 500 characters. \n* For `long_answer` question, a maximum of 2,000 characters",
            "example": 200,
            "x-ballerina-name": "answerMaxCharacter"
          },
          "rating_max_value": {
            "maximum": 10,
            "type": "integer",
            "description": "The rating scale's maximum value, up to a maximum value of 10. \n\n This field only applies to the `rating_scale` survey",
            "example": 4,
            "x-ballerina-name": "ratingMaxValue"
          },
          "show_as_dropdown": {
            "type": "boolean",
            "description": "Whether to display the radio selection as a drop-down box. \n* `true` - Show as a drop-down box. \n* `false` - Do not show as a drop-down box. \n\n This value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "showAsDropdown"
          },
          "prompts": {
            "maxItems": 10,
            "minItems": 2,
            "type": "array",
            "description": "Information about the prompt questions. This field only applies to `matching` and `rank_order` questions. You **must** provide a minimum of two prompts, up to a maximum of 10 prompts",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdsurveyCustomSurveyPrompts"
            }
          }
        }
      },
      "WebinarIdSurveyBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WebinarSurveyObject1"
          }
        ]
      },
      "MeetingIdStatusBody": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "`end` - End a meeting.  \n \n`recover` - [Recover](https://support.zoom.us/hc/en-us/articles/360038297111-Recover-a-deleted-meeting) a deleted meeting\n",
            "example": "recover",
            "enum": [
              "end",
              "recover"
            ]
          }
        }
      },
      "MeetingIdSipDialingBody": {
        "type": "object",
        "properties": {
          "passcode": {
            "type": "string",
            "description": "If customers desire that a passcode be embedded in the SIP URI dial string, they must supply the passcode. Zoom will not validate the passcode",
            "example": "xxxx"
          }
        }
      },
      "InlineResponse2015AllOf1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The meeting poll ID",
            "example": "QalIoKWLTJehBJ8e1xRrbQ"
          },
          "status": {
            "type": "string",
            "description": "The status of the meeting poll:  \n `notstart` - Poll not started  \n `started` - Poll started  \n `ended` - Poll ended  \n `sharing` - Sharing poll results",
            "example": "notstart",
            "enum": [
              "notstart",
              "started",
              "ended",
              "sharing"
            ],
            "x-enum-descriptions": [
              "Poll not start",
              "Poll started",
              "Poll ended",
              "Poll is sharing"
            ]
          }
        }
      },
      "WebinarswebinarIdSettingsLanguageInterpretation": {
        "type": "object",
        "properties": {
          "enable": {
            "type": "boolean",
            "description": "Whether to enable [language interpretation](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0064768) for the webinar",
            "example": true
          },
          "interpreters": {
            "type": "array",
            "description": "Information about the webinar's language interpreters",
            "items": {
              "$ref": "#/components/schemas/WebinarswebinarIdSettingsLanguageInterpretationInterpreters"
            }
          }
        },
        "description": "The webinar's [language interpretation settings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0064768). Make sure to add the language in the web portal in order to use it in the API. See link for details. \n\n**Note:** This feature is only available for certain Webinar add-on, Education, and Business and higher plans. If this feature is not enabled on the host's account, this setting will **not** be applied to the webinar. This is not supported for simulive webinars"
      },
      "InlineResponse2019": {
        "type": "object",
        "properties": {
          "register_server3": {
            "type": "string",
            "description": "The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address",
            "example": "192.0.2.5",
            "x-ballerina-name": "registerServer3"
          },
          "user_email": {
            "maxLength": 64,
            "type": "string",
            "description": "The email address of the user to associate with the SIP Phone. Can add `.win`, `.mac`, `.android`, `.ipad`, `.iphone`, `.linux`, `.pc`, `.mobile`, `.pad` at the end of the email (for example, `user@example.com.mac`) to add accounts for different platforms for the same user",
            "format": "email",
            "example": "jchill@example.com",
            "x-ballerina-name": "userEmail"
          },
          "transport_protocol3": {
            "type": "string",
            "description": "Protocols supported by the SIP provider.  \n  The value must be either `UDP`, `TCP`, `TLS`, `AUTO`",
            "example": "UDP",
            "enum": [
              "UDP",
              "TCP",
              "TLS",
              "AUTO"
            ],
            "x-ballerina-name": "transportProtocol3"
          },
          "user_name": {
            "maxLength": 64,
            "type": "string",
            "description": "The phone number associated with the user in the SIP account",
            "example": "Jill Chill",
            "x-ballerina-name": "userName"
          },
          "register_server2": {
            "type": "string",
            "description": "The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address",
            "example": "192.0.2.3",
            "x-ballerina-name": "registerServer2"
          },
          "transport_protocol2": {
            "type": "string",
            "description": "Protocols supported by the SIP provider.  \n  The value must be either `UDP`, `TCP`, `TLS`, `AUTO`",
            "example": "UDP",
            "enum": [
              "UDP",
              "TCP",
              "TLS",
              "AUTO"
            ],
            "x-ballerina-name": "transportProtocol2"
          },
          "proxy_server": {
            "type": "string",
            "description": "The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server",
            "example": "192.0.2.2",
            "x-ballerina-name": "proxyServer"
          },
          "proxy_server2": {
            "type": "string",
            "description": "The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty",
            "example": "192.0.2.4",
            "x-ballerina-name": "proxyServer2"
          },
          "proxy_server3": {
            "type": "string",
            "description": "The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty",
            "example": "192.0.2.6",
            "x-ballerina-name": "proxyServer3"
          },
          "registration_expire_time": {
            "maximum": 127,
            "minimum": 1,
            "type": "integer",
            "description": "The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server",
            "example": 60,
            "default": 60,
            "x-ballerina-name": "registrationExpireTime"
          },
          "password": {
            "type": "string",
            "description": "The password generated for the user in the SIP account",
            "example": "123456"
          },
          "voice_mail": {
            "maxLength": 255,
            "type": "string",
            "description": "The number to dial for checking voicemail",
            "example": "4000",
            "x-ballerina-name": "voiceMail"
          },
          "domain": {
            "maxLength": 64,
            "type": "string",
            "description": "The name or IP address of your provider's SIP domain (example: CDC.WEB). ",
            "example": "example.com"
          },
          "register_server": {
            "type": "string",
            "description": "The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address",
            "example": "192.0.2.1",
            "x-ballerina-name": "registerServer"
          },
          "id": {
            "type": "string",
            "description": "The SIP phone ID",
            "example": "123456"
          },
          "authorization_name": {
            "maxLength": 64,
            "type": "string",
            "description": "The authorization name of the user that is registered for SIP phone",
            "example": "testname",
            "x-ballerina-name": "authorizationName"
          },
          "transport_protocol": {
            "type": "string",
            "description": "Protocols supported by the SIP provider.  \n  The value must be either `UDP`, `TCP`, `TLS`, `AUTO`",
            "example": "UDP",
            "enum": [
              "UDP",
              "TCP",
              "TLS",
              "AUTO"
            ],
            "x-ballerina-name": "transportProtocol"
          }
        }
      },
      "InlineResponse20041QuestionDetails": {
        "type": "object",
        "properties": {
          "answer": {
            "type": "string",
            "description": "The given answer. If this is a live answer, the value is 'live answered'.\n**Note:** All answers will be returned together and separated by semicolons. For more detailed answer information, please see the \"answer_details\" field",
            "example": "fine",
            "deprecated": true
          },
          "question": {
            "type": "string",
            "description": "Asked question",
            "example": "how are you"
          },
          "create_time": {
            "type": "string",
            "description": "Question create time",
            "example": "2022-03-15T07:48:00Z",
            "x-ballerina-name": "createTime"
          },
          "question_status": {
            "type": "string",
            "description": "Question status.\nIf not supported, the value will be `default`",
            "example": "open",
            "enum": [
              "default",
              "open",
              "dismissed",
              "answered",
              "deleted"
            ],
            "x-ballerina-name": "questionStatus"
          },
          "question_id": {
            "type": "string",
            "description": "Question UUID",
            "example": "zxU4wOwnlxs",
            "x-ballerina-name": "questionId"
          },
          "answer_details": {
            "type": "array",
            "description": "Array of answers from the user",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20041AnswerDetails"
            },
            "x-ballerina-name": "answerDetails"
          }
        }
      },
      "PollListAllOf1": {
        "type": "object",
        "properties": {
          "total_records": {
            "type": "integer",
            "description": "The number of all records available across pages",
            "example": 1,
            "x-ballerina-name": "totalRecords"
          },
          "polls": {
            "type": "array",
            "description": "An array of polls",
            "items": {
              "$ref": "#/components/schemas/PollListPolls"
            }
          }
        }
      },
      "InlineResponse20041AnswerDetails": {
        "type": "object",
        "properties": {
          "create_time": {
            "type": "string",
            "description": "Content submit time",
            "example": "2022-03-15T07:50:00Z",
            "x-ballerina-name": "createTime"
          },
          "user_id": {
            "type": "string",
            "description": "The user ID of the user who answered the question. This value returns blank for external users",
            "example": "Cn_5wJ9mRNGyYOmpjVufBQ",
            "x-ballerina-name": "userId"
          },
          "name": {
            "type": "string",
            "description": "User display name, including the host or participant",
            "example": "Paul"
          },
          "type": {
            "type": "string",
            "description": "Type of answer",
            "example": "default",
            "default": "default",
            "enum": [
              "default",
              "host_answered_publicly",
              "host_answered_privately",
              "participant_commented",
              "host_answered"
            ],
            "x-enum-description": [
              "default - default value, does not represent any type",
              "host_answered - deprecated, split into host_answered_publicly and host_answered_privately",
              "host_answered_publicly - host answered the question publicly",
              "host_answered_privately - host answered the question privately",
              "participant_commented - comment from the participant"
            ]
          },
          "email": {
            "type": "string",
            "description": "Participant's email. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details",
            "example": "paul@example.com"
          },
          "content": {
            "maxLength": 1024,
            "type": "string",
            "description": "The answer from host or the comment from participant",
            "example": "fine"
          }
        }
      },
      "UserIdUserIdOneOf12": {
        "type": "string",
        "format": "email",
        "example": "jchill@example.com"
      },
      "InlineResponse20018EditedSummary": {
        "type": "object",
        "properties": {
          "summary_overview": {
            "type": "string",
            "description": "The user edited summary overview",
            "example": "Meeting overview",
            "x-ballerina-name": "summaryOverview"
          },
          "summary_details": {
            "type": "string",
            "description": "The user edited summary details",
            "example": "Meeting overview",
            "x-ballerina-name": "summaryDetails"
          },
          "next_steps": {
            "type": "array",
            "description": "The user edited next steps",
            "items": {
              "type": "string",
              "description": "The user edited next step.",
              "example": "step1"
            },
            "x-ballerina-name": "nextSteps"
          }
        },
        "description": "The edited summary content",
        "deprecated": true
      },
      "InlineResponse20018SummaryDetails": {
        "type": "object",
        "properties": {
          "summary": {
            "type": "string",
            "description": "The summary content",
            "example": "Meeting overview"
          },
          "label": {
            "type": "string",
            "description": "The summary label",
            "example": "Meeting overview"
          }
        },
        "description": "The summary detail object"
      },
      "MeetingsmeetingIdSettingsBreakoutRoomRooms": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The breakout room's name",
            "example": "room1"
          },
          "participants": {
            "type": "array",
            "description": "Email addresses of the participants who are to be assigned to the breakout room",
            "items": {
              "type": "string",
              "example": "jchill@example.com"
            }
          }
        }
      },
      "MeetingsmeetingIdTrackingFields": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "Tracking fields type",
            "example": "field1"
          },
          "value": {
            "type": "string",
            "description": "Tracking fields value",
            "example": "value1"
          }
        }
      },
      "MeetingsmeetingIdrecordingsregistrantsCustomQuestions": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the custom question",
            "example": "What do you hope to learn from this?"
          },
          "value": {
            "maxLength": 128,
            "type": "string",
            "description": "The custom question's response value. This has a limit of 128 characters",
            "example": "Look forward to learning how you come up with new recipes and what other services you offer."
          }
        },
        "description": "Information about custom questions"
      },
      "InlineResponse20111": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse20111AllOf1"
          },
          {
            "$ref": "#/components/schemas/TSPAccountsList2"
          }
        ]
      },
      "MeetingId": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/MeetingIdOneOf1"
          },
          {
            "$ref": "#/components/schemas/MeetingIdMeetingIdOneOf12"
          }
        ]
      },
      "InlineResponse20110": {
        "type": "object",
        "properties": {
          "server": {
            "$ref": "#/components/schemas/SipPhonesphonesServer"
          },
          "password": {
            "type": "string",
            "description": "The password generated for the user in the SIP account",
            "example": "123456"
          },
          "user_email": {
            "maxLength": 64,
            "type": "string",
            "description": "The email address of the user to associate with the SIP Phone. Can add `.pc`, `.mobile`, `.pad` at the end of the email (for example, `user@example.com.mac`) to add accounts for different platforms for the same user",
            "format": "email",
            "example": "jchill@example.com",
            "x-ballerina-name": "userEmail"
          },
          "server_3": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipPhonesphonesServer"
              }
            ],
            "x-ballerina-name": "server3"
          },
          "voice_mail": {
            "maxLength": 255,
            "type": "string",
            "description": "The number to dial for checking voicemail",
            "example": "4000",
            "x-ballerina-name": "voiceMail"
          },
          "server_2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipPhonesphonesServer"
              }
            ],
            "x-ballerina-name": "server2"
          },
          "user_name": {
            "maxLength": 64,
            "type": "string",
            "description": "The phone number associated with the user in the SIP account",
            "example": "Jill Chill",
            "x-ballerina-name": "userName"
          },
          "domain": {
            "maxLength": 64,
            "type": "string",
            "description": "The name or IP address of your provider's SIP domain (example: CDC.WEB). ",
            "example": "example.com"
          },
          "display_number": {
            "maxLength": 64,
            "type": "string",
            "description": "The displayed phone number associated with the user can be either in extension format or E.164 format. You can specify the displayed number when the dialable number differs from the SIP username",
            "example": "5551110105",
            "x-ballerina-name": "displayNumber"
          },
          "authorization_name": {
            "maxLength": 64,
            "type": "string",
            "description": "The authorization name of the user that is registered for SIP phone",
            "example": "testname",
            "x-ballerina-name": "authorizationName"
          },
          "phone_id": {
            "type": "string",
            "description": "The SIP phone ID",
            "example": "123456",
            "x-ballerina-name": "phoneId"
          },
          "registration_expire_time": {
            "maximum": 127,
            "minimum": 1,
            "type": "integer",
            "description": "The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server",
            "example": 60,
            "default": 60,
            "x-ballerina-name": "registrationExpireTime"
          }
        }
      },
      "InlineResponse20036HistoryMeetings": {
        "type": "object",
        "properties": {
          "max_concurrent_views": {
            "type": "integer",
            "description": "The maximum number of online viewers at the same time during the webinar, excluding panelists",
            "example": 3,
            "x-ballerina-name": "maxConcurrentViews"
          },
          "create_time": {
            "type": "string",
            "description": "The meeting's create date and time",
            "example": "2024-12-23T06:09:03Z",
            "x-ballerina-name": "createTime"
          },
          "meeting_id": {
            "type": "integer",
            "description": "The [meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in &quot;**long**&quot; format(represented as int64 data type in JSON), also known as the meeting number",
            "format": "int64",
            "example": 93201235621,
            "x-ballerina-name": "meetingId"
          },
          "custom_fields": {
            "maxItems": 5,
            "type": "array",
            "description": "The custom attributes that the host is assigned",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20036CustomFields"
            },
            "x-ballerina-name": "customFields"
          },
          "meeting_uuid": {
            "type": "string",
            "description": "The meeting unique universal identifier (UUID). Double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it",
            "example": "gm8s9L+PTEC+FG3sFbd1Cw==",
            "x-ballerina-name": "meetingUuid"
          },
          "end_time": {
            "type": "string",
            "description": "The meeting's end date and time",
            "example": "2024-12-23T08:09:03Z",
            "x-ballerina-name": "endTime"
          },
          "host_display_name": {
            "type": "string",
            "description": "The host's display name",
            "example": "Jill Chill",
            "x-ballerina-name": "hostDisplayName"
          },
          "source": {
            "type": "string",
            "description": "Whether the meeting was created directly through Zoom or via an API request: \n* If the meeting was created via an OAuth app, this field returns the OAuth app's name. \n* If the meeting was created via JWT or the Zoom Web Portal, this returns the `Zoom` value",
            "example": "Zoom"
          },
          "type": {
            "type": "string",
            "description": "The meeting type, either Meeting or Webinar",
            "example": "Meeting",
            "enum": [
              "Meeting",
              "Webinar"
            ]
          },
          "total_participant_minutes": {
            "type": "integer",
            "description": "The total duration of all participants, in minutes",
            "example": 83,
            "x-ballerina-name": "totalParticipantMinutes"
          },
          "duration": {
            "type": "integer",
            "description": "The meeting's duration, in minutes",
            "example": 60
          },
          "start_time": {
            "type": "string",
            "description": "The meeting's start date and time",
            "example": "2024-12-23T07:09:03Z",
            "x-ballerina-name": "startTime"
          },
          "tracking_fields": {
            "maxItems": 10,
            "type": "array",
            "description": "The tracking fields and values assigned to the meeting",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20036TrackingFields"
            },
            "x-ballerina-name": "trackingFields"
          },
          "feature_used": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InlineResponse20036FeatureUsed"
              }
            ],
            "x-ballerina-name": "featureUsed"
          },
          "topic": {
            "type": "string",
            "description": "The meeting's topic",
            "example": "My Meeting"
          },
          "department": {
            "type": "string",
            "description": "The host's department",
            "example": "Developers"
          },
          "host_email": {
            "type": "string",
            "description": "The host's email address",
            "example": "jchill@example.com",
            "x-ballerina-name": "hostEmail"
          },
          "participants": {
            "type": "integer",
            "description": "The number of meeting participants",
            "example": 5
          },
          "group": {
            "maxItems": 200,
            "type": "array",
            "description": "The host's groups",
            "example": "group_01",
            "items": {
              "type": "string",
              "description": "The host's group name",
              "example": "group01"
            }
          },
          "unique_viewers": {
            "type": "integer",
            "description": "This value shows how many people viewed the webinar on their computer. It does not include panelists or attendees who only listened by phone. Viewers who joined the meeting multiple times or from multiple devices are counted only once",
            "example": 4,
            "x-ballerina-name": "uniqueViewers"
          }
        },
        "description": "The history meeting detail"
      },
      "InlineResponse20113": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse20113AllOf1"
          }
        ]
      },
      "MeetingsmeetingIdBody": {
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/MeetingsmeetingIdSettings"
          },
          "pre_schedule": {
            "type": "boolean",
            "description": "Whether to create a prescheduled meeting through the [GSuite app](https://support.zoom.us/hc/en-us/articles/360020187492-Zoom-for-GSuite-add-on). This **only** supports the meeting `type` value of `2` - scheduled meetings- and `3` - recurring meetings with no fixed time. \n* `true` - Create a prescheduled meeting. \n* `false` - Create a regular meeting",
            "example": false,
            "default": false,
            "x-ballerina-name": "preSchedule"
          },
          "timezone": {
            "type": "string",
            "description": "The timezone to assign to the `start_time` value. Only use this field for scheduled or recurring meetings with a fixed time.\n\nFor a list of supported timezones and their formats, see our [timezone list](/docs/api/references/abbreviations/#timezones)",
            "example": "America/Los_Angeles"
          },
          "schedule_for": {
            "type": "string",
            "description": "The email address or `userId` of the user to schedule a meeting for",
            "example": "jchill@example.com",
            "x-ballerina-name": "scheduleFor"
          },
          "type": {
            "type": "integer",
            "description": "The type of meeting. \n* `1` - An instant meeting. \n* `2` - A scheduled meeting. \n* `3` - A recurring meeting with no fixed time. \n* `8` - A recurring meeting with fixed time. \n* `10` - A screen share only meeting",
            "example": 2,
            "default": 2,
            "enum": [
              1,
              2,
              3,
              8,
              10
            ]
          },
          "agenda": {
            "maxLength": 2000,
            "type": "string",
            "description": "Meeting description",
            "example": "My Meeting"
          },
          "duration": {
            "type": "integer",
            "description": "Meeting duration in minutes. Used for scheduled meetings only",
            "example": 60
          },
          "recurrence": {
            "$ref": "#/components/schemas/MeetingsmeetingIdRecurrence"
          },
          "start_time": {
            "type": "string",
            "description": "Meeting start time. When using a format like `yyyy-MM-dd'T'HH:mm:ss'Z'`, always use GMT time. When using a format like `yyyy-MM-dd'T'HH:mm:ss`, use local time and specify the time zone. Only used for scheduled meetings and recurring meetings with a fixed time",
            "format": "date-time",
            "example": "2022-03-25T07:29:29Z",
            "x-ballerina-name": "startTime"
          },
          "password": {
            "maxLength": 10,
            "type": "string",
            "description": "The passcode required to join the meeting. By default, a passcode can **only** have a maximum length of 10 characters and only contain alphanumeric characters and the `@`, `-`, `_`, and `*` characters.\n\n**Note:**\n* If the account owner or administrator has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode **must** meet those requirements. \n* If passcode requirements are enabled, use the [**Get user settings**](/docs/api/users/#tag/users/GET/users/{userId}/settings) API or the [**Get account settings**](/docs/api/accounts/#tag/accounts/GET/accounts/{accountId}/settings) API to get the requirements.\n* If the **Require a passcode when scheduling new meetings** account setting is enabled and locked, a passcode will be automatically generated if one is not provided",
            "example": "123456"
          },
          "tracking_fields": {
            "type": "array",
            "description": "Tracking fields",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdTrackingFields"
            },
            "x-ballerina-name": "trackingFields"
          },
          "topic": {
            "maxLength": 200,
            "type": "string",
            "description": "Meeting topic",
            "example": "My Meeting"
          },
          "template_id": {
            "type": "string",
            "description": "Unique identifier of the meeting template. \n\n[Schedule the meeting from a meeting template](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates#h_86f06cff-0852-4998-81c5-c83663c176fb). Retrieve this field's value by calling the [List meeting templates](/docs/api/rest/reference/zoom-api/methods/#operation/listMeetingTemplates) API",
            "example": "5Cj3ceXoStO6TGOVvIOVPA==",
            "x-ballerina-name": "templateId"
          }
        },
        "description": "Meeting object"
      },
      "InlineResponse20112": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse20112AllOf1"
          },
          {
            "$ref": "#/components/schemas/TrackingField4"
          }
        ]
      },
      "MeetingId1OneOf1": {
        "type": "integer",
        "example": 5638296721
      },
      "InlineResponse20115": {
        "type": "object",
        "properties": {
          "registrants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20115Registrants"
            }
          }
        }
      },
      "InlineResponse20114": {
        "type": "object",
        "properties": {
          "occurrences": {
            "type": "array",
            "description": "Array of occurrence objects",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20114Occurrences"
            }
          },
          "h323_passcode": {
            "type": "string",
            "description": "H.323/SIP room system passcode",
            "example": "123456",
            "x-ballerina-name": "h323Passcode"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone to format `start_time`",
            "example": "America/Los_Angeles"
          },
          "start_url": {
            "type": "string",
            "description": "  \n The `start_url` of a webinar is a URL using which a host or an alternative host can start the webinar. This URL should only be used by the host of the meeting and should not be shared with anyone other than the host of the webinar. \n\nThe expiration time for the `start_url` field listed in the response of the [**Create a webinar**](/docs/api/rest/reference/zoom-api/methods#operation/webinarCreate) API is two hours for all regular users. \n\t\nFor users created using the `custCreate` option via the [**Create users**](/docs/api/rest/reference/zoom-api/methods#operation/userCreate) API, the expiration time of the `start_url` field is 90 days.\n\t\nFor security reasons, to retrieve the latest value for the `start_url` field programmatically after expiry, call the [**Get a webinar**](/docs/api/rest/reference/zoom-api/methods#operation/webinar) API and refer to the value of the `start_url` field in the response.  \n   \n   \n ",
            "example": "https://example.com/s/11111",
            "x-ballerina-name": "startUrl"
          },
          "created_at": {
            "type": "string",
            "description": "Create time",
            "format": "date-time",
            "example": "2022-03-26T07:18:32Z",
            "x-ballerina-name": "createdAt"
          },
          "record_file_id": {
            "type": "string",
            "description": "The previously recorded file's ID for `simulive`",
            "example": "f09340e1-cdc3-4eae-9a74-98f9777ed908",
            "x-ballerina-name": "recordFileId"
          },
          "type": {
            "type": "integer",
            "description": "Webinar types.  \n `5` - Webinar.  \n `6` - Recurring webinar with no fixed time.  \n `9` - Recurring webinar with a fixed time",
            "example": 5,
            "default": 5,
            "enum": [
              5,
              6,
              9
            ],
            "x-enum-descriptions": [
              "Webinar",
              "Recurring Webinar with no fixed time",
              "Recurring Webinar with fixed time"
            ]
          },
          "registrants_confirmation_email": {
            "type": "boolean",
            "description": "Specify whether or not registrants of this webinar should receive confirmation emails",
            "example": true,
            "x-ballerina-name": "registrantsConfirmationEmail"
          },
          "uuid": {
            "type": "string",
            "description": "Unique identifier of a webinar. Each webinar instance will generate its own UUID. Ror example, after a webinar ends, a new UUID will be generated for the next instance of the Webinar). Once a Webinar ends, the value of the UUID for the same webinar will be different from when it was scheduled",
            "example": "Bznyg8KZTdCVbQxvS/oZ7w=="
          },
          "duration": {
            "type": "integer",
            "description": "Webinar duration",
            "example": 60
          },
          "password": {
            "maxLength": 10,
            "type": "string",
            "description": "The webinar passcode. By default, it can be up to 10 characters in length and may contain alphanumeric characters as well as special characters such as !, @, #, etc",
            "example": "123456"
          },
          "id": {
            "type": "integer",
            "description": "Webinar ID in **long** format, represented as int64 data type in JSON. Also known as the webinar number",
            "format": "int64",
            "example": 95204914252
          },
          "host_email": {
            "type": "string",
            "description": "Email address of the meeting host",
            "format": "email",
            "example": "jchill@example.com",
            "x-ballerina-name": "hostEmail"
          },
          "settings": {
            "$ref": "#/components/schemas/InlineResponse20114Settings"
          },
          "join_url": {
            "type": "string",
            "description": "URL to join the webinar. Only share this URL with the users who should be invited to the Webinar",
            "example": "https://example.com/j/11111",
            "x-ballerina-name": "joinUrl"
          },
          "agenda": {
            "type": "string",
            "description": "Webinar agenda",
            "example": "My Webinar"
          },
          "host_id": {
            "type": "string",
            "description": "ID of the user set as host of the webinar",
            "example": "30R7kT7bTIKSNUFEuH_Qlg",
            "x-ballerina-name": "hostId"
          },
          "recurrence": {
            "$ref": "#/components/schemas/RecurrenceWebinar2"
          },
          "start_time": {
            "type": "string",
            "description": "Webinar start time in GMT/UTC",
            "format": "date-time",
            "example": "2022-03-26T07:18:32Z",
            "x-ballerina-name": "startTime"
          },
          "tracking_fields": {
            "type": "array",
            "description": "Tracking fields",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20114TrackingFields"
            },
            "x-ballerina-name": "trackingFields"
          },
          "is_simulive": {
            "type": "boolean",
            "description": "Whether the webinar is `simulive`",
            "example": true,
            "x-ballerina-name": "isSimulive"
          },
          "creation_source": {
            "type": "string",
            "description": "The platform through which the meeting was created.\n* `other` - Created through another platform.\n* `open_api` - Created through Open API.\n* `web_portal` - Created through the web portal",
            "example": "open_api",
            "enum": [
              "other",
              "open_api",
              "web_portal"
            ],
            "x-ballerina-name": "creationSource"
          },
          "transition_to_live": {
            "type": "boolean",
            "description": "Whether to transition a simulive webinar to live. The host must be present at the time of transition",
            "example": false,
            "x-ballerina-name": "transitionToLive"
          },
          "encrypted_passcode": {
            "type": "string",
            "description": "Encrypted passcode for third party endpoints (H323/SIP)",
            "example": "8pEkRweVXPV3Ob2KJYgFTRlDtl1gSn.1",
            "x-ballerina-name": "encryptedPasscode"
          },
          "topic": {
            "maxLength": 200,
            "type": "string",
            "description": "Webinar topic",
            "example": "My Webinar"
          },
          "template_id": {
            "type": "string",
            "description": "Unique identifier of the webinar template. Use this field only if you would like to [schedule the webinar using an existing template](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates#schedule). The value of this field can be retrieved from [**List webinar templates**](/docs/api/rest/reference/zoom-api/methods#operation/listWebinarTemplates) API.\nYou must provide the user ID of the host instead of the email address in the `userId` path parameter in order to use a template for scheduling a Webinar",
            "example": "ull6574eur",
            "x-ballerina-name": "templateId"
          }
        },
        "description": "Webinar object"
      },
      "InlineResponse20117": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "description": "The virtual background file's size, in bytes",
            "example": 524288
          },
          "name": {
            "type": "string",
            "description": "The virtual background file's name",
            "example": "beach.jpg"
          },
          "id": {
            "type": "string",
            "description": "The virtual background file's ID",
            "example": "J0sFXN2PSOCGrqTqLRwgAQ"
          },
          "is_default": {
            "type": "boolean",
            "description": "Whether the file is the default virtual background file",
            "example": true,
            "x-ballerina-name": "isDefault"
          },
          "type": {
            "type": "string",
            "description": "The virtual background file's file type. \n* `image` - An image file",
            "example": "image",
            "enum": [
              "image"
            ]
          }
        }
      },
      "InlineResponse20116": {
        "type": "object",
        "properties": {
          "accent_color": {
            "type": "string",
            "description": "The name tag's accent color",
            "example": "0e72ed",
            "x-ballerina-name": "accentColor"
          },
          "background_color": {
            "type": "string",
            "description": "The name tag's background_color color",
            "example": "0e72ed",
            "x-ballerina-name": "backgroundColor"
          },
          "name": {
            "type": "string",
            "description": "The name tag's name",
            "example": "name"
          },
          "id": {
            "type": "string",
            "description": "The name tag's ID",
            "example": "J0sFXN2PSOCGrqTqLRwgAQ"
          },
          "text_color": {
            "type": "string",
            "description": "The name tag's text color",
            "example": "0e72ed",
            "x-ballerina-name": "textColor"
          },
          "is_default": {
            "type": "boolean",
            "description": "Whether the name tag is the default name tag or not",
            "example": true,
            "x-ballerina-name": "isDefault"
          }
        }
      },
      "InlineResponse20119": {
        "type": "object",
        "properties": {
          "updated_at": {
            "type": "string",
            "description": "The time when the panelist was added",
            "format": "date-time",
            "example": "2022-03-26T07:30:16Z",
            "x-ballerina-name": "updatedAt"
          },
          "id": {
            "type": "string",
            "description": "Webinar ID",
            "example": "95204914252"
          }
        }
      },
      "InlineResponse20118": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "description": "The wallpaper file's size, in bytes",
            "example": 262144
          },
          "name": {
            "type": "string",
            "description": "The wallpaper file's name",
            "example": "logo.jpg"
          },
          "id": {
            "type": "string",
            "description": "The wallpaper file's ID",
            "example": "zazQjwDuQkS3Q2EprNd7jQ"
          },
          "type": {
            "type": "string",
            "description": "The wallpaper file's file type. \n* `image` - An image file",
            "example": "image",
            "enum": [
              "image"
            ]
          }
        }
      },
      "RegistrantsRegistrantsAllOf112": {
        "type": "object",
        "description": " Registrant",
        "allOf": [
          {
            "required": [
              "email",
              "first_name"
            ],
            "type": "object",
            "properties": {
              "zip": {
                "type": "string",
                "description": "The registrant's ZIP or postal code",
                "example": "94045"
              },
              "country": {
                "type": "string",
                "description": "The registrant's two-letter ISO [country code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries)",
                "example": "US"
              },
              "custom_questions": {
                "type": "array",
                "description": "Information about custom questions",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "The title of the custom question.",
                      "example": "What do you hope to learn from this?"
                    },
                    "value": {
                      "maxLength": 128,
                      "type": "string",
                      "description": "The custom question's response value. This has a limit of 128 characters.",
                      "example": "Look forward to learning how you come up with new recipes and what other services you offer."
                    }
                  },
                  "description": "Information about custom questions."
                },
                "x-ballerina-name": "customQuestions"
              },
              "purchasing_time_frame": {
                "type": "string",
                "description": "The registrant's purchasing time frame. \n* `Within a month` \n* `1-3 months` \n* `4-6 months` \n* `More than 6 months` \n* `No timeframe`",
                "example": "1-3 months",
                "enum": [
                  "",
                  "Within a month",
                  "1-3 months",
                  "4-6 months",
                  "More than 6 months",
                  "No timeframe"
                ],
                "x-ballerina-name": "purchasingTimeFrame"
              },
              "address": {
                "type": "string",
                "description": "The registrant's address",
                "example": "1800 Amphibious Blvd."
              },
              "comments": {
                "type": "string",
                "description": "The registrant's questions and comments",
                "example": "Looking forward to the discussion."
              },
              "city": {
                "type": "string",
                "description": "The registrant's city",
                "example": "Mountain View"
              },
              "org": {
                "type": "string",
                "description": "The registrant's organization",
                "example": "Cooking Org"
              },
              "last_name": {
                "maxLength": 64,
                "type": "string",
                "description": "The registrant's last name",
                "example": "Chill",
                "x-ballerina-name": "lastName"
              },
              "no_of_employees": {
                "type": "string",
                "description": "The registrant's number of employees. \n* `1-20` \n* `21-50` \n* `51-100` \n* `101-250` \n* `251-500` \n* `501-1,000` \n* `1,001-5,000` \n* `5,001-10,000` \n* `More than 10,000`",
                "example": "1-20",
                "enum": [
                  "",
                  "1-20",
                  "21-50",
                  "51-100",
                  "101-250",
                  "251-500",
                  "501-1,000",
                  "1,001-5,000",
                  "5,001-10,000",
                  "More than 10,000"
                ],
                "x-ballerina-name": "noOfEmployees"
              },
              "industry": {
                "type": "string",
                "description": "The registrant's industry",
                "example": "Food"
              },
              "phone": {
                "type": "string",
                "description": "The registrant's phone number",
                "example": "5550100"
              },
              "role_in_purchase_process": {
                "type": "string",
                "description": "The registrant's role in the purchase process. \n* `Decision Maker` \n* `Evaluator/Recommender` \n* `Influencer` \n* `Not involved`",
                "example": "Influencer",
                "enum": [
                  "",
                  "Decision Maker",
                  "Evaluator/Recommender",
                  "Influencer",
                  "Not involved"
                ],
                "x-ballerina-name": "roleInPurchaseProcess"
              },
              "state": {
                "type": "string",
                "description": "The registrant's state or province",
                "example": "CA"
              },
              "first_name": {
                "maxLength": 64,
                "type": "string",
                "description": "The registrant's first name",
                "example": "Jill",
                "x-ballerina-name": "firstName"
              },
              "job_title": {
                "type": "string",
                "description": "The registrant's job title",
                "example": "Chef",
                "x-ballerina-name": "jobTitle"
              },
              "email": {
                "maxLength": 128,
                "type": "string",
                "description": "The registrant's email address. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for return value details",
                "format": "email",
                "example": "jchill@example.com"
              },
              "status": {
                "type": "string",
                "description": "The registrant's status. \n* `approved` - Registrant is approved. \n* `denied` - Registrant is denied. \n* `pending` - Registrant is waiting for approval",
                "example": "approved",
                "enum": [
                  "approved",
                  "denied",
                  "pending"
                ]
              }
            },
            "description": "Information about the registrant"
          }
        ]
      },
      "InlineResponse20025Questions": {
        "type": "object",
        "properties": {
          "question_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20025QuestionDetails"
            },
            "x-ballerina-name": "questionDetails"
          },
          "name": {
            "type": "string",
            "description": "Name of the user who submitted answers to the poll. If `anonymous` option is enabled for a poll, the participant's polling information will be kept anonymous and the value of `name` field will be `Anonymous Attendee`",
            "example": "Jill Chill"
          },
          "email": {
            "type": "string",
            "description": "Email address of the user who submitted answers to the poll. If the user is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details",
            "example": "jchill@example.com"
          }
        }
      },
      "H323SIPDeviceListAllOf1": {
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "description": "**Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination",
            "example": 1,
            "deprecated": true,
            "default": 1,
            "x-ballerina-name": "pageNumber"
          },
          "next_page_token": {
            "type": "string",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes",
            "example": "w7587w4eiyfsudgf",
            "x-ballerina-name": "nextPageToken"
          },
          "total_records": {
            "type": "integer",
            "description": "The total number of all the records available across pages",
            "example": 20,
            "x-ballerina-name": "totalRecords"
          },
          "page_count": {
            "type": "integer",
            "description": "The number of pages returned for the request made",
            "example": 1,
            "x-ballerina-name": "pageCount"
          },
          "page_size": {
            "maximum": 300,
            "type": "integer",
            "description": "The number of records returned with a single API call",
            "example": 30,
            "default": 30,
            "x-ballerina-name": "pageSize"
          }
        },
        "description": "Pagination Object"
      },
      "InlineResponse20038TrackingFields": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "Tracking fields type",
            "example": "Host Nation"
          },
          "value": {
            "type": "string",
            "description": "Tracking fields value",
            "example": "US"
          }
        }
      },
      "InlineResponse20055DialInNumbers": {
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 16,
            "type": "string",
            "description": "Dial-in number, length is less than 16",
            "example": "+1 1000200200"
          },
          "code": {
            "type": "string",
            "description": "Country Code",
            "example": "1"
          },
          "type": {
            "type": "string",
            "description": "Dial-in number type",
            "example": "toll"
          }
        }
      },
      "MeetingsmeetingIdregistrantsAllOf1": {
        "required": [
          "email",
          "first_name"
        ],
        "type": "object",
        "properties": {
          "zip": {
            "type": "string",
            "description": "The registrant's ZIP or postal code",
            "example": "94045"
          },
          "country": {
            "type": "string",
            "description": "The registrant's two-letter [country code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries)",
            "example": "US"
          },
          "custom_questions": {
            "type": "array",
            "description": "Information about custom questions",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdrecordingsregistrantsCustomQuestions"
            },
            "x-ballerina-name": "customQuestions"
          },
          "purchasing_time_frame": {
            "type": "string",
            "description": "The registrant's purchasing time frame: \n* `Within a month` \n* `1-3 months` \n* `4-6 months` \n* `More than 6 months` \n* `No timeframe`",
            "example": "1-3 months",
            "enum": [
              "",
              "Within a month",
              "1-3 months",
              "4-6 months",
              "More than 6 months",
              "No timeframe"
            ],
            "x-ballerina-name": "purchasingTimeFrame"
          },
          "address": {
            "type": "string",
            "description": "The registrant's address",
            "example": "1800 Amphibious Blvd."
          },
          "comments": {
            "type": "string",
            "description": "The registrant's questions and comments",
            "example": "Looking forward to the discussion."
          },
          "city": {
            "type": "string",
            "description": "The registrant's city",
            "example": "Mountain View"
          },
          "org": {
            "type": "string",
            "description": "The registrant's organization",
            "example": "Cooking Org"
          },
          "last_name": {
            "maxLength": 64,
            "type": "string",
            "description": "The registrant's last name",
            "example": "Chill",
            "x-ballerina-name": "lastName"
          },
          "no_of_employees": {
            "type": "string",
            "description": "The registrant's number of employees: \n* `1-20` \n* `21-50` \n* `51-100` \n* `101-500` \n* `500-1,000` \n* `1,001-5,000` \n* `5,001-10,000` \n* `More than 10,000`",
            "example": "1-20",
            "enum": [
              "",
              "1-20",
              "21-50",
              "51-100",
              "101-500",
              "500-1,000",
              "1,001-5,000",
              "5,001-10,000",
              "More than 10,000"
            ],
            "x-ballerina-name": "noOfEmployees"
          },
          "industry": {
            "type": "string",
            "description": "The registrant's industry",
            "example": "Food"
          },
          "phone": {
            "type": "string",
            "description": "The registrant's phone number",
            "example": "5550100"
          },
          "role_in_purchase_process": {
            "type": "string",
            "description": "The registrant's role in the purchase process: \n* `Decision Maker` \n* `Evaluator/Recommender` \n* `Influencer` \n* `Not involved`",
            "example": "Influencer",
            "enum": [
              "",
              "Decision Maker",
              "Evaluator/Recommender",
              "Influencer",
              "Not involved"
            ],
            "x-ballerina-name": "roleInPurchaseProcess"
          },
          "state": {
            "type": "string",
            "description": "The registrant's state or province",
            "example": "CA"
          },
          "first_name": {
            "maxLength": 64,
            "type": "string",
            "description": "The registrant's first name",
            "example": "Jill",
            "x-ballerina-name": "firstName"
          },
          "job_title": {
            "type": "string",
            "description": "The registrant's job title",
            "example": "Chef",
            "x-ballerina-name": "jobTitle"
          },
          "email": {
            "maxLength": 128,
            "type": "string",
            "description": "The registrant's email address",
            "format": "email",
            "example": "jchill@example.com"
          }
        },
        "description": "Information about the registrant"
      },
      "InlineResponse20071CustomQuestions": {
        "type": "object",
        "properties": {
          "answers": {
            "type": "array",
            "description": "An array of answer choices. Can't be used for short answer type",
            "items": {
              "type": "string",
              "example": "Good"
            }
          },
          "title": {
            "type": "string",
            "description": "Custom question",
            "example": "How are you?"
          },
          "type": {
            "type": "string",
            "description": "The question-answer type",
            "example": "short",
            "enum": [
              "short",
              "single_radio",
              "single_dropdown",
              "multiple"
            ],
            "x-enum-descriptions": [
              "Short Answer",
              "Single Radio Answer",
              "Single Dropdown Answer",
              "Multiple Answer"
            ]
          },
          "required": {
            "type": "boolean",
            "description": "State whether or not the custom question is required to be answered by a registrant",
            "example": true
          }
        }
      },
      "InlineResponse20120": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InlineResponse20120AllOf1"
          },
          {
            "$ref": "#/components/schemas/MeetingAndWebinarPollingObject5"
          }
        ]
      },
      "InlineResponse20122": {
        "type": "object",
        "properties": {
          "participant_identifier_code": {
            "type": "string",
            "description": "This value identifies the webinar participant. It is automatically embedded in the SIP URI if the API caller has a CRC plan",
            "example": "30qonrvgy",
            "x-ballerina-name": "participantIdentifierCode"
          },
          "paid_crc_plan_participant": {
            "type": "boolean",
            "description": "Whether the API caller has a Conference Room Connector (CRC) plan",
            "example": true,
            "x-ballerina-name": "paidCrcPlanParticipant"
          },
          "sip_dialing": {
            "type": "string",
            "description": "The webinar's encoded SIP URI",
            "example": "9678722567.xxxx....30qonrvgy@zoomcrc.com",
            "x-ballerina-name": "sipDialing"
          },
          "expire_in": {
            "type": "integer",
            "description": "The number of seconds the encoded SIP URI is valid before it expires",
            "format": "int64",
            "example": 7200,
            "x-ballerina-name": "expireIn"
          }
        },
        "description": "Information about the webinar's encoded SIP URI"
      },
      "InlineResponse20121": {
        "type": "object",
        "properties": {
          "occurrences": {
            "type": "array",
            "description": "Array of occurrence objects",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20121Occurrences"
            }
          },
          "start_time": {
            "type": "string",
            "description": "The webinar's start time",
            "format": "date-time",
            "example": "2021-07-13T21:44:51Z",
            "x-ballerina-name": "startTime"
          },
          "join_url": {
            "type": "string",
            "description": "The URL the registrant can use to join the webinar",
            "example": "https://example.com/j/22222",
            "x-ballerina-name": "joinUrl"
          },
          "registrant_id": {
            "type": "string",
            "description": "The registrant's ID",
            "example": "fdgsfh2ey82fuh",
            "x-ballerina-name": "registrantId"
          },
          "topic": {
            "maxLength": 200,
            "type": "string",
            "description": "The webinar's topic",
            "example": "My Webinar"
          },
          "id": {
            "type": "integer",
            "description": "The webinar's ID",
            "format": "int64",
            "example": 92674392836
          }
        }
      },
      "MeetingIdMeetingIdOneOf12": {
        "type": "string",
        "example": "4444AAAiAAAAAiAiAiiAii=="
      },
      "RegistrantsRegistrantsAllOf122": {
        "type": "object",
        "description": " Registrant",
        "allOf": [
          {
            "required": [
              "email",
              "first_name"
            ],
            "type": "object",
            "properties": {
              "zip": {
                "type": "string",
                "description": "The registrant's ZIP or postal code",
                "example": "94045"
              },
              "country": {
                "type": "string",
                "description": "The registrant's two-letter ISO [country code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries)",
                "example": "US"
              },
              "custom_questions": {
                "type": "array",
                "description": "Information about custom questions",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "The title of the custom question.",
                      "example": "What do you hope to learn from this?"
                    },
                    "value": {
                      "maxLength": 128,
                      "type": "string",
                      "description": "The custom question's response value. This has a limit of 128 characters.",
                      "example": "Look forward to learning how you come up with new recipes and what other services you offer."
                    }
                  },
                  "description": "Information about custom questions."
                },
                "x-ballerina-name": "customQuestions"
              },
              "purchasing_time_frame": {
                "type": "string",
                "description": "The registrant's purchasing time frame. \n* `Within a month.` \n* `1-3 months.` \n* `4-6 months.` \n* `More than 6 months.` \n* `No timeframe.`",
                "example": "1-3 months",
                "enum": [
                  "",
                  "Within a month",
                  "1-3 months",
                  "4-6 months",
                  "More than 6 months",
                  "No timeframe"
                ],
                "x-ballerina-name": "purchasingTimeFrame"
              },
              "address": {
                "type": "string",
                "description": "The registrant's address",
                "example": "1800 Amphibious Blvd."
              },
              "comments": {
                "type": "string",
                "description": "The registrant's questions and comments",
                "example": "Looking forward to the discussion."
              },
              "city": {
                "type": "string",
                "description": "The registrant's city",
                "example": "Mountain View"
              },
              "org": {
                "type": "string",
                "description": "The registrant's organization",
                "example": "Cooking Org"
              },
              "last_name": {
                "maxLength": 64,
                "type": "string",
                "description": "The registrant's last name",
                "example": "Chill",
                "x-ballerina-name": "lastName"
              },
              "no_of_employees": {
                "type": "string",
                "description": "The registrant's number of employees. \n* `1-20` \n* `21-50` \n* `51-100` \n* `101-250` \n* `251-500` \n* `501-1,000` \n* `1,001-5,000` \n* `5,001-10,000` \n* `More than 10,000`",
                "example": "1-20",
                "enum": [
                  "",
                  "1-20",
                  "21-50",
                  "51-100",
                  "101-250",
                  "251-500",
                  "501-1,000",
                  "1,001-5,000",
                  "5,001-10,000",
                  "More than 10,000"
                ],
                "x-ballerina-name": "noOfEmployees"
              },
              "industry": {
                "type": "string",
                "description": "The registrant's industry",
                "example": "Food"
              },
              "phone": {
                "type": "string",
                "description": "The registrant's phone number",
                "example": "5550100"
              },
              "role_in_purchase_process": {
                "type": "string",
                "description": "The registrant's role in the purchase process. \n* `Decision maker` \n* `Evaluator/Recommender.` \n* `Influencer.` \n* `Not involved.`",
                "example": "Influencer",
                "enum": [
                  "",
                  "Decision Maker",
                  "Evaluator/Recommender",
                  "Influencer",
                  "Not involved"
                ],
                "x-ballerina-name": "roleInPurchaseProcess"
              },
              "state": {
                "type": "string",
                "description": "The registrant's state or province",
                "example": "CA"
              },
              "first_name": {
                "maxLength": 64,
                "type": "string",
                "description": "The registrant's first name",
                "example": "Jill",
                "x-ballerina-name": "firstName"
              },
              "job_title": {
                "type": "string",
                "description": "The registrant's job title",
                "example": "Chef",
                "x-ballerina-name": "jobTitle"
              },
              "email": {
                "maxLength": 128,
                "type": "string",
                "description": "The registrant's email address. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for return value details",
                "format": "email",
                "example": "jchill@example.com"
              },
              "status": {
                "type": "string",
                "description": "The registrant's status. \n* `approved` - Registrant is approved. \n* `denied` - Registrant is denied. \n* `pending` - Registrant is waiting for approval",
                "example": "approved",
                "enum": [
                  "approved",
                  "denied",
                  "pending"
                ]
              }
            },
            "description": "Information about the registrant"
          }
        ]
      },
      "MeetingAndWebinarPollingObject": {
        "title": "Meeting and Webinar Polling Object",
        "type": "object",
        "properties": {
          "questions": {
            "type": "array",
            "description": "The information about the poll's questions",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdpollspollIdQuestions"
            }
          },
          "anonymous": {
            "type": "boolean",
            "description": "Whether meeting participants answer poll questions anonymously. \n\nThis value defaults to `false`",
            "example": true,
            "default": false
          },
          "poll_type": {
            "type": "integer",
            "description": "The type of poll. \n* `1` - Poll. \n* `2` - Advanced Poll. This feature must be enabled in your Zoom account. \n* `3` - Quiz. This feature must be enabled in your Zoom account. \n\n This value defaults to `1`",
            "example": 2,
            "enum": [
              1,
              2,
              3
            ],
            "x-ballerina-name": "pollType"
          },
          "title": {
            "maxLength": 64,
            "type": "string",
            "description": "The poll's title, up to 64 characters",
            "example": "Learn something new"
          }
        },
        "description": "The information about meeting and webinar polling"
      },
      "MeetingsmeetingIdSettingsBreakoutRoom": {
        "type": "object",
        "properties": {
          "rooms": {
            "type": "array",
            "description": "Create room(s)",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdSettingsBreakoutRoomRooms"
            }
          },
          "enable": {
            "type": "boolean",
            "description": "Set this field's value to `true` to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option",
            "example": true
          }
        },
        "description": "Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4)"
      },
      "SipPhonesBody": {
        "required": [
          "authorization_name",
          "domain",
          "password",
          "proxy_server",
          "register_server",
          "user_email",
          "user_name"
        ],
        "type": "object",
        "properties": {
          "register_server3": {
            "type": "string",
            "description": "The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address",
            "example": "192.0.2.5",
            "x-ballerina-name": "registerServer3"
          },
          "user_email": {
            "maxLength": 64,
            "type": "string",
            "description": "The email address of the user to associate with the SIP Phone. Can add `.win`, `.mac`, `.android`, `.ipad`, `.iphone`, `.linux`, `.pc`, `.mobile`, `.pad` at the end of the email (for example, `user@example.com.mac`) to add accounts for different platforms for the same user",
            "format": "email",
            "example": "jchill@example.com",
            "x-ballerina-name": "userEmail"
          },
          "transport_protocol3": {
            "type": "string",
            "description": "Protocols supported by the SIP provider.  \n  The value must be either `UDP`, `TCP`, `TLS`, `AUTO`",
            "example": "UDP",
            "enum": [
              "UDP",
              "TCP",
              "TLS",
              "AUTO"
            ],
            "x-ballerina-name": "transportProtocol3"
          },
          "user_name": {
            "maxLength": 64,
            "type": "string",
            "description": "The phone number associated with the user in the SIP account",
            "example": "Jill Chill",
            "x-ballerina-name": "userName"
          },
          "register_server2": {
            "type": "string",
            "description": "The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address",
            "example": "192.0.2.3",
            "x-ballerina-name": "registerServer2"
          },
          "transport_protocol2": {
            "type": "string",
            "description": "Protocols supported by the SIP provider.  \n  The value must be either `UDP`, `TCP`, `TLS`, `AUTO`",
            "example": "UDP",
            "enum": [
              "UDP",
              "TCP",
              "TLS",
              "AUTO"
            ],
            "x-ballerina-name": "transportProtocol2"
          },
          "proxy_server": {
            "type": "string",
            "description": "The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server",
            "example": "192.0.2.2",
            "x-ballerina-name": "proxyServer"
          },
          "proxy_server2": {
            "type": "string",
            "description": "The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty",
            "example": "192.0.2.4",
            "x-ballerina-name": "proxyServer2"
          },
          "proxy_server3": {
            "type": "string",
            "description": "The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty",
            "example": "192.0.2.6",
            "x-ballerina-name": "proxyServer3"
          },
          "registration_expire_time": {
            "maximum": 127,
            "minimum": 1,
            "type": "integer",
            "description": "The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server",
            "example": 60,
            "default": 60,
            "x-ballerina-name": "registrationExpireTime"
          },
          "password": {
            "type": "string",
            "description": "The password generated for the user in the SIP account",
            "example": "123456"
          },
          "voice_mail": {
            "maxLength": 255,
            "type": "string",
            "description": "The number to dial for checking voicemail",
            "example": "4000",
            "x-ballerina-name": "voiceMail"
          },
          "domain": {
            "maxLength": 64,
            "type": "string",
            "description": "The name or IP address of your provider's SIP domain (example: CDC.WEB). ",
            "example": "example.com"
          },
          "register_server": {
            "type": "string",
            "description": "The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address",
            "example": "192.0.2.1",
            "x-ballerina-name": "registerServer"
          },
          "authorization_name": {
            "maxLength": 64,
            "type": "string",
            "description": "The authorization name of the user that is registered for SIP phone",
            "example": "testname",
            "x-ballerina-name": "authorizationName"
          },
          "transport_protocol": {
            "type": "string",
            "description": "Protocols supported by the SIP provider.  \n  The value must be either `UDP`, `TCP`, `TLS`, `AUTO`",
            "example": "UDP",
            "enum": [
              "UDP",
              "TCP",
              "TLS",
              "AUTO"
            ],
            "x-ballerina-name": "transportProtocol"
          }
        }
      },
      "InlineResponse20035Dates": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date for this object",
            "format": "date",
            "example": "2022-03-01"
          },
          "meeting_minutes": {
            "type": "integer",
            "description": "Number of meeting minutes on this date",
            "example": 34,
            "x-ballerina-name": "meetingMinutes"
          },
          "meetings": {
            "type": "integer",
            "description": "Number of meetings on this date",
            "example": 2
          },
          "new_users": {
            "type": "integer",
            "description": "Number of new users on this date",
            "example": 3,
            "x-ballerina-name": "newUsers"
          },
          "participants": {
            "type": "integer",
            "description": "Number of participants on this date",
            "example": 4
          }
        }
      },
      "UsersuserIdtspDialInNumbers": {
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "Dial-in number: length is less than 16",
            "example": "+1 1000200200"
          },
          "code": {
            "maxLength": 6,
            "type": "string",
            "description": "Country code",
            "example": "1"
          },
          "country_label": {
            "maxLength": 10,
            "type": "string",
            "description": "Country Label, if passed, will display in place of code",
            "example": "America",
            "x-ballerina-name": "countryLabel"
          },
          "type": {
            "type": "string",
            "description": "Dial-in number types:  \n `toll` - Toll number.  \n `tollfree` -Toll free number.  \n \n`media_link` - Media link",
            "example": "toll",
            "enum": [
              "toll",
              "tollfree",
              "media_link"
            ],
            "x-enum-descriptions": [
              "Toll number <br/>",
              "Toll free number <br/>",
              "Media link phone number <br/>"
            ]
          }
        }
      },
      "H323SIPDeviceListDevices": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DevicesAllOf1"
          },
          {
            "$ref": "#/components/schemas/TheH323SIPDeviceObject3"
          }
        ]
      },
      "RegistrantsRegistrantsRegistrantsAllOf1123": {
        "type": "object",
        "properties": {
          "join_url": {
            "type": "string",
            "description": "The URL that an approved registrant can use to join the meeting or webinar",
            "format": "string",
            "example": "https://example.com/j/11111",
            "x-ballerina-name": "joinUrl"
          },
          "create_time": {
            "type": "string",
            "description": "The time when the registrant registered",
            "format": "date-time",
            "example": "2022-03-22T05:59:09Z",
            "x-ballerina-name": "createTime"
          },
          "status": {
            "type": "string",
            "description": "The status of the registrant's registration.\n  `approved` - User has been successfully approved for the webinar.  \n  `pending` -  The registration is still pending.  \n  `denied` - User has been denied from joining the webinar",
            "example": "approved"
          }
        }
      },
      "MeetingsmeetingIdpollspollIdQuestions": {
        "type": "object",
        "properties": {
          "answer_required": {
            "type": "boolean",
            "description": "Whether participants must answer the question. \n* `true` - The participant must answer the question. \n* `false` - The participant does not need to answer the question. \n\n**Note:** \n* When the poll's `type` value is `1` (Poll), this value defaults to `true`. \n* When the poll's `type` value is the `2` (Advanced Poll) or `3` (Quiz) values, this value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "answerRequired"
          },
          "answer_min_character": {
            "minimum": 1,
            "type": "integer",
            "description": "The allowed minimum number of characters. This field only applies to `short_answer` and `long_answer` polls. You must provide at least a one character minimum value",
            "example": 1,
            "x-ballerina-name": "answerMinCharacter"
          },
          "rating_min_value": {
            "minimum": 0,
            "type": "integer",
            "description": "The rating scale's minimum value. This value cannot be less than zero. \n\nThis field only applies to the `rating_scale` poll",
            "example": 0,
            "x-ballerina-name": "ratingMinValue"
          },
          "answers": {
            "minItems": 2,
            "type": "array",
            "description": "The poll question's available answers. This field requires a **minimum** of two answers. \n\n* For `single` and `multiple` polls, you can only provide a maximum of 10 answers. \n* For `matching` polls, you can only provide a maximum of 16 answers. \n* For `rank_order` polls, you can only provide a maximum of seven answers",
            "items": {
              "type": "string",
              "example": "Extremely useful"
            }
          },
          "type": {
            "type": "string",
            "description": "The poll's question and answer type. \n* `single` - Single choice. \n* `multiple` - Multiple choice. \n* `matching` - Matching. \n* `rank_order` - Rank order. \n* `short_answer` - Short answer. \n* `long_answer` - Long answer. \n* `fill_in_the_blank` - Fill in the blank. \n* `rating_scale` - Rating scale",
            "example": "single",
            "enum": [
              "single",
              "multiple",
              "matching",
              "rank_order",
              "short_answer",
              "long_answer",
              "fill_in_the_blank",
              "rating_scale"
            ],
            "x-enum-descriptions": [
              "Single choice",
              "Multiple choice",
              "Matching",
              "Rank order",
              "Short answer",
              "Long answer",
              "Fill in the blank",
              "Rating scale"
            ]
          },
          "answer_max_character": {
            "type": "integer",
            "description": "The allowed maximum number of characters. This field only applies to `short_answer` and `long_answer` polls. \n* For `short_answer` polls, a maximum of 500 characters. \n* For `long_answer` polls, a maximum of 2,000 characters",
            "example": 200,
            "x-ballerina-name": "answerMaxCharacter"
          },
          "rating_max_value": {
            "maximum": 10,
            "type": "integer",
            "description": "The rating scale's maximum value, up to a maximum value of 10. \n\nThis field only applies to the `rating_scale` poll",
            "example": 4,
            "x-ballerina-name": "ratingMaxValue"
          },
          "right_answers": {
            "minItems": 1,
            "type": "array",
            "description": "The poll question's correct answer(s). This field is **required** if the poll's `type` value is `3` (Quiz). \n\n For `single` and `matching` polls, this field only accepts one answer",
            "items": {
              "type": "string",
              "example": "Good"
            },
            "x-ballerina-name": "rightAnswers"
          },
          "show_as_dropdown": {
            "type": "boolean",
            "description": "Whether to display the radio selection as a drop-down box. \n* `true` - Show as a drop-down box. \n* `false` - Do not show as a drop-down box. \n\nThis value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "showAsDropdown"
          },
          "rating_min_label": {
            "type": "string",
            "description": "The low score label for the `rating_min_value` field. \n\nThis field only applies to the `rating_scale` poll",
            "example": "Not likely",
            "x-ballerina-name": "ratingMinLabel"
          },
          "case_sensitive": {
            "type": "boolean",
            "description": "Whether the correct answer is case sensitive. This field only applies to `fill_in_the_blank` polls: \n* `true` - The answer is case-sensitive. \n* `false` - The answer is not case-sensitive. \n\nThis value defaults to `false`",
            "example": false,
            "default": false,
            "x-ballerina-name": "caseSensitive"
          },
          "name": {
            "maxLength": 1024,
            "type": "string",
            "description": "The poll question, up to 1024 characters. \n\nFor `fill_in_the_blank` polls, this field is the poll's question. For each value that the user must fill in, ensure that there are the same number of `right_answers` values",
            "example": "How useful was this meeting?"
          },
          "rating_max_label": {
            "type": "string",
            "description": "The high score label for the `rating_max_value` field. \n\nThis field only applies to the `rating_scale` poll",
            "example": "Extremely Likely",
            "x-ballerina-name": "ratingMaxLabel"
          },
          "prompts": {
            "type": "array",
            "description": "The information about the prompt questions. This field only applies to `matching` and `rank_order` polls. You must provide a minimum of two prompts, up to a maximum of 10 prompts",
            "items": {
              "$ref": "#/components/schemas/MeetingsmeetingIdbatchPollsPrompts"
            }
          }
        }
      },
      "InlineResponse20050Questions": {
        "type": "object",
        "properties": {
          "question_details": {
            "type": "array",
            "description": "Information about the user's questions and answers",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20050QuestionDetails"
            },
            "x-ballerina-name": "questionDetails"
          },
          "name": {
            "type": "string",
            "description": "The participant's display name. **Allow participants to answer questions anonymously** setting is enabled for a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet), the participant's polling information is kept anonymous and the `name` field will return the &quot;Anonymous Attendee&quot; value",
            "example": "Jill Chill"
          },
          "last_name": {
            "type": "string",
            "description": "The participant's last name. If the **Allow participants to answer questions anonymously** setting is enabled for a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet), the participant's polling information is kept anonymous and the `last_name` field will return the &quot;Anonymous Attendee&quot; value",
            "example": "Chill",
            "x-ballerina-name": "lastName"
          },
          "first_name": {
            "type": "string",
            "description": "The participant's first name. If the **Allow participants to answer questions anonymously** setting is enabled for a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet), the participant's polling information is kept anonymous and the `first_name` field will return the &quot;Anonymous Attendee&quot; value",
            "example": "Jill",
            "x-ballerina-name": "firstName"
          },
          "email": {
            "type": "string",
            "description": "The participant's email address",
            "format": "email",
            "example": "jchill@example.com"
          }
        }
      },
      "MeetingsmeetingIdrecordingsregistrantsstatusRegistrants": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "3Z7sEm0TQQieLav3c3OD_g"
          }
        }
      },
      "InlineResponse20010": {
        "type": "object",
        "properties": {
          "app_versions": {
            "maxItems": 3,
            "type": "array",
            "description": "List of app versions that can be upgraded",
            "items": {
              "type": "string",
              "description": "The app version.",
              "example": "5.16.5.3920"
            },
            "x-ballerina-name": "appVersions"
          },
          "firmware_versions": {
            "maxItems": 3,
            "type": "array",
            "description": "List of firmware that can be upgraded",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20010FirmwareVersions"
            },
            "x-ballerina-name": "firmwareVersions"
          }
        },
        "description": "Information about the version list"
      },
      "InlineResponse20012": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes",
            "example": "Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3",
            "x-ballerina-name": "nextPageToken"
          },
          "from": {
            "type": "string",
            "description": "The start date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to retrieve the creation date range of the meeting summaries",
            "format": "date-time",
            "example": "2023-10-19T07:00:00Z"
          },
          "to": {
            "type": "string",
            "description": "The end date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to retrieve the creation date range of the meeting summaries",
            "format": "date-time",
            "example": "2023-10-20T07:00:00Z"
          },
          "page_size": {
            "maximum": 300,
            "type": "integer",
            "description": "The number of records returned with a single API call",
            "example": 30,
            "default": 30,
            "x-ballerina-name": "pageSize"
          },
          "summaries": {
            "type": "array",
            "description": "List of meeting summary objects",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20012Summaries"
            }
          }
        }
      },
      "InlineResponse20011": {
        "type": "object",
        "properties": {
          "room_id": {
            "type": "string",
            "description": "The Zoom Room's ID",
            "example": "72afdc13-a289-40c3-b358-50c8b8de",
            "x-ballerina-name": "roomId"
          },
          "connected_to_zdm": {
            "type": "boolean",
            "description": "Whether the device is connected to ZDM (Zoom Device Management)",
            "example": true,
            "x-ballerina-name": "connectedToZdm"
          },
          "device_status": {
            "type": "integer",
            "description": "Filter devices by status.  \n Device Status:  \n `0` - offline.  \n `1` - online.  \n `-1` - unlink",
            "example": 0,
            "enum": [
              -1,
              0,
              1
            ],
            "x-ballerina-name": "deviceStatus"
          },
          "enrolled_in_zdm": {
            "type": "boolean",
            "description": "Whether the device is enrolled in ZDM (Zoom Device Management)",
            "example": true,
            "x-ballerina-name": "enrolledInZdm"
          },
          "user_email": {
            "type": "string",
            "description": "The phone device's owner",
            "example": "test-user@ya.us",
            "x-ballerina-name": "userEmail"
          },
          "device_id": {
            "type": "string",
            "description": "The device's unique identifier",
            "example": "F1C6E9DF-429E-4FA1-85DA-AC95464F3D18",
            "x-ballerina-name": "deviceId"
          },
          "app_version": {
            "type": "string",
            "description": "App version of Zoom Rooms",
            "example": "5.13.0.5762",
            "x-ballerina-name": "appVersion"
          },
          "serial_number": {
            "type": "string",
            "description": "The device's serial number",
            "example": "6NRN2A0",
            "x-ballerina-name": "serialNumber"
          },
          "device_type": {
            "type": "integer",
            "description": "Filter devices by device type.  \nDevice Type:  \n `-1` - All Zoom Room device(0,1,2,3,4,6).  \n `0` - Zoom Rooms Computer.  \n `1` - Zoom Rooms Controller.  \n `2` - Zoom Rooms Scheduling Display.  \n `3` - Zoom Rooms Control System.  \n `4` - Zoom Rooms Whiteboard.  \n `5` - Zoom Phone Appliance.  \n `6` - Zoom Rooms Computer (with Controller)",
            "example": 0,
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "x-ballerina-name": "deviceType"
          },
          "last_online": {
            "type": "string",
            "description": "The time when the device was last online",
            "example": "2022-10-27T10:23:15Z",
            "x-ballerina-name": "lastOnline"
          },
          "platform_os": {
            "type": "string",
            "description": "The device's platform",
            "example": "Epos expandvision5 1.2.22315.04",
            "x-ballerina-name": "platformOs"
          },
          "room_name": {
            "type": "string",
            "description": "The Zoom Room's name",
            "example": "My Personal Meeting Room",
            "x-ballerina-name": "roomName"
          },
          "device_name": {
            "type": "string",
            "description": "The name of the device",
            "example": "My device",
            "x-ballerina-name": "deviceName"
          },
          "mac_address": {
            "type": "string",
            "description": "The device's MAC address",
            "example": "01-23-45-67-89-AB",
            "x-ballerina-name": "macAddress"
          },
          "vendor": {
            "type": "string",
            "description": "The device's manufacturer",
            "example": "Poly"
          },
          "sdk_version": {
            "type": "string",
            "description": "The SDK version",
            "example": "2.0.11",
            "x-ballerina-name": "sdkVersion"
          },
          "model": {
            "type": "string",
            "description": "The device's model",
            "example": "StudioX30"
          },
          "tag": {
            "type": "string",
            "description": "The tag's name",
            "example": "personal rooms"
          }
        },
        "description": "Information about the device"
      },
      "PhonesphoneIdBody": {
        "type": "object",
        "properties": {
          "server": {
            "$ref": "#/components/schemas/SipPhonesphonesServer"
          },
          "password": {
            "type": "string",
            "description": "The password generated for the user in the SIP account",
            "example": "123456"
          },
          "server_3": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipPhonesphonesServer"
              }
            ],
            "x-ballerina-name": "server3"
          },
          "voice_mail": {
            "maxLength": 255,
            "type": "string",
            "description": "The number to dial for checking voicemail",
            "example": "4000",
            "x-ballerina-name": "voiceMail"
          },
          "server_2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SipPhonesphonesServer"
              }
            ],
            "x-ballerina-name": "server2"
          },
          "user_name": {
            "maxLength": 64,
            "type": "string",
            "description": "The phone number associated with the user in the SIP account",
            "example": "Jill Chill",
            "x-ballerina-name": "userName"
          },
          "domain": {
            "maxLength": 64,
            "type": "string",
            "description": "The name or IP address of your provider's SIP domain, such as example.com. ",
            "example": "example.com"
          },
          "display_number": {
            "maxLength": 64,
            "type": "string",
            "description": "The displayed phone number associated with the user can be either in extension format or E.164 format. You can specify the displayed number when the dialable number differs from the SIP username",
            "example": "5551110105",
            "x-ballerina-name": "displayNumber"
          },
          "authorization_name": {
            "maxLength": 64,
            "type": "string",
            "description": "The authorization name of the user that is registered for SIP phone",
            "example": "testname",
            "x-ballerina-name": "authorizationName"
          },
          "registration_expire_time": {
            "maximum": 127,
            "minimum": 1,
            "type": "integer",
            "description": "The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server",
            "example": 60,
            "default": 60,
            "x-ballerina-name": "registrationExpireTime"
          }
        }
      },
      "InlineResponse20014": {
        "type": "object",
        "properties": {
          "expire_in": {
            "type": "integer",
            "description": "The number of seconds the join token is valid for before it expires. This value always returns `120`",
            "format": "int64",
            "example": 120,
            "enum": [
              120
            ],
            "x-ballerina-name": "expireIn"
          },
          "token": {
            "type": "string",
            "description": "The join token",
            "example": "2njt50mj"
          }
        },
        "description": "Information about the meeting's join token"
      },
      "InlineResponse20013": {
        "type": "object",
        "properties": {
          "occurrences": {
            "type": "array",
            "description": "Array of occurrence objects",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20013Occurrences"
            }
          },
          "chat_join_url": {
            "type": "string",
            "description": "The URL to join the chat",
            "example": "https://example.com/launch/jc/11111",
            "x-ballerina-name": "chatJoinUrl"
          },
          "assistant_id": {
            "type": "string",
            "description": "The ID of the user who scheduled this meeting on behalf of the host",
            "example": "kFFvsJc-Q1OSxaJQLvaa_A",
            "x-ballerina-name": "assistantId"
          },
          "timezone": {
            "type": "string",
            "description": "The timezone to format the meeting start time",
            "example": "America/Los_Angeles"
          },
          "start_url": {
            "type": "string",
            "description": "The `start_url` of a meeting is a URL that a host or an alternative host can start the meeting. \n\nThe expiration time for the `start_url` field listed in the response of the [**Create a meeting**](/docs/api/rest/reference/zoom-api/methods#operation/meetingCreate) API is two hours for all regular users. \n\t\nFor users created using the `custCreate` option via the [**Create users**](/docs/api/rest/reference/zoom-api/methods#operation/userCreate) API, the expiration time of the `start_url` field is 90 days.\n\t\nFor security reasons, to retrieve the updated value for the `start_url` field programmatically after the expiry time, you must call the [**Get a meeting](/docs/api/rest/reference/zoom-api/methods#operation/meeting) API and refer to the value of the `start_url` field in the response.  \n This URL should only be used by the host of the meeting and **should not be shared with anyone other than the host** of the meeting as anyone with this URL will be able to login to the Zoom Client as the host of the meeting",
            "example": "https://example.com/s/11111",
            "x-ballerina-name": "startUrl"
          },
          "created_at": {
            "type": "string",
            "description": "The creation time. ",
            "format": "date-time",
            "example": "2022-03-25T07:29:29Z",
            "x-ballerina-name": "createdAt"
          },
          "type": {
            "type": "integer",
            "description": "The type of meeting. \n* `1` - An instant meeting. \n* `2` - A scheduled meeting. \n* `3` - A recurring meeting with no fixed time. \n* `4` - A PMI Meeting. \n* `8` - A recurring meeting with fixed time. \n* `10` - A screen share only meeting",
            "example": 2,
            "default": 2,
            "enum": [
              1,
              2,
              3,
              4,
              8,
              10
            ]
          },
          "uuid": {
            "type": "string",
            "description": "Unique meeting ID. Each meeting instance generates its own meeting UUID - after a meeting ends, a new UUID is generated for the next instance of the meeting. Retrieve a list of UUIDs from past meeting instances using the [**List past meeting instances**](/docs/api/rest/reference/zoom-api/methods#operation/pastMeetings) API. [Double encode](/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a `/` or contains `//` in it\n",
            "example": "aDYlohsHRtCd4ii1uC2+hA=="
          },
          "pmi": {
            "type": "string",
            "description": "[Personal meeting ID (PMI)](/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi). Only used for scheduled meetings and recurring meetings with no fixed time",
            "example": "97891943927"
          },
          "duration": {
            "type": "integer",
            "description": "The meeting duration",
            "example": 60
          },
          "password": {
            "minimum": 8,
            "type": "string",
            "description": "Meeting passcode",
            "example": "123456"
          },
          "id": {
            "type": "integer",
            "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in **long** format, represented as int64 data type in JSON, also known as the meeting number",
            "format": "int64",
            "example": 97763643886
          },
          "host_email": {
            "type": "string",
            "description": "The meeting host's email address",
            "format": "email",
            "example": "jchill@example.com",
            "x-ballerina-name": "hostEmail"
          },
          "encrypted_password": {
            "type": "string",
            "description": "Encrypted passcode for third party endpoints (H323/SIP)",
            "example": "8pEkRweVXPV3Ob2KJYgFTRlDtl1gSn.1",
            "x-ballerina-name": "encryptedPassword"
          },
          "settings": {
            "$ref": "#/components/schemas/InlineResponse20013Settings"
          },
          "join_url": {
            "type": "string",
            "description": "The URL for participants to join the meeting. This URL should only be shared with users invited to the meeting",
            "example": "https://example.com/j/11111",
            "x-ballerina-name": "joinUrl"
          },
          "pstn_password": {
            "type": "string",
            "description": "Password for participants to join the meeting via [PSTN](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)",
            "example": "123456",
            "x-ballerina-name": "pstnPassword"
          },
          "pre_schedule": {
            "type": "boolean",
            "description": "Whether the prescheduled meeting was created via the [GSuite app](https://support.zoom.us/hc/en-us/articles/360020187492-Zoom-for-GSuite-add-on). This **only** supports the meeting `type` value of `2` (scheduled meetings) and `3` (recurring meetings with no fixed time). \n* `true` - A GSuite prescheduled meeting. \n* `false` - A regular meeting",
            "example": false,
            "default": false,
            "x-ballerina-name": "preSchedule"
          },
          "agenda": {
            "maxLength": 2000,
            "type": "string",
            "description": "The meeting description",
            "example": "My Meeting"
          },
          "host_id": {
            "type": "string",
            "description": "The ID of the user who is set as the meeting host",
            "example": "30R7kT7bTIKSNUFEuH_Qlg",
            "x-ballerina-name": "hostId"
          },
          "recurrence": {
            "$ref": "#/components/schemas/InlineResponse20013Recurrence"
          },
          "start_time": {
            "type": "string",
            "description": "Meeting start time in GMT or UTC. Start time will not be returned if the meeting is an **instant** meeting. \n",
            "format": "date-time",
            "example": "2022-03-25T07:29:29Z",
            "x-ballerina-name": "startTime"
          },
          "dynamic_host_key": {
            "type": "string",
            "description": "The meeting dynamic host key",
            "example": "123456",
            "x-ballerina-name": "dynamicHostKey"
          },
          "tracking_fields": {
            "type": "array",
            "description": "Tracking fields",
            "items": {
              "$ref": "#/components/schemas/InlineResponse20013TrackingFields"
            },
            "x-ballerina-name": "trackingFields"
          },
          "creation_source": {
            "type": "string",
            "description": "The platform used when creating the meeting.\n* `other` - Created through another platform.\n* `open_api` - Created through Open API.\n* `web_portal` - Created through the web portal",
            "example": "open_api",
            "enum": [
              "other",
              "open_api",
              "web_portal"
            ],
            "x-ballerina-name": "creationSource"
          },
          "h323_password": {
            "type": "string",
            "description": "H.323/SIP room system passcode",
            "example": "123456",
            "x-ballerina-name": "h323Password"
          },
          "topic": {
            "type": "string",
            "description": "Meeting topic",
            "example": "My Meeting"
          },
          "status": {
            "type": "string",
            "description": "Meeting status",
            "example": "waiting",
            "enum": [
              "waiting",
              "started"
            ]
          }
        },
        "description": "Meeting object"
      },
      "InlineResponse20053Phones": {
        "type": "object",
        "properties": {
          "register_server3": {
            "type": "string",
            "description": "The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address",
            "example": "192.0.2.5",
            "x-ballerina-name": "registerServer3"
          },
          "user_email": {
            "type": "string",
            "description": "The email address of the user to associate with the SIP Phone. Can add `.win`, `.mac`, `.android`, `.ipad`, `.iphone`, `.linux`, `.pc`, `.mobile`, `.pad` at the end of the email (for example, `user@example.com.mac`) to add accounts for different platforms for the same user",
            "format": "email",
            "example": "jchill@example.com",
            "x-ballerina-name": "userEmail"
          },
          "transport_protocol3": {
            "type": "string",
            "description": "Protocols supported by the SIP provider.  \n  The value must be either `UDP`, `TCP`, `TLS`, `AUTO`",
            "example": "UDP",
            "enum": [
              "UDP",
              "TCP",
              "TLS",
              "AUTO"
            ],
            "x-ballerina-name": "transportProtocol3"
          },
          "user_name": {
            "type": "string",
            "description": "The phone number associated with the user in the SIP account. ",
            "example": "Jill Chill",
            "x-ballerina-name": "userName"
          },
          "register_server2": {
            "type": "string",
            "description": "The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address",
            "example": "192.0.2.3",
            "x-ballerina-name": "registerServer2"
          },
          "transport_protocol2": {
            "type": "string",
            "description": "Protocols supported by the SIP provider.  \n  The value must be either `UDP`, `TCP`, `TLS`, `AUTO`",
            "example": "UDP",
            "enum": [
              "UDP",
              "TCP",
              "TLS",
              "AUTO"
            ],
            "x-ballerina-name": "transportProtocol2"
          },
          "proxy_server": {
            "type": "string",
            "description": "The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty",
            "example": "192.0.2.2",
            "x-ballerina-name": "proxyServer"
          },
          "proxy_server2": {
            "type": "string",
            "description": "The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty",
            "example": "192.0.2.4",
            "x-ballerina-name": "proxyServer2"
          },
          "proxy_server3": {
            "type": "string",
            "description": "The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty",
            "example": "192.0.2.6",
            "x-ballerina-name": "proxyServer3"
          },
          "registration_expire_time": {
            "type": "integer",
            "description": "The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server. ",
            "example": 60,
            "x-ballerina-name": "registrationExpireTime"
          },
          "password": {
            "type": "string",
            "description": "The password generated for the user in the SIP account\n",
            "example": "apassword1"
          },
          "voice_mail": {
            "type": "string",
            "description": "The number to dial for checking voicemail",
            "example": "4000",
            "x-ballerina-name": "voiceMail"
          },
          "domain": {
            "type": "string",
            "description": "The name or IP address of your provider's SIP domain",
            "example": "example.com"
          },
          "register_server": {
            "type": "string",
            "description": "The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address",
            "example": "192.0.2.1",
            "x-ballerina-name": "registerServer"
          },
          "authorization_name": {
            "type": "string",
            "description": "The authorization name of the user that is registered for SIP phone",
            "example": "testname",
            "x-ballerina-name": "authorizationName"
          },
          "id": {
            "type": "string",
            "description": "The SIP phone ID",
            "example": "123456"
          },
          "transport_protocol": {
            "type": "string",
            "description": "Protocols supported by the SIP provider.  \n  The value must be either `UDP`, `TCP`, `TLS`, `AUTO`",
            "example": "UDP",
            "enum": [
              "UDP",
              "TCP",
              "TLS",
              "AUTO"
            ],
            "x-ballerina-name": "transportProtocol"
          }
        }
      },
      "InlineResponse20016": {
        "type": "object",
        "properties": {
          "expire_in": {
            "type": "integer",
            "description": "The number of seconds the join token is valid for before it expires. This value always returns `120`",
            "format": "int64",
            "example": 120,
            "enum": [
              120
            ],
            "x-ballerina-name": "expireIn"
          },
          "token": {
            "type": "string",
            "description": "The join token",
            "example": "2njt50mj"
          }
        },
        "description": "Information about the meeting's local recorder join token"
      },
      "InlineResponse20015": {
        "type": "object",
        "properties": {
          "expire_in": {
            "type": "integer",
            "description": "The number of seconds the archive token is valid for before it expires. This value always returns `120`",
            "format": "int64",
            "example": 120,
            "enum": [
              120
            ],
            "x-ballerina-name": "expireIn"
          },
          "token": {
            "type": "string",
            "description": "The archive token",
            "example": "2njt50mj"
          }
        },
        "description": "Information about the meeting's local archive token"
      },
      "InlineResponse20018": {
        "type": "object",
        "properties": {
          "meeting_host_id": {
            "type": "string",
            "description": "The ID of the user who is set as the meeting host",
            "example": "30R7kT7bTIKSNUFEuH_Qlg",
            "x-ballerina-name": "meetingHostId"
          },
          "meeting_topic": {
            "type": "string",
            "description": "The meeting topic",
            "example": "My Meeting",
            "x-ballerina-name": "meetingTopic"
          },
          "summary_last_modified_user_email": {
            "type": "string",
            "description": "The user email of the user who last modified the meeting summary",
            "example": "user@example.com",
            "x-ballerina-name": "summaryLastModifiedUserEmail"
          },
          "summary_start_time": {
            "type": "string",
            "description": "The summary's start date and time",
            "format": "date-time",
            "example": "2019-07-15T23:24:52Z",
            "x-ballerina-name": "summaryStartTime"
          },
          "summary_last_modified_time": {
            "type": "string",
            "description": "The date and time when the meeting summary was last modified",
            "format": "date-time",
            "example": "2020-07-15T23:30:19Z",
            "x-ballerina-name": "summaryLastModifiedTime"
          },
          "meeting_id": {
            "type": "integer",
            "description": "[The meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-) \nThe meeting's unique identifier in **long** format, represented as int64 data type in JSON. Also known as the meeting number",
            "format": "int64",
            "example": 97763643886,
            "x-ballerina-name": "meetingId"
          },
          "meeting_uuid": {
            "type": "string",
            "description": "The unique meeting ID. \n\nEach meeting instance generates its own meeting UUID. After a meeting ends, a new UUID is generated for the next instance of the meeting.\n\n Use the [**List past meeting instances**](/docs/api-reference/zoom-api/methods#operation/pastMeetings) API to retrieve a list of UUIDs from past meeting instances. [Double encode](/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a `/` or contains `//` in it\n",
            "example": "aDYlohsHRtCd4ii1uC2+hA==",
            "x-ballerina-name": "meetingUuid"
          },
          "edited_summary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InlineResponse20018EditedSummary"
              }
            ],
            "x-ballerina-name": "editedSummary"
          },
          "summary_end_time": {
            "type": "string",
            "description": "The summary's end date and time",
            "format": "date-time",
            "example": "2020-07-15T23:30:19Z",
            "x-ballerina-name": "summaryEndTime"
          },
          "summary_created_time": {
            "type": "string",
            "description": "The date and time when the meeting summary was created",
            "format": "date-time",
            "example": "2019-07-15T23:24:52Z",
            "x-ballerina-name": "summaryCreatedTime"
          },
          "meeting_end_time": {
            "type": "string",
            "description": "The meeting's end date and time",
            "format": "date-time",
            "example": "2020-07-15T23:30:19Z",
            "x-ballerina-name": "meetingEndTime"
          },
          "summary_last_modified_user_id": {
            "type": "string",
            "description": "The user ID of the user who last modified the meeting summary",
            "example": "Lfi0BlBQTM-bbktE9BRUvA",
            "x-ballerina-name": "summaryLastModifiedUserId"
          },
          "next_steps": {
            "type": "array",
            "description": "The next steps",
            "deprecated": true,
            "items": {
              "type": "string",
              "description": "The next step.",
              "example": "step1"
            },
            "x-ballerina-name": "nextSteps"
          },
          "summary_overview": {
            "type": "string",
            "description": "The summary overview",
            "example": "Meeting overview",
            "deprecated": true,
            "x-ballerina-name": "summaryOverview"
          },
          "summary_details": {
            "type": "array",
            "description": "The summary content details",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/InlineResponse20018SummaryDetails"
            },
            "x-ballerina-name": "summaryDetails"
          },
          "summary_content": {
            "type": "string",
            "description": "The complete meeting summary in Markdown format. This unified field is used for all summaries. For compatibility, the legacy fields `summary_overview`, `summary_details`, `next_steps`, and `edited_summary` are still returned, but are deprecated and will not be supported in the future",
            "example": "## Key takeaways\n- Mobile app performance issues are affecting user retention.\n- New onboarding flow received positive feedback from beta testers.\n- Need to prioritize accessibility improvements.\n- Customer support response time has improved by 25%.\n\n## Discussed topics\n### Mobile App Performance\nDiscussion of recent performance metrics and user complaints\n- **Details**\n    - Sarah (Product): Reports of app crashes increased 15% this month\n    - Mike (Engineering): Memory optimization needed in latest release\n    - Tom (QA): Identified memory leak in photo upload feature\n- **Conclusion**\n    - Implement performance monitoring tools\n    - Prioritize memory optimization in next sprint\n\n### Onboarding Flow\nReview of beta testing results for new user onboarding\n- **Details**\n    - Rachel (UX): 90% completion rate in beta testing\n    - David (Product): Positive feedback on simplified registration\n- **Conclusion**\n    - Ready for full rollout next month\n    - Need to monitor analytics post-launch\n\n### Accessibility Compliance\nDiscussion of current accessibility status and needed improvements\n- **Details**\n    - Lisa (Design): Screen reader compatibility issues identified\n    - John (Engineering): WCAG compliance at 80%\n- **Conclusion**\n    - Create accessibility improvement roadmap\n    - Schedule external audit\n\n## Challenges\n* Resource constraints for performance optimization\n* Integration testing environment stability issues\n* Lack of accessibility expertise in the team\n\n## Action items\n- **Sarah**\n  - Prepare performance monitoring implementation plan\n  - Schedule follow-up meeting with engineering team\n- **Mike**\n  - Investigate memory leak fix\n  - Document performance optimization guidelines\n- **Lisa**\n  - Create accessibility improvement proposal\n  - Research accessibility testing tools\n- **Rachel**\n  - Prepare onboarding analytics dashboard\n  - Document beta testing findings",
            "x-ballerina-name": "summaryContent"
          },
          "summary_title": {
            "type": "string",
            "description": "The summary title",
            "example": "Meeting summary for my meeting",
            "x-ballerina-name": "summaryTitle"
          },
          "meeting_host_email": {
            "type": "string",
            "description": "The meeting host's email address",
            "format": "email",
            "example": "jchill@example.com",
            "x-ballerina-name": "meetingHostEmail"
          },
          "meeting_start_time": {
            "type": "string",
            "description": "The meeting's start date and time",
            "format": "date-time",
            "example": "2019-07-15T23:24:52Z",
            "x-ballerina-name": "meetingStartTime"
          }
        }
      },
      "InlineResponse20017": {
        "type": "object",
        "properties": {
          "page_url": {
            "type": "string",
            "description": "Live streaming page URL. This is the URL using which anyone can view the livestream of the meeting",
            "example": "https://example.com/livestream/123",
            "x-ballerina-name": "pageUrl"
          },
          "resolution": {
            "type": "string",
            "description": "The number of pixels in each dimension that the video camera can display",
            "example": "720p"
          },
          "stream_key": {
            "type": "string",
            "description": "Stream Key",
            "example": "contact-ic@example.com",
            "x-ballerina-name": "streamKey"
          },
          "stream_url": {
            "type": "string",
            "description": "Stream URL",
            "example": "https://example.com/livestream",
            "x-ballerina-name": "streamUrl"
          }
        }
      }
    },
    "securitySchemes": {
      "openapi_authorization": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "x-ballerina-name": "authorization"
      },
      "openapi_oauth": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/",
            "tokenUrl": "",
            "refreshUrl": "",
            "scopes": {
              "recording:read:admin": "recording:read:admin",
              "archiving:read:list_archived_files:admin": "archiving:read:list_archived_files:admin",
              "archiving:read:list_archived_files:master": "archiving:read:list_archived_files:master",
              "archiving:read:archived_file_statistics:admin": "archiving:read:archived_file_statistics:admin",
              "recording:write": "recording:write",
              "recording:write:admin": "recording:write:admin",
              "archiving:update:archived_file_auto_delete_status": "archiving:update:archived_file_auto_delete_status",
              "archiving:update:archived_file_auto_delete_status:admin": "archiving:update:archived_file_auto_delete_status:admin",
              "archiving:delete:archived_files:admin": "archiving:delete:archived_files:admin",
              "recording:read": "recording:read",
              "archiving:read:archived_files:admin": "archiving:read:archived_files:admin",
              "archiving:read:archived_files": "archiving:read:archived_files",
              "phone_recording:read:admin": "phone_recording:read:admin",
              "cloud_recording:read:list_recording_files:admin": "cloud_recording:read:list_recording_files:admin",
              "cloud_recording:read:list_recording_files": "cloud_recording:read:list_recording_files",
              "cloud_recording:read:list_recording_files:master": "cloud_recording:read:list_recording_files:master",
              "cloud_recording:delete:meeting_recording": "cloud_recording:delete:meeting_recording",
              "cloud_recording:delete:meeting_recording:admin": "cloud_recording:delete:meeting_recording:admin",
              "cloud_recording:delete:meeting_recording:master": "cloud_recording:delete:meeting_recording:master",
              "cloud_recording:read:recording_analytics_details": "cloud_recording:read:recording_analytics_details",
              "cloud_recording:read:recording_analytics_details:master": "cloud_recording:read:recording_analytics_details:master",
              "cloud_recording:read:recording_analytics_details:admin": "cloud_recording:read:recording_analytics_details:admin",
              "cloud_recording:read:recording_analytics_summary": "cloud_recording:read:recording_analytics_summary",
              "cloud_recording:read:recording_analytics_summary:master": "cloud_recording:read:recording_analytics_summary:master",
              "cloud_recording:read:recording_analytics_summary:admin": "cloud_recording:read:recording_analytics_summary:admin",
              "cloud_recording:read:list_recording_registrants": "cloud_recording:read:list_recording_registrants",
              "cloud_recording:read:list_recording_registrants:admin": "cloud_recording:read:list_recording_registrants:admin",
              "cloud_recording:read:list_recording_registrants:master": "cloud_recording:read:list_recording_registrants:master",
              "cloud_recording:write:recording_registrant": "cloud_recording:write:recording_registrant",
              "cloud_recording:write:recording_registrant:master": "cloud_recording:write:recording_registrant:master",
              "cloud_recording:write:recording_registrant:admin": "cloud_recording:write:recording_registrant:admin",
              "cloud_recording:read:registration_questions": "cloud_recording:read:registration_questions",
              "cloud_recording:read:registration_questions:master": "cloud_recording:read:registration_questions:master",
              "cloud_recording:read:registration_questions:admin": "cloud_recording:read:registration_questions:admin",
              "cloud_recording:update:registration_questions:admin": "cloud_recording:update:registration_questions:admin",
              "cloud_recording:update:registration_questions": "cloud_recording:update:registration_questions",
              "cloud_recording:update:registration_questions:master": "cloud_recording:update:registration_questions:master",
              "cloud_recording:update:registrant_status": "cloud_recording:update:registrant_status",
              "cloud_recording:update:registrant_status:master": "cloud_recording:update:registrant_status:master",
              "cloud_recording:update:registrant_status:admin": "cloud_recording:update:registrant_status:admin",
              "cloud_recording:read:recording_settings": "cloud_recording:read:recording_settings",
              "cloud_recording:read:recording_settings:admin": "cloud_recording:read:recording_settings:admin",
              "cloud_recording:read:recording_settings:master": "cloud_recording:read:recording_settings:master",
              "cloud_recording:update:recording_settings": "cloud_recording:update:recording_settings",
              "cloud_recording:update:recording_settings:master": "cloud_recording:update:recording_settings:master",
              "cloud_recording:update:recording_settings:admin": "cloud_recording:update:recording_settings:admin",
              "cloud_recording:delete:recording_file": "cloud_recording:delete:recording_file",
              "cloud_recording:delete:recording_file:admin": "cloud_recording:delete:recording_file:admin",
              "cloud_recording:delete:recording_file:master": "cloud_recording:delete:recording_file:master",
              "cloud_recording:update:recover_single_recording": "cloud_recording:update:recover_single_recording",
              "cloud_recording:update:recover_single_recording:master": "cloud_recording:update:recover_single_recording:master",
              "cloud_recording:update:recover_single_recording:admin": "cloud_recording:update:recover_single_recording:admin",
              "cloud_recording:update:recover_meeting_recordings": "cloud_recording:update:recover_meeting_recordings",
              "cloud_recording:update:recover_meeting_recordings:master": "cloud_recording:update:recover_meeting_recordings:master",
              "cloud_recording:update:recover_meeting_recordings:admin": "cloud_recording:update:recover_meeting_recordings:admin",
              "cloud_recording:read:list_user_recordings": "cloud_recording:read:list_user_recordings",
              "cloud_recording:read:list_user_recordings:master": "cloud_recording:read:list_user_recordings:master",
              "cloud_recording:read:list_user_recordings:admin": "cloud_recording:read:list_user_recordings:admin",
              "device:write:admin": "device:write:admin",
              "device:read:admin": "device:read:admin",
              "device:read:list_groups:admin": "device:read:list_groups:admin",
              "device:read:list_groups:master": "device:read:list_groups:master",
              "device:write:zpa_device:admin": "device:write:zpa_device:admin",
              "device:write:zpa_device:master": "device:write:zpa_device:master",
              "device:read:user_setting:admin": "device:read:user_setting:admin",
              "device:read:user_setting:master": "device:read:user_setting:master",
              "device:write:zpa_os_app:admin": "device:write:zpa_os_app:admin",
              "device:write:zpa_os_app:master": "device:write:zpa_os_app:master",
              "device:delete:zpa_device:admin": "device:delete:zpa_device:admin",
              "device:delete:zpa_device:master": "device:delete:zpa_device:master",
              "device:read:list_zpa_versions:admin": "device:read:list_zpa_versions:admin",
              "device:read:list_zpa_versions:master": "device:read:list_zpa_versions:master",
              "device:write:group:admin": "device:write:group:admin",
              "device:write:group:master": "device:write:group:master",
              "device:update:zdm_device_assignment:admin": "device:update:zdm_device_assignment:admin",
              "h323:write:admin": "h323:write:admin",
              "h323_device:write:device:admin": "h323_device:write:device:admin",
              "h323:read:admin": "h323:read:admin",
              "h323_device:read:list_devices:admin": "h323_device:read:list_devices:admin",
              "h323_device:delete:device:admin": "h323_device:delete:device:admin",
              "h323_device:update:device:admin": "h323_device:update:device:admin",
              "meeting:write": "meeting:write",
              "meeting:write:admin": "meeting:write:admin",
              "meeting:update:live_meeting_chat_message": "meeting:update:live_meeting_chat_message",
              "meeting:update:live_meeting_chat_message:admin": "meeting:update:live_meeting_chat_message:admin",
              "meeting:delete:live_meeting_chat_message": "meeting:delete:live_meeting_chat_message",
              "meeting:delete:live_meeting_chat_message:admin": "meeting:delete:live_meeting_chat_message:admin",
              "meeting:master": "meeting:master",
              "meeting:update:in_meeting_controls": "meeting:update:in_meeting_controls",
              "meeting:update:in_meeting_controls:admin": "meeting:update:in_meeting_controls:admin",
              "meeting:update:participant_rtms_app_status": "meeting:update:participant_rtms_app_status",
              "meeting:update:participant_rtms_app_status:admin": "meeting:update:participant_rtms_app_status:admin",
              "meeting_summary:read:admin": "meeting_summary:read:admin",
              "meeting:read:list_summaries:admin": "meeting:read:list_summaries:admin",
              "meeting:delete:meeting": "meeting:delete:meeting",
              "meeting:delete:meeting:admin": "meeting:delete:meeting:admin",
              "meeting:read": "meeting:read",
              "meeting:read:admin": "meeting:read:admin",
              "meeting:read:meeting": "meeting:read:meeting",
              "meeting:read:meeting:admin": "meeting:read:meeting:admin",
              "meeting:update:meeting:admin": "meeting:update:meeting:admin",
              "meeting:update:meeting": "meeting:update:meeting",
              "meeting:write:batch_polls": "meeting:write:batch_polls",
              "meeting:write:batch_polls:admin": "meeting:write:batch_polls:admin",
              "meeting:write:batch_registrants": "meeting:write:batch_registrants",
              "meeting:write:batch_registrants:admin": "meeting:write:batch_registrants:admin",
              "meeting:read:invitation": "meeting:read:invitation",
              "meeting:read:invitation:admin": "meeting:read:invitation:admin",
              "meeting:write:invite_links": "meeting:write:invite_links",
              "meeting:write:invite_links:admin": "meeting:write:invite_links:admin",
              "meeting_token:read:admin:live_streaming": "meeting_token:read:admin:live_streaming",
              "meeting_token:read:live_streaming": "meeting_token:read:live_streaming",
              "meeting:read:live_streaming_token": "meeting:read:live_streaming_token",
              "meeting:read:live_streaming_token:admin": "meeting:read:live_streaming_token:admin",
              "meeting_token:read:admin:local_archiving": "meeting_token:read:admin:local_archiving",
              "meeting:read:local_archiving_token:admin": "meeting:read:local_archiving_token:admin",
              "meeting_token:read:admin:local_recording": "meeting_token:read:admin:local_recording",
              "meeting_token:read:local_recording": "meeting_token:read:local_recording",
              "meeting:read:local_recording_token": "meeting:read:local_recording_token",
              "meeting:read:local_recording_token:admin": "meeting:read:local_recording_token:admin",
              "meeting:read:livestream": "meeting:read:livestream",
              "meeting:read:livestream:admin": "meeting:read:livestream:admin",
              "meeting:update:livestream": "meeting:update:livestream",
              "meeting:update:livestream:admin": "meeting:update:livestream:admin",
              "meeting:update:livestream_status": "meeting:update:livestream_status",
              "meeting:update:livestream_status:admin": "meeting:update:livestream_status:admin",
              "meeting_summary:read": "meeting_summary:read",
              "meeting:read:summary": "meeting:read:summary",
              "meeting:read:summary:admin": "meeting:read:summary:admin",
              "meeting:write:open_app": "meeting:write:open_app",
              "meeting:write:open_app:admin": "meeting:write:open_app:admin",
              "meeting:delete:open_app": "meeting:delete:open_app",
              "meeting:delete:open_app:admin": "meeting:delete:open_app:admin",
              "meeting:write:poll": "meeting:write:poll",
              "meeting:write:poll:admin": "meeting:write:poll:admin",
              "meeting:read:list_polls": "meeting:read:list_polls",
              "meeting:read:list_polls:admin": "meeting:read:list_polls:admin",
              "meeting:read:poll": "meeting:read:poll",
              "meeting:read:poll:admin": "meeting:read:poll:admin",
              "meeting:update:poll": "meeting:update:poll",
              "meeting:update:poll:admin": "meeting:update:poll:admin",
              "meeting:delete:poll": "meeting:delete:poll",
              "meeting:delete:poll:admin": "meeting:delete:poll:admin",
              "meeting:write:registrant": "meeting:write:registrant",
              "meeting:write:registrant:admin": "meeting:write:registrant:admin",
              "meeting:read:list_registrants": "meeting:read:list_registrants",
              "meeting:read:list_registrants:admin": "meeting:read:list_registrants:admin",
              "meeting:update:registration_question": "meeting:update:registration_question",
              "meeting:update:registration_question:admin": "meeting:update:registration_question:admin",
              "meeting:read:list_registration_questions": "meeting:read:list_registration_questions",
              "meeting:read:list_registration_questions:admin": "meeting:read:list_registration_questions:admin",
              "meeting:update:registrant_status": "meeting:update:registrant_status",
              "meeting:update:registrant_status:admin": "meeting:update:registrant_status:admin",
              "meeting:read:registrant": "meeting:read:registrant",
              "meeting:read:registrant:admin": "meeting:read:registrant:admin",
              "meeting:delete:registrant": "meeting:delete:registrant",
              "meeting:delete:registrant:admin": "meeting:delete:registrant:admin",
              "meeting:write:sip_dialing": "meeting:write:sip_dialing",
              "meeting:write:admin:sip_dialing": "meeting:write:admin:sip_dialing",
              "meeting:write:sip_dialing:admin": "meeting:write:sip_dialing:admin",
              "meeting:update:status": "meeting:update:status",
              "meeting:update:status:admin": "meeting:update:status:admin",
              "meeting:update:survey": "meeting:update:survey",
              "meeting:update:survey:admin": "meeting:update:survey:admin",
              "meeting:delete:survey": "meeting:delete:survey",
              "meeting:delete:survey:admin": "meeting:delete:survey:admin",
              "meeting:read:survey": "meeting:read:survey",
              "meeting:read:survey:admin": "meeting:read:survey:admin",
              "meeting:read:token": "meeting:read:token",
              "meeting:read:token:admin": "meeting:read:token:admin",
              "meeting:read:past_meeting": "meeting:read:past_meeting",
              "meeting:read:past_meeting:admin": "meeting:read:past_meeting:admin",
              "meeting:read:list_past_instances": "meeting:read:list_past_instances",
              "meeting:read:list_past_instances:admin": "meeting:read:list_past_instances:admin",
              "meeting:read:list_past_participants": "meeting:read:list_past_participants",
              "meeting:read:list_past_participants:admin": "meeting:read:list_past_participants:admin",
              "meeting:read:list_poll_results": "meeting:read:list_poll_results",
              "meeting:read:list_poll_results:admin": "meeting:read:list_poll_results:admin",
              "meeting:read:past_qa": "meeting:read:past_qa",
              "meeting:read:past_qa:admin": "meeting:read:past_qa:admin",
              "meeting:read:list_templates": "meeting:read:list_templates",
              "meeting:read:list_templates:admin": "meeting:read:list_templates:admin",
              "meeting:write:template": "meeting:write:template",
              "meeting:write:template:admin": "meeting:write:template:admin",
              "meeting:write:meeting": "meeting:write:meeting",
              "meeting:write:meeting:admin": "meeting:write:meeting:admin",
              "meeting:read:list_meetings": "meeting:read:list_meetings",
              "meeting:read:list_meetings:admin": "meeting:read:list_meetings:admin",
              "meeting:read:list_upcoming_meetings": "meeting:read:list_upcoming_meetings",
              "meeting:read:list_upcoming_meetings:admin": "meeting:read:list_upcoming_meetings:admin",
              "pac:read:admin": "pac:read:admin",
              "pac:read": "pac:read",
              "pac:read:list_pac_accounts": "pac:read:list_pac_accounts",
              "pac:read:list_pac_accounts:admin": "pac:read:list_pac_accounts:admin",
              "report:read:admin": "report:read:admin",
              "report:read:user_activities:admin": "report:read:user_activities:admin",
              "report:read:billing:admin": "report:read:billing:admin",
              "report:read:billing_invoice:admin": "report:read:billing_invoice:admin",
              "report:read:list_history_meetings:admin": "report:read:list_history_meetings:admin",
              "report:read:meeting_activity_log:admin": "report:read:meeting_activity_log:admin",
              "report:read:meeting:admin": "report:read:meeting:admin",
              "report:read:list_meeting_participants:admin": "report:read:list_meeting_participants:admin",
              "report:read:list_meeting_polls:admin": "report:read:list_meeting_polls:admin",
              "report:read:meeting_qna:admin": "report:read:meeting_qna:admin",
              "report:read:meeting_survey:admin": "report:read:meeting_survey:admin",
              "report:read:operation_logs:admin": "report:read:operation_logs:admin",
              "report:read:telephone:admin": "report:read:telephone:admin",
              "report:read:upcoming_meetings_webinars:admin": "report:read:upcoming_meetings_webinars:admin",
              "report:read:list_users:admin": "report:read:list_users:admin",
              "report:read:user:admin": "report:read:user:admin",
              "report:read:webinar:admin": "report:read:webinar:admin",
              "report:read:list_webinar_participants:admin": "report:read:list_webinar_participants:admin",
              "report:read:list_webinar_polls:admin": "report:read:list_webinar_polls:admin",
              "report:read:webinar_qna:admin": "report:read:webinar_qna:admin",
              "report:read:webinar_survey:admin": "report:read:webinar_survey:admin",
              "sip_phone:read:admin": "sip_phone:read:admin",
              "sip_phone:read:list_sip_phones:admin": "sip_phone:read:list_sip_phones:admin",
              "sip_phone:write:admin": "sip_phone:write:admin",
              "sip_phone:write:sip_phone:admin": "sip_phone:write:sip_phone:admin",
              "sip_phone:update:sip_phone:admin": "sip_phone:update:sip_phone:admin",
              "sip_phone:delete:sip_phone:admin": "sip_phone:delete:sip_phone:admin",
              "tsp:write:admin": "tsp:write:admin",
              "tsp:update:tsp:admin": "tsp:update:tsp:admin",
              "tsp:read:admin": "tsp:read:admin",
              "tsp:read:tsp:admin": "tsp:read:tsp:admin",
              "tsp:write": "tsp:write",
              "tsp:write:tsp_account": "tsp:write:tsp_account",
              "tsp:write:tsp_account:admin": "tsp:write:tsp_account:admin",
              "tsp:read": "tsp:read",
              "tsp:read:list_tsp_accounts": "tsp:read:list_tsp_accounts",
              "tsp:read:list_tsp_accounts:admin": "tsp:read:list_tsp_accounts:admin",
              "tsp:update:tsp_settings": "tsp:update:tsp_settings",
              "tsp:update:tsp_settings:admin": "tsp:update:tsp_settings:admin",
              "tsp:delete:tsp_account": "tsp:delete:tsp_account",
              "tsp:delete:tsp_account:admin": "tsp:delete:tsp_account:admin",
              "tsp:update:tsp_account": "tsp:update:tsp_account",
              "tsp:update:tsp_account:admin": "tsp:update:tsp_account:admin",
              "tsp:read:tsp_account": "tsp:read:tsp_account",
              "tsp:read:tsp_account:admin": "tsp:read:tsp_account:admin",
              "tracking_fields:write:admin": "tracking_fields:write:admin",
              "tracking_field:write:tracking_field:admin": "tracking_field:write:tracking_field:admin",
              "tracking_fields:read:admin": "tracking_fields:read:admin",
              "tracking_field:read:list_tracking_fields:admin": "tracking_field:read:list_tracking_fields:admin",
              "tracking_field:update:tracking_field:admin": "tracking_field:update:tracking_field:admin",
              "tracking_field:delete:tracking_field:admin": "tracking_field:delete:tracking_field:admin",
              "tracking_field:read:tracking_field:admin": "tracking_field:read:tracking_field:admin",
              "webinar:write": "webinar:write",
              "webinar:write:admin": "webinar:write:admin",
              "webinar:delete:live_webinar_chat_message": "webinar:delete:live_webinar_chat_message",
              "webinar:delete:live_webinar_chat_message:admin": "webinar:delete:live_webinar_chat_message:admin",
              "webinar:read:admin": "webinar:read:admin",
              "webinar:read": "webinar:read",
              "webinar:read:list_absentees": "webinar:read:list_absentees",
              "webinar:read:list_absentees:admin": "webinar:read:list_absentees:admin",
              "webinar:read:list_past_instances": "webinar:read:list_past_instances",
              "webinar:read:list_past_instances:admin": "webinar:read:list_past_instances:admin",
              "webinar:read:list_past_participants:admin": "webinar:read:list_past_participants:admin",
              "webinar:read:list_past_participants": "webinar:read:list_past_participants",
              "webinar:read:list_past_polls": "webinar:read:list_past_polls",
              "webinar:read:list_past_polls:admin": "webinar:read:list_past_polls:admin",
              "webinar:read:past_qa": "webinar:read:past_qa",
              "webinar:read:past_qa:admin": "webinar:read:past_qa:admin",
              "webinar:read:list_templates": "webinar:read:list_templates",
              "webinar:read:list_templates:admin": "webinar:read:list_templates:admin",
              "webinar:write:template": "webinar:write:template",
              "webinar:write:template:admin": "webinar:write:template:admin",
              "webinar:write:webinar": "webinar:write:webinar",
              "webinar:write:webinar:admin": "webinar:write:webinar:admin",
              "webinar:read:list_webinars": "webinar:read:list_webinars",
              "webinar:read:list_webinars:admin": "webinar:read:list_webinars:admin",
              "webinar:update:webinar": "webinar:update:webinar",
              "webinar:update:webinar:admin": "webinar:update:webinar:admin",
              "webinar:delete:webinar": "webinar:delete:webinar",
              "webinar:delete:webinar:admin": "webinar:delete:webinar:admin",
              "webinar:read:webinar": "webinar:read:webinar",
              "webinar:read:webinar:admin": "webinar:read:webinar:admin",
              "webinar:write:batch_registrants": "webinar:write:batch_registrants",
              "webinar:write:batch_registrants:admin": "webinar:write:batch_registrants:admin",
              "webinar:read:branding": "webinar:read:branding",
              "webinar:read:branding:admin": "webinar:read:branding:admin",
              "webinar:write:branding_name_tag": "webinar:write:branding_name_tag",
              "webinar:write:branding_name_tag:admin": "webinar:write:branding_name_tag:admin",
              "webinar:delete:branding_name_tag": "webinar:delete:branding_name_tag",
              "webinar:delete:branding_name_tag:admin": "webinar:delete:branding_name_tag:admin",
              "webinar:update:branding_name_tag": "webinar:update:branding_name_tag",
              "webinar:update:branding_name_tag:admin": "webinar:update:branding_name_tag:admin",
              "webinar:update:branding_virtual_background": "webinar:update:branding_virtual_background",
              "webinar:update:branding_virtual_background:admin": "webinar:update:branding_virtual_background:admin",
              "webinar:delete:branding_virtual_background": "webinar:delete:branding_virtual_background",
              "webinar:delete:branding_virtual_background:admin": "webinar:delete:branding_virtual_background:admin",
              "webinar:write:branding_virtual_background": "webinar:write:branding_virtual_background",
              "webinar:write:branding_virtual_background:admin": "webinar:write:branding_virtual_background:admin",
              "webinar:delete:branding_wallpaper": "webinar:delete:branding_wallpaper",
              "webinar:delete:branding_wallpaper:admin": "webinar:delete:branding_wallpaper:admin",
              "webinar:write:branding_wallpaper": "webinar:write:branding_wallpaper",
              "webinar:write:branding_wallpaper:admin": "webinar:write:branding_wallpaper:admin",
              "webinar:write:invite_links": "webinar:write:invite_links",
              "webinar:write:invite_links:admin": "webinar:write:invite_links:admin",
              "webinar_token:read:admin:live_streaming": "webinar_token:read:admin:live_streaming",
              "webinar_token:read:live_streaming": "webinar_token:read:live_streaming",
              "webinar:read:live_streaming_token": "webinar:read:live_streaming_token",
              "webinar:read:live_streaming_token:admin": "webinar:read:live_streaming_token:admin",
              "webinar_token:read:admin:local_archiving": "webinar_token:read:admin:local_archiving",
              "webinar:read:local_archiving_token:admin": "webinar:read:local_archiving_token:admin",
              "webinar_token:read:admin:local_recording": "webinar_token:read:admin:local_recording",
              "webinar_token:read:local_recording": "webinar_token:read:local_recording",
              "webinar:read:local_recording_token": "webinar:read:local_recording_token",
              "webinar:read:local_recording_token:admin": "webinar:read:local_recording_token:admin",
              "webinar:update:livestream": "webinar:update:livestream",
              "webinar:update:livestream:admin": "webinar:update:livestream:admin",
              "webinar:read:livestream": "webinar:read:livestream",
              "webinar:read:livestream:admin": "webinar:read:livestream:admin",
              "webinar:update:livestream_status": "webinar:update:livestream_status",
              "webinar:update:livestream_status:admin": "webinar:update:livestream_status:admin",
              "webinar:read:list_panelists": "webinar:read:list_panelists",
              "webinar:read:list_panelists:admin": "webinar:read:list_panelists:admin",
              "webinar:delete:panelist": "webinar:delete:panelist",
              "webinar:delete:panelist:admin": "webinar:delete:panelist:admin",
              "webinar:write:panelist": "webinar:write:panelist",
              "webinar:write:panelist:admin": "webinar:write:panelist:admin",
              "webinar:read:list_polls": "webinar:read:list_polls",
              "webinar:read:list_polls:admin": "webinar:read:list_polls:admin",
              "webinar:write:poll": "webinar:write:poll",
              "webinar:write:poll:admin": "webinar:write:poll:admin",
              "webinar:read:poll": "webinar:read:poll",
              "webinar:read:poll:admin": "webinar:read:poll:admin",
              "webinar:delete:poll": "webinar:delete:poll",
              "webinar:delete:poll:admin": "webinar:delete:poll:admin",
              "webinar:update:poll": "webinar:update:poll",
              "webinar:update:poll:admin": "webinar:update:poll:admin",
              "webinar:write:registrant": "webinar:write:registrant",
              "webinar:write:registrant:admin": "webinar:write:registrant:admin",
              "webinar:read:list_registrants": "webinar:read:list_registrants",
              "webinar:read:list_registrants:admin": "webinar:read:list_registrants:admin",
              "webinar:update:registration_question": "webinar:update:registration_question",
              "webinar:update:registration_question:admin": "webinar:update:registration_question:admin",
              "webinar:read:list_registration_questions": "webinar:read:list_registration_questions",
              "webinar:read:list_registration_questions:admin": "webinar:read:list_registration_questions:admin",
              "webinar:update:registrant_status": "webinar:update:registrant_status",
              "webinar:update:registrant_status:admin": "webinar:update:registrant_status:admin",
              "webinar:delete:registrant": "webinar:delete:registrant",
              "webinar:delete:registrant:admin": "webinar:delete:registrant:admin",
              "webinar:read:registrant": "webinar:read:registrant",
              "webinar:read:registrant:admin": "webinar:read:registrant:admin",
              "webinar:write:sip_dialing": "webinar:write:sip_dialing",
              "webinar:write:admin:sip_dialing": "webinar:write:admin:sip_dialing",
              "webinar:write:sip_dialing:admin": "webinar:write:sip_dialing:admin",
              "webinar:update:status": "webinar:update:status",
              "webinar:update:status:admin": "webinar:update:status:admin",
              "webinar:read:survey": "webinar:read:survey",
              "webinar:read:survey:admin": "webinar:read:survey:admin",
              "webinar:delete:survey": "webinar:delete:survey",
              "webinar:delete:survey:admin": "webinar:delete:survey:admin",
              "webinar:update:survey": "webinar:update:survey",
              "webinar:update:survey:admin": "webinar:update:survey:admin",
              "webinar:read:token": "webinar:read:token",
              "webinar:read:token:admin": "webinar:read:token:admin",
              "webinar:read:list_tracking_sources": "webinar:read:list_tracking_sources",
              "webinar:read:list_tracking_sources:admin": "webinar:read:list_tracking_sources:admin"
            }
          }
        }
      }
    }
  }
}