// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/constraint;
import ballerina/data.jsondata;
import ballerina/http;

# Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4)
public type InlineResponse20013SettingsBreakoutRoom record {
    # Create room or rooms
    MeetingsmeetingIdSettingsBreakoutRoomRooms[] rooms?;
    # Set this field's value to `true` if you would like to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option
    boolean enable?;
};

# Information about the customized webinar survey
public type WebinarswebinarIdsurveyCustomSurvey record {
    # The survey's feedback, up to 320 characters. 
    #
    # This value defaults to `Thank you so much for taking the time to complete the survey, your feedback really makes a difference.`
    @constraint:String {maxLength: 320}
    string feedback?;
    # Whether to display the number in the question name. 
    #
    # This value defaults to `true`
    @jsondata:Name {value: "numbered_questions"}
    boolean numberedQuestions = false;
    # Information about the webinar survey's questions
    @constraint:Array {maxLength: 100, minLength: 1}
    WebinarswebinarIdsurveyCustomSurveyQuestions[] questions?;
    # Allow participants to anonymously answer survey questions. 
    # * `true` - Anonymous survey enabled. 
    # * `false` - Participants cannot answer survey questions anonymously. 
    #
    # This value defaults to `true`
    boolean anonymous = false;
    # The survey's title, up to 64 characters
    @constraint:String {maxLength: 64}
    string title?;
    # Whether to display the question type in the question name. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "show_question_type"}
    boolean showQuestionType = false;
};

# Represents the Queries record for the operation: meetingRecordingRegistrants
public type MeetingRecordingRegistrantsQueries record {
    # **Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination
    @http:Query {name: "page_number"}
    int pageNumber = 1;
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # Query by the registrant's status. 
    # * `pending` - The registration is pending. 
    # * `approved` - The registrant is approved. 
    # * `denied` - The registration is denied
    "pending"|"approved"|"denied" status = "approved";
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

# Meeting settings
public type InlineResponse2018Settings record {
    @jsondata:Name {value: "breakout_room"}
    InlineResponse2018SettingsBreakoutRoom breakoutRoom?;
    # Whether to allow the host and co-hosts to fully control the mute state of participants. If not provided, the default value will be based on the user's setting
    @jsondata:Name {value: "allow_host_control_participant_mute_state"}
    boolean allowHostControlParticipantMuteState?;
    # The summary template ID used to generate a meeting summary based on a predefined template. To get available summary templates, use the **Get user summary templates** API. If not provided, the default value will be based on the user's setting. To enable this feature for your account, please [contact Zoom Support](https://support.zoom.com/hc/en)
    @jsondata:Name {value: "summary_template_id"}
    string summaryTemplateId?;
    # Custom keys and values assigned to the meeting
    @jsondata:Name {value: "custom_keys"}
    MeetingsmeetingIdSettingsCustomKeys[] customKeys?;
    # Global dial-in countries or regions
    @jsondata:Name {value: "global_dial_in_numbers"}
    InlineResponse2018SettingsGlobalDialInNumbers[] globalDialInNumbers?;
    # Show social share buttons on the meeting registration page.
    # This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting)
    @jsondata:Name {value: "show_share_button"}
    boolean showShareButton?;
    # Whether to send registrants an email confirmation.
    # * `true` - Send a confirmation email.
    # * `false` - Do not send a confirmation email
    @jsondata:Name {value: "registrants_confirmation_email"}
    boolean registrantsConfirmationEmail?;
    @jsondata:Name {value: "approved_or_denied_countries_or_regions"}
    InlineResponse2018SettingsApprovedOrDeniedCountriesOrRegions approvedOrDeniedCountriesOrRegions?;
    @jsondata:Name {value: "continuous_meeting_chat"}
    InlineResponse2018SettingsContinuousMeetingChat continuousMeetingChat?;
    # Allow attendees to join the meeting from multiple devices. This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting)
    @jsondata:Name {value: "allow_multiple_devices"}
    boolean allowMultipleDevices?;
    # `true` - Only authenticated users can join meetings
    @jsondata:Name {value: "meeting_authentication"}
    boolean meetingAuthentication?;
    # A semicolon-separated list of the meeting's alternative hosts' email addresses or IDs
    @jsondata:Name {value: "alternative_hosts"}
    string alternativeHosts?;
    # Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher
    @jsondata:Name {value: "alternative_host_update_polls"}
    boolean alternativeHostUpdatePolls?;
    # Enable the device testing
    @jsondata:Name {value: "device_testing"}
    boolean deviceTesting = false;
    # Start video when participants join the meeting
    @jsondata:Name {value: "participant_video"}
    boolean participantVideo?;
    # The type of calendar integration used to schedule the meeting. 
    # * `1` - [Zoom Outlook add-in](https://support.zoom.us/hc/en-us/articles/360031592971-Getting-started-with-Outlook-plugin-and-add-in) 
    # * `2` - [Zoom for Google Workspace add-on](https://support.zoom.us/hc/en-us/articles/360020187492-Using-the-Zoom-for-Google-Workspace-add-on)
    #
    # Works with the `private_meeting` field to determine whether to share details of meetings or not
    @jsondata:Name {value: "calendar_type"}
    1|2 calendarType?;
    # Host meeting in India
    #
    # # Deprecated
    @jsondata:Name {value: "in_meeting"}
    @deprecated
    boolean inMeeting = false;
    # Mute participants upon entry
    @jsondata:Name {value: "mute_upon_entry"}
    boolean muteUponEntry = false;
    # List of global dial-in countries
    @jsondata:Name {value: "global_dial_in_countries"}
    string[] globalDialInCountries?;
    @jsondata:Name {value: "question_and_answer"}
    InlineResponse2018SettingsQuestionAndAnswer questionAndAnswer?;
    # Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings
    @jsondata:Name {value: "join_before_host"}
    boolean joinBeforeHost = false;
    # Whether the **Allow host to save video order** feature is enabled
    @jsondata:Name {value: "host_save_video_order"}
    boolean hostSaveVideoOrder?;
    # Whether to add a watermark when viewing a shared screen. If not provided, the default value will be based on the user's setting
    boolean watermark?;
    # Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.**   
    #
    #
    #
    # `0` - Automatically approve.  
    # `1` - Manually approve.  
    # `2` - No registration required
    @jsondata:Name {value: "approval_type"}
    0|1|2 approvalType = 2;
    # Close registration after event date
    @jsondata:Name {value: "close_registration"}
    boolean closeRegistration = false;
    # Whether to push meeting changes to the calendar. 
    #
    # To enable this feature, configure the **Configure Calendar and Contacts Service** in the user's profile page of the Zoom web portal and enable the **Automatically sync Zoom calendar events information bi-directionally between Zoom and integrated calendars.** setting in the **Settings** page of the Zoom web portal.
    # * `true` - Push meeting changes to the calendar.
    # * `false` - Do not push meeting changes to the calendar
    @jsondata:Name {value: "push_change_to_calendar"}
    boolean pushChangeToCalendar = false;
    # Whether to set the meeting as an internal meeting
    @jsondata:Name {value: "internal_meeting"}
    boolean internalMeeting = false;
    # The participants added here will receive unique meeting invite links and bypass authentication
    @jsondata:Name {value: "authentication_exception"}
    InlineResponse2018SettingsAuthenticationException[] authenticationException?;
    # If the value of `join_before_host` field is set to `true`, use this field to indicate time limits when a participant may join a meeting before a host.
    #
    # *  `0` - Allow participant to join anytime.
    # *  `5`- Allow participant to join 5 minutes before meeting start time.
    # * `10` - Allow participant to join 10 minutes before meeting start time.
    # * `15` - Allow the participant to join 15 minutes before the meeting's start time
    @jsondata:Name {value: "jbh_time"}
    0|5|10|15 jbhTime?;
    # Third party audio conference info
    @jsondata:Name {value: "audio_conference_info"}
    string audioConferenceInfo?;
    # If user has configured [Sign Into Zoom with Specified Domains](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated
    @jsondata:Name {value: "authentication_domains"}
    string authenticationDomains?;
    # Defines who will receive a summary after this meeting. This field is applicable only when `auto_start_meeting_summary` is set to `true`.
    # * `1` - Only meeting host.
    # * `2` - Only meeting host, co-hosts, and alternative hosts.
    # * `3` - Only meeting host and meeting invitees in our organization.
    # * `4` - All meeting invitees including those outside of our organization. If not provided, the default value will be based on the user's setting
    @jsondata:Name {value: "who_will_receive_summary"}
    1|2|3|4 whoWillReceiveSummary?;
    # A list of the meeting's invitees
    @jsondata:Name {value: "meeting_invitees"}
    UsersuserIdmeetingsSettingsMeetingInvitees[] meetingInvitees?;
    # Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**.
    #
    # `enhanced_encryption` - Enhanced encryption. Encryption is stored in the cloud if you enable this option.   
    #
    #
    # `e2ee` - [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions features
    @jsondata:Name {value: "encryption_type"}
    "enhanced_encryption"|"e2ee" encryptionType?;
    # Meeting authentication option ID
    @jsondata:Name {value: "authentication_option"}
    string authenticationOption?;
    @jsondata:Name {value: "sign_language_interpretation"}
    UsersuserIdmeetingsSettingsSignLanguageInterpretation signLanguageInterpretation?;
    # Whether to disable the participant video during meeting. To enable this feature for your account, please [contact Zoom Support](https://support.zoom.us/hc/en-us)
    @jsondata:Name {value: "disable_participant_video"}
    boolean disableParticipantVideo = false;
    # Whether the [**Focus Mode** feature](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode) is enabled when the meeting starts
    @jsondata:Name {value: "focus_mode"}
    boolean focusMode?;
    # Registration type. Used for recurring meeting with fixed time only. 
    # `1` - Attendees register once and can attend any of the occurrences.  
    # `2` - Attendees need to register for each occurrence to attend.  
    # `3` - Attendees register once and can choose one or more occurrences to attend
    @jsondata:Name {value: "registration_type"}
    1|2|3 registrationType = 1;
    # Contact email for registration
    @jsondata:Name {value: "contact_email"}
    string contactEmail?;
    # Enable the waiting room
    @jsondata:Name {value: "waiting_room"}
    boolean waitingRoom = false;
    # Determine how participants can join the audio portion of the meeting.  
    # `both` - Both Telephony and VoIP.  
    # `telephony` - Telephony only.  
    # `voip` - VoIP only.  
    # `thirdParty` - Third party audio conference
    "both"|"telephony"|"voip"|"thirdParty" audio = "both";
    # Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)
    @jsondata:Name {value: "authentication_name"}
    string authenticationName?;
    # Only signed in users with specified domains can join meetings.
    #
    # **This field is deprecated and will not be supported in the future.**    
    #
    # As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting
    #
    # # Deprecated
    @jsondata:Name {value: "enforce_login_domains"}
    @deprecated
    string enforceLoginDomains?;
    # Defines who can ask questions about this meeting's transcript. This field is applicable only when `auto_start_ai_companion_questions` is set to `true`.
    # * `1` - All participants and invitees.
    # * `2` - All participants only from when they join.
    # * `3` - Only meeting host.
    # * `4` - Participants and invitees in our organization.
    # * `5` - Participants in our organization only from when they join. If not provided, the default value will be based on the user's setting
    @jsondata:Name {value: "who_can_ask_questions"}
    1|2|3|4|5 whoCanAskQuestions?;
    # Contact name for registration
    @jsondata:Name {value: "contact_name"}
    string contactName?;
    # Host meeting in China
    #
    # # Deprecated
    @jsondata:Name {value: "cn_meeting"}
    @deprecated
    boolean cnMeeting = false;
    # Whether to send registrants email notifications about their registration approval, cancellation, or rejection.
    #
    # * `true` - Send an email notification.
    # * `false` - Do not send an email notification.
    #
    # Set this value to `true` to also use the `registrants_confirmation_email` parameter
    @jsondata:Name {value: "registrants_email_notification"}
    boolean registrantsEmailNotification?;
    # Flag to determine whether to send email notifications to alternative hosts, default value is true
    @jsondata:Name {value: "alternative_hosts_email_notification"}
    boolean alternativeHostsEmailNotification = true;
    # Use a [personal meeting ID (PMI)](/docs/api/using-zoom-apis/#understanding-personal-meeting-id-pmi). Only used for scheduled meetings and recurring meetings with no fixed time
    @jsondata:Name {value: "use_pmi"}
    boolean usePmi = false;
    # The meeting's resources
    MeetingsmeetingIdSettingsResources[] resources?;
    # Automatic recording.
    # `local` - Record on local.  
    # `cloud` -  Record on cloud.  
    # `none` - Disabled
    @jsondata:Name {value: "auto_recording"}
    "local"|"cloud"|"none" autoRecording = "none";
    # Start video when the host joins the meeting
    @jsondata:Name {value: "host_video"}
    boolean hostVideo?;
    @jsondata:Name {value: "language_interpretation"}
    UsersuserIdmeetingsSettingsLanguageInterpretation languageInterpretation?;
    # Only signed in users can join this meeting.
    #
    # **This field is deprecated and will not be supported in the future.**    
    #
    # As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting
    #
    # # Deprecated
    @jsondata:Name {value: "enforce_login"}
    @deprecated
    boolean enforceLogin?;
    # Whether to automatically start a meeting summary. If not provided, the default value will be based on the user's setting
    @jsondata:Name {value: "auto_start_meeting_summary"}
    boolean autoStartMeetingSummary?;
    # Whether to automatically start AI Companion questions. If not provided, the default value will be based on the user's setting
    @jsondata:Name {value: "auto_start_ai_companion_questions"}
    boolean autoStartAiCompanionQuestions?;
    # Whether to set the meeting as a participant focused meeting
    @jsondata:Name {value: "participant_focused_meeting"}
    boolean participantFocusedMeeting = false;
    # Whether the meeting is set as private
    @jsondata:Name {value: "private_meeting"}
    boolean privateMeeting?;
    # Whether to include authenticated guest's email addresses in meetings' attendee reports
    @jsondata:Name {value: "email_in_attendee_report"}
    boolean emailInAttendeeReport?;
    # Whether to send email notifications to [alternative hosts](https://support.zoom.us/hc/en-us/articles/208220166) and [users with scheduling privileges](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-privilege). This value defaults to `true`
    @jsondata:Name {value: "email_notification"}
    boolean emailNotification = true;
};

public type MeetingsmeetingIdrecordingsregistrantsquestionsQuestions record {
    # Whether the field is required to be answered by the registrant or not
    boolean required?;
    # Field name
    @jsondata:Name {value: "field_name"}
    "last_name"|"address"|"city"|"country"|"zip"|"state"|"phone"|"industry"|"org"|"job_title"|"purchasing_time_frame"|"role_in_purchase_process"|"no_of_employees"|"comments" fieldName?;
};

# Webinar object
public type WebinarswebinarIdBody record {
    # Webinar settings
    WebinarswebinarIdSettings settings?;
    # The timezone to assign to the `start_time` value. This field is only used for scheduled or recurring webinars with a fixed time.
    #
    # For a list of supported timezones and their formats, see our [timezone list](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)
    string timezone?;
    # The previously recorded file's ID for `simulive`
    @jsondata:Name {value: "record_file_id"}
    string recordFileId?;
    # The user's email address or `userId` to schedule a webinar for
    @jsondata:Name {value: "schedule_for"}
    string scheduleFor?;
    # Webinar types. 
    # `5` - webinar.  
    # `6` - Recurring webinar with no fixed time.  
    # `9` - Recurring webinar with a fixed time
    5|6|9 'type = 5;
    # Webinar description
    string agenda?;
    # Webinar duration, in minutes. Used for scheduled webinar only
    int duration?;
    # Recurrence object. Use this object only for a meeting with type `8`, a recurring meeting with fixed time. 
    WebinarswebinarIdRecurrence recurrence?;
    # Webinar start time, in the format `yyyy-MM-dd'T'HH:mm:ss'Z'`. Should be in GMT time. In the format `yyyy-MM-dd'T'HH:mm:ss`. This should be in local time and the timezone should be specified. Only used for scheduled webinars and recurring webinars with a fixed time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # Webinar passcode. Passcode may only contain the characters [a-z A-Z 0-9 @ - _ * !]. Maximum of 10 characters.
    #
    # If **Webinar Passcode** setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request. 
    #
    # **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. 
    #
    # If the requirements are enabled, you can view those requirements by calling the [**Get account settings**](/docs/api/rest/reference/account/methods/#operation/accountSettings) API
    @constraint:String {maxLength: 10}
    string password?;
    # Tracking fields
    @jsondata:Name {value: "tracking_fields"}
    MeetingsmeetingIdTrackingFields[] trackingFields?;
    # Whether to set the webinar simulive
    @jsondata:Name {value: "is_simulive"}
    boolean isSimulive?;
    # Whether to transition a simulive webinar to live. The host must be present at the time of transition
    @jsondata:Name {value: "transition_to_live"}
    boolean transitionToLive?;
    # The webinar topic
    string topic?;
};

# Information about the customized meeting survey
public type MeetingsmeetingIdsurveyCustomSurvey record {
    # The survey's feedback, up to 320 characters. 
    #
    # This value defaults to `Thank you so much for taking the time to complete the survey. Your feedback really makes a difference.`
    @constraint:String {maxLength: 320}
    string feedback?;
    # Whether to display the number in the question name. 
    #
    # This value defaults to `true`
    @jsondata:Name {value: "numbered_questions"}
    boolean numberedQuestions = false;
    # Information about the meeting survey's questions
    @constraint:Array {maxLength: 100, minLength: 1}
    MeetingsmeetingIdsurveyCustomSurveyQuestions[] questions?;
    # Allow participants to anonymously answer survey questions. 
    #
    # This value defaults to `true`
    boolean anonymous = false;
    # The survey's title, up to 64 characters
    @constraint:String {maxLength: 64}
    string title?;
    # Whether to display the question type in the question name. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "show_question_type"}
    boolean showQuestionType = false;
};

public type InlineResponse2006Meetings MeetingsAllOf11;

public type MeetingInstancesAllOf1 record {
    # List of ended meeting instances
    MeetingInstancesMeetings[] meetings?;
};

public type InlineResponse20113AllOf1 record {
    # The webinar template's name
    string name?;
    # The webinar template's ID
    string id?;
};

# Information about custom questions.
public type RegistrantsRegistrantsAllOf12_custom_questions record {
    # The title of the custom question.
    string title?;
    # The custom question's response value. This has a limit of 128 characters.
    @constraint:String {maxLength: 128}
    string value?;
};

public type MeetingsmeetingIdsurveyCustomSurveyPrompts record {
    # The question prompt's title
    @jsondata:Name {value: "prompt_question"}
    string promptQuestion?;
};

public type UsersuserIdwebinarsSettingsSignLanguageInterpretationInterpreters record {
    # The interpreter's sign language. 
    #
    # To get this value, use the `sign_language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](/docs/api/rest/reference/zoom-api/methods#operation/userSettings) API response
    @jsondata:Name {value: "sign_language"}
    string signLanguage?;
    # The interpreter's email address
    string email?;
};

public type InlineResponse20060QuestionDetails record {
    # Answer submitted for the question. The value will be 'live answered' if this is a live answer
    string answer?;
    # Question asked during the Q&amp;A
    string question?;
};

# Occurrence object. This object is only returned for recurring webinars
public type InlineResponse20121Occurrences record {
    # Duration
    int duration?;
    # Start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # Occurrence ID: Unique identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences
    @jsondata:Name {value: "occurrence_id"}
    string occurrenceId?;
    # Occurrence status
    string status?;
};

public type BrandingWallpaperBody record {
    # The wallpaper's file path, in binary format
    record {byte[] fileContent; string fileName;} file;
};

# Webinar registrant questions
public type WebinarRegistrantQuestions record {
    # Array of custom questions for registrants
    @jsondata:Name {value: "custom_questions"}
    WebinarswebinarIdregistrantsquestionsCustomQuestions[] customQuestions?;
    # Array of registration fields whose values should be provided by registrants
    WebinarswebinarIdregistrantsquestionsQuestions[] questions?;
};

public type ZpaUpgradeBody record {
    # The ZDM group ID
    @jsondata:Name {value: "zdm_group_id"}
    string zdmGroupId;
    record {record {string vendor?; string version?; string model?;}[] firmware_versions?; "UPGRADE_FIRMWARE" upgrade_type = "UPGRADE_FIRMWARE";}|record {string app_version?; "UPGRADE_APP" upgrade_type;} data;
};

# Represents the Queries record for the operation: listWebinarParticipants
public type ListWebinarParticipantsQueries record {
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

public type DeviceIdAssignmentBody record {
    # The Zoom Room ID of the device being associated to. The `room_id` is required. It can be ` ` or the specific room ID. If it is ` ` , it means release from the room. If the room ID is a specific value, assign that room to the device 
    @jsondata:Name {value: "room_id"}
    string roomId?;
    # Specify one of these values for this field.
    #
    # `ZR` - Zoom Room computer.  
    #
    # `ZRC` - Zoom Room controller.  
    #
    # `ZRP` - Scheduling display.  
    #
    # `ZRW` - Companion whiteboard
    @jsondata:Name {value: "app_type"}
    "ZR"|"ZRC"|"ZRP"|"ZRW" appType = "ZR";
};

public type UserIdWebinarTemplatesBody UsersuserIdwebinarTemplatesAllOf1;

# Represents the Queries record for the operation: meetingRegistrantStatus
public type MeetingRegistrantStatusQueries record {
    # The meeting or webinar occurrence ID
    @http:Query {name: "occurrence_id"}
    string occurrenceId?;
};

# The H.323/SIP device object
public type TheH323SIPDeviceObject record {
    # Device protocol:  
    # `H.323` - H.323.  
    # `SIP` - SIP
    "H.323"|"SIP" protocol;
    # Device encryption:  
    # `auto` - auto.  
    # `yes` - yes.  
    # `no` - no
    "auto"|"yes"|"no" encryption;
    # Device IP
    string ip;
    # Device name
    @constraint:String {maxLength: 64}
    string name;
};

public type InlineResponse20041Questions record {
    # Array of questions from user
    @jsondata:Name {value: "question_details"}
    InlineResponse20041QuestionDetails[] questionDetails?;
    # The user ID of the user who asked the question. This value returns blank for external users
    @jsondata:Name {value: "user_id"}
    string userId?;
    # Participant's display name.  
    #
    #
    # If the anonymous [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer) option is enabled and if a participant submits the Q&amp;A without providing their name, the value of the `name` field is &quot;Anonymous Attendee&quot;
    string name?;
    # Participant's email. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details
    string email?;
};

public type InlineResponse2011AllOf1 record {
    # Device ID
    string id?;
};

public type RegistrantsStatusBody1 record {
    # List of registrants
    MeetingsmeetingIdregistrantsstatusRegistrants[] registrants?;
    # Registrant status. 
    # `approve` - Approve registrant.  
    # `cancel` - Cancel previously approved registrant's registration.  
    # `deny` - Deny registrant
    "approve"|"cancel"|"deny" action;
};

public type RegistrantsAllOf1 record {
    # Registrant ID
    string id?;
};

public type RegistrantsStatusBody2 record {
    # The registrant information
    WebinarswebinarIdregistrantsstatusRegistrants[] registrants?;
    # The registration action to perform. 
    # * `approve` - Approve the registrant. 
    # * `deny` - Reject the registrant. 
    # * `cancel` - Cancel the registrant's approval
    "approve"|"deny"|"cancel" action;
};

public type InlineResponse20070AllOf1 record {
    # The webinar poll ID
    string id?;
    # The status of the webinar poll:
    # `notstart` - Poll not started
    # `started` - Poll started
    # `ended` - Poll ended
    # `sharing` - Sharing poll results
    # `deactivated` - Poll deactivated
    "notstart"|"started"|"ended"|"sharing"|"deactivated" status?;
};

# Recording tegistrant questions
public type RecordingRegistrantQuestions record {
    # Array of registrant custom questions
    @jsondata:Name {value: "custom_questions"}
    MeetingsmeetingIdrecordingsregistrantsquestionsCustomQuestions[] customQuestions?;
    # Array of registrant questions
    MeetingsmeetingIdrecordingsregistrantsquestionsQuestions[] questions?;
};

# [Q&amp;A](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065237) for meeting
public type UsersuserIdmeetingsSettingsQuestionAndAnswer record {
    # Indicate whether you want to allow attendees to be able to view only answered questions or all questions.
    #
    # * `answered` - Attendees are able to view answered questions only.
    #
    # *  `all` - Attendees are able to view all questions submitted in the Q&amp;A
    @jsondata:Name {value: "question_visibility"}
    "answered"|"all" questionVisibility?;
    # * `true` - Allow participants to send questions without providing their name to the host, co-host, and panelists.
    #
    # * `false` - Do not allow anonymous questions. Not supported for simulive meeting
    @jsondata:Name {value: "allow_anonymous_questions"}
    boolean allowAnonymousQuestions?;
    # * `true` - Enable [Q&amp;A](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065237) for meeting.
    #
    # * `false` - Disable Q&amp;A for meeting. If not provided, the default value will be based on the user's setting
    boolean enable?;
    # * `true` - Allow participants to submit questions.
    #
    # * `false` - Don't allow participants to submit questions
    @jsondata:Name {value: "allow_submit_questions"}
    boolean allowSubmitQuestions?;
    # * `true` - Attendees can answer questions or leave a comment in the question thread.
    #
    # * `false` - Attendees can not answer questions or leave a comment in the question thread
    @jsondata:Name {value: "attendees_can_comment"}
    boolean attendeesCanComment?;
    # * `true` - Attendees can select the thumbs up button to bring popular questions to the top of the Q&amp;A window.
    #
    # * `false` - Attendees can't select the thumbs up button on questions
    @jsondata:Name {value: "attendees_can_upvote"}
    boolean attendeesCanUpvote?;
};

# Information about the **Enable continuous meeting chat** feature
public type InlineResponse20013SettingsContinuousMeetingChat record {
    # Whether to enable the **Automatically add meeting participants** setting
    #
    # # Deprecated
    @jsondata:Name {value: "auto_add_meeting_participants"}
    @deprecated
    boolean autoAddMeetingParticipants?;
    # Whether to enable the **Enable continuous meeting chat** setting
    boolean enable?;
    # Whether to enable the **Automatically add invited external users** setting
    #
    # # Deprecated
    @jsondata:Name {value: "auto_add_invited_external_users"}
    @deprecated
    boolean autoAddInvitedExternalUsers?;
    # Who is added to the continuous meeting chat. Invitees are users added during scheduling. Participants are users who join the meeting.
    # * `all_users` - For all users, including external invitees and meeting participants.
    # * `org_invitees_and_participants` - Only for meeting invitees and participants in your organization.
    # * `org_invitees` - Only for meeting invitees in your organization
    @jsondata:Name {value: "who_is_added"}
    "all_users"|"org_invitees_and_participants"|"org_invitees" whoIsAdded?;
    # The channel's ID
    @jsondata:Name {value: "channel_id"}
    string channelId?;
};

# Pagination object
public type InlineResponse20062AllOf1 record {
    # **Deprecated** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination
    #
    # # Deprecated
    @jsondata:Name {value: "page_number"}
    @deprecated
    int pageNumber = 1;
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The total number of all the records available across pages
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # The number of pages returned for the request made
    @jsondata:Name {value: "page_count"}
    int pageCount?;
    # The number of records returned with a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize = 30;
};

# Represents the Queries record for the operation: assginGroup
public type AssginGroupQueries record {
    # The group's ID
    @http:Query {name: "group_id"}
    string groupId;
};

# Send follow-up email to attendees
public type WebinarswebinarIdSettingsFollowUpAttendeesEmailNotification record {
    # * `true` - Send follow-up email to attendees.
    #
    # * `false` - Do not send follow-up email to attendees
    boolean enable?;
    # `0` - No plan.  
    # `1` - Send 1 day after the scheduled end date.  
    # `2` - Send 2 days after the scheduled end date.  
    # `3` - Send 3 days after the scheduled end date.  
    # `4` - Send 4 days after the scheduled end date.  
    # `5` - Send 5 days after the scheduled end date.  
    # `6` - Send 6 days after the scheduled end date.  
    # `7` - Send 7 days after the scheduled end date
    0|1|2|3|4|5|6|7 'type?;
};

public type InlineResponse2009 record {
    # The ZPA information
    @jsondata:Name {value: "device_infos"}
    InlineResponse2009DeviceInfos[] deviceInfos?;
    # The user's timezone
    string timezone?;
    # The user's language
    string language?;
};

public type InlineResponse2008 record {
    # Use the next page token to paginate through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # All ZDM group information under current account
    @constraint:Array {maxLength: 50}
    InlineResponse2008Groups[] groups?;
    # The total number of records returned from a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize?;
};

# [Q&amp;A](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065237) for meeting
public type InlineResponse2018SettingsQuestionAndAnswer record {
    # Indicate whether you want attendees to be able to view answered questions only or view all questions.
    #
    # * `answered` - Attendees are able to view answered questions only.
    #
    # *  `all` - Attendees are able to view all questions submitted in the Q&amp;A
    @jsondata:Name {value: "question_visibility"}
    "answered"|"all" questionVisibility?;
    # * `true` - Allow participants to send questions without providing their name to the host, co-host, and panelists..
    #
    # * `false` - Do not allow anonymous questions.(Not supported for simulive meeting.)
    @jsondata:Name {value: "allow_anonymous_questions"}
    boolean allowAnonymousQuestions?;
    # * `true` - Enable [Q&amp;A](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065237) for meeting.
    #
    # * `false` - Disable Q&amp;A for meeting. If not provided, the default value will be based on the user's setting
    boolean enable?;
    # * `true`: Allow participants to submit questions.
    #
    # * `false`: Do not allow submit questions
    @jsondata:Name {value: "allow_submit_questions"}
    boolean allowSubmitQuestions?;
    # * `true` - Attendees can answer questions or leave a comment in the question thread.
    #
    # * `false` - Attendees can not answer questions or leave a comment in the question thread
    @jsondata:Name {value: "attendees_can_comment"}
    boolean attendeesCanComment?;
    # * `true` - Attendees can click the thumbs up button to bring popular questions to the top of the Q&amp;A window.
    #
    # * `false` - Attendees can not click the thumbs up button on questions
    @jsondata:Name {value: "attendees_can_upvote"}
    boolean attendeesCanUpvote?;
};

public type WebinarInstancesWebinars WebinarsAllOf11;

# Represents the Queries record for the operation: webinarRegistrantGet
public type WebinarRegistrantGetQueries record {
    # The meeting or webinar occurrence ID
    @http:Query {name: "occurrence_id"}
    string occurrenceId?;
};

public type CloudRecordingRegistrationListRegistrantsItemsnull record {
    string id?;
    string zip?;
    string country?;
    @jsondata:Name {value: "custom_questions"}
    record {string title?; string value?;}[] customQuestions?;
    @jsondata:Name {value: "purchasing_time_frame"}
    ""|"Within a month"|"1-3 months"|"4-6 months"|"More than 6 months"|"No timeframe" purchasingTimeFrame?;
    string address?;
    string comments?;
    string city?;
    string org?;
    @jsondata:Name {value: "last_name"}
    string lastName?;
    @jsondata:Name {value: "no_of_employees"}
    ""|"1-20"|"21-50"|"51-100"|"101-250"|"251-500"|"501-1,000"|"1,001-5,000"|"5,001-10,000"|"More than 10,000" noOfEmployees?;
    string industry?;
    string phone?;
    @jsondata:Name {value: "role_in_purchase_process"}
    ""|"Decision Maker"|"Evaluator/Recommender"|"Influencer"|"Not involved" roleInPurchaseProcess?;
    string state?;
    @jsondata:Name {value: "first_name"}
    string firstName;
    @jsondata:Name {value: "job_title"}
    string jobTitle?;
    string email;
    "approved"|"denied"|"pending" status?;
};

# Recurrence object. Use this object only for a meeting with type `8`, a recurring meeting with a fixed time. 
public type UsersuserIdmeetingsRecurrence record {
    # Select the final date when the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. Cannot be used with `end_times`
    @jsondata:Name {value: "end_date_time"}
    string endDateTime?;
    # Select how many times the meeting should recur before it is canceled. If `end_times` is set to 0, it means there is no end time. The maximum number of recurring is 60. Cannot be used with `end_date_time`
    @jsondata:Name {value: "end_times"}
    int endTimes = 1;
    # Use this field **only if** you're scheduling a **recurring meeting of type `3`** to state the week of the month when the meeting should recur. If you use this field, you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.   
    # `-1` - Last week of the month.  
    # `1` - First week of the month.  
    # `2` - Second week of the month.  
    # `3` - Third week of the month.  
    # `4` - Fourth week of the month
    @jsondata:Name {value: "monthly_week"}
    -1|1|2|3|4 monthlyWeek?;
    # Use this field **only if** you're scheduling a **recurring meeting of type `3`** to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. 
    #
    #
    # `1` - Sunday.  
    # `2` - Monday.  
    # `3` - Tuesday.  
    # `4` -  Wednesday.  
    # `5` - Thursday.  
    # `6` - Friday.  
    # `7` - Saturday
    @jsondata:Name {value: "monthly_week_day"}
    1|2|3|4|5|6|7 monthlyWeekDay?;
    # Define the interval when the meeting should recur. For instance, to schedule a meeting that recurs every two months, set this field's value as `2` and the value of the `type` parameter as `3`. 
    #
    # For a daily meeting, the maximum number of recurrences is `99` days. For a weekly meeting, the maximum is `50` weeks. For a monthly meeting, the maximum is `10` months.
    @jsondata:Name {value: "repeat_interval"}
    int repeatInterval?;
    # Use this field **only** if you're scheduling a **recurring meeting of type `3`** to state the day in a month when the meeting should recur. The value range is from `1` to `31`.
    #
    # For the meeting to recur on 23rd of each month, provide `23` as this field's value and `1` as the `repeat_interval` field's value. To have the meeting recur every three months on 23rd of the month, change the `repeat_interval` field value to `3`
    @jsondata:Name {value: "monthly_day"}
    int monthlyDay = 1;
    # Recurrence meeting types.
    # `1` - Daily.  
    # `2` - Weekly.  
    # `3` - Monthly
    1|2|3 'type;
    # **Required** if you're scheduling a recurring meeting of type `2` to state the days of the week when the meeting should repeat. 
    #
    # This field's value could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `1` as this field's value.  
    #
    # **Note:** To set the meeting to occur on multiple days of a week, provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays, provide `1,3` as this field's value.
    #
    #
    # `1` - Sunday.   
    # `2` - Monday.  
    # `3` - Tuesday.  
    # `4` -  Wednesday.  
    # `5` -  Thursday.  
    # `6` - Friday.  
    # `7` - Saturday
    @jsondata:Name {value: "weekly_days"}
    "1"|"2"|"3"|"4"|"5"|"6"|"7" weeklyDays = "1";
};

# Panelist base object
public type PanelistsPanelistsAllOf112 record {
    # The panelist's full name.
    #
    # **Note** This value cannot exceed more than 12 Chinese characters
    string name?;
    # Panelist's email. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for return value details
    string email?;
};

public type MeetingsmeetingIdsurveyCustomSurveyQuestions record {
    # The low score label used for the `rating_min_value` field, up to 50 characters. 
    #
    # This field only applies to the `rating_scale` survey
    @jsondata:Name {value: "rating_min_label"}
    string ratingMinLabel?;
    # Whether participants must answer the question. 
    # * `true` - The participant must answer the question. 
    # * `false` - The participant does not need to answer the question. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "answer_required"}
    boolean answerRequired = false;
    # The allowed minimum number of characters. This field only applies to `short_answer` and `long_answer` questions. You must provide at least a **one** character minimum value
    @jsondata:Name {value: "answer_min_character"}
    int answerMinCharacter?;
    # The rating scale's minimum value. This value cannot be less than zero. 
    #
    # This field only applies to the `rating_scale` survey
    @jsondata:Name {value: "rating_min_value"}
    int ratingMinValue?;
    # The survey question, up to 420 characters
    string name?;
    # The survey question's available answers. This field requires a **minimum** of two answers. 
    #
    # * For `single` and `multiple` questions, you can only provide a maximum of 50 answers. 
    # * For `matching` polls, you can only provide a maximum of 16 answers. 
    # * For `rank_order` polls, you can only provide a maximum of seven answers
    @constraint:Array {minLength: 2}
    MeetingsmeetingIdsurveyCustomSurveyQuestionsAnswersItemsString[] answers?;
    # The survey's question and answer type. 
    # * `single` - Single choice. 
    # * `multiple` - Multiple choice. 
    # * `matching` - Matching. 
    # * `rank_order` - Rank order 
    # * `short_answer` - Short answer 
    # * `long_answer` - Long answer. 
    # * `fill_in_the_blank` - Fill in the blank 
    # * `rating_scale` - Rating scale
    "single"|"multiple"|"matching"|"rank_order"|"short_answer"|"long_answer"|"fill_in_the_blank"|"rating_scale" 'type?;
    # The high score label used for the `rating_max_value` field, up to 50 characters. 
    #
    # This field only applies to the `rating_scale` survey
    @jsondata:Name {value: "rating_max_label"}
    string ratingMaxLabel?;
    # The allowed maximum number of characters. This field only applies to `short_answer` and `long_answer` questions. 
    # * For `short_answer` question, a maximum of 500 characters. 
    # * For `long_answer` question, a maximum of 2,000 characters
    @jsondata:Name {value: "answer_max_character"}
    int answerMaxCharacter?;
    # The rating scale's maximum value, up to a maximum value of 10. 
    #
    # This field only applies to the `rating_scale` survey
    @jsondata:Name {value: "rating_max_value"}
    int ratingMaxValue?;
    # Whether to display the radio selection as a drop-down box. 
    # * `true` - Show as a drop-down box. 
    # * `false` - Do not show as a drop-down box. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "show_as_dropdown"}
    boolean showAsDropdown = false;
    # Information about the prompt questions. This field only applies to `matching` and `rank_order` questions. You **must** provide a minimum of two prompts, up to a maximum of 10 prompts
    @constraint:Array {maxLength: 10, minLength: 2}
    MeetingsmeetingIdsurveyCustomSurveyPrompts[] prompts?;
};

public type InlineResponse20013TrackingFields record {
    # Indicates whether the [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) is visible in the meeting scheduling options in the Zoom Web Portal or not.
    #
    # `true`: Tracking field is visible.   
    #
    #
    # `false`: Tracking field is not visible to the users when they look at the meeting details in the Zoom Web Portal but the field was used while scheduling this meeting via API. An invisible tracking field can be used by users while scheduling meetings via API only. 
    boolean visible?;
    # The tracking field's label
    string 'field?;
    # The tracking field's value
    string value?;
};

# [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar
public type UsersuserIdwebinarsSettingsQuestionAndAnswer record {
    # If simulive webinar, 
    #
    # * `true` - allow auto-reply to attendees. 
    #
    # * `false` - don't allow auto-reply to the attendees
    @jsondata:Name {value: "allow_auto_reply"}
    boolean allowAutoReply?;
    # * `true` - Allow participants to send questions without providing their name to the host, co-host, and panelists..
    #
    # * `false` - Do not allow anonymous questions.(Not supported for simulive webinar.)
    @jsondata:Name {value: "allow_anonymous_questions"}
    boolean allowAnonymousQuestions?;
    # Indicate whether you want attendees to be able to view answered questions only or view all questions.
    #
    # * `only` - Attendees are able to view answered questions only.
    #
    # *  `all` - Attendees are able to view all questions submitted in the Q&amp;A
    @jsondata:Name {value: "answer_questions"}
    "only"|"all" answerQuestions?;
    # * `true` - Enable [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
    #
    # * `false` - Disable Q&amp;A for webinar. If not provided, the default value will be based on the user's setting
    boolean enable?;
    # * `true` - Allow participants to submit questions.
    #
    # * `false` - Do not allow submit questions
    @jsondata:Name {value: "allow_submit_questions"}
    boolean allowSubmitQuestions?;
    # * `true` - Attendees can answer questions or leave a comment in the question thread.
    #
    # * `false` - Attendees can not answer questions or leave a comment in the question thread
    @jsondata:Name {value: "attendees_can_comment"}
    boolean attendeesCanComment?;
    # If `allow_auto_reply` = true, the text to be included in the automatic response. 
    @jsondata:Name {value: "auto_reply_text"}
    string autoReplyText?;
    # * `true` - Attendees can click the thumbs up button to bring popular questions to the top of the Q&amp;A window.
    #
    # * `false` - Attendees can not click the thumbs up button on questions
    @jsondata:Name {value: "attendees_can_upvote"}
    boolean attendeesCanUpvote?;
};

# The recording meeting object
public type InlineResponse2003AllOf1 record {
    # The cloud recording's passcode to be used in the URL. Directly splice this recording's passcode in `play_url` or `share_url` with `?pwd=` to access and play. Example: 'https://zoom.us/rec/share/**************?pwd=yNYIS408EJygs7rE5vVsJwXIz4-VW7MH'
    @jsondata:Name {value: "recording_play_passcode"}
    string recordingPlayPasscode?;
    # The recording's total file size. This includes the `recording_files` and `participant_audio_files` files
    @jsondata:Name {value: "total_size"}
    int totalSize?;
    # Auto-delete status of a meeting's [cloud recording](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0062627).  
    #
    # Prerequisite: To get the auto-delete status, the host of the recording must have the recording setting **Delete cloud recordings after a specified number of days** enabled. 
    @jsondata:Name {value: "auto_delete"}
    boolean autoDelete?;
    # The number of recording files returned in the response of this API call. This includes the `recording_files` and  `participant_audio_files` files
    @jsondata:Name {value: "recording_count"}
    int recordingCount?;
    # The recording's associated type of meeting or webinar. 
    #
    # If the recording is of a meeting: 
    # * `1` - Instant meeting. 
    # * `2` - Scheduled meeting. 
    # * `3` - A recurring meeting with no fixed time. 
    # * `4` - A meeting created via PMI (Personal Meeting ID). 
    # * `7` - A [Personal Audio Conference](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0060449) (PAC). 
    # * `8` - Recurring meeting with a fixed time. 
    #
    # If the recording is of a webinar: 
    # * `5` - A webinar. 
    # * `6` - A recurring webinar without a fixed time 
    # * `9` - A recurring webinar with a fixed time.
    #
    # If the recording is **not** from a meeting or webinar: 
    #
    # * `99` - A recording uploaded via the [**Recordings**](https://zoom.us/recording) interface on the Zoom Web Portal
    "1"|"2"|"3"|"4"|"5"|"6"|"7"|"8"|"9"|"99" 'type?;
    # The unique meeting identifier. Each instance of the meeting has its own UUID
    string uuid?;
    # The ID of the user set as the host of the meeting
    @jsondata:Name {value: "host_id"}
    string hostId?;
    # The duration of the meeting's recording
    int duration?;
    # The time when the meeting started
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # The date when the recording will be auto-deleted when `auto_delete` is true. Otherwise, no date will be returned
    @jsondata:Name {value: "auto_delete_date"}
    string autoDeleteDate?;
    # The user account's unique identifier
    @jsondata:Name {value: "account_id"}
    string accountId?;
    # The meeting topic
    string topic?;
    # The meeting ID, also known as the meeting number
    int id?;
    @jsondata:Name {value: "recording_files"}
    record {
        @jsondata:Name {value: "file_path"}
        string filePath?;
        @jsondata:Name {value: "play_url"}
        string playUrl?;
        @jsondata:Name {value: "meeting_id"}
        string meetingId?;
        @jsondata:Name {value: "file_size"}
        decimal fileSize?;
        @jsondata:Name {value: "recording_end"}
        string recordingEnd?;
        @jsondata:Name {value: "file_type"}
        "MP4"|"M4A"|"CHAT"|"TRANSCRIPT"|"CSV"|"TB"|"CC"|"CHAT_MESSAGE"|"SUMMARY" fileType?;
        @jsondata:Name {value: "recording_type"}
        "shared_screen_with_speaker_view(CC)"|"shared_screen_with_speaker_view"|"shared_screen_with_gallery_view"|"active_speaker"|"gallery_view"|"shared_screen"|"audio_only"|"audio_transcript"|"chat_file"|"poll"|"host_video"|"closed_caption"|"timeline"|"thumbnail"|"audio_interpretation"|"summary"|"summary_next_steps"|"summary_smart_chapters"|"sign_interpretation"|"production_studio" recordingType?;
        @jsondata:Name {value: "download_url"}
        string downloadUrl?;
        @jsondata:Name {value: "file_extension"}
        "MP4"|"M4A"|"TXT"|"VTT"|"CSV"|"JSON"|"JPG" fileExtension?;
        string id?;
        @jsondata:Name {value: "deleted_time"}
        string deletedTime?;
        @jsondata:Name {value: "recording_start"}
        string recordingStart?;
        "completed" status?;
    }[] recordingFiles?;
};

public type InlineResponse2012 record {
    InlineResponse2012Polls[] polls?;
};

public type InlineResponse20025QuestionDetails record {
    # Answer submitted by the user
    string answer?;
    # Date and time at which the answer to the poll was submitted
    @jsondata:Name {value: "date_time"}
    string dateTime?;
    # Question asked during the poll
    string question?;
    # Unique identifier of the poll
    @jsondata:Name {value: "polling_id"}
    string pollingId?;
};

public type InlineResponse2011 record {
    *InlineResponse2011AllOf1;
    *TheH323SIPDeviceObject2;
};

public type InlineResponse2014 record {
    # For scheduled meetings only. Meeting start date-time in UTC/GMT, such as `2020-03-31T12:02:00Z`
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # The [meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in **long** format(represented as int64 data type in JSON), also known as the meeting number
    int id?;
    # The app's ID
    @jsondata:Name {value: "app_id"}
    string appId?;
};

public type InlineResponse2013 record {
    InlineResponse2013Registrants[] registrants?;
};

public type InlineResponse2016 record {
    # Array of occurrence objects
    InlineResponse2016Occurrences[] occurrences?;
    # The meeting's start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # The URL the registrant can use to join the meeting. 
    #
    # The API will not return this field if the meeting was [created](/docs/api-reference/zoom-api/methods#operation/meetingCreate) with the `approval_type` field value of `1` (manual approval)
    @jsondata:Name {value: "join_url"}
    string joinUrl?;
    # The participant PIN code is used to authenticate audio participants before they join the meeting
    @jsondata:Name {value: "participant_pin_code"}
    int participantPinCode?;
    # The registrant's ID
    @jsondata:Name {value: "registrant_id"}
    string registrantId?;
    # The meeting's topic
    @constraint:String {maxLength: 200}
    string topic?;
    # The meeting ID
    int id?;
};

public type InlineResponse2012Polls record {
    # The information about the poll's questions
    InlineResponse2012Questions[] questions?;
    # Whether to allow meeting participants to answer poll questions anonymously: 
    # * `true` &mdash; Anonymous polls enabled. 
    # * `false` &mdash; Participants cannot answer poll questions anonymously
    boolean anonymous?;
    # The type of poll: 
    # * `1` &mdash; Poll. 
    # * `2` &mdash; Advanced Poll. This feature must be enabled in your Zoom account. 
    # * `3` &mdash; Quiz. This feature must be enabled in your Zoom account
    @jsondata:Name {value: "poll_type"}
    1|2|3 pollType?;
    # Meeting Poll ID
    string id?;
    # The title for the poll
    string title?;
    # The status of the meeting poll:  
    # `notstart` - Poll not started  
    # `started` - Poll started  
    # `ended` - Poll ended  
    # `sharing` - Sharing poll results
    "notstart"|"started"|"ended"|"sharing" status?;
};

public type InlineResponse2015 record {
    *InlineResponse2015AllOf1;
    *MeetingAndWebinarPollingObject3;
};

public type InlineResponse20029Meetings record {
    # Meeting duration
    int duration?;
    # The meeting's start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # The URL that participants can use to join a meeting
    @jsondata:Name {value: "join_url"}
    string joinUrl?;
    # The timezone to format the meeting start time
    string timezone?;
    # Use a [personal meeting ID (PMI)](/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi). Only used for scheduled meetings and recurring meetings with no fixed time
    @jsondata:Name {value: "use_pmi"}
    boolean usePmi?;
    # The meeting topic
    string topic?;
    # The meeting creation time
    @jsondata:Name {value: "created_at"}
    string createdAt?;
    # The [meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-) - a unique identifier of the meeting in **long** format, represented as int64 data type in JSON. Also known as the meeting number
    int id?;
    # Meeting types.
    # `1` - Instant meeting.
    # `2` - Scheduled meeting.
    # `3` - Recurring meeting with no fixed time.
    # `8` - Recurring meeting with a fixed time
    1|2|3|8 'type?;
    # The meeting passcode. This passcode may only contain characters `[a-z A-Z 0-9 @ - _ * !]`
    string passcode?;
};

# Meeting object
public type InlineResponse2018 record {
    # Array of occurrence objects
    InlineResponse2018Occurrences[] occurrences?;
    # The URL that registrants can use to register for a meeting. This field is only returned for meetings that have enabled registration
    @jsondata:Name {value: "registration_url"}
    string registrationUrl?;
    # The URL to join the chat
    @jsondata:Name {value: "chat_join_url"}
    string chatJoinUrl?;
    # The ID of the user who scheduled this meeting on behalf of the host
    @jsondata:Name {value: "assistant_id"}
    string assistantId?;
    # Timezone to format `start_time`
    string timezone?;
    # URL to start the meeting. This URL should only be used by the host of the meeting and **should not be shared with anyone other than the host** of the meeting, since anyone with this URL will be able to log in to the Zoom Client as the host of the meeting
    @jsondata:Name {value: "start_url"}
    string startUrl?;
    # The date and time when this meeting was created
    @jsondata:Name {value: "created_at"}
    string createdAt?;
    # The meeting type.
    # * `1` - An instant meeting. 
    # * `2` - A scheduled meeting. 
    # * `3` - A recurring meeting with no fixed time. 
    # * `8` - A recurring meeting with fixed time. 
    # * `10` - A screen share only meeting
    1|2|3|8|10 'type = 2;
    # [Personal meeting ID (PMI)](/docs/api/using-zoom-apis/#understanding-personal-meeting-id-pmi). Only used for scheduled meetings and recurring meetings with no fixed time
    string pmi?;
    # The meeting duration
    int duration?;
    # The meeting passcode. By default, it can be up to 10 characters in length and may contain alphanumeric characters as well as special characters such as !, @, #, etc
    string password?;
    # The [meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in **long** format(represented as int64 data type in JSON), also known as the meeting number
    int id?;
    # The meeting host's email address
    @jsondata:Name {value: "host_email"}
    string hostEmail?;
    # Encrypted passcode for third party endpoints (H323/SIP)
    @jsondata:Name {value: "encrypted_password"}
    string encryptedPassword?;
    # Meeting settings
    InlineResponse2018Settings settings?;
    # URL for participants to join the meeting. This URL should only be shared with users that you would like to invite for the meeting
    @jsondata:Name {value: "join_url"}
    string joinUrl?;
    # Passcode for participants to join the meeting via [PSTN](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)
    @jsondata:Name {value: "pstn_password"}
    string pstnPassword?;
    # Whether the prescheduled meeting was created via the [GSuite app](https://support.zoom.us/hc/en-us/articles/360020187492-Zoom-for-GSuite-add-on). This only supports the meeting `type` value of `2` (scheduled meetings) and `3` (recurring meetings with no fixed time). 
    # * `true` - A GSuite prescheduled meeting. 
    # * `false` - A regular meeting
    @jsondata:Name {value: "pre_schedule"}
    boolean preSchedule = false;
    # Agenda
    string agenda?;
    # Recurrence object. Use this object only for a meeting with type `8`, a recurring meeting with fixed time. 
    InlineResponse2018Recurrence recurrence?;
    # Meeting start date-time in UTC/GMT, such as `2020-03-31T12:02:00Z`
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # The meeting dynamic host key
    @jsondata:Name {value: "dynamic_host_key"}
    string dynamicHostKey?;
    # Tracking fields
    @jsondata:Name {value: "tracking_fields"}
    InlineResponse2018TrackingFields[] trackingFields?;
    # The platform through which the meeting was created.
    # * `other` - Created through another platform.
    # * `open_api` - Created through Open API.
    # * `web_portal` - Created through the web portal
    @jsondata:Name {value: "creation_source"}
    "other"|"open_api"|"web_portal" creationSource?;
    # H.323/SIP room system passcode
    @jsondata:Name {value: "h323_password"}
    string h323Password?;
    # Meeting topic
    @constraint:String {maxLength: 200}
    string topic?;
};

public type InlineResponse2017 InlineResponse2017AllOf1;

# Information about the **Enable continuous meeting chat** feature
public type InlineResponse2018SettingsContinuousMeetingChat record {
    # Whether to enable the **Automatically add meeting participants** setting
    #
    # # Deprecated
    @jsondata:Name {value: "auto_add_meeting_participants"}
    @deprecated
    boolean autoAddMeetingParticipants?;
    # Whether to enable the **Enable continuous meeting chat** setting. The default value is based on user settings. When the **Enable continuous meeting chat** setting is enabled, the default value is true. When the setting is disabled, the default value is false
    boolean enable?;
    # Whether to enable the **Automatically add invited external users** setting
    #
    # # Deprecated
    @jsondata:Name {value: "auto_add_invited_external_users"}
    @deprecated
    boolean autoAddInvitedExternalUsers?;
    # Who is added to the continuous meeting chat. Invitees are users added during scheduling. Participants are users who join the meeting.
    # * `all_users` - For all users, including external invitees and meeting participants.
    # * `org_invitees_and_participants` - Only for meeting invitees and participants in your organization.
    # * `org_invitees` - Only for meeting invitees in your organization
    @jsondata:Name {value: "who_is_added"}
    "all_users"|"org_invitees_and_participants"|"org_invitees" whoIsAdded?;
    # The channel's ID
    @jsondata:Name {value: "channel_id"}
    string channelId?;
};

# The meeting's [language interpretation settings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0064768). Make sure to add the language in the web portal in order to use it in the API. See link for details.
#
# **Note:** This feature is only available for certain Meeting add-on, Education, and Business and higher plans. If this feature is not enabled on the host's account, this setting will **not** be applied to the meeting
public type UsersuserIdmeetingsSettingsLanguageInterpretation record {
    # Whether to enable [language interpretation](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0064768) for the meeting. If not provided, the default value will be based on the user's setting
    boolean enable?;
    # Information about the meeting's language interpreters
    MeetingsmeetingIdSettingsLanguageInterpretationInterpreters[] interpreters?;
};

# The [pre-assigned breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms) settings
public type UsersuserIdmeetingsSettingsBreakoutRoom record {
    # Information about the breakout rooms
    UsersuserIdmeetingsSettingsBreakoutRoomRooms[] rooms?;
    # Whether to enable the [**Breakout Room pre-assign**](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms) option
    boolean enable?;
};

# Pagination Object
public type RegistrationListAllOf1 record {
    # **Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination
    #
    # # Deprecated
    @jsondata:Name {value: "page_number"}
    @deprecated
    int pageNumber = 1;
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The total number of all the records available across pages
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # The number of pages returned for the request made
    @jsondata:Name {value: "page_count"}
    int pageCount?;
    # The number of records returned with a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize = 30;
};

# Information about the meeting cloud recording registrant
public type MeetingCloudRecordingRegistration CloudRecordingRegistrationList;

public type WebinarswebinarIdpollsQuestions record {
    # Whether participants must answer the question. 
    # * `true` - The participant must answer the question. 
    # * `false` - The participant does not need to answer the question. 
    #
    # **Note:** 
    # * When the poll's `type` value is `1` (Poll), this value defaults to `true`. 
    # * When the poll's `type` value is the `2` (Advanced Poll) or `3` (Quiz) values, this value defaults to `false`
    @jsondata:Name {value: "answer_required"}
    boolean answerRequired = false;
    # The allowed minimum number of characters. This field only applies to `short_answer` and `long_answer` polls. You must provide at least a **one** character minimum value
    @jsondata:Name {value: "answer_min_character"}
    int answerMinCharacter?;
    # The rating scale's minimum value. This value cannot be less than zero. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_min_value"}
    int ratingMinValue?;
    # The poll question's available answers. This field requires a **minimum** of two answers. 
    #
    # * For `single` and `multiple` polls, you can only provide a maximum of 10 answers. 
    # * For `matching` polls, you can only provide a maximum of 16 answers. 
    # * For `rank_order` polls, you can only provide a maximum of seven answers
    @constraint:Array {minLength: 2}
    string[] answers?;
    # The poll's question and answer type. 
    # * `single` - Single choice. 
    # * `multiple` - Multiple choice. 
    # * `matching` - Matching. 
    # * `rank_order` - Rank order. 
    # * `short_answer` - Short answer. 
    # * `long_answer` - Long answer. 
    # * `fill_in_the_blank` - Fill in the blank. 
    # * `rating_scale` - Rating scale
    "single"|"multiple"|"matching"|"rank_order"|"short_answer"|"long_answer"|"fill_in_the_blank"|"rating_scale" 'type?;
    # The allowed maximum number of characters. This field only applies to `short_answer` and `long_answer` polls: 
    # * For `short_answer` polls, a maximum of 500 characters. 
    # * For `long_answer` polls, a maximum of 2,000 characters
    @jsondata:Name {value: "answer_max_character"}
    int answerMaxCharacter?;
    # The rating scale's maximum value, up to a maximum value of 10. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_max_value"}
    int ratingMaxValue?;
    # The poll question's correct answer(s). This field is **required** if the poll's `type` value is `3` (Quiz). 
    #
    # For `single` and `matching` polls, this field only accepts one answer
    @jsondata:Name {value: "right_answers"}
    string[] rightAnswers?;
    # Whether to display the radio selection as a drop-down box. 
    # * `true` - Show as a drop-down box. 
    # * `false` - Do not show as a drop-down box. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "show_as_dropdown"}
    boolean showAsDropdown = false;
    # The low score label for the `rating_min_value` field. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_min_label"}
    string ratingMinLabel?;
    # Whether the correct answer is case sensitive. This field only applies to `fill_in_the_blank` polls. 
    # * `true` - The answer is case-sensitive. 
    # * `false` - The answer is not case-sensitive. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "case_sensitive"}
    boolean caseSensitive = false;
    # The poll question, up to 1024 characters. 
    #
    # For `fill_in_the_blank` polls, this field is the poll's question. For each value that the user must fill in, ensure that there are the same number of `right_answers` values
    @constraint:String {maxLength: 1024}
    string name?;
    # The high score label for the `rating_max_value` field. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_max_label"}
    string ratingMaxLabel?;
    # The information about the prompt questions. This field only applies to `matching` and `rank_order` polls. You **must** provide a minimum of two prompts, up to a maximum of 10 prompts
    MeetingsmeetingIdbatchPollsPrompts[] prompts?;
};

# Represents the Queries record for the operation: webinarPolls
public type WebinarPollsQueries record {
    # Whether to query for polls with the **Anonymous** option enabled: 
    # * `true` &mdash; Query for polls with the **Anonymous** option enabled. 
    # * `false` &mdash; Do not query for polls with the **Anonymous** option enabled
    boolean anonymous?;
};

public type InlineResponse2013Registrants record {
    # Unique URL using which registrant can join the meeting
    @jsondata:Name {value: "join_url"}
    string joinUrl?;
    # The participant PIN code is used to authenticate audio participants before they join the meeting
    @jsondata:Name {value: "participant_pin_code"}
    int participantPinCode?;
    # Unique identifier of the registrant
    @jsondata:Name {value: "registrant_id"}
    string registrantId?;
    # Email address of the registrant
    string email?;
};

# Send reminder email to attendees and panelists
public type WebinarswebinarIdSettingsAttendeesAndPanelistsReminderEmailNotification record {
    # * `true` - Send reminder email to attendees and panelists.
    #
    # * `false` - Do not send reminder email to attendees and panelists
    boolean enable?;
    # `0` - No plan.  
    # `1` - Send 1 hour before webinar.  
    # `2` - Send 1 day before webinar.  
    # `3` - Send 1 hour and 1 day before webinar.  
    # `4` - Send 1 week before webinar.  
    # `5` - Send 1 hour and 1 week before webinar.  
    # `6` - Send 1 day and 1 week before webinar.  
    # `7` - Send 1 hour, 1 day and 1 week before webinar
    0|1|2|3|4|5|6|7 'type?;
};

# Represents the Queries record for the operation: analytics_details
public type AnalyticsDetailsQueries record {
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # The start date for the monthly range to query. The maximum range can be a month. If you do not provide this value, this defaults to the current date
    string 'from?;
    # The end date for the monthly range to query. The maximum range can be a month
    string to?;
    # The type of analytics details: 
    # * `by_view` &mdash; by_view. 
    # * `by_download` &mdash; by_download
    "by_view"|"by_download" 'type?;
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

public type InlineResponse2001 record {
    @jsondata:Name {value: "statistic_by_file_extension"}
    InlineResponse2001StatisticByFileExtension statisticByFileExtension?;
    # The total number of returned meeting records
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # The queried start date
    string 'from?;
    # The queried end date
    string to?;
    @jsondata:Name {value: "statistic_by_file_status"}
    InlineResponse2001StatisticByFileStatus statisticByFileStatus?;
};

# List of users
public type RegistrationList1 record {
    *RegistrationList1AllOf1;
    *RegistrationList1RegistrationList1AllOf12;
};

# List of users
public type RegistrationList2 record {
    *RegistrationList2AllOf1;
    *RegistrationList2RegistrationList2AllOf12;
};

public type InlineResponse2003 record {
    *InlineResponse2003AllOf1;
    *InlineResponse2003InlineResponse2003AllOf12;
    *InlineResponse2003InlineResponse2003InlineResponse2003AllOf123;
    # The cloud recording's passcode to be used in the URL. Directly splice this recording's passcode in `play_url` or `share_url` with `?pwd=` to access and play. Example: 'https://zoom.us/rec/share/**************?pwd=yNYIS408EJygs7rE5vVsJwXIz4-VW7MH'
    @jsondata:Name {value: "recording_play_passcode"}
    string recordingPlayPasscode?;
};

public type InlineResponse2002 record {
    # Information about the physical files
    @jsondata:Name {value: "physical_files"}
    InlineResponse2002PhysicalFiles[] physicalFiles?;
    # The meeting or webinar's [timezone](/docs/api/references/abbreviations/#timezones)
    string timezone;
    # The total size of the archive file, in bytes
    @jsondata:Name {value: "total_size"}
    int totalSize;
    # Whether the meeting or webinar is internal or external. 
    # * `internal` - An internal meeting or webinar. 
    # * `external` - An external meeting or webinar. 
    #
    # The `id`, `host_id`, and `topic` PII (Personal Identifiable Information) values in this response are removed when this value is `external`
    @jsondata:Name {value: "meeting_type"}
    "internal"|"external" meetingType;
    # The number of archived files returned in the API call response
    @jsondata:Name {value: "recording_count"}
    int recordingCount;
    # Whether the room is a [breakout room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms)
    @jsondata:Name {value: "is_breakout_room"}
    boolean isBreakoutRoom;
    # The type of archived meeting or webinar. 
    #
    # If the recording is of a meeting: 
    # * `1` - Instant meeting. 
    # * `2` - Scheduled meeting. 
    # * `3` - A recurring meeting with no fixed time. 
    # * `4` - A meeting created via PMI (Personal Meeting ID). 
    # * `7` - A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). 
    # * `8` - Recurring meeting with a fixed time. 
    #
    # If the recording is of a webinar: 
    # * `5` - A webinar. 
    # * `6` - A recurring webinar without a fixed time. 
    # * `9` - A recurring webinar with a fixed time. 
    #
    # If the recording is **not** from a meeting or webinar: 
    #
    # * `100` - A [breakout room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms)
    1|2|3|4|5|6|7|8|9|100 'type;
    # The universally unique identifier (UUID) of the recorded meeting or webinar instance. Each meeting or webinar instance generates a UUID
    string uuid;
    # The host's user ID for the archived meeting or webinar
    @jsondata:Name {value: "host_id"}
    string hostId;
    # The meeting or webinar's scheduled duration
    int duration;
    # The meeting or webinar's start time
    @jsondata:Name {value: "start_time"}
    string startTime;
    # The meeting or webinar's archive completion time
    @jsondata:Name {value: "complete_time"}
    record {}|"" completeTime;
    # Primary group IDs of participants who belong to your account. Each group ID is separated by a comma
    @jsondata:Name {value: "group_id"}
    string groupId?;
    # The user's account name
    @jsondata:Name {value: "account_name"}
    string accountName;
    # The meeting or webinar topic
    string topic;
    # The meeting or webinar ID, either `meetingId` or `webinarId`
    int id;
    # The parent meeting's universally unique ID (UUID). Each meeting or webinar instance generates a UUID. If the `is_breakout_room` value is `true`, the API returns this value
    @jsondata:Name {value: "parent_meeting_id"}
    string parentMeetingId?;
    # The meeting or webinar's duration, in seconds
    @jsondata:Name {value: "duration_in_second"}
    int durationInSecond;
    # Information about the archive files
    @jsondata:Name {value: "archive_files"}
    InlineResponse2002ArchiveFiles[] archiveFiles;
    # The archive's processing status. 
    # * `completed` - The archive's processing is complete. 
    # * `processing` - The archive is processing
    "completed"|"processing" status;
};

public type InlineResponse2005 record {
    # Analytics Summary
    @jsondata:Name {value: "analytics_summary"}
    InlineResponse2005AnalyticsSummary[] analyticsSummary?;
    # The queried start date
    string 'from?;
    # The queried end date
    string to?;
};

public type InlineResponse2004 record {
    # The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The total number of all the records available across pages
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # The queried start date
    string 'from?;
    # The queried end date
    string to?;
    # The number of records returned within a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize?;
    # Analytics Detail
    @jsondata:Name {value: "analytics_details"}
    InlineResponse2004AnalyticsDetails[] analyticsDetails?;
};

public type WebinarswebinarIdpanelistsPanelists record {
    *PanelistsAllOf1;
    *PanelistsPanelistsAllOf12;
};

public type InlineResponse2007 record {
    # The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    InlineResponse2007Devices[] devices?;
    # The number of records returned within a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize?;
};

public type InlineResponse2006 record {
    *InlineResponse2006AllOf1;
    *InlineResponse2006InlineResponse2006AllOf12;
    *InlineResponse2006InlineResponse2006InlineResponse2006AllOf123;
};

public type InlineResponse20047Meetings record {
    # Indicates whether or not the chat feature was used in the meeting
    @jsondata:Name {value: "has_chat"}
    boolean hasChat?;
    # The user's display name
    @jsondata:Name {value: "user_name"}
    string userName?;
    # Information about the meeting's assigned custom keys and values. This returns a maximum of 10 items
    @jsondata:Name {value: "custom_keys"}
    InlineResponse20047CustomKeys[] customKeys?;
    # Whether the meeting was created directly through Zoom or via an API request: 
    # * If the meeting was created via an OAuth app, this field returns the OAuth app's name. 
    # * If the meeting was created via JWT or the Zoom Web Portal, this returns the `Zoom` value
    string 'source?;
    # The type of meeting or webinar. 
    #
    # meeting: 
    # * `1` &mdash; Instant meeting. 
    # * `2` &mdash; Scheduled meeting. 
    # * `3` &mdash; A recurring meeting with no fixed time. 
    # * `4` &mdash; A meeting created via PMI (Personal Meeting ID). 
    # * `7` &mdash; A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). 
    # * `8` - Recurring meeting with a fixed time. 
    #
    # webinar: 
    # * `5` &mdash; A webinar. 
    # * `6` &mdash; A recurring webinar without a fixed time 
    # * `9` &mdash; A recurring webinar with a fixed time. 
    1|2|3|4|5|6|7|8|9 'type?;
    # Indicates whether or not the recording feature was used in the meeting
    @jsondata:Name {value: "has_recording"}
    boolean hasRecording?;
    # The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID
    string uuid?;
    # The date and time at which the attendee joined the meeting
    @jsondata:Name {value: "join_time"}
    string joinTime?;
    # The meeting's duration
    int duration?;
    # The Video SDK custom session ID
    @jsondata:Name {value: "session_key"}
    string sessionKey?;
    # The [meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID)
    int id?;
    # The meeting's encryption status. 
    # * `1` &mdash; E2E encryption. 
    # * `2` &mdash; Enhanced encryption
    @jsondata:Name {value: "meeting_encryption_status"}
    1|2 meetingEncryptionStatus?;
    # The number of meeting participants from my account
    @jsondata:Name {value: "participants_count_my_account"}
    int participantsCountMyAccount?;
    # Host Account Name of Hosting Organization
    @jsondata:Name {value: "host_organization"}
    string hostOrganization?;
    # The user's email address
    @jsondata:Name {value: "user_email"}
    string userEmail?;
    # The date and time at which the attendee left the meeting
    @jsondata:Name {value: "leave_time"}
    string leaveTime?;
    # The number of meeting participants
    @jsondata:Name {value: "participants_count"}
    int participantsCount?;
    # The sum of meeting minutes from all meeting participants in the meeting
    @jsondata:Name {value: "total_minutes"}
    int totalMinutes?;
    # The meeting's end date and time
    @jsondata:Name {value: "end_time"}
    string endTime?;
    # Indicates whether or not the screenshare feature was used in the meeting
    @jsondata:Name {value: "has_screen_share"}
    boolean hasScreenShare?;
    # The meeting's start date and time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # The meeting's scheduled date and time
    @jsondata:Name {value: "schedule_time"}
    string scheduleTime?;
    # The date and time at which the attendee joined the waiting room
    @jsondata:Name {value: "join_waiting_room_time"}
    string joinWaitingRoomTime?;
    # The meeting's topic
    string topic?;
    # Host's name
    @jsondata:Name {value: "host_name"}
    string hostName?;
};

# Approve or block users from specific regions or countries from joining this meeting. 
public type InlineResponse2018SettingsApprovedOrDeniedCountriesOrRegions record {
    # Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting.   
    #
    #
    # `approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.  
    #
    #
    # `deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`
    "approve"|"deny" method?;
    # `true` - Setting enabled to either allow users or block users from specific regions to join your meetings.   
    #
    #
    # `false` - Setting disabled
    boolean enable?;
    # List of countries or regions from where participants can join this meeting. 
    @jsondata:Name {value: "approved_list"}
    string[] approvedList?;
    # List of countries or regions from where participants can not join this meeting. 
    @jsondata:Name {value: "denied_list"}
    string[] deniedList?;
};

public type MeetingsmeetingIdbatchPollsPrompts record {
    # The question prompt's title
    @jsondata:Name {value: "prompt_question"}
    string promptQuestion?;
    # The question prompt's correct answers: 
    # * For `matching` polls, you must provide a minimum of two correct answers, up to a maximum of 10 correct answers. 
    # * For `rank_order` polls, you can only provide one correct answer
    @jsondata:Name {value: "prompt_right_answers"}
    string[] promptRightAnswers?;
};

# Recording registrant questions
public type RecordingRegistrantQuestions1 record {
    # Array of registrant custom questions
    @jsondata:Name {value: "custom_questions"}
    MeetingsmeetingIdrecordingsregistrantsquestionsCustomQuestions[] customQuestions?;
    # Array of registrant questions
    MeetingsmeetingIdrecordingsregistrantsquestionsQuestions[] questions?;
};

public type RecordingIdStatusBody record {
    "recover" action?;
};

public type InlineResponse20020Questions record {
    # Whether or not the displayed fields are required to be filled out by registrants
    boolean required?;
    # Field name of the question
    @jsondata:Name {value: "field_name"}
    "last_name"|"address"|"city"|"country"|"zip"|"state"|"phone"|"industry"|"org"|"job_title"|"purchasing_time_frame"|"role_in_purchase_process"|"no_of_employees"|"comments" fieldName?;
};

public type RegistrantsAllOf12 record {
    # Registrant ID
    string id?;
};

# Information about the **Enable continuous meeting chat** feature
public type MeetingsmeetingIdSettingsContinuousMeetingChat record {
    # Whether to enable the **Automatically add meeting participants** setting
    #
    # # Deprecated
    @jsondata:Name {value: "auto_add_meeting_participants"}
    @deprecated
    boolean autoAddMeetingParticipants?;
    # Whether to enable the **Enable continuous meeting chat** setting
    boolean enable?;
    # Whether to enable the **Automatically add invited external users** setting
    #
    # # Deprecated
    @jsondata:Name {value: "auto_add_invited_external_users"}
    @deprecated
    boolean autoAddInvitedExternalUsers?;
    # Who is added to the continuous meeting chat. Invitees are users added during scheduling. Participants are users who join the meeting.
    # * `all_users` - For all users, including external invitees and meeting participants.
    # * `org_invitees_and_participants` - Only for meeting invitees and participants in your organization.
    # * `org_invitees` - Only for meeting invitees in your organization
    @jsondata:Name {value: "who_is_added"}
    "all_users"|"org_invitees_and_participants"|"org_invitees" whoIsAdded?;
};

public type RegistrantsAllOf11 record {
    # Registrant ID
    string id?;
};

public type InlineResponse20061 record {
    # Information about the webinar templates
    InlineResponse20061Templates[] templates?;
    # The total number of records returned
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
};

public type InlineResponse20060 record {
    # The webinar's start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    InlineResponse20060Questions[] questions?;
    # Webinar ID in **long** format, represented as int64 data type in JSON, also known as the webinar number
    int id?;
    # Webinar UUID
    string uuid?;
};

# Webinar object
public type InlineResponse20063 record {
    # Array of occurrence objects
    InlineResponse20063Occurrences[] occurrences?;
    # H.323/SIP room system passcode
    @jsondata:Name {value: "h323_passcode"}
    string h323Passcode?;
    # Webinar settings
    InlineResponse20063Settings settings?;
    # URL to join the webinar. Only share this URL with the users who should be invited to the webinar
    @jsondata:Name {value: "join_url"}
    string joinUrl?;
    # Time zone to format `start_time`
    string timezone?;
    #
    # The `start_url` of a webinar is a URL using which a host or an alternative host can start the webinar. This URL should only be used by the host of the meeting and should not be shared with anyone other than the host of the webinar. 
    #
    # The expiration time for the `start_url` field listed in the response of the [**Create a webinar**](/docs/api-reference/zoom-api/methods#operation/webinarCreate) API is two hours for all regular users. 
    #
    # For users created using the `custCreate` option via the [**Create users**](/docs/api-reference/zoom-api/methods#operation/userCreate) API, the expiration time of the `start_url` field is 90 days.
    #
    # For security reasons, to retrieve the latest value for the `start_url` field programmatically (after expiry), you must call the [**Get a webinar**](/docs/api-reference/zoom-api/methods#operation/webinar) API and refer to the value of the `start_url` field in the response.
    #
    #
    #
    @jsondata:Name {value: "start_url"}
    string startUrl?;
    # Create time
    @jsondata:Name {value: "created_at"}
    string createdAt?;
    # The previously recorded file's ID for `simulive`
    @jsondata:Name {value: "record_file_id"}
    string recordFileId?;
    # Webinar types. 
    # `5` - Webinar.  
    # `6` - Recurring webinar with no fixed time.  
    # `9` - Recurring webinar with a fixed time
    5|6|9 'type = 5;
    # Unique webinar ID. Each webinar instance will generate its own webinar UUID. After a webinar ends, a new UUID is generated for the next instance of the webinar. Retrieve a list of UUIDs from past webinar instances using the [**List past webinar instances**](/docs/api-reference/zoom-api/methods#operation/pastWebinars) API. [Double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a `/` or contains `//` in it.
    string uuid?;
    # Webinar agenda
    string agenda?;
    # ID of the user set as host of webinar
    @jsondata:Name {value: "host_id"}
    string hostId?;
    # Webinar duration
    int duration?;
    # Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time. 
    RecurrenceWebinar1 recurrence?;
    # Webinar start time in GMT/UTC
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # Webinar passcode. Passcode may only contain the characters [a-z A-Z 0-9 @ - _ * !]. Maximum of 10 characters.
    #
    # If **Webinar Passcode** setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request. 
    #
    # **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. 
    #
    # If the requirements are enabled, you can view those requirements by calling the [**Get account settings**](/docs/api/rest/reference/account/methods/#operation/accountSettings) API
    @constraint:String {maxLength: 10}
    string password?;
    # Tracking fields
    @jsondata:Name {value: "tracking_fields"}
    MeetingsmeetingIdTrackingFields[] trackingFields?;
    # Whether the webinar is `simulive`
    @jsondata:Name {value: "is_simulive"}
    boolean isSimulive?;
    # The platform used when creating the meeting.
    # * `other` - Created through another platform.
    # * `open_api` - Created through Open API.
    # * `web_portal` - Created through the web portal
    @jsondata:Name {value: "creation_source"}
    "other"|"open_api"|"web_portal" creationSource?;
    # Whether to transition a simulive webinar to live. The host must be present at the time of transition
    @jsondata:Name {value: "transition_to_live"}
    boolean transitionToLive?;
    # Encrypted passcode for third party endpoints (H323/SIP)
    @jsondata:Name {value: "encrypted_passcode"}
    string encryptedPasscode?;
    # Webinar topic
    @constraint:String {maxLength: 200}
    string topic?;
    # Webinar ID in **long** format(represented as int64 data type in JSON), also known as the webinar number
    int id?;
    # Email address of the meeting host
    @jsondata:Name {value: "host_email"}
    string hostEmail?;
};

public type InlineResponse20024Participants record {
    # Participant duration, in seconds, calculated by subtracting the `leave_time` from the `join_time` for the `user_id`. If the participant leaves and rejoins the same meeting, they will be assigned a different `user_id` and Zoom displays their new duration in a separate object. Note that because of this, the duration may not reflect the total time the user was in the meeting
    int duration?;
    # Email address of the user. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details
    @jsondata:Name {value: "user_email"}
    string userEmail?;
    # Participant leave time
    @jsondata:Name {value: "leave_time"}
    string leaveTime?;
    # Participant ID. This is a unique ID assigned to the participant joining a meeting and is valid for that meeting only
    @jsondata:Name {value: "user_id"}
    string userId?;
    # Indicates if failover happened during the meeting
    boolean failover?;
    # The participant's unique registrant ID. This field only returns if you pass the `registrant_id` value for the `include_fields` query parameter. 
    #
    # This field does not return if the `type` query parameter is the `live` value
    @jsondata:Name {value: "registrant_id"}
    string registrantId?;
    # Participant display name
    string name?;
    # Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank
    string id?;
    # Whether the meeting participant is an internal user
    @jsondata:Name {value: "internal_user"}
    boolean internalUser = false;
    # Participant join time
    @jsondata:Name {value: "join_time"}
    string joinTime?;
    # The participant's status. 
    # * `in_meeting` - In a meeting. 
    # * `in_waiting_room` - In a waiting room
    "in_meeting"|"in_waiting_room" status?;
};

# List of webinars
public type InlineResponse20062 record {
    *InlineResponse20062AllOf1;
    *InlineResponse20062InlineResponse20062AllOf12;
};

# Information about the webinar's join token
public type InlineResponse20065 record {
    # The number of seconds the join token is valid for before it expires. This value always returns `120`
    @jsondata:Name {value: "expire_in"}
    120 expireIn?;
    # The join token
    string token?;
};

# Information about the webinar's sessions branding
public type InlineResponse20064 record {
    # Information about the webinar's [virtual background](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background) files
    @jsondata:Name {value: "virtual_backgrounds"}
    InlineResponse20064VirtualBackgrounds[] virtualBackgrounds?;
    # Information about the webinar's [wallpaper] file
    InlineResponse20064Wallpaper wallpaper?;
    # Information about the webinar's name tag
    @jsondata:Name {value: "name_tags"}
    InlineResponse20064NameTags[] nameTags?;
};

# Information about the webinar's local recorder join token
public type InlineResponse20067 record {
    # The number of seconds the join token is valid for before it expires. This value always returns `120`
    @jsondata:Name {value: "expire_in"}
    120 expireIn?;
    # The join token
    string token?;
};

# Information about the customized webinar survey
public type WebinarSurveyObjectCustomSurvey record {
    # The survey's feedback, up to 320 characters. 
    #
    # This value defaults to `Thank you so much for taking the time to complete the survey, your feedback really makes a difference.`
    @constraint:String {maxLength: 320}
    string feedback?;
    # Whether to display the number in the question name. 
    #
    # This value defaults to `true`
    @jsondata:Name {value: "numbered_questions"}
    boolean numberedQuestions = false;
    # Information about the webinar survey's questions
    @constraint:Array {maxLength: 100, minLength: 1}
    WebinarSurveyObjectCustomSurveyQuestions[] questions?;
    # Allow participants to anonymously answer survey questions. 
    # * `true` - Anonymous survey enabled. 
    # * `false` - Participants cannot answer survey questions anonymously. 
    #
    # This value defaults to `true`
    boolean anonymous = false;
    # The survey's title, up to 64 characters
    @constraint:String {maxLength: 64}
    string title?;
    # Whether to display the question type in the question name. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "show_question_type"}
    boolean showQuestionType = false;
};

# Information about the webinar's local archive token
public type InlineResponse20066 record {
    # The number of seconds the archive token is valid for before it expires. This value always returns `120`
    @jsondata:Name {value: "expire_in"}
    120 expireIn?;
    # The archive token
    string token?;
};

public type WebinarIdPollsBody MeetingAndWebinarPollingObject1;

# Webinar panelist
public type InlineResponse20069 PanelistList;

public type MeetingsmeetingIdbatchRegistrantsRegistrants record {
    # Last name of the registrant
    @jsondata:Name {value: "last_name"}
    string lastName?;
    # First name of the registrant
    @jsondata:Name {value: "first_name"}
    string firstName;
    # Email address of the registrant
    string email;
};

public type InlineResponse20068 record {
    # Live streaming page URL. This is the URL using which anyone can view the live stream of the webinar
    @jsondata:Name {value: "page_url"}
    string pageUrl?;
    # The number of pixels in each dimension that the video camera can display
    string resolution?;
    # Stream key
    @jsondata:Name {value: "stream_key"}
    string streamKey?;
    # Stream URL
    @jsondata:Name {value: "stream_url"}
    string streamUrl?;
};

# Represents the Queries record for the operation: reportOperationLogs
public type ReportOperationLogsQueries record {
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # **Optional**  
    #
    # Filter your response by a category type to see reports for a specific category.
    # The value for this field can be one of the following:  
    # `all`  
    # `user`  
    # `user_settings`  
    # `account`  
    # `billing`  
    # `im`  
    # `recording`  
    # `phone_contacts`  
    # `webinar`  
    # `sub_account`  
    # `role`  
    # `zoom_rooms`
    @http:Query {name: "category_type"}
    "all"|"user"|"user_settings"|"account"|"billing"|"im"|"recording"|"phone_contacts"|"webinar"|"sub_account"|"role"|"zoom_rooms" categoryType?;
    # Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once
    string 'from;
    # End date
    string to;
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

public type WebinarswebinarIdregistrantsstatusRegistrants record {
    # The registrant's ID
    string id?;
    # The registrant's email address
    string email?;
};

public type LiveMeetingsmeetingIdeventsParamsContacts record {
    # The user's ID
    string id?;
    # The user's email address. Use this value if you do not have the user's ID. 
    #
    # If you pass the `id` value, the API ignores this query parameter
    string email?;
};

public type MeetingRegistrantMeetingRegistrantMeetingRegistrantAllOf123 record {
    # The URL with which the approved registrant can join the meeting
    @jsondata:Name {value: "join_url"}
    string joinUrl?;
    # The registrant's registration date and time
    @jsondata:Name {value: "create_time"}
    string createTime?;
    # The participant PIN code is used to authenticate audio participants before they join the meeting
    @jsondata:Name {value: "participant_pin_code"}
    int participantPinCode?;
    # The registrant's registration status.
    # * `approved` - The registrant is approved to join the meeting. 
    # * `pending` - The registrant's registration is pending.
    # * `denied` - The registrant was declined to join the meeting
    "approved"|"pending"|"denied" status?;
};

public type UserIdOneOf1 string;

# Webinar live stream status
public type LivestreamStatusBody1 record {
    # Update the live stream session's settings.  **Only** settings for a stopped live stream can be updated
    WebinarswebinarIdlivestreamstatusSettings settings?;
    # Update the live stream's status. 
    #
    # * `start` - Start a webinar live stream.
    #
    # * `stop`- Stop an ongoing webinar live stream
    "start"|"stop" action?;
};

# Registrant status
public type RegistrantsStatusBody record {
    # List of registrants
    MeetingsmeetingIdrecordingsregistrantsstatusRegistrants[] registrants?;
    "approve"|"deny" action;
};

public type UsersuserIdwebinarTemplatesAllOf1 record {
    # If the field is set to true, the recurrence webinar template will be saved as the scheduled webinar
    @jsondata:Name {value: "save_recurrence"}
    boolean saveRecurrence = false;
    # The webinar ID in long (int64) format
    @jsondata:Name {value: "webinar_id"}
    int webinarId?;
    # The webinar template's name
    string name?;
    # Overwrite an existing webinar template if the template is created from same existing webinar
    boolean overwrite = false;
};

# Represents the Queries record for the operation: deleteWebinarBrandingVB
public type DeleteWebinarBrandingVBQueries record {
    # A comma-separated list of the virtual background file IDs to delete
    string ids?;
};

public type PanelistsPanelistsAllOf12 record {
    # The panelist's name to display in the name tag
    @jsondata:Name {value: "name_tag_name"}
    string nameTagName?;
    # The pronouns to display in the name tag
    @jsondata:Name {value: "name_tag_pronouns"}
    string nameTagPronouns?;
    # The description for the name tag, such the person's title
    @jsondata:Name {value: "name_tag_description"}
    string nameTagDescription?;
    # The virtual background ID to bind
    @jsondata:Name {value: "virtual_background_id"}
    string virtualBackgroundId?;
    # The name tag ID to bind
    @jsondata:Name {value: "name_tag_id"}
    string nameTagId?;
};

public type RecordingSettings1 record {
    # The authentication options
    @jsondata:Name {value: "authentication_option"}
    string authenticationOption?;
    # This field enables passcode protection for the recording by setting a passcode. 
    #
    # The passcode must have a minimum of **eight** characters with a mix of numbers, letters and special characters.  
    #
    #
    # **Note:** If the account owner or the admin has set minimum passcode strength requirements for recordings through Account Settings, the passcode value provided here must meet those requirements.   
    #
    # If the requirements are enabled, you can view those requirements by calling either the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API or the [**Get account settings**](/api-reference/zoom-api/ma#operation/accountSettings) API
    @constraint:String {maxLength: 10, minLength: 8}
    string password?;
    # This field indicates that only authenticated users can view
    @jsondata:Name {value: "recording_authentication"}
    boolean recordingAuthentication?;
    # This field sends an email to host when someone registers to view the recording. This setting applies for On-demand recordings only
    @jsondata:Name {value: "send_email_to_host"}
    boolean sendEmailToHost?;
    # The approval type for the registration.  
    #
    # `0`- Automatically approve the registration when a user registers.  
    #
    # `1` - Manually approve or deny the registration of a user.  
    #
    # `2` - No registration required to view the recording
    @jsondata:Name {value: "approval_type"}
    0|1|2 approvalType?;
    # This field shows social share buttons on registration page. This setting applies for On-demand recordings only
    @jsondata:Name {value: "show_social_share_buttons"}
    boolean showSocialShareButtons?;
    # The authentication domains
    @jsondata:Name {value: "authentication_domains"}
    string authenticationDomains?;
    # Update the auto-delete status of a meeting's [cloud recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).  
    #
    # Prerequisite: To update the auto-delete status, the host of the recording must have the recording setting "Delete cloud recordings after a specified number of days" enabled
    @jsondata:Name {value: "auto_delete"}
    boolean autoDelete?;
    # The name of the recording
    string topic?;
    # This field determines whether a viewer can download the recording file or not
    @jsondata:Name {value: "viewer_download"}
    boolean viewerDownload?;
    # This field determines how the meeting recording is shared
    @jsondata:Name {value: "share_recording"}
    "publicly"|"internally"|"none" shareRecording?;
    # This field determines whether the registration is required to view the recording
    @jsondata:Name {value: "on_demand"}
    boolean onDemand?;
};

public type InlineResponse20070 record {
    *InlineResponse20070AllOf1;
    *MeetingAndWebinarPollingObject4;
};

public type MeetingsmeetingIdregistrantsquestionsCustomQuestions record {
    # Answer choices for the question. Can not be used for `short` question type as this type of question requires registrants to type out the answer
    string[] answers?;
    # Title of the custom question
    string title?;
    # The type of question being asked
    "short"|"single" 'type?;
    # Indicates whether or not the custom question is required to be answered by participants or not
    boolean required?;
};

# Information about the webinar token
public type InlineResponse20072 record {
    # The generated webinar token
    string token?;
};

public type InlineResponse20071 WebinarRegistrantQuestions1;

# Occurrence object. This object is only returned for recurring webinars
public type InlineResponse20063Occurrences record {
    # Duration
    int duration?;
    # Start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences
    @jsondata:Name {value: "occurrence_id"}
    string occurrenceId?;
    # Occurrence status: 
    # `available` - Available occurrence.  
    # `deleted` -  Deleted occurrence
    "available"|"deleted" status?;
};

public type InlineResponse20073 record {
    # Tracking Sources object
    @jsondata:Name {value: "tracking_sources"}
    InlineResponse20073TrackingSources[] trackingSources?;
    # The total number of registration records for this Webinar
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
};

public type InlineResponse20033Invoices record {
    # End date of the invoice period
    @jsondata:Name {value: "end_date"}
    string endDate?;
    # Tax amount in the invoice
    @jsondata:Name {value: "tax_amount"}
    string taxAmount?;
    # Number of licenses bought
    int quantity?;
    # Total billed amount in the invoice
    @jsondata:Name {value: "total_amount"}
    string totalAmount?;
    # Name of the invoice
    @jsondata:Name {value: "invoice_charge_name"}
    string invoiceChargeName?;
    # Invoice number 
    @jsondata:Name {value: "invoice_number"}
    string invoiceNumber?;
    # Start date of the invoice period
    @jsondata:Name {value: "start_date"}
    string startDate?;
};

# The information about the device
public type InlineResponse2007Devices record {
    # id of the Zoom Room
    @jsondata:Name {value: "room_id"}
    string roomId?;
    # Whether the device connected to ZDM (Zoom Device Management)
    @jsondata:Name {value: "connected_to_zdm"}
    boolean connectedToZdm?;
    # Filter devices by status.   
    # Device Status:  
    # `0` - offline.  
    # `1` - online.  
    # `-1` - unlink
    @jsondata:Name {value: "device_status"}
    -1|0|1 deviceStatus?;
    # Whether the device enrolled in ZDM (Zoom Device Management)
    @jsondata:Name {value: "enrolled_in_zdm"}
    boolean enrolledInZdm?;
    # The owner of the phone device
    @jsondata:Name {value: "user_email"}
    string userEmail?;
    # Unique identifier of the device
    @jsondata:Name {value: "device_id"}
    string deviceId?;
    # App version of Zoom Rooms
    @jsondata:Name {value: "app_version"}
    string appVersion?;
    # The device's serial number
    @jsondata:Name {value: "serial_number"}
    string serialNumber?;
    # Filter devices by device type.  
    # Device Type:  
    # `-1` - All Zoom Room device(0,1,2,3,4,6).  
    # `0` - Zoom Rooms Computer.  
    # `1` - Zoom Rooms Controller.  
    # `2` - Zoom Rooms Scheduling Display.  
    # `3` - Zoom Rooms Control System.  
    # `4` -  Zoom Rooms Whiteboard.  
    # `5` - Zoom Phone Appliance.  
    # `6` - Zoom Rooms Computer (with Controller)
    @jsondata:Name {value: "device_type"}
    0|1|2|3|4|5|6 deviceType?;
    # The version of the SDK
    @jsondata:Name {value: "skd_version"}
    string skdVersion?;
    # The time when device was online last time
    @jsondata:Name {value: "last_online"}
    string lastOnline?;
    # The device's platform
    @jsondata:Name {value: "platform_os"}
    string platformOs?;
    # Name of the Zoom Room
    @jsondata:Name {value: "room_name"}
    string roomName?;
    # The name of the device
    @jsondata:Name {value: "device_name"}
    string deviceName?;
    # The mac address of the device
    @jsondata:Name {value: "mac_address"}
    string macAddress?;
    # The device's manufacturer
    string vendor?;
    # The device's model
    string model?;
    # The name of the tag
    string tag?;
};

# [Q&amp;A](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065237) for meeting
public type InlineResponse20013SettingsQuestionAndAnswer record {
    # Indicate whether you want attendees to be able to view only answered questions, or view all questions.
    #
    # * `answered` - Attendees can only view answered questions.
    #
    # * `all` - Attendees can view all questions submitted in the Q&amp;A
    @jsondata:Name {value: "question_visibility"}
    "answered"|"all" questionVisibility?;
    # * `true` - Allow participants to send questions without providing their name to the host, co-host, and panelists.
    #
    # * `false` - Don't allow anonymous questions. Not supported for simulive meetings
    @jsondata:Name {value: "allow_anonymous_questions"}
    boolean allowAnonymousQuestions?;
    # * `true` - Enable [Q&amp;A](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065237) for the meeting.
    #
    # * `false` - Disable Q&amp;A for the meeting
    boolean enable?;
    # * `true` - Allow participants to submit questions.
    #
    # * `false` - Don't allow participants to submit questions
    @jsondata:Name {value: "allow_submit_questions"}
    boolean allowSubmitQuestions?;
    # * `true` - Attendees can answer questions or leave a comment in the question thread.
    #
    # * `false` - Attendees can't answer questions or leave a comment in the question thread
    @jsondata:Name {value: "attendees_can_comment"}
    boolean attendeesCanComment?;
    # * `true` - Attendees can select the thumbs up button to bring popular questions to the top of the Q&amp;A window.
    #
    # * `false` - Attendees can't select the thumbs up button on questions
    @jsondata:Name {value: "attendees_can_upvote"}
    boolean attendeesCanUpvote?;
};

# Meeting settings
public type InlineResponse20013Settings record {
    @jsondata:Name {value: "breakout_room"}
    InlineResponse20013SettingsBreakoutRoom breakoutRoom?;
    # Whether to allow the host and co-hosts to fully control the mute state of participants
    @jsondata:Name {value: "allow_host_control_participant_mute_state"}
    boolean allowHostControlParticipantMuteState = false;
    # The summary template ID used to generate a meeting summary based on a predefined template. To get available summary templates, use the **Get user summary templates** API. To enable this feature for your account, please [contact Zoom Support](https://support.zoom.com/hc/en)
    @jsondata:Name {value: "summary_template_id"}
    string summaryTemplateId?;
    # Custom keys and values assigned to the meeting
    @jsondata:Name {value: "custom_keys"}
    MeetingsmeetingIdSettingsCustomKeys[] customKeys?;
    # Global Dial-in Countries and Regions
    @jsondata:Name {value: "global_dial_in_numbers"}
    InlineResponse20013SettingsGlobalDialInNumbers[] globalDialInNumbers?;
    # Show social share buttons on the meeting registration page.
    # This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting)
    @jsondata:Name {value: "show_share_button"}
    boolean showShareButton?;
    # Whether to send registrants an email confirmation.
    # * `true` - Send a confirmation email.
    # * `false` - Do not send a confirmation email
    @jsondata:Name {value: "registrants_confirmation_email"}
    boolean registrantsConfirmationEmail?;
    @jsondata:Name {value: "approved_or_denied_countries_or_regions"}
    InlineResponse20013SettingsApprovedOrDeniedCountriesOrRegions approvedOrDeniedCountriesOrRegions?;
    @jsondata:Name {value: "continuous_meeting_chat"}
    InlineResponse20013SettingsContinuousMeetingChat continuousMeetingChat?;
    # Allow attendees to join the meeting from multiple devices. This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting)
    @jsondata:Name {value: "allow_multiple_devices"}
    boolean allowMultipleDevices?;
    # `true` - Only authenticated users can join meetings
    @jsondata:Name {value: "meeting_authentication"}
    boolean meetingAuthentication?;
    # A semicolon-separated list of the meeting's alternative hosts' email addresses or IDs
    @jsondata:Name {value: "alternative_hosts"}
    string alternativeHosts?;
    # Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher
    @jsondata:Name {value: "alternative_host_update_polls"}
    boolean alternativeHostUpdatePolls?;
    # Enable the device testing
    @jsondata:Name {value: "device_testing"}
    boolean deviceTesting = false;
    # Start video when participants join the meeting
    @jsondata:Name {value: "participant_video"}
    boolean participantVideo?;
    # Indicates the type of calendar integration used to schedule the meeting. 
    # * `1` - [Zoom Outlook add-in](https://support.zoom.us/hc/en-us/articles/360031592971-Getting-started-with-Outlook-plugin-and-add-in) 
    # * `2` - [Zoom for Google Workspace add-on](https://support.zoom.us/hc/en-us/articles/360020187492-Using-the-Zoom-for-Google-Workspace-add-on)
    #
    # Works with the `private_meeting` field to determine whether to share details of meetings or not
    @jsondata:Name {value: "calendar_type"}
    1|2 calendarType?;
    # Host meeting in India
    #
    # # Deprecated
    @jsondata:Name {value: "in_meeting"}
    @deprecated
    boolean inMeeting = false;
    # Mute participants upon entry
    @jsondata:Name {value: "mute_upon_entry"}
    boolean muteUponEntry = false;
    # List of global dial-in countries
    @jsondata:Name {value: "global_dial_in_countries"}
    string[] globalDialInCountries?;
    @jsondata:Name {value: "question_and_answer"}
    InlineResponse20013SettingsQuestionAndAnswer questionAndAnswer?;
    # Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings
    @jsondata:Name {value: "join_before_host"}
    boolean joinBeforeHost = false;
    # Whether the **Allow host to save video order** feature is enabled
    @jsondata:Name {value: "host_save_video_order"}
    boolean hostSaveVideoOrder?;
    # Add watermark when viewing a shared screen
    boolean watermark = false;
    # Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.**   
    #
    #
    #
    # `0` - Automatically approve.  
    # `1` - Manually approve.  
    # `2` - No registration required
    @jsondata:Name {value: "approval_type"}
    0|1|2 approvalType = 2;
    # Close registration after event date
    @jsondata:Name {value: "close_registration"}
    boolean closeRegistration = false;
    # Whether to push meeting changes to the calendar. 
    #
    # To enable this feature, configure the **Configure Calendar and Contacts Service** in the user's profile page of the Zoom web portal and enable the **Automatically sync Zoom calendar events information bi-directionally between Zoom and integrated calendars.** setting in the **Settings** page of the Zoom web portal.
    # * `true` - Push meeting changes to the calendar.
    # * `false` - Do not push meeting changes to the calendar
    @jsondata:Name {value: "push_change_to_calendar"}
    boolean pushChangeToCalendar = false;
    # Whether to set the meeting as an internal meeting
    @jsondata:Name {value: "internal_meeting"}
    boolean internalMeeting = false;
    # The participants added here will receive unique meeting invite links and bypass authentication
    @jsondata:Name {value: "authentication_exception"}
    MeetingsmeetingIdSettingsAuthenticationException[] authenticationException?;
    # If the value of `join_before_host` field is set to true, this field can be used to indicate time limits when a participant may join a meeting before a host.
    #
    # *  `0` - Allow participant to join anytime.
    # *  `5` - Allow participant to join 5 minutes before meeting start time.
    # * `10` - Allow participant to join 10 minutes before meeting start time.
    # * `15` - Allow participant to join 15 minutes before meeting start time
    @jsondata:Name {value: "jbh_time"}
    0|5|10|15 jbhTime?;
    # Third party audio conference information
    @jsondata:Name {value: "audio_conference_info"}
    string audioConferenceInfo?;
    # If user has configured [Sign Into Zoom with Specified Domains](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated
    @jsondata:Name {value: "authentication_domains"}
    string authenticationDomains?;
    # Defines who will receive a summary after this meeting. This field is applicable only when `auto_start_meeting_summary` is set to `true`.
    # * `1` - Only meeting host.
    # * `2` - Only meeting host, co-hosts, and alternative hosts.
    # * `3` - Only meeting host and meeting invitees in our organization.
    # * `4` - All meeting invitees including those outside of our organization
    @jsondata:Name {value: "who_will_receive_summary"}
    1|2|3|4 whoWillReceiveSummary?;
    # A list of the meeting's invitees
    @jsondata:Name {value: "meeting_invitees"}
    InlineResponse20013SettingsMeetingInvitees[] meetingInvitees?;
    # Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. 
    #
    # `enhanced_encryption` - Enhanced encryption. Encryption is stored in the cloud if you enable this option.   
    #
    #
    # `e2ee` - [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions features
    @jsondata:Name {value: "encryption_type"}
    "enhanced_encryption"|"e2ee" encryptionType?;
    # Meeting authentication option ID
    @jsondata:Name {value: "authentication_option"}
    string authenticationOption?;
    @jsondata:Name {value: "sign_language_interpretation"}
    InlineResponse20013SettingsSignLanguageInterpretation signLanguageInterpretation?;
    # Whether to disable the participant video during meeting. To enable this feature for your account, please [contact Zoom Support](https://support.zoom.us/hc/en-us)
    @jsondata:Name {value: "disable_participant_video"}
    boolean disableParticipantVideo = false;
    # Whether the [**Focus Mode** feature](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode) is enabled when the meeting starts
    @jsondata:Name {value: "focus_mode"}
    boolean focusMode?;
    # Registration type. Used for recurring meeting with fixed time only. 
    # `1` Attendees register once and can attend any of the occurrences.  
    # `2` Attendees need to register for each occurrence to attend.  
    # `3` Attendees register once and can choose one or more occurrences to attend
    @jsondata:Name {value: "registration_type"}
    1|2|3 registrationType = 1;
    # Contact email for registration
    @jsondata:Name {value: "contact_email"}
    string contactEmail?;
    # Enable waiting room
    @jsondata:Name {value: "waiting_room"}
    boolean waitingRoom = false;
    # Determine how participants can join the audio portion of the meeting.  
    # `both` - Both Telephony and VoIP.  
    # `telephony` - Telephony only.  
    # `voip` - VoIP only.  
    # `thirdParty` - Third party audio conference
    "both"|"telephony"|"voip"|"thirdParty" audio = "both";
    # Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)
    @jsondata:Name {value: "authentication_name"}
    string authenticationName?;
    # Only signed in users with specified domains can join meetings.
    #
    # **This field is deprecated and will not be supported in the future.**    
    #
    # As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting
    #
    # # Deprecated
    @jsondata:Name {value: "enforce_login_domains"}
    @deprecated
    string enforceLoginDomains?;
    # Defines who can ask questions about this meeting's transcript. This field is applicable only when `auto_start_ai_companion_questions` is set to `true`.
    # * `1` - All participants and invitees.
    # * `2` - All participants only from when they join.
    # * `3` - Only meeting host.
    # * `4` - Participants and invitees in our organization.
    # * `5` - Participants in our organization only from when they join
    @jsondata:Name {value: "who_can_ask_questions"}
    1|2|3|4|5 whoCanAskQuestions?;
    # Contact name for registration
    @jsondata:Name {value: "contact_name"}
    string contactName?;
    # Host meeting in China
    #
    # # Deprecated
    @jsondata:Name {value: "cn_meeting"}
    @deprecated
    boolean cnMeeting = false;
    # Whether to send registrants email notifications about their registration approval, cancellation, or rejection.
    #
    # * `true` - Send an email notification.
    # * `false` - Do not send an email notification.
    #
    # Set this value to `true` to also use the `registrants_confirmation_email` parameter
    @jsondata:Name {value: "registrants_email_notification"}
    boolean registrantsEmailNotification?;
    # Flag to determine whether to send email notifications to alternative hosts, default value is true
    @jsondata:Name {value: "alternative_hosts_email_notification"}
    boolean alternativeHostsEmailNotification = true;
    # Use a [personal meeting ID (PMI)](/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi). Only used for scheduled meetings and recurring meetings with no fixed time
    @jsondata:Name {value: "use_pmi"}
    boolean usePmi = false;
    # The meeting's resources
    MeetingsmeetingIdSettingsResources[] resources?;
    # Automatic recording.  
    # `local` - Record on local.  
    # `cloud` -  Record on cloud.  
    # `none` - Disabled
    @jsondata:Name {value: "auto_recording"}
    "local"|"cloud"|"none" autoRecording = "none";
    # Start video when the host joins the meeting
    @jsondata:Name {value: "host_video"}
    boolean hostVideo?;
    @jsondata:Name {value: "language_interpretation"}
    MeetingsmeetingIdSettingsLanguageInterpretation languageInterpretation?;
    # Only signed in users can join this meeting.
    #
    # **This field is deprecated and will not be supported in the future.**    
    #
    # As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting
    #
    # # Deprecated
    @jsondata:Name {value: "enforce_login"}
    @deprecated
    boolean enforceLogin?;
    # Whether to automatically start a meeting summary
    @jsondata:Name {value: "auto_start_meeting_summary"}
    boolean autoStartMeetingSummary = false;
    # Whether to automatically start AI Companion questions
    @jsondata:Name {value: "auto_start_ai_companion_questions"}
    boolean autoStartAiCompanionQuestions = false;
    # Whether to set the meeting as a participant focused meeting
    @jsondata:Name {value: "participant_focused_meeting"}
    boolean participantFocusedMeeting = false;
    # Whether the meeting is set as private
    @jsondata:Name {value: "private_meeting"}
    boolean privateMeeting?;
    # Whether to include authenticated guest's email addresses in meetings' attendee reports
    @jsondata:Name {value: "email_in_attendee_report"}
    boolean emailInAttendeeReport?;
    # Whether to send email notifications to [alternative hosts](https://support.zoom.us/hc/en-us/articles/208220166) and [users with scheduling privileges](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-privilege). This value defaults to `true`
    @jsondata:Name {value: "email_notification"}
    boolean emailNotification = true;
};

public type InlineResponse20059Questions record {
    @jsondata:Name {value: "question_details"}
    InlineResponse20059QuestionDetails[] questionDetails?;
    # Name of the user who submitted answers to the poll. If the `anonymous` option is enabled for a poll, the participant's polling information will be kept anonymous and the value of `name` field will be `Anonymous Attendee`
    string name?;
    # Email address of the user who submitted answers to the poll. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details
    string email?;
};

public type InlineResponse20045UpcomingEvents record {
    # The event's start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # The event's topic
    string topic?;
    # The event host's department
    string dept?;
    # The event's unique ID
    string id?;
    # The event host's ID
    @jsondata:Name {value: "host_id"}
    string hostId?;
    # The event host's name
    @jsondata:Name {value: "host_name"}
    string hostName?;
};

@constraint:String {maxLength: 200}
public type MeetingsmeetingIdsurveyCustomSurveyQuestionsAnswersItemsString string;

@constraint:String {maxLength: 200}
public type WebinarswebinarIdsurveyCustomSurveyQuestionsAnswersItemsString string;

# TSP account
public type TSPAccount1 record {
    # List of dial in numbers
    @jsondata:Name {value: "dial_in_numbers"}
    UsersuserIdtsptspIdDialInNumbers[] dialInNumbers?;
    # Conference code: numeric value, length is less than 16
    @jsondata:Name {value: "conference_code"}
    string conferenceCode;
    # Leader PIN: numeric value, length is less than 16
    @jsondata:Name {value: "leader_pin"}
    string leaderPin;
    # Telephony bridge
    @jsondata:Name {value: "tsp_bridge"}
    "US_TSP_TB"|"EU_TSP_TB" tspBridge?;
};

# Represents the Queries record for the operation: deleteWebinarRegistrant
public type DeleteWebinarRegistrantQueries record {
    # The webinar occurrence ID
    @http:Query {name: "occurrence_id"}
    string occurrenceId?;
};

public type DevicesAllOf1 record {
    # Device ID
    string id?;
};

public type MeetingsmeetingIdbatchPollsQuestions record {
    # Whether participants must answer the question: 
    # * `true` &mdash; The participant must answer the question. 
    # * `false` &mdash; The participant does not need to answer the question. 
    #
    # **Note:** 
    # * When the poll's `type` value is `1` (Poll), this value defaults to `true`. 
    # * When the poll's `type` value is the `2` (Advanced Poll) or `3` (Quiz) values, this value defaults to `false`
    @jsondata:Name {value: "answer_required"}
    boolean answerRequired = false;
    # The allowed minimum number of characters. This field only applies to `short_answer` and `long_answer` polls. You must provide at least a **one** character minimum value
    @jsondata:Name {value: "answer_min_character"}
    int answerMinCharacter?;
    # The rating scale's minimum value. This value cannot be less than zero. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_min_value"}
    int ratingMinValue?;
    # The poll question's available answers. This field requires a **minimum** of two answers. 
    #
    # * For `single` and `multiple` polls, you can only provide a maximum of 10 answers. 
    # * For `matching` polls, you can only provide a maximum of 16 answers. 
    # * For `rank_order` polls, you can only provide a maximum of seven answers
    @constraint:Array {minLength: 2}
    string[] answers?;
    # The poll's question and answer type: 
    # * `single` &mdash; Single choice. 
    # * `multiple` &mdash; Multiple choice. 
    # * `matching` &mdash; Matching. 
    # * `rank_order` &mdash; Rank order. 
    # * `short_answer` &mdash; Short answer. 
    # * `long_answer` &mdash; Long answer. 
    # * `fill_in_the_blank` &mdash; Fill in the blank. 
    # * `rating_scale` &mdash; Rating scale
    "single"|"multiple"|"matching"|"rank_order"|"short_answer"|"long_answer"|"fill_in_the_blank"|"rating_scale" 'type?;
    # The allowed maximum number of characters. This field only applies to `short_answer` and `long_answer` polls: 
    # * For `short_answer` polls, a maximum of 500 characters. 
    # * For `long_answer` polls, a maximum of 2,000 characters
    @jsondata:Name {value: "answer_max_character"}
    int answerMaxCharacter?;
    # The rating scale's maximum value, up to a maximum value of 10. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_max_value"}
    int ratingMaxValue?;
    # The poll question's correct answer(s). This field is **required** if the poll's `type` value is `3` (Quiz). 
    #
    # For `single` and `matching` polls, this field only accepts one answer
    @jsondata:Name {value: "right_answers"}
    string[] rightAnswers?;
    # Whether to display the radio selection as a drop-down box: 
    # * `true` &mdash; Show as a drop-down box. 
    # * `false` &mdash; Do not show as a drop-down box. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "show_as_dropdown"}
    boolean showAsDropdown = false;
    # The low score label for the `rating_min_value` field. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_min_label"}
    string ratingMinLabel?;
    # Whether the correct answer is case sensitive. This field only applies to `fill_in_the_blank` polls: 
    # * `true` &mdash; The answer is case-sensitive. 
    # * `false` &mdash; The answer is not case-sensitive. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "case_sensitive"}
    boolean caseSensitive = false;
    # The poll question's title, up to 1024 characters. 
    #
    # For `fill_in_the_blank` polls, this field is the poll's question. For each value that the user must fill in, ensure that there are the same number of `right_answers` values
    @constraint:String {maxLength: 1024}
    string name?;
    # The high score label for the `rating_max_value` field. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_max_label"}
    string ratingMaxLabel?;
    # The information about the prompt questions. This field only applies to `matching` and `rank_order` polls. You **must** provide a minimum of two prompts, up to a maximum of 10 prompts
    MeetingsmeetingIdbatchPollsPrompts[] prompts?;
};

public type TSPGlobalDialInURLSetting record {
    # The global dial-in URL for a TSP enabled account. The URL must be valid, with a maximum length of 512 characters
    @jsondata:Name {value: "audio_url"}
    string audioUrl?;
};

# Represents the Queries record for the operation: meetingRegistrants
public type MeetingRegistrantsQueries record {
    # **Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination
    @http:Query {name: "page_number"}
    int pageNumber = 1;
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # The meeting or webinar occurrence ID
    @http:Query {name: "occurrence_id"}
    string occurrenceId?;
    # Query by the registrant's status. 
    # * `pending` - The registration is pending. 
    # * `approved` - The registrant is approved. 
    # * `denied` - The registration is denied
    "pending"|"approved"|"denied" status = "approved";
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

public type UsersuserIdmeetingsSettingsMeetingInvitees record {
    # The invitee's email address
    string email?;
};

public type InlineResponse20044InlineResponse20044AllOf12 record {
    # Array of telephony objects
    @jsondata:Name {value: "telephony_usage"}
    InlineResponse20044TelephonyUsage[] telephonyUsage?;
};

# Represents the Queries record for the operation: setWebinarBrandingVB
public type SetWebinarBrandingVBQueries record {
    # Whether to set the virtual background file as the new default for all panelists. This includes panelists not currently assigned a default virtual background
    @http:Query {name: "set_default_for_all_panelists"}
    boolean setDefaultForAllPanelists?;
    # The virtual background file ID to update
    string id?;
};

public type InlineResponse2005AnalyticsSummary record {
    # Date of viewing or downloading the recording
    string date?;
    # The number of people who have watched this Meeting Recording
    @jsondata:Name {value: "views_total_count"}
    int viewsTotalCount?;
    # The number of people who downloaded this Meeting Recording
    @jsondata:Name {value: "downloads_total_count"}
    int downloadsTotalCount?;
};

# Pagination object
public type InlineResponse20043AllOf1 record {
    # The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The amount of records returns within a single API call. 
    @jsondata:Name {value: "page_size"}
    int pageSize = 30;
};

# Represents the Queries record for the operation: ListSIPPhonePhones
public type ListSIPPhonePhonesQueries record {
    # A user's user name or email address. If this parameter is provided, only the SIP phone system integration enabled for that specific user will be returned. Otherwise, all SIP phones on an account will be returned
    @http:Query {name: "search_key"}
    string searchKey?;
    # Use the next page token to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. This tokan's expiration period is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

# OAuth2 Refresh Token Grant Configs
public type OAuth2RefreshTokenGrantConfig record {|
    *http:OAuth2RefreshTokenGrantConfig;
    # Refresh URL
    string refreshUrl = "";
|};

public type MeetingsmeetingIdregistrantsmeetingsmeetingIdregistrantsmeetingsmeetingIdregistrantsAllOf123 record {
    # If a meeting was scheduled with the `approval_type` field value of `1` (manual approval) but you want to automatically approve meeting registrants, set the value of this field to `true`. 
    #
    # **Note:** You cannot use this field to change approval setting for a meeting originally scheduled with the `approval_type` field value of `0` (automatic approval)
    @jsondata:Name {value: "auto_approve"}
    boolean autoApprove?;
};

# Represents the Queries record for the operation: reportMeetings
public type ReportMeetingsQueries record {
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once
    string 'from;
    # End date
    string to;
    # The meeting type to query for: 
    # * `past` &mdash; All past meetings. 
    # * `pastOne` &mdash; A single past user meeting. 
    # * `pastJoined` &mdash; All past meetings the account's users hosted or joined
    "past"|"pastOne"|"pastJoined" 'type = "past";
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

# Represents the Queries record for the operation: meetingRegistrantCreate
public type MeetingRegistrantCreateQueries record {
    # A comma-separated list of meeting occurrence IDs. You can get this value with the [Get a meeting](/docs/api-reference/zoom-api/methods#operation/meeting) API
    @http:Query {name: "occurrence_ids"}
    string occurrenceIds?;
};

public type TspBody record {
    # Control restriction on account users adding a TSP number outside of account's dial in numbers
    @jsondata:Name {value: "dial_in_number_unrestricted"}
    boolean dialInNumberUnrestricted?;
    # Control restriction on account users being able to modify their TSP credentials
    @jsondata:Name {value: "modify_credential_forbidden"}
    boolean modifyCredentialForbidden?;
    # For master account, extend its TSP setting to all sub accounts. For sub account, extend TSP setting from master account
    @jsondata:Name {value: "master_account_setting_extended"}
    boolean masterAccountSettingExtended?;
    # Enable 3rd party audio conferencing for account users
    boolean enable?;
    # 3rd party audio conferencing provider
    @jsondata:Name {value: "tsp_provider"}
    string tspProvider?;
    # Telephony bridge
    @jsondata:Name {value: "tsp_bridge"}
    "US_TSP_TB"|"EU_TSP_TB" tspBridge?;
    # Enable TSP feature for account. This has to be enabled to use any other tsp settings/features
    @jsondata:Name {value: "tsp_enabled"}
    boolean tspEnabled?;
};

public type UsersuserIdmeetingsSettingsBreakoutRoomRooms record {
    # The breakout room's name
    string name?;
    # The email addresses of the participants to assign to the breakout room
    string[] participants?;
};

public type InlineResponse20030PacAccounts record {
    # The conference ID
    @jsondata:Name {value: "conference_id"}
    int conferenceId?;
    # The listen-only password, up to six characters in length
    @jsondata:Name {value: "listen_only_password"}
    string listenOnlyPassword?;
    # The participant password, up to six characters in length
    @jsondata:Name {value: "participant_password"}
    string participantPassword?;
    # Information about the account's global dial-in numbers
    @jsondata:Name {value: "global_dial_in_numbers"}
    InlineResponse20030GlobalDialInNumbers[] globalDialInNumbers?;
    # Information about the account's dedicated dial-in numbers
    @jsondata:Name {value: "dedicated_dial_in_number"}
    InlineResponse20030DedicatedDialInNumber[] dedicatedDialInNumber?;
};

public type RecordingSettings record {
    # The options for authentication
    @jsondata:Name {value: "authentication_option"}
    string authenticationOption?;
    # Only allow authenticated users to view
    @jsondata:Name {value: "recording_authentication"}
    boolean recordingAuthentication?;
    # Enable sending an email to the host when someone registers to view the recording. This applies for On-demand recordings only
    @jsondata:Name {value: "send_email_to_host"}
    boolean sendEmailToHost?;
    # The registration approval type.  
    #
    # `0` - Automatically approve the registration when a user registers.  
    #
    # `1` - Manually approve or deny the registration of a user.  
    #
    # `2` - No registration required to view the recording
    @jsondata:Name {value: "approval_type"}
    0|1|2 approvalType?;
    # Auto-delete status of a meeting's [cloud recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).  
    #
    # Prerequisite: To get the auto-delete status, the host of the recording must have the recording setting "Delete cloud recordings after a specified number of days" enabled. 
    @jsondata:Name {value: "auto_delete"}
    boolean autoDelete?;
    # Determine how the meeting recording is shared
    @jsondata:Name {value: "share_recording"}
    "publicly"|"internally"|"none" shareRecording?;
    # This field determines whether registration is required to view the recording
    @jsondata:Name {value: "on_demand"}
    boolean onDemand?;
    # The date when the recording will be auto-deleted when `auto_delete` is `true`. Otherwise, no date is returned
    @jsondata:Name {value: "auto_delete_date"}
    string autoDeleteDate?;
    # This field enables passcode protection for the recording by setting a passcode. The passcode must have a minimum of **eight** characters with a mix of numbers, letters and special characters.  
    #
    #
    # **Note:** If the account owner or the admin has set minimum passcode strength requirements for recordings through Account Settings, the passcode value provided here must meet those requirements.   
    #
    # If the requirements are enabled, you can view those requirements by calling either the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API or the [**Get account settings**](/api-reference/zoom-api/ma#operation/accountSettings) API
    @constraint:String {maxLength: 10, minLength: 8}
    string password?;
    # Show social share buttons on the registration page. This applies for On-demand recordings only
    @jsondata:Name {value: "show_social_share_buttons"}
    boolean showSocialShareButtons?;
    # The domains for authentication
    @jsondata:Name {value: "authentication_domains"}
    string authenticationDomains?;
    # The recording's name
    string topic?;
    # The name for authentication
    @jsondata:Name {value: "authentication_name"}
    string authenticationName?;
    # Determine whether a viewer can download the recording file or not
    @jsondata:Name {value: "viewer_download"}
    boolean viewerDownload?;
};

public type InlineResponse2018SettingsAuthenticationException record {
    # URL for participants to join the meeting
    @jsondata:Name {value: "join_url"}
    string joinUrl?;
    # The participant's name
    string name?;
    # The participant's email address
    string email?;
};

public type MeetingId1 MeetingId1OneOf1|MeetingId1MeetingId1OneOf12;

public type InlineResponse20115Registrants record {
    # Unique URL using which registrant can join the webinar
    @jsondata:Name {value: "join_url"}
    string joinUrl?;
    # The registrant's unique identifier
    @jsondata:Name {value: "registrant_id"}
    string registrantId?;
    # The registrant's email address
    string email?;
};

public type MeetingIdEventsBody record {
    # The method that you would like to control.
    # * `recording.start` - Start the recording.
    # * `recording.stop` - Stop the recording.
    # * `recording.pause` - Pause the recording.
    # * `recording.resume` - Resume a paused recording.
    # * `participant.invite` - Invite a participant to the meeting.
    # * `participant.invite.callout` - Invite a participant to the meeting through [call out (phone)](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0062038).
    # * `participant.invite.room_system_callout` - Invite a participant to the meeting through [call out (room system)](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065721).
    # * `waiting_room.update` - Update the waiting room with a custom message
    "recording.start"|"recording.stop"|"recording.pause"|"recording.resume"|"participant.invite"|"participant.invite.callout"|"participant.invite.room_system_callout"|"waiting_room.update" method?;
    # The in-meeting parameters
    LiveMeetingsmeetingIdeventsParams params?;
};

public type InlineResponse20030GlobalDialInNumbers record {
    # The global dial-in country code
    string country?;
    # The global dial-in number
    @constraint:String {maxLength: 16}
    string number?;
};

public type InlineResponse2004AnalyticsDetails record {
    # When the query type is `by_view`, this field indicates the viewing time, unit: seconds
    int duration?;
    # Explicit time to watch or download the recording
    @jsondata:Name {value: "date_time"}
    string dateTime?;
    # The user's name who watched or downloaded
    string name?;
    # The user's email who downloaded this Meeting Recording
    string email?;
};

# Represents the Queries record for the operation: deviceList
public type DeviceListQueries record {
    # **Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination
    @http:Query {name: "page_number"}
    int pageNumber = 1;
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

public type UsersuserIdtsptspIdDialInNumbers record {
    # Dial-in number: length is less than 16
    @constraint:String {maxLength: 16, minLength: 1}
    string number?;
    # Country code
    @constraint:String {maxLength: 6}
    string code?;
    # Country Label, if passed, will display in place of code
    @jsondata:Name {value: "country_label"}
    string countryLabel?;
    # Dial-in number types:  
    # `toll` - Toll number.  
    # `tollfree` -Toll free number.  
    # `media_link` - Media Link Phone Number. It is used for PSTN integration instead of paid bridge number
    "toll"|"tollfree"|"media_link" 'type?;
};

# Send follow-up email to attendees
public type UsersuserIdwebinarsSettingsFollowUpAttendeesEmailNotification record {
    # * `true`: Send follow-up email to attendees.
    #
    # * `false`: Do not send follow-up email to attendees
    boolean enable?;
    # `0` - No plan.  
    # `1` - Send 1 day after the scheduled end date.  
    # `2` - Send 2 days after the scheduled end date.  
    # `3` - Send 3 days after the scheduled end date.  
    # `4` - Send 4 days after the scheduled end date.  
    # `5` - Send 5 days after the scheduled end date.  
    # `6` - Send 6 days after the scheduled end date.  
    # `7` - Send 7 days after the scheduled end date
    0|1|2|3|4|5|6|7 'type?;
};

public type InlineResponse20049Participants record {
    # The participant's leave time
    @jsondata:Name {value: "leave_time"}
    string leaveTime?;
    # The participant's email address. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](/docs/api-reference/using-zoom-apis#email-address) for details. This returns an empty string value if the account calling the API is a BAA account
    @jsondata:Name {value: "user_email"}
    string userEmail?;
    # The registrant's ID. This field only returns if you provide the `registrant_id` value for the `include_fields` query parameter
    @jsondata:Name {value: "registrant_id"}
    string registrantId?;
    # The participant's universally unique ID (UUID). 
    # * If the participant joins the meeting by logging into Zoom, this value is the `id` value in the [**Get a user**](/docs/api-reference/zoom-api/methods#operation/user) API response. 
    # * If the participant joins the meeting **without** logging into Zoom, this returns an empty string value
    @jsondata:Name {value: "participant_user_id"}
    string participantUserId?;
    # The participant's join time
    @jsondata:Name {value: "join_time"}
    string joinTime?;
    # Participant duration, in seconds, calculated by subtracting the `leave_time` from the `join_time` for the `user_id`. If the participant leaves and rejoins the same meeting, they will be assigned a different `user_id` and Zoom displays their new duration in a separate object. Note that because of this, the duration may not reflect the total time the user was in the meeting
    int duration?;
    # The participant's SDK identifier. This value can be alphanumeric, up to a maximum length of 35 characters
    @jsondata:Name {value: "customer_key"}
    string customerKey?;
    # The [breakout room](https://support.zoom.us/hc/en-us/articles/206476313-Managing-breakout-rooms) ID. Each breakout room is assigned a unique ID
    @jsondata:Name {value: "bo_mtg_id"}
    string boMtgId?;
    # Whether failover occurred during the webinar
    boolean failover?;
    # The participant's ID. This ID is assigned to the participant upon joining the webinar and is only valid for that webinar
    @jsondata:Name {value: "user_id"}
    string userId?;
    # The participant's display name. This returns an empty string value if the account calling the API is a BAA account
    string name?;
    # The participant's universally unique ID (UUID). 
    # * If the participant joins the meeting by logging into Zoom, this value is the `id` value in the [**Get a user**](/docs/api-reference/zoom-api/methods#operation/user) API response. 
    # * If the participant joins the meeting **without** logging into Zoom, this returns an empty string value. 
    #
    # **Note:** Use the `participant_user_id` value instead of this value. We will remove this response in a future release
    string id?;
    # The participant's status. 
    # * `in_meeting` - In a meeting. 
    # * `in_waiting_room` - In a waiting room
    "in_meeting"|"in_waiting_room" status?;
};

public type InlineResponse20051QuestionDetails record {
    # The given answer. If this is a live answer, the value is 'live answered'.
    # **Note:** All answers will be returned together and separated by semicolons. For more detailed answer information, please see the "answer_details" field
    #
    # # Deprecated
    @deprecated
    string answer?;
    # Asked question
    string question?;
    # Question creation time
    @jsondata:Name {value: "create_time"}
    string createTime?;
    # Question status.
    # If not supported, the value will be `default`
    @jsondata:Name {value: "question_status"}
    "default"|"open"|"dismissed"|"answered"|"deleted" questionStatus?;
    # Question UUID
    @jsondata:Name {value: "question_id"}
    string questionId?;
    # Array of answers from user
    @jsondata:Name {value: "answer_details"}
    InlineResponse20051AnswerDetails[] answerDetails?;
};

# The information about meeting and webinar polling
public type MeetingAndWebinarPollingObject3 record {
    # The information about the poll's questions
    MeetingsmeetingIdpollsQuestions[] questions?;
    # Whether meeting participants answer poll questions anonymously. 
    #
    # This value defaults to `false`
    boolean anonymous = false;
    # The type of poll: 
    # * `1` &mdash; Poll. 
    # * `2` &mdash; Advanced Poll. This feature must be enabled in your Zoom account. 
    # * `3` &mdash; Quiz. This feature must be enabled in your Zoom account. 
    #
    # This value defaults to `1`
    @jsondata:Name {value: "poll_type"}
    1|2|3 pollType?;
    # The poll's title, up to 64 characters
    @constraint:String {maxLength: 64}
    string title?;
};

public type InviteLinks1Attendees record {
    # The URL to join the meeting
    @jsondata:Name {value: "join_url"}
    string joinUrl?;
    # The user's display name
    string name?;
};

# Webinar panelist
public type WebinarIdPanelistsBody record {
    # List of panelist objects
    WebinarswebinarIdpanelistsPanelists[] panelists?;
};

# The information about meeting and webinar polling
public type MeetingAndWebinarPollingObject2 record {
    # The information about the poll's questions
    MeetingsmeetingIdpollsQuestions[] questions?;
    # Whether meeting participants answer poll questions anonymously. 
    #
    # This value defaults to `false`
    boolean anonymous = false;
    # The type of poll: 
    # * `1` &mdash; Poll. 
    # * `2` &mdash; Advanced Poll. This feature must be enabled in your Zoom account. 
    # * `3` &mdash; Quiz. This feature must be enabled in your Zoom account. 
    #
    # This value defaults to `1`
    @jsondata:Name {value: "poll_type"}
    1|2|3 pollType?;
    # The poll's title, up to 64 characters
    @constraint:String {maxLength: 64}
    string title?;
};

# The in-meeting parameters
public type LiveMeetingsmeetingIdeventsParams record {
    # The user's device IP address or URI. Use this field if you pass the `participant.invite.room_system_callout` value for the `method` field
    @jsondata:Name {value: "device_ip"}
    string deviceIp?;
    @jsondata:Name {value: "sip_headers"}
    LiveMeetingsmeetingIdeventsParamsSipHeaders sipHeaders?;
    # The title displayed in the waiting room. Use this field if you pass the `waiting_room.update` value for the `method` field
    @jsondata:Name {value: "waiting_room_title"}
    string waitingRoomTitle?;
    # The description shown in the waiting room. Use this field if you pass the `waiting_room.update` value for the `method` field
    @jsondata:Name {value: "waiting_room_description"}
    string waitingRoomDescription?;
    @jsondata:Name {value: "invite_options"}
    LiveMeetingsmeetingIdeventsParamsInviteOptions inviteOptions?;
    # The user's phone number. Use this field if you pass the `participant.invite.callout` value for the `method` field. As a best practice, ensure this includes a country code and area code.
    #
    # If you are dialing a phone number that includes an extension, type a hyphen '-' after the phone number and enter the extension. For example, 6032331333-156 dials the extension 156
    @jsondata:Name {value: "phone_number"}
    string phoneNumber?;
    # The user's name to display in the meeting. Use this field if you pass the `participant.invite.callout` value for the `method` field
    @jsondata:Name {value: "invitee_name"}
    string inviteeName?;
    # The type of call out. Use a value of `h323` or `sip`. Use this field if you pass the `participant.invite.room_system_callout` value for the `method` field
    @jsondata:Name {value: "call_type"}
    string callType?;
    # The user's email address or the user ID, up to a maximum of 10 contacts. The account must be a part of the meeting host's account
    LiveMeetingsmeetingIdeventsParamsContacts[] contacts?;
    @jsondata:Name {value: "h323_headers"}
    LiveMeetingsmeetingIdeventsParamsH323Headers h323Headers?;
};

# Registrant
public type RegistrantsRegistrantsAllOf12 record {
    # The registrant's ZIP or postal code
    string zip?;
    # The registrant's two-letter [country code](/docs/api/rest/other-references/abbreviation-lists/#countries)
    string country?;
    # Information about custom questions
    @jsondata:Name {value: "custom_questions"}
    RegistrantsRegistrantsAllOf12_custom_questions[] customQuestions?;
    # The registrant's purchasing time frame. 
    # * `Within a month` 
    # * `1-3 months` 
    # * `4-6 months` 
    # * `More than 6 months` 
    # * `No timeframe`
    @jsondata:Name {value: "purchasing_time_frame"}
    ""|"Within a month"|"1-3 months"|"4-6 months"|"More than 6 months"|"No timeframe" purchasingTimeFrame?;
    # The registrant's address
    string address?;
    # The registrant's questions and comments
    string comments?;
    # The registrant's city
    string city?;
    # The registrant's organization
    string org?;
    # The registrant's last name
    @jsondata:Name {value: "last_name"}
    string lastName?;
    # The registrant's number of employees. 
    # * `1-20` 
    # * `21-50` 
    # * `51-100` 
    # * `101-250` 
    # * `251-500` 
    # * `501-1,000` 
    # * `1,001-5,000` 
    # * `5,001-10,000` 
    # * `More than 10,000`
    @jsondata:Name {value: "no_of_employees"}
    ""|"1-20"|"21-50"|"51-100"|"101-250"|"251-500"|"501-1,000"|"1,001-5,000"|"5,001-10,000"|"More than 10,000" noOfEmployees?;
    # The registrant's industry
    string industry?;
    # The registrant's phone number
    string phone?;
    # The registrant's role in the purchase process. 
    # * `Decision Maker` 
    # * `Evaluator/Recommender` 
    # * `Influencer` 
    # * `Not involved`
    @jsondata:Name {value: "role_in_purchase_process"}
    ""|"Decision Maker"|"Evaluator/Recommender"|"Influencer"|"Not involved" roleInPurchaseProcess?;
    # The registrant's state or province
    string state?;
    # The registrant's first name
    @jsondata:Name {value: "first_name"}
    string firstName;
    # The registrant's job title
    @jsondata:Name {value: "job_title"}
    string jobTitle?;
    # The registrant's email address. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for return value details
    string email;
    # The registrant's status. 
    # * `approved` - Registrant is approved. 
    # * `denied` - Registrant is denied. 
    # * `pending` - Registrant is waiting for approval
    "approved"|"denied"|"pending" status?;
};

# The information about meeting and webinar polling
public type MeetingAndWebinarPollingObject1 record {
    # The information about the poll's questions
    WebinarswebinarIdpollsQuestions[] questions?;
    # Whether meeting participants answer poll questions anonymously. 
    #
    # This value defaults to `false`
    boolean anonymous = false;
    # The type of poll. 
    # * `1` - Poll. 
    # * `2` - Advanced Poll. This feature must be enabled in your Zoom account. 
    # * `3` - Quiz. This feature must be enabled in your Zoom account. 
    #
    # This value defaults to `1`
    @jsondata:Name {value: "poll_type"}
    1|2|3 pollType?;
    # The poll's title, up to 64 characters
    @constraint:String {maxLength: 64}
    string title?;
};

# Represents the Queries record for the operation: pastMeetingParticipants
public type PastMeetingParticipantsQueries record {
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

public type MeetingsmeetingIdSettingsAuthenticationException record {
    # URL for participants to join the meeting
    @jsondata:Name {value: "join_url"}
    string joinUrl?;
    # The participant's name
    string name?;
    # The participant's email address
    string email?;
};

# Represents the Queries record for the operation: meetingPolls
public type MeetingPollsQueries record {
    # Whether to query for polls with the **Anonymous** option enabled: 
    # * `true` &mdash; Query for polls with the **Anonymous** option enabled. 
    # * `false` &mdash; Do not query for polls with the **Anonymous** option enabled
    boolean anonymous?;
};

# Webinar registrant
public type WebinarRegistrantWebinarRegistrantAllOf12 record {
    # The registrant's ZIP or postal code
    string zip?;
    # The registrant's two-letter ISO [country code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries)
    string country?;
    # Information about custom questions
    @jsondata:Name {value: "custom_questions"}
    RegistrantsRegistrantsAllOf12_custom_questions[] customQuestions?;
    # The registrant's purchasing time frame: 
    # * `Within a month` 
    # * `1-3 months` 
    # * `4-6 months` 
    # * `More than 6 months` 
    # * `No timeframe`
    @jsondata:Name {value: "purchasing_time_frame"}
    ""|"Within a month"|"1-3 months"|"4-6 months"|"More than 6 months"|"No timeframe" purchasingTimeFrame?;
    # The registrant's address
    string address?;
    # The registrant's questions and comments
    string comments?;
    # The registrant's city
    string city?;
    # The registrant's organization
    string org?;
    # The registrant's last name
    @jsondata:Name {value: "last_name"}
    string lastName?;
    # The registrant's number of employees: 
    # * `1-20` 
    # * `21-50` 
    # * `51-100` 
    # * `101-250` 
    # * `251-500` 
    # * `501-1,000` 
    # * `1,001-5,000` 
    # * `5,001-10,000` 
    # * `More than 10,000`
    @jsondata:Name {value: "no_of_employees"}
    ""|"1-20"|"21-50"|"51-100"|"101-250"|"251-500"|"501-1,000"|"1,001-5,000"|"5,001-10,000"|"More than 10,000" noOfEmployees?;
    # The registrant's industry
    string industry?;
    # The registrant's phone number
    string phone?;
    # The registrant's role in the purchase process: 
    # * `Decision Maker` 
    # * `Evaluator/Recommender` 
    # * `Influencer` 
    # * `Not involved`
    @jsondata:Name {value: "role_in_purchase_process"}
    ""|"Decision Maker"|"Evaluator/Recommender"|"Influencer"|"Not involved" roleInPurchaseProcess?;
    # The registrant's state or province
    string state?;
    # The registrant's first name
    @jsondata:Name {value: "first_name"}
    string firstName;
    # The registrant's job title
    @jsondata:Name {value: "job_title"}
    string jobTitle?;
    # The registrant's email address. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for return value details
    string email;
    # The registrant's status: 
    # * `approved` &mdash; Registrant is approved. 
    # * `denied` &mdash; Registrant is denied. 
    # * `pending` &mdash; Registrant is waiting for approval
    "approved"|"denied"|"pending" status?;
    # The registrant's language preference for confirmation emails: 
    # * `en-US` &mdash; English (US) 
    # * `de-DE` &mdash; German (Germany) 
    # * `es-ES` &mdash; Spanish (Spain) 
    # * `fr-FR` &mdash; French (France) 
    # * `jp-JP` &mdash; Japanese 
    # * `pt-PT` &mdash; Portuguese (Portugal) 
    # * `ru-RU` &mdash; Russian 
    # * `zh-CN` &mdash; Chinese (PRC) 
    # * `zh-TW` &mdash; Chinese (Taiwan) 
    # * `ko-KO` &mdash; Korean 
    # * `it-IT` &mdash; Italian (Italy) 
    # * `vi-VN` &mdash; Vietnamese 
    # * `pl-PL` &mdash; Polish 
    # * `Tr-TR` &mdash; Turkish
    "en-US"|"de-DE"|"es-ES"|"fr-FR"|"jp-JP"|"pt-PT"|"ru-RU"|"zh-CN"|"zh-TW"|"ko-KO"|"it-IT"|"vi-VN"|"pl-PL"|"Tr-TR" language?;
};

public type MessagesmessageIdBody record {
    # The content of the chat message
    @jsondata:Name {value: "message_content"}
    string messageContent;
};

# List of panelists
public type PanelistList record {
    # List of panelist objects
    InlineResponse20069Panelists[] panelists?;
    # Total records
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
};

public type InlineResponse20047InlineResponse20047AllOf12 record {
    # The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The report's start date
    string 'from?;
    # Information about the meeting
    InlineResponse20047Meetings[] meetings?;
    # The report's end date
    string to?;
};

# Information about the `participant.invite.callout` settings
public type LiveMeetingsmeetingIdeventsParamsInviteOptions record {
    # Whether to require pressing 1 before being connected. Use this field if you pass the `participant.invite.callout` value for the `method` field
    @jsondata:Name {value: "require_pressing_one"}
    boolean requirePressingOne = true;
    # Whether to require a greeting before being connected. Use this field if you pass the `participant.invite.callout` value for the `method` field
    @jsondata:Name {value: "require_greeting"}
    boolean requireGreeting = true;
};

public type MeetingIdBatchRegistrantsBody record {
    MeetingsmeetingIdbatchRegistrantsRegistrants[] registrants?;
    # Send confirmation Email to Registrants
    @jsondata:Name {value: "registrants_confirmation_email"}
    boolean registrantsConfirmationEmail?;
    # If a meeting was scheduled with approval_type `1` (manual approval), but you would like to automatically approve the registrants that are added via this API, you can set the value of this field to `true`. 
    #
    # You **cannot** use this field to change approval setting for a meeting  that was originally scheduled with approval_type `0` (automatic approval)
    @jsondata:Name {value: "auto_approve"}
    boolean autoApprove?;
};

# Recurrence object. Use this object only for a webinar of type `9`, a recurring webinar with fixed time. 
public type RecurrenceWebinar record {
    # Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. Cannot be used with `end_times`
    @jsondata:Name {value: "end_date_time"}
    string endDateTime?;
    # Select how many times the webinar will recur before it is canceled. The maximum number of recurring is 60. Cannot be used with `end_date_time`
    @jsondata:Name {value: "end_times"}
    int endTimes = 1;
    # Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.**   
    # `-1` - Last week of the month.  
    # `1` - First week of the month.  
    # `2` - Second week of the month.  
    # `3` - Third week of the month.  
    # `4` - Fourth week of the month
    @jsondata:Name {value: "monthly_week"}
    -1|1|2|3|4 monthlyWeek?;
    # Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field.   
    # `1` - Sunday.  
    # `2` - Monday.  
    # `3` - Tuesday.  
    # `4` -  Wednesday.  
    # `5` - Thursday.  
    # `6` - Friday.  
    # `7` - Saturday
    @jsondata:Name {value: "monthly_week_day"}
    1|2|3|4|5|6|7 monthlyWeekDay?;
    # Define the interval when the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. 
    #
    # For a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months
    @jsondata:Name {value: "repeat_interval"}
    int repeatInterval?;
    # Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month the webinar should recur. The value range is from 1 to 31.
    #
    # For instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`
    @jsondata:Name {value: "monthly_day"}
    int monthlyDay?;
    # Recurrence webinar types.
    # `1` - Daily.  
    # `2` - Weekly.  
    # `3` - Monthly
    1|2|3 'type;
    # Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat.
    # The value for this field could be a number between `1` to `7` in string format. For instance, if the webinar should recur on Sunday, provide `1` as the value of this field.    
    #
    # **Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the webinar should recur on Sundays and Tuesdays, provide `1,3` as the value of this field.
    #
    #
    # `1`  - Sunday.   
    # `2` - Monday.  
    # `3` - Tuesday.  
    # `4` -  Wednesday.  
    # `5` -  Thursday.  
    # `6` - Friday.  
    # `7` - Saturday.
    @jsondata:Name {value: "weekly_days"}
    string weeklyDays?;
};

public type SipPhonesphoneIdBody record {
    # The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address
    @jsondata:Name {value: "register_server3"}
    string registerServer3;
    # Protocols supported by the SIP provider.  
    # The value must be either `UDP`, `TCP`, `TLS`, `AUTO`
    @jsondata:Name {value: "transport_protocol3"}
    "UDP"|"TCP"|"TLS"|"AUTO" transportProtocol3?;
    # The phone number associated with the user in the SIP account
    @jsondata:Name {value: "user_name"}
    string userName;
    # The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address
    @jsondata:Name {value: "register_server2"}
    string registerServer2;
    # Protocols supported by the SIP provider.  
    # The value must be either `UDP`, `TCP`, `TLS`, `AUTO`
    @jsondata:Name {value: "transport_protocol2"}
    "UDP"|"TCP"|"TLS"|"AUTO" transportProtocol2?;
    # The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server
    @jsondata:Name {value: "proxy_server"}
    string proxyServer;
    # The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server
    @jsondata:Name {value: "proxy_server2"}
    string proxyServer2;
    # The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server
    @jsondata:Name {value: "proxy_server3"}
    string proxyServer3;
    # The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server
    @jsondata:Name {value: "registration_expire_time"}
    int registrationExpireTime = 60;
    # The password generated for the user in the SIP account
    string password;
    # The number to dial for checking voicemail
    @jsondata:Name {value: "voice_mail"}
    string voiceMail;
    # The name or IP address of your provider's SIP domain (example: CDC.WEB). 
    @constraint:String {maxLength: 64}
    string domain;
    # The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address
    @jsondata:Name {value: "register_server"}
    string registerServer;
    # The authorization name of the user that is registered for SIP phone
    @jsondata:Name {value: "authorization_name"}
    string authorizationName;
    # Protocols supported by the SIP provider.  
    # The value must be either `UDP`, `TCP`, `TLS`, `AUTO`
    @jsondata:Name {value: "transport_protocol"}
    "UDP"|"TCP"|"TLS"|"AUTO" transportProtocol?;
};

# Represents the Queries record for the operation: getBillingInvoicesReports
public type GetBillingInvoicesReportsQueries record {
    # The billing report's unique identifier. Retrieve this ID from the response of **Get Billing Reports** API request. 
    @http:Query {name: "billing_id"}
    string billingId;
};

# Information about the webinar registrant
public type WebinarIdRegistrantsBody record {
    *WebinarswebinarIdregistrantsAllOf1;
    *WebinarswebinarIdregistrantswebinarswebinarIdregistrantsAllOf12;
};

# Recurrence object. Use this object only for a meeting with type `8`, a recurring meeting with fixed time. 
public type InlineResponse2018Recurrence record {
    # Select the final date when the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. Cannot be used with `end_times`
    @jsondata:Name {value: "end_date_time"}
    string endDateTime?;
    # Select how many times the meeting should recur before it is canceled. If `end_times` is set to 0, it means there is no end time. The maximum number of recurring is 60. Cannot be used with `end_date_time`
    @jsondata:Name {value: "end_times"}
    int endTimes = 1;
    # Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.   
    # `-1` - Last week of the month.  
    # `1` - First week of the month.  
    # `2` - Second week of the month.  
    # `3` - Third week of the month.  
    # `4` - Fourth week of the month
    @jsondata:Name {value: "monthly_week"}
    -1|1|2|3|4 monthlyWeek?;
    # Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. 
    #
    #
    # `1` - Sunday.  
    # `2` - Monday.  
    # `3` - Tuesday.  
    # `4` -  Wednesday.  
    # `5` - Thursday.  
    # `6` - Friday.  
    # `7` - Saturday
    @jsondata:Name {value: "monthly_week_day"}
    1|2|3|4|5|6|7 monthlyWeekDay?;
    # Define the interval for the meeting to recur. For instance, to schedule a meeting that recurs every two months, set this field's value to `2` and the value of the `type` parameter as `3`. 
    #
    # For a daily meeting, the maximum interval you can set is `99` days. For a weekly meeting the maximum interval that you can set is  of `50` weeks. For a monthly meeting, there is a maximum of `10` months.
    @jsondata:Name {value: "repeat_interval"}
    int repeatInterval?;
    # Use this field only if you're scheduling a recurring meeting of type `3` to state the day in a month when the meeting should recur. The value range is from 1 to 31.
    #
    # For instance, if you would like the meeting to recur on 23rd of each month, provide `23` as this field's value and `1` as the `repeat_interval` field's value. Instead, to have the meeting recur every three months on 23rd of the month, change the value of the `repeat_interval` field to `3`
    @jsondata:Name {value: "monthly_day"}
    int monthlyDay = 1;
    # Recurrence meeting types.
    # `1` - Daily.  
    # `2` - Weekly.  
    # `3` - Monthly
    1|2|3 'type;
    # This field is required **if you're scheduling a recurring meeting of type** `2` to state the days of the week when the meeting should repeat.
    #
    # This field's value could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `1` as this field's value.  
    #
    # **Note:** If you would like the meeting to occur on multiple days of a week, provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays, provide `1,3` as this field's value.
    #
    #
    # `1`  - Sunday.   
    # `2` - Monday.  
    # `3` - Tuesday.  
    # `4` -  Wednesday.  
    # `5` -  Thursday.  
    # `6` - Friday.  
    # `7` - Saturday
    @jsondata:Name {value: "weekly_days"}
    "1"|"2"|"3"|"4"|"5"|"6"|"7" weeklyDays = "1";
};

public type InlineResponse20028InlineResponse20028AllOf12 record {
    # List of meeting objects
    InlineResponse20028Meetings[] meetings?;
};

# Webinar settings
public type InlineResponse20063Settings record {
    # Zoom will open a survey page in attendees' browsers after leaving the webinar
    @jsondata:Name {value: "post_webinar_survey"}
    boolean postWebinarSurvey?;
    # Webinar authentication option id
    @jsondata:Name {value: "authentication_option"}
    string authenticationOption?;
    # Set the email language. The only options are
    # `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`
    @jsondata:Name {value: "email_language"}
    string emailLanguage?;
    # Whether to allow the host and co-hosts to fully control the mute state of participants
    @jsondata:Name {value: "allow_host_control_participant_mute_state"}
    boolean allowHostControlParticipantMuteState = false;
    @jsondata:Name {value: "sign_language_interpretation"}
    WebinarswebinarIdSettingsSignLanguageInterpretation signLanguageInterpretation?;
    # Always send 1080p video to attendees
    @jsondata:Name {value: "send_1080p_video_to_attendees"}
    boolean send1080pVideoToAttendees = false;
    # Show social share buttons on the registration page
    @jsondata:Name {value: "show_share_button"}
    boolean showShareButton?;
    # Default to HD video
    @jsondata:Name {value: "hd_video"}
    boolean hdVideo = false;
    # Send confirmation email to registrants
    @jsondata:Name {value: "registrants_confirmation_email"}
    boolean registrantsConfirmationEmail?;
    # Registration types. Only used for recurring webinars with a fixed time.  
    # `1` - Attendees register once and can attend any of the webinar sessions.  
    # `2` - Attendees need to register for each session in order to attend.  
    # `3` - Attendees register once and can choose one or more sessions to attend
    @jsondata:Name {value: "registration_type"}
    1|2|3 registrationType = 1;
    # Contact email for registration
    @jsondata:Name {value: "contact_email"}
    string contactEmail?;
    # Allow attendees to join from multiple devices
    @jsondata:Name {value: "allow_multiple_devices"}
    boolean allowMultipleDevices?;
    # Only authenticated users can join the webinar
    @jsondata:Name {value: "meeting_authentication"}
    boolean meetingAuthentication?;
    # Survey URL for post webinar survey
    @jsondata:Name {value: "survey_url"}
    string surveyUrl?;
    # Alternative host emails or IDs. Multiple values separated by comma
    @jsondata:Name {value: "alternative_hosts"}
    string alternativeHosts?;
    # Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher
    @jsondata:Name {value: "alternative_host_update_polls"}
    boolean alternativeHostUpdatePolls?;
    @jsondata:Name {value: "follow_up_absentees_email_notification"}
    UsersuserIdwebinarsSettingsFollowUpAbsenteesEmailNotification followUpAbsenteesEmailNotification?;
    # Add audio watermark that identifies the participants
    @jsondata:Name {value: "add_audio_watermark"}
    boolean addAudioWatermark?;
    # Determine how participants can join the audio portion of the webinar
    "both"|"telephony"|"voip"|"thirdParty" audio = "both";
    # Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)
    @jsondata:Name {value: "authentication_name"}
    string authenticationName?;
    # Send notification email to registrants when the host updates a webinar
    @jsondata:Name {value: "notify_registrants"}
    boolean notifyRegistrants?;
    # Enable practice session
    @jsondata:Name {value: "practice_session"}
    boolean practiceSession = false;
    # Only signed in users with specified domains can join meetings.
    #
    # **This field is deprecated and will not be supported in the future.**    
    #
    # As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar
    #
    # # Deprecated
    @jsondata:Name {value: "enforce_login_domains"}
    @deprecated
    string enforceLoginDomains?;
    # List of global dial-in countries
    @jsondata:Name {value: "global_dial_in_countries"}
    string[] globalDialInCountries?;
    # Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number
    @jsondata:Name {value: "registrants_restrict_number"}
    int registrantsRestrictNumber = 0;
    @jsondata:Name {value: "question_and_answer"}
    InlineResponse20063SettingsQuestionAndAnswer questionAndAnswer?;
    # Contact name for registration
    @jsondata:Name {value: "contact_name"}
    string contactName?;
    @jsondata:Name {value: "attendees_and_panelists_reminder_email_notification"}
    WebinarswebinarIdSettingsAttendeesAndPanelistsReminderEmailNotification attendeesAndPanelistsReminderEmailNotification?;
    # Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field
    @jsondata:Name {value: "registrants_email_notification"}
    boolean registrantsEmailNotification?;
    # `0` - Automatically approve.  
    # `1` - Manually approve.  
    # `2` - No registration required
    @jsondata:Name {value: "approval_type"}
    0|1|2 approvalType = 2;
    # Close registration after event date
    #
    # # Deprecated
    @jsondata:Name {value: "close_registration"}
    @deprecated
    boolean closeRegistration?;
    # Automatic recording. 
    # `local` - Record on local.  
    # `cloud` -  Record on cloud.  
    # `none` - Disabled
    @jsondata:Name {value: "auto_recording"}
    "local"|"cloud"|"none" autoRecording = "none";
    # Start video when host joins webinar
    @jsondata:Name {value: "host_video"}
    boolean hostVideo?;
    @jsondata:Name {value: "language_interpretation"}
    InlineResponse20063SettingsLanguageInterpretation languageInterpretation?;
    # Start video when panelists join webinar
    @jsondata:Name {value: "panelists_video"}
    boolean panelistsVideo?;
    # Add watermark that identifies the viewing participant
    @jsondata:Name {value: "add_watermark"}
    boolean addWatermark?;
    # Only signed in users can join this meeting.
    #
    # **This field is deprecated and will not be supported in the future.**    
    #
    # As an alternative, use the `meeting_authentication`, `authentication_option` and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar
    #
    # # Deprecated
    @jsondata:Name {value: "enforce_login"}
    @deprecated
    boolean enforceLogin?;
    # Make the webinar on-demand
    @jsondata:Name {value: "on_demand"}
    boolean onDemand = false;
    # Whether HD video for attendees is enabled
    @jsondata:Name {value: "hd_video_for_attendees"}
    boolean hdVideoForAttendees = false;
    # Send invitation email to panelists. If `false`, do not send invitation email to panelists
    @jsondata:Name {value: "panelists_invitation_email_notification"}
    boolean panelistsInvitationEmailNotification?;
    # Require panelists to authenticate to join
    @jsondata:Name {value: "panelist_authentication"}
    boolean panelistAuthentication?;
    # Whether the **Webinar Session Branding** setting is enabled. This setting lets hosts visually customize a webinar by setting a session background. This also lets hosts use [webinar session branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding) to set the Virtual Background for and apply name tags to hosts, alternative hosts, panelists, interpreters, and speakers
    @jsondata:Name {value: "enable_session_branding"}
    boolean enableSessionBranding?;
    # Third party audio conference info
    @jsondata:Name {value: "audio_conference_info"}
    string audioConferenceInfo?;
    # If user has configured [**Sign Into Zoom with Specified Domains**](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated
    @jsondata:Name {value: "authentication_domains"}
    string authenticationDomains?;
    @jsondata:Name {value: "follow_up_attendees_email_notification"}
    WebinarswebinarIdSettingsFollowUpAttendeesEmailNotification followUpAttendeesEmailNotification?;
    # Whether to include guest's email addresses in webinars' attendee reports
    @jsondata:Name {value: "email_in_attendee_report"}
    boolean emailInAttendeeReport?;
};

public type MeetingsmeetingIdregistrantsmeetingsmeetingIdregistrantsAllOf12 record {
    # The registrant's language preference for confirmation emails: 
    # * `en-US` &mdash; English (US) 
    # * `de-DE` &mdash; German (Germany) 
    # * `es-ES` &mdash; Spanish (Spain) 
    # * `fr-FR` &mdash; French (France) 
    # * `jp-JP` &mdash; Japanese 
    # * `pt-PT` &mdash; Portuguese (Portugal) 
    # * `ru-RU` &mdash; Russian 
    # * `zh-CN` &mdash; Chinese (PRC) 
    # * `zh-TW` &mdash; Chinese (Taiwan) 
    # * `ko-KO` &mdash; Korean 
    # * `it-IT` &mdash; Italian (Italy) 
    # * `vi-VN` &mdash; Vietnamese 
    # * `pl-PL` &mdash; Polish 
    # * `Tr-TR` &mdash; Turkish
    "en-US"|"de-DE"|"es-ES"|"fr-FR"|"jp-JP"|"pt-PT"|"ru-RU"|"zh-CN"|"zh-TW"|"ko-KO"|"it-IT"|"vi-VN"|"pl-PL"|"Tr-TR" language?;
};

# VFfeatures used in the meeting
public type InlineResponse20036FeatureUsed record {
    # Whether breakout room was enabled in the meeting
    @jsondata:Name {value: "breakout_room"}
    boolean breakoutRoom?;
    # Whether the video was on in the meeting
    @jsondata:Name {value: "video_on"}
    boolean videoOn?;
    # Whether the meeting questions was enabled
    @jsondata:Name {value: "meeting_questions"}
    boolean meetingQuestions?;
    # Whether anyone sent files in the meeting chat
    @jsondata:Name {value: "file_sharing"}
    boolean fileSharing?;
    # Whether the meeting has poll data
    boolean poll?;
    # Whether the screen was shared in the meeting
    @jsondata:Name {value: "screen_sharing"}
    boolean screenSharing?;
    # Whether a whiteboard was used in the meeting
    boolean whiteboard?;
    # Whether anyone switched the meeting to their mobile phone
    @jsondata:Name {value: "switch_to_mobile"}
    boolean switchToMobile?;
    # Whether anyone has raised hand in the meeting
    @jsondata:Name {value: "raise_hand"}
    boolean raiseHand?;
    # Whether anyone in the meeting has sent a message in the meeting chat
    @jsondata:Name {value: "in_meeting_chat"}
    boolean inMeetingChat?;
    # Whether closed caption was enabled in the meeting
    @jsondata:Name {value: "closed_caption"}
    boolean closedCaption?;
    # Whether to open the waiting room for the meeting
    @jsondata:Name {value: "waiting_room"}
    boolean waitingRoom?;
    # Whether anyone used a virtual background in the meeting
    @jsondata:Name {value: "virtual_background"}
    boolean virtualBackground?;
    # Whether anyone has joined the meeting by telephone
    @jsondata:Name {value: "telephone_usage"}
    boolean telephoneUsage?;
    # Whether live transcription was turned on
    @jsondata:Name {value: "live_transcription"}
    boolean liveTranscription?;
    # Whether annotation was used in the meeting
    boolean 'annotation?;
    # Whether smart recording was enabled for the meeting
    @jsondata:Name {value: "smart_recording"}
    boolean smartRecording?;
    # Whether anyone sent an emoticon
    boolean reaction?;
    # Whether the Zoom app was used in the meeting
    @jsondata:Name {value: "zoom_apps"}
    boolean zoomApps?;
    # Whether anyone used an avatar in the meeting
    boolean avatar?;
    # Whether language translation was used in the meeting
    @jsondata:Name {value: "language_interpretation"}
    boolean languageInterpretation?;
    # Whether to record the meeting to the cloud
    @jsondata:Name {value: "record_to_cloud"}
    boolean recordToCloud?;
    # Whether anyone has joined the meeting by Zoom Room
    @jsondata:Name {value: "join_by_room"}
    boolean joinByRoom?;
    # Whether to use remote control in the meeting
    @jsondata:Name {value: "remote_control"}
    boolean remoteControl?;
    # Whether live translation was used in the meeting
    @jsondata:Name {value: "live_translation"}
    boolean liveTranslation?;
    # Whether the meeting summary was enabled
    @jsondata:Name {value: "meeting_summary"}
    boolean meetingSummary?;
    # Whether registration was enabled for the meeting
    boolean registration?;
    # Whether immersive scene was enabled in then meeting
    @jsondata:Name {value: "immersive_scene"}
    boolean immersiveScene?;
    # Whether to record the meeting to the local computer
    @jsondata:Name {value: "record_to_computer"}
    boolean recordToComputer?;
};

public type InlineResponse2012Questions record {
    # Whether participants must answer the question: 
    # * `true` &mdash; The participant must answer the question. 
    # * `false` &mdash; The participant does not need to answer the question
    @jsondata:Name {value: "answer_required"}
    boolean answerRequired?;
    # The allowed minimum number of characters. This field only returns for `short_answer` and `long_answer` polls
    @jsondata:Name {value: "answer_min_character"}
    int answerMinCharacter?;
    # The rating scale's minimum value. This field only returns for `rating_scale` polls
    @jsondata:Name {value: "rating_min_value"}
    int ratingMinValue?;
    # The poll question's available answers
    string[] answers?;
    # The poll's question and answer type: 
    # * `single` &mdash; Single choice. 
    # * `multiple` &mdash; Multiple choice. 
    # * `matching` &mdash; Matching. 
    # * `rank_order` &mdash; Rank order. 
    # * `short_answer` &mdash; Short answer. 
    # * `long_answer` &mdash; Long answer. 
    # * `fill_in_the_blank` &mdash; Fill in the blank. 
    # * `rating_scale` &mdash; Rating scale
    "single"|"multiple"|"matching"|"rank_order"|"short_answer"|"long_answer"|"fill_in_the_blank"|"rating_scale" 'type?;
    # The allowed maximum number of characters. This field only returns for `short_answer` and `long_answer` polls
    @jsondata:Name {value: "answer_max_character"}
    int answerMaxCharacter?;
    # The rating scale's maximum value. This field only returns for `rating_scale` polls
    @jsondata:Name {value: "rating_max_value"}
    int ratingMaxValue?;
    # The poll question's correct answer(s)
    @jsondata:Name {value: "right_answers"}
    string[] rightAnswers?;
    # Whether to display the radio selection as a drop-down box: 
    # * `true` &mdash; Show as a drop-down box. 
    # * `false` &mdash; Do not show as a drop-down box
    @jsondata:Name {value: "show_as_dropdown"}
    boolean showAsDropdown?;
    # The low score label for the `rating_min_value` field. This field only returns for `rating_scale` polls
    @jsondata:Name {value: "rating_min_label"}
    string ratingMinLabel?;
    # Whether the correct answer is case sensitive. This field only returns for `fill_in_the_blank` polls: 
    # * `true` &mdash; The answer is case-sensitive. 
    # * `false` &mdash; The answer is not case-sensitive
    @jsondata:Name {value: "case_sensitive"}
    boolean caseSensitive = false;
    # The poll question's title. For `fill_in_the_blank` polls, this field is the poll's question
    string name?;
    # The high score label for the `rating_max_value` field. This field only returns for `rating_scale` polls
    @jsondata:Name {value: "rating_max_label"}
    string ratingMaxLabel?;
    # The information about the prompt questions. This object only returns for `matching` and `rank_order` polls
    InlineResponse2012Prompts[] prompts?;
};

# Meeting Registrant Questions
public type MeetingRegistrantQuestions record {
    # Array of Registrant Custom Questions
    @jsondata:Name {value: "custom_questions"}
    MeetingsmeetingIdregistrantsquestionsCustomQuestions[] customQuestions?;
    # Array of registrant questions
    MeetingsmeetingIdregistrantsquestionsQuestions[] questions?;
};

public type CloudRecordingRegistrationListRegistrantsItemsnullCustomquestionsItemsObject record {
    string title?;
    string value?;
};

public type InlineResponse20045AllOf1 record {
    # The next page token is used to paginate through large result sets. A next page token returns when the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # Information about the upcoming event
    @jsondata:Name {value: "upcoming_events"}
    InlineResponse20045UpcomingEvents[] upcomingEvents?;
    # The report's start date. This value must be within the past six months
    string 'from?;
    # The report's end date. This value must be within the past six months and cannot exceed a month from the `from` value
    string to?;
    # The number of records returned in a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize = 30;
};

public type InlineResponse20027Templates record {
    # The template name
    string name?;
    # The template ID
    string id?;
    # The template type:   
    #
    # `1`: Meeting template   
    #
    # `2`: Admin meeting template
    int 'type?;
};

# Occurrence object. This object is only returned for recurring webinars
public type InlineResponse20114Occurrences record {
    # Duration
    int duration?;
    # Start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences
    @jsondata:Name {value: "occurrence_id"}
    string occurrenceId?;
    # Occurrence status. 
    # `available` - Available occurrence.  
    # `deleted` -  Deleted occurrence
    "available"|"deleted" status?;
};

# Represents the Queries record for the operation: reportMeetingParticipants
public type ReportMeetingParticipantsQueries record {
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # Provide `registrant_id` as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [meeting registrant](/docs/api-reference/zoom-api/methods#operation/meetingRegistrants)
    @http:Query {name: "include_fields"}
    "registrant_id" includeFields?;
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

# Tracking Field
public type TrackingField4 record {
    # Array of recommended values
    @jsondata:Name {value: "recommended_values"}
    string[] recommendedValues?;
    # Tracking Field Visible
    boolean visible?;
    # Label/ Name for the tracking field
    string 'field?;
    # Tracking Field Required
    boolean required?;
};

# Tracking Field
public type TrackingField3 record {
    # Array of recommended values
    @jsondata:Name {value: "recommended_values"}
    string[] recommendedValues?;
    # Tracking field visible
    boolean visible?;
    # Label or name for the tracking field
    string 'field?;
    # Tracking field's ID
    string id?;
    # Tracking field required
    boolean required?;
};

public type InlineResponse20039Participants record {
    # Participant leave time
    @jsondata:Name {value: "leave_time"}
    string leaveTime?;
    # Participant email.
    #
    # If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](/docs/api-reference/using-zoom-apis#email-address) for details. This returns an empty string value if the account calling the API is a BAA account
    @jsondata:Name {value: "user_email"}
    string userEmail?;
    # Unique identifier of the registrant. This field is only returned if you entered &quot;registrant_id&quot; as the value of `include_fields` query parameter
    @jsondata:Name {value: "registrant_id"}
    string registrantId?;
    # The participant's universally unique ID (UUID). 
    # * If the participant joins the meeting by logging into Zoom, this value is the `id` value in the [**Get a user**](/docs/api-reference/zoom-api/methods#operation/user) API response. 
    # * If the participant joins the meeting **without** logging into Zoom, this returns an empty string value
    @jsondata:Name {value: "participant_user_id"}
    string participantUserId?;
    # Participant join time
    @jsondata:Name {value: "join_time"}
    string joinTime?;
    # Participant duration, in seconds, calculated by subtracting the `leave_time` from the `join_time` for the `user_id`. If the participant leaves and rejoins the same meeting, they are assigned a different `user_id` and Zoom displays their new duration in a separate object. Because of this, the duration may not reflect the total time the user was in the meeting
    int duration?;
    # The participant's SDK identifier. This value can be alphanumeric, up to a maximum length of 35 characters
    @jsondata:Name {value: "customer_key"}
    string customerKey?;
    # The [breakout room](https://support.zoom.us/hc/en-us/articles/206476313-Managing-breakout-rooms) ID. Each breakout room is assigned a unique ID
    @jsondata:Name {value: "bo_mtg_id"}
    string boMtgId?;
    # Indicates if failover happened during the meeting
    boolean failover?;
    # Participant ID. This is a unique ID assigned to the participant joining a meeting and is valid for that meeting only
    @jsondata:Name {value: "user_id"}
    string userId?;
    # Participant display name.
    #
    # This returns an empty string value if the account calling the API is a BAA account
    string name?;
    # The participant's universally unique ID (UUID). 
    # * If the participant joins the meeting by logging into Zoom, this value is the `id` value in the [**Get a user**](/docs/api-reference/zoom-api/methods#operation/user) API response. 
    # * If the participant joins the meeting **without** logging into Zoom, this returns an empty string value. 
    #
    # **Note:** Use the `participant_user_id` value instead of this value. We will remove this response in a future release
    string id?;
    # The participant's status. 
    # * `in_meeting` - In a meeting. 
    # * `in_waiting_room` - In a waiting room
    "in_meeting"|"in_waiting_room" status?;
};

public type InlineResponse20111AllOf1 record {
    # The ID of the TSP account
    string id?;
};

# Represents the Queries record for the operation: meetingUpdate
public type MeetingUpdateQueries record {
    # Meeting occurrence ID. Support change of agenda, `start_time`, duration, or settings {`host_video`, `participant_video`, `join_before_host`, `mute_upon_entry`, `waiting_room`, `watermark`, `auto_recording`}
    @http:Query {name: "occurrence_id"}
    string occurrenceId?;
};

@constraint:String {maxLength: 200}
public type WebinarSurveyObjectCustomSurveyQuestionsAnswersItemsString string;

public type WebinarIdSipDialingBody record {
    # If customers want a passcode to be embedded in the SIP URI dial string, they must supply the passcode. Zoom will not validate the passcode
    string passcode?;
};

# Registrant
public type RecordingsRegistrantsBody MeetingsmeetingIdrecordingsregistrantsAllOf1;

public type InlineResponse20030DedicatedDialInNumber record {
    # The dial-in country code
    string country?;
    # The dial-in number
    @constraint:String {maxLength: 16}
    string number?;
};

# Represents the Queries record for the operation: reportTelephone
public type ReportTelephoneQueries record {
    # The page number of the current page in the returned records. This field is **not** available if the `query_date_type` parameter is the `meeting_start_time` or `meeting_end_time` value. 
    #
    # This field is deprecated. Use the `next_page_token` query parameter for pagination
    @http:Query {name: "page_number"}
    int pageNumber = 1;
    # Use the next page token to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once
    string 'from;
    # End date
    string to;
    # Audio types:  
    # `1` - Toll-free Call-in &amp; Call-out.  
    # `2` - Toll   
    #
    # `3` - SIP Connected Audio
    "1"|"2"|"3" 'type = "1";
    # The type of date to query. 
    # * `start_time` &mdash; Query by call start time. 
    # * `end_time` &mdash; Query by call end time. 
    # * `meeting_start_time` &mdash; Query by meeting start time. 
    # * `meeting_end_time` &mdash; Query by meeting end time. 
    #
    # This value defaults to `start_time`
    @http:Query {name: "query_date_type"}
    "start_time"|"end_time"|"meeting_start_time"|"meeting_end_time" queryDateType = "start_time";
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

public type RegistrationListRegistrants record {
    *RegistrantsAllOf1;
    *RegistrantsRegistrantsAllOf12;
    *RegistrantsRegistrantsRegistrantsAllOf123;
    # The registrant's status. 
    # * `approved` - Registrant is approved. 
    # * `denied` - Registrant is denied. 
    # * `pending` - Registrant is waiting for approval
    "approved"|"denied"|"pending" status?;
};

# Webinar settings
public type InlineResponse20114Settings record {
    # Zoom will open a survey page in attendees' browsers after leaving the webinar
    @jsondata:Name {value: "post_webinar_survey"}
    boolean postWebinarSurvey?;
    # Webinar authentication option ID
    @jsondata:Name {value: "authentication_option"}
    string authenticationOption?;
    # Set the email language.
    # `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`
    @jsondata:Name {value: "email_language"}
    string emailLanguage?;
    # Whether to allow host and co-hosts to fully control the mute state of participants. Not supported for simulive webinar. If not provided, the default value will be based on the user's setting
    @jsondata:Name {value: "allow_host_control_participant_mute_state"}
    boolean allowHostControlParticipantMuteState?;
    @jsondata:Name {value: "sign_language_interpretation"}
    UsersuserIdwebinarsSettingsSignLanguageInterpretation signLanguageInterpretation?;
    # Always send 1080p video to attendees
    @jsondata:Name {value: "send_1080p_video_to_attendees"}
    boolean send1080pVideoToAttendees = false;
    # Show social share buttons on the registration page
    @jsondata:Name {value: "show_share_button"}
    boolean showShareButton?;
    # Default to HD video
    @jsondata:Name {value: "hd_video"}
    boolean hdVideo = false;
    # Send confirmation email to registrants
    @jsondata:Name {value: "registrants_confirmation_email"}
    boolean registrantsConfirmationEmail?;
    # Registration types. Only used for recurring webinars with a fixed time.  
    # `1` - Attendees register once and can attend any of the webinar sessions.  
    # `2` - Attendees need to register for each session in order to attend.  
    # `3` - Attendees register once and can choose one or more sessions to attend
    @jsondata:Name {value: "registration_type"}
    1|2|3 registrationType = 1;
    # Contact email for registration
    @jsondata:Name {value: "contact_email"}
    string contactEmail?;
    # Allow attendees to join from multiple devices
    @jsondata:Name {value: "allow_multiple_devices"}
    boolean allowMultipleDevices?;
    # Only authenticated users can join Webinar
    @jsondata:Name {value: "meeting_authentication"}
    boolean meetingAuthentication?;
    # Survey url for post webinar survey
    @jsondata:Name {value: "survey_url"}
    string surveyUrl?;
    # Alternative host emails or IDs. Multiple values separated by comma
    @jsondata:Name {value: "alternative_hosts"}
    string alternativeHosts?;
    # Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher
    @jsondata:Name {value: "alternative_host_update_polls"}
    boolean alternativeHostUpdatePolls?;
    @jsondata:Name {value: "follow_up_absentees_email_notification"}
    UsersuserIdwebinarsSettingsFollowUpAbsenteesEmailNotification followUpAbsenteesEmailNotification?;
    # Add audio watermark that identifies the participants. If not provided, the default value will be based on the user's setting
    @jsondata:Name {value: "add_audio_watermark"}
    boolean addAudioWatermark?;
    # Determine how participants can join the audio portion of the webinar
    "both"|"telephony"|"voip"|"thirdParty" audio = "both";
    # Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)
    @jsondata:Name {value: "authentication_name"}
    string authenticationName?;
    # Send notification email to registrants when the host updates a webinar
    @jsondata:Name {value: "notify_registrants"}
    boolean notifyRegistrants?;
    # Enable practice session
    @jsondata:Name {value: "practice_session"}
    boolean practiceSession = false;
    # Only signed in users with specified domains can join meetings.
    #
    # **This field is deprecated and will not be supported in the future.**
    #
    # As an alternative, use the `meeting_authentication`, `authentication_option` and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the webinar
    #
    # # Deprecated
    @jsondata:Name {value: "enforce_login_domains"}
    @deprecated
    string enforceLoginDomains?;
    # List of global dial-in countries
    @jsondata:Name {value: "global_dial_in_countries"}
    string[] globalDialInCountries?;
    # Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number
    @jsondata:Name {value: "registrants_restrict_number"}
    int registrantsRestrictNumber = 0;
    @jsondata:Name {value: "question_and_answer"}
    InlineResponse20114SettingsQuestionAndAnswer questionAndAnswer?;
    # Contact name for registration
    @jsondata:Name {value: "contact_name"}
    string contactName?;
    @jsondata:Name {value: "attendees_and_panelists_reminder_email_notification"}
    WebinarswebinarIdSettingsAttendeesAndPanelistsReminderEmailNotification attendeesAndPanelistsReminderEmailNotification?;
    # Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field
    @jsondata:Name {value: "registrants_email_notification"}
    boolean registrantsEmailNotification?;
    # `0` - Automatically approve.  
    # `1` - Manually approve.  
    # `2` - No registration required
    @jsondata:Name {value: "approval_type"}
    0|1|2 approvalType = 2;
    # Close registration after event date
    #
    # # Deprecated
    @jsondata:Name {value: "close_registration"}
    @deprecated
    boolean closeRegistration?;
    # Automatic recording. 
    # `local` - Record on local.  
    # `cloud` -  Record on cloud.  
    # `none` - Disabled
    @jsondata:Name {value: "auto_recording"}
    "local"|"cloud"|"none" autoRecording = "none";
    # Start video when host joins webinar
    @jsondata:Name {value: "host_video"}
    boolean hostVideo?;
    @jsondata:Name {value: "language_interpretation"}
    UsersuserIdwebinarsSettingsLanguageInterpretation languageInterpretation?;
    # Start video when panelists join webinar
    @jsondata:Name {value: "panelists_video"}
    boolean panelistsVideo?;
    # Add watermark that identifies the viewing participant. If not provided, the default value will be based on the user's setting
    @jsondata:Name {value: "add_watermark"}
    boolean addWatermark?;
    # Only signed in users can join this meeting.
    #
    # **This field is deprecated and will not be supported in the future.**
    #
    # As an alternative, use the `meeting_authentication`, `authentication_option` and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the webinar
    #
    # # Deprecated
    @jsondata:Name {value: "enforce_login"}
    @deprecated
    boolean enforceLogin?;
    # Make the webinar on-demand
    @jsondata:Name {value: "on_demand"}
    boolean onDemand = false;
    # Whether HD video for attendees is enabled
    @jsondata:Name {value: "hd_video_for_attendees"}
    boolean hdVideoForAttendees = false;
    # Send invitation email to panelists. If `false`, do not send invitation email to panelists
    @jsondata:Name {value: "panelists_invitation_email_notification"}
    boolean panelistsInvitationEmailNotification?;
    # Require panelists to authenticate to join. If not provided, the default value will be based on the user's setting
    @jsondata:Name {value: "panelist_authentication"}
    boolean panelistAuthentication?;
    # Whether the **Webinar Session Branding** setting is enabled. This setting lets hosts visually customize a webinar by setting a session background. This also lets hosts use [Webinar Session Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding) to set the Virtual Background for and apply name tags to hosts, alternative hosts, panelists, interpreters, and speakers
    @jsondata:Name {value: "enable_session_branding"}
    boolean enableSessionBranding?;
    # Third party audio conference info
    @jsondata:Name {value: "audio_conference_info"}
    string audioConferenceInfo?;
    # If user has configured [**Sign Into Zoom with Specified Domains**](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated
    @jsondata:Name {value: "authentication_domains"}
    string authenticationDomains?;
    @jsondata:Name {value: "follow_up_attendees_email_notification"}
    WebinarswebinarIdSettingsFollowUpAttendeesEmailNotification followUpAttendeesEmailNotification?;
    # Whether to include guest's email addresses in attendee reports for webinars
    @jsondata:Name {value: "email_in_attendee_report"}
    boolean emailInAttendeeReport?;
};

# Returns a list of recording files for each participant. The API only returns this response when the **Record a separate audio file of each participant** setting is enabled
public type InlineResponse2003InlineResponse2003InlineResponse2003AllOf123 record {
    # A list of recording files. The API only returns this response when the **Record a separate audio file of each participant** setting is enabled
    @jsondata:Name {value: "participant_audio_files"}
    record {
        @jsondata:Name {value: "file_path"}
        string filePath?;
        @jsondata:Name {value: "play_url"}
        string playUrl?;
        @jsondata:Name {value: "file_name"}
        string fileName?;
        @jsondata:Name {value: "file_type"}
        string fileType?;
        @jsondata:Name {value: "download_url"}
        string downloadUrl?;
        string id?;
        @jsondata:Name {value: "file_size"}
        decimal fileSize?;
        @jsondata:Name {value: "recording_end"}
        string recordingEnd?;
        @jsondata:Name {value: "recording_start"}
        string recordingStart?;
        "completed" status?;
    }[] participantAudioFiles?;
};

public type ArchiveFilesfileIdBody record {
    # Whether to auto-delete the archived file
    @jsondata:Name {value: "auto_delete"}
    boolean autoDelete;
};

# Webinar settings
public type WebinarswebinarIdSettings record {
    # Zoom will open a survey page in attendees' browsers after leaving the webinar
    @jsondata:Name {value: "post_webinar_survey"}
    boolean postWebinarSurvey?;
    # Webinar authentication option ID
    @jsondata:Name {value: "authentication_option"}
    string authenticationOption?;
    # Set the email language to one of the following.
    # `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`
    @jsondata:Name {value: "email_language"}
    string emailLanguage?;
    # Whether to allow host and co-hosts to fully control the mute state of participants
    @jsondata:Name {value: "allow_host_control_participant_mute_state"}
    boolean allowHostControlParticipantMuteState = false;
    @jsondata:Name {value: "sign_language_interpretation"}
    WebinarswebinarIdSettingsSignLanguageInterpretation signLanguageInterpretation?;
    # Always send 1080p video to attendees
    @jsondata:Name {value: "send_1080p_video_to_attendees"}
    boolean send1080pVideoToAttendees = false;
    # Show social share buttons on the registration page
    @jsondata:Name {value: "show_share_button"}
    boolean showShareButton?;
    # Default to HD video
    @jsondata:Name {value: "hd_video"}
    boolean hdVideo = false;
    # Send confirmation email to registrants
    @jsondata:Name {value: "registrants_confirmation_email"}
    boolean registrantsConfirmationEmail?;
    # Registration types. Only used for recurring webinars with a fixed time.  
    # `1` - Attendees register once and can attend any of the webinar sessions.  
    # `2` - Attendees need to register for each session in order to attend.  
    # `3` - Attendees register once and can choose one or more sessions to attend
    @jsondata:Name {value: "registration_type"}
    1|2|3 registrationType = 1;
    # Contact email for registration
    @jsondata:Name {value: "contact_email"}
    string contactEmail?;
    # Allow attendees to join from multiple devices
    @jsondata:Name {value: "allow_multiple_devices"}
    boolean allowMultipleDevices?;
    # Only authenticated users can join the webinar
    @jsondata:Name {value: "meeting_authentication"}
    boolean meetingAuthentication?;
    # Survey url for post webinar survey
    @jsondata:Name {value: "survey_url"}
    string surveyUrl?;
    # Alternative host emails or IDs. Separate multiple values by commas
    @jsondata:Name {value: "alternative_hosts"}
    string alternativeHosts?;
    # Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher
    @jsondata:Name {value: "alternative_host_update_polls"}
    boolean alternativeHostUpdatePolls?;
    @jsondata:Name {value: "follow_up_absentees_email_notification"}
    UsersuserIdwebinarsSettingsFollowUpAbsenteesEmailNotification followUpAbsenteesEmailNotification?;
    # Add audio watermark that identifies the participants
    @jsondata:Name {value: "add_audio_watermark"}
    boolean addAudioWatermark?;
    # Determine how participants can join the audio portion of the webinar
    "both"|"telephony"|"voip"|"thirdParty" audio = "both";
    # Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)
    @jsondata:Name {value: "authentication_name"}
    string authenticationName?;
    # Send notification email to registrants when the host updates a webinar
    @jsondata:Name {value: "notify_registrants"}
    boolean notifyRegistrants?;
    # Enable practice session
    @jsondata:Name {value: "practice_session"}
    boolean practiceSession = false;
    # Only signed in users with specified domains can join meetings.
    #
    # **This field is deprecated and will not be supported in the future.**
    #
    # As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the webinar
    #
    # # Deprecated
    @jsondata:Name {value: "enforce_login_domains"}
    @deprecated
    string enforceLoginDomains?;
    # List of global dial-in countries
    @jsondata:Name {value: "global_dial_in_countries"}
    string[] globalDialInCountries?;
    # Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number
    @jsondata:Name {value: "registrants_restrict_number"}
    int registrantsRestrictNumber = 0;
    @jsondata:Name {value: "question_and_answer"}
    WebinarswebinarIdSettingsQuestionAndAnswer questionAndAnswer?;
    # Contact name for registration
    @jsondata:Name {value: "contact_name"}
    string contactName?;
    @jsondata:Name {value: "attendees_and_panelists_reminder_email_notification"}
    WebinarswebinarIdSettingsAttendeesAndPanelistsReminderEmailNotification attendeesAndPanelistsReminderEmailNotification?;
    # Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field
    @jsondata:Name {value: "registrants_email_notification"}
    boolean registrantsEmailNotification?;
    # `0` - Automatically approve.  
    # `1` - Manually approve.  
    # `2` - No registration required
    @jsondata:Name {value: "approval_type"}
    0|1|2 approvalType = 2;
    # Close registration after event date
    #
    # # Deprecated
    @jsondata:Name {value: "close_registration"}
    @deprecated
    boolean closeRegistration?;
    # Automatic recording. 
    # `local` - Record on local.  
    # `cloud` -  Record on cloud.  
    # `none` - Disabled
    @jsondata:Name {value: "auto_recording"}
    "local"|"cloud"|"none" autoRecording = "none";
    # Start video when host joins the webinar
    @jsondata:Name {value: "host_video"}
    boolean hostVideo?;
    @jsondata:Name {value: "language_interpretation"}
    WebinarswebinarIdSettingsLanguageInterpretation languageInterpretation?;
    # Start video when panelists join the webinar
    @jsondata:Name {value: "panelists_video"}
    boolean panelistsVideo?;
    # Add watermark that identifies the viewing participant
    @jsondata:Name {value: "add_watermark"}
    boolean addWatermark?;
    # Only signed in users can join this meeting.
    #
    # **This field is deprecated and will not be supported in the future.** 
    #
    # As an alternative, use the ``meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the webinar
    #
    # # Deprecated
    @jsondata:Name {value: "enforce_login"}
    @deprecated
    boolean enforceLogin?;
    # Make the webinar on-demand
    @jsondata:Name {value: "on_demand"}
    boolean onDemand = false;
    # Whether HD video for attendees is enabled
    @jsondata:Name {value: "hd_video_for_attendees"}
    boolean hdVideoForAttendees = false;
    # Send invitation email to panelists. If `false`, do not send invitation email to panelists
    @jsondata:Name {value: "panelists_invitation_email_notification"}
    boolean panelistsInvitationEmailNotification?;
    # Require panelists to authenticate to join
    @jsondata:Name {value: "panelist_authentication"}
    boolean panelistAuthentication?;
    # Whether the **Webinar Session Branding** setting is enabled. This setting lets hosts visually customize a webinar by setting a session background. This also lets hosts use [Webinar Session Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding) to set the virtual background for and apply name tags to hosts, alternative hosts, panelists, interpreters, and speakers
    @jsondata:Name {value: "enable_session_branding"}
    boolean enableSessionBranding?;
    # Third party audio conference info
    @jsondata:Name {value: "audio_conference_info"}
    string audioConferenceInfo?;
    # If user has configured [**Sign Into Zoom with Specified Domains**](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated
    @jsondata:Name {value: "authentication_domains"}
    string authenticationDomains?;
    @jsondata:Name {value: "follow_up_attendees_email_notification"}
    WebinarswebinarIdSettingsFollowUpAttendeesEmailNotification followUpAttendeesEmailNotification?;
    # Whether to include guest's email addresses in webinars' attendee reports
    @jsondata:Name {value: "email_in_attendee_report"}
    boolean emailInAttendeeReport?;
};

public type WebinarswebinarIdbatchRegistrantsRegistrants record {
    # The registrant's last name
    @jsondata:Name {value: "last_name"}
    string lastName?;
    # The registrant's first name
    @jsondata:Name {value: "first_name"}
    string firstName;
    # The registrant's email address
    string email;
};

# List of H.323/SIP Devices
public type H323SIPDeviceList record {
    *H323SIPDeviceListAllOf1;
    *H323SIPDeviceListH323SIPDeviceListAllOf12;
};

public type MeetingsmeetingIdSettingsSignLanguageInterpretationInterpreters record {
    # The interpreter's sign language. 
    #
    # To get this value, use the `sign_language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API response
    @jsondata:Name {value: "sign_language"}
    string signLanguage?;
    # The interpreter's email address
    string email?;
};

public type InlineResponse20046AllOf1 record {
    # The page number of the current results
    @jsondata:Name {value: "page_number"}
    int pageNumber = 1;
    # The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The total number of all the records available across pages
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # Start date for this report
    string 'from?;
    # End date for this report
    string to?;
    # The number of pages returned for the request made
    @jsondata:Name {value: "page_count"}
    int pageCount?;
    # The number of records returned with a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize = 30;
};

public type DevicesdeviceIdBody record {
    # id of the Zoom Room
    @jsondata:Name {value: "room_id"}
    string roomId?;
    # The name of the device
    @jsondata:Name {value: "device_name"}
    string deviceName;
    # Device Type:  
    # `0` - Zoom Rooms Computer.  
    # `1` - Zoom Rooms Controller.  
    # `2` - Zoom Rooms Scheduling Display
    @jsondata:Name {value: "device_type"}
    0|1|3 deviceType?;
    # The name of the tag
    string tag?;
};

# Tracking field
public type TrackingField2 record {
    # Array of recommended values
    @jsondata:Name {value: "recommended_values"}
    string[] recommendedValues?;
    # Tracking field visible
    boolean visible?;
    # Label or name for the tracking field
    string 'field?;
    # Tracking field required
    boolean required?;
};

# Tracking field
public type TrackingField1 record {
    # Array of recommended values
    @jsondata:Name {value: "recommended_values"}
    string[] recommendedValues?;
    # Tracking field visible
    boolean visible?;
    # Label or name for the tracking field
    string 'field?;
    # Tracking field ID
    string id?;
    # Tracking field required
    boolean required?;
};

public type MeetingIdBatchPollsBody record {
    # The information about the meeting's polls
    @constraint:Array {maxLength: 25, minLength: 1}
    MeetingsmeetingIdbatchPollsPolls[] polls?;
};

public type PollListPolls record {
    *PollsAllOf1;
    *MeetingAndWebinarPollingObject6;
};

# Information about the meeting survey
public type MeetingSurveyObject1 record {
    # Whether the **Show in the browser when the meeting ends** option is enabled. 
    # * `true` - Enabled. 
    # * `false` - Disabled. 
    #
    # This value defaults to `true`
    @jsondata:Name {value: "show_in_the_browser"}
    boolean showInTheBrowser = true;
    @jsondata:Name {value: "custom_survey"}
    MeetingsmeetingIdsurveyCustomSurvey customSurvey?;
    # The link to the third party meeting survey
    @jsondata:Name {value: "third_party_survey"}
    string thirdPartySurvey?;
};

public type InlineResponse20046InlineResponse20046AllOf12 record {
    # Number of participants for this range
    @jsondata:Name {value: "total_participants"}
    int totalParticipants?;
    # Number of meetings for this range
    @jsondata:Name {value: "total_meetings"}
    int totalMeetings?;
    # Number of meeting minutes for this range
    @jsondata:Name {value: "total_meeting_minutes"}
    int totalMeetingMinutes?;
    # Array of user objects
    InlineResponse20046Users[] users?;
};

# Meeting live stream
public type MeetingIdLivestreamBody record {
    # The live stream page URL
    @jsondata:Name {value: "page_url"}
    string pageUrl;
    # The number of pixels in each dimension that the video camera can display, required when a user enables 1080p. Use a value of `720p` or `1080p`
    string resolution?;
    # Stream name and key
    @jsondata:Name {value: "stream_key"}
    string streamKey;
    # Streaming URL
    @jsondata:Name {value: "stream_url"}
    string streamUrl;
};

public type WebinarsAllOf11 record {
    # Start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # Webinar UUID
    string uuid?;
};

public type RegistrationList2Registrants record {
    *RegistrantsAllOf12;
    *RegistrantsRegistrantsAllOf122;
    *RegistrantsRegistrantsRegistrantsAllOf1223;
    # The registrant's status. 
    # * `approved` - Registrant is approved. 
    # * `denied` - Registrant is denied. 
    # * `pending` - Registrant is waiting for approval
    "approved"|"denied"|"pending" status?;
};

# The base meeting object
public type UserIdMeetingsBody record {
    # Information about the meeting's settings
    UsersuserIdmeetingsSettings settings?;
    # Whether to create a prescheduled meeting via the [GSuite app](https://support.zoom.us/hc/en-us/articles/360020187492-Zoom-for-GSuite-add-on). This **only** supports the meeting `type` value of `2` (scheduled meetings) and `3` (recurring meetings with no fixed time). 
    # * `true` - Create a prescheduled meeting. 
    # * `false` - Create a regular meeting
    @jsondata:Name {value: "pre_schedule"}
    boolean preSchedule = false;
    # The timezone to assign to the `start_time` value. This field is only used for scheduled or recurring meetings with a fixed time.
    #
    # For a list of supported timezones and their formats, see our [timezone list](/docs/api/references/abbreviations/#timezones)
    string timezone?;
    # Determines whether to automatically generate a passcode for the meeting when no passcode is provided and the user's **Require a passcode when scheduling new meetings** setting is enabled. Defaults to `true`. When set to `false`, meetings will only have a passcode if one is explicitly provided
    @jsondata:Name {value: "default_password"}
    boolean defaultPassword = true;
    # The email address or user ID of the user to schedule a meeting for
    @jsondata:Name {value: "schedule_for"}
    string scheduleFor?;
    # The type of meeting.
    # * `1` - An instant meeting. 
    # * `2` - A scheduled meeting. 
    # * `3` - A recurring meeting with no fixed time. 
    # * `8` - A recurring meeting with fixed time. 
    # * `10` - A screen share only meeting
    1|2|3|8|10 'type = 2;
    # The meeting's agenda. This value has a maximum length of 2,000 characters
    @constraint:String {maxLength: 2000}
    string agenda?;
    # The meeting's scheduled duration, in minutes. This field is only used for scheduled meetings (`2`)
    int duration?;
    # Recurrence object. Use this object only for a meeting with type `8`, a recurring meeting with a fixed time. 
    UsersuserIdmeetingsRecurrence recurrence?;
    # The meeting's start time. This field is only used for scheduled or recurring meetings with a fixed time. This supports local time and GMT formats. 
    # * To set a meeting's start time in GMT, use the `yyyy-MM-ddTHH:mm:ssZ` date-time format. For example, `2020-03-31T12:02:00Z`. 
    # * To set a meeting's start time using a specific timezone, use the `yyyy-MM-ddTHH:mm:ss` date-time format and specify the [timezone ID](/docs/api/references/abbreviations/#timezones) in the `timezone` field. If you do not specify a timezone, the `timezone` value defaults to your Zoom account's timezone. You can also use `UTC` for the `timezone` value.
    # **Note:** If no `start_time` is set for a scheduled meeting, the `start_time` is set at the current time and the meeting type changes to an instant meeting, which expires after 30 days
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # The meeting passcode. By default, it can be up to 10 characters in length and may contain alphanumeric characters as well as special characters such as !, @, #, etc.
    #
    # **Note**:
    # - If the account owner or administrator has configured [Passcode Requirement](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0063160#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode **must** meet those requirements. You can retrieve the requirements using the [**Get user settings**](/docs/api/users/#tag/users/GET/users/{userId}/settings) API or the [**Get account settings**](/docs/api/accounts/#tag/accounts/GET/accounts/{accountId}/settings) API.
    # - If the **Require a passcode when scheduling new meetings** user setting is enabled and `default_password` is not explicitly set to `false`, a passcode will be automatically generated when one is not provided.
    # - If the **Require a passcode when scheduling new meetings** setting is enabled and [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, a passcode will be automatically generated when one is not provided
    @constraint:String {maxLength: 10}
    string password?;
    # Information about the meeting's tracking fields
    @jsondata:Name {value: "tracking_fields"}
    UsersuserIdmeetingsTrackingFields[] trackingFields?;
    # The meeting's topic
    @constraint:String {maxLength: 200}
    string topic?;
    # The account admin meeting template ID used to schedule a meeting using a [meeting template](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates). For a list of account admin-provided meeting templates, use the [**List meeting templates**](/docs/api-reference/zoom-api/methods#operation/listMeetingTemplates) API. 
    # * At this time, this field **only** accepts account admin meeting template IDs. 
    # * To enable the account admin meeting templates feature, [contact Zoom support](https://support.zoom.us/hc/en-us)
    @jsondata:Name {value: "template_id"}
    string templateId?;
};

public type InlineResponse20037MeetingActivityLogs record {
    # The operator's activity time
    @jsondata:Name {value: "activity_time"}
    string activityTime;
    # The operator's activity category. 
    # -1 - All Activities. 
    # 0 - Meeting created. 
    # 1 - Meeting started. 
    # 2 - User joined. 
    # 3 - User left. 
    # 4 - Remote control. 
    # 5 - In-meeting chat. 
    # 9 - Meeting ended
    @jsondata:Name {value: "activity_category"}
    string activityCategory;
    # The operator's email
    @jsondata:Name {value: "operator_email"}
    string operatorEmail;
    # The operator's activity detail
    @jsondata:Name {value: "activity_detail"}
    string activityDetail;
    # The meeting number
    @jsondata:Name {value: "meeting_number"}
    string meetingNumber;
    # The operator's display name
    string operator;
};

# The information about meeting and webinar polling
public type MeetingAndWebinarPollingObject8 record {
    # The information about the poll's questions
    MeetingsmeetingIdpollsQuestions[] questions?;
    # Whether meeting participants answer poll questions anonymously. 
    #
    # This value defaults to `false`
    boolean anonymous = false;
    # The type of poll: 
    # * `1` &mdash; Poll. 
    # * `2` &mdash; Advanced Poll. This feature must be enabled in your Zoom account. 
    # * `3` &mdash; Quiz. This feature must be enabled in your Zoom account. 
    #
    # This value defaults to `1`
    @jsondata:Name {value: "poll_type"}
    1|2|3 pollType?;
    # The poll's title, up to 64 characters
    @constraint:String {maxLength: 64}
    string title?;
};

# The information about meeting and webinar polling
public type MeetingAndWebinarPollingObject7 record {
    # Information about the poll's questions
    InlineResponse20019Questions[] questions?;
    # Whether meeting participants answer poll questions anonymously. 
    #
    # This value defaults to `false`
    boolean anonymous = false;
    # The poll's type. 
    # * `1` - Poll. 
    # * `2` - Advanced poll. This feature must be enabled in your Zoom account. 
    # * `3` - Quiz. This feature must be enabled in your Zoom account. 
    #
    # This value defaults to `1`
    @jsondata:Name {value: "poll_type"}
    1|2|3 pollType?;
    # The poll's title, up to 64 characters
    @constraint:String {maxLength: 64}
    string title?;
};

# Registrant
public type MeetingRegistrantMeetingRegistrantAllOf12 record {
    # The registrant's ZIP or postal code
    string zip?;
    # The registrant's two-letter [country code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries)
    string country?;
    # Information about custom questions
    @jsondata:Name {value: "custom_questions"}
    RegistrantsRegistrantsAllOf12_custom_questions[] customQuestions?;
    # The registrant's purchasing time frame. 
    # * `Within a month` 
    # * `1-3 months` 
    # * `4-6 months` 
    # * `More than 6 months` 
    # * `No timeframe`
    @jsondata:Name {value: "purchasing_time_frame"}
    ""|"Within a month"|"1-3 months"|"4-6 months"|"More than 6 months"|"No timeframe" purchasingTimeFrame?;
    # The registrant's address
    string address?;
    # The registrant's questions and comments
    string comments?;
    # The registrant's city
    string city?;
    # The registrant's organization
    string org?;
    # The registrant's last name
    @jsondata:Name {value: "last_name"}
    string lastName?;
    # The registrant's number of employees. 
    # * `1-20` 
    # * `21-50` 
    # * `51-100` 
    # * `101-250` 
    # * `251-500` 
    # * `501-1,000` 
    # * `1,001-5,000` 
    # * `5,001-10,000` 
    # * `More than 10,000`
    @jsondata:Name {value: "no_of_employees"}
    ""|"1-20"|"21-50"|"51-100"|"101-250"|"251-500"|"501-1,000"|"1,001-5,000"|"5,001-10,000"|"More than 10,000" noOfEmployees?;
    # The registrant's industry
    string industry?;
    # The registrant's phone number
    string phone?;
    # The registrant's role in the purchase process. 
    # * `Decision Maker` 
    # * `Evaluator/Recommender` 
    # * `Influencer` 
    # * `Not involved`
    @jsondata:Name {value: "role_in_purchase_process"}
    ""|"Decision Maker"|"Evaluator/Recommender"|"Influencer"|"Not involved" roleInPurchaseProcess?;
    # The registrant's state or province
    string state?;
    # The registrant's first name
    @jsondata:Name {value: "first_name"}
    string firstName;
    # The registrant's job title
    @jsondata:Name {value: "job_title"}
    string jobTitle?;
    # The registrant's email address. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for return value details
    string email;
    # The registrant's status. 
    # * `approved` - Registrant is approved. 
    # * `denied` - Registrant is denied. 
    # * `pending` - Registrant is waiting for approval
    "approved"|"denied"|"pending" status?;
};

# Information about meeting and webinar polling
public type MeetingAndWebinarPollingObject6 record {
    # Information about the poll's questions
    PollsQuestions[] questions?;
    # Whether meeting participants can answer poll questions anonymously. 
    #
    # This value defaults to `false`
    boolean anonymous = false;
    # The type of poll. 
    # * `1` - Poll. 
    # * `2` - Advanced Poll. This feature must be enabled in your Zoom account. 
    # * `3` - Quiz. This feature must be enabled in your Zoom account. 
    #
    # This value defaults to `1`
    @jsondata:Name {value: "poll_type"}
    1|2|3 pollType?;
    # The poll's title, up to 64 characters
    @constraint:String {maxLength: 64}
    string title?;
};

# Approve or block users from specific regions or countries from joining this meeting. 
public type MeetingsmeetingIdSettingsApprovedOrDeniedCountriesOrRegions record {
    # Specify whether to allow users from specific regions to join this meeting, or block users from specific regions from joining this meeting.
    #
    #
    # `approve` - Allow users from specific regions or countries to join this meeting. If this setting is selected, include the approved regions or countries in the `approved_list`.  
    #
    #
    # `deny` - Block users from specific regions or countries from joining this meeting. If this setting is selected, include the approved regions orcountries in the `denied_list`
    "approve"|"deny" method?;
    # `true` - Setting enabled to either allow users or block users from specific regions to join your meetings.
    #
    #
    # `false` - Setting disabled
    boolean enable?;
    # List of countries or regions from where participants can join this meeting. 
    @jsondata:Name {value: "approved_list"}
    string[] approvedList?;
    # List of countries or regions from where participants can not join this meeting. 
    @jsondata:Name {value: "denied_list"}
    string[] deniedList?;
};

# The information about meeting and webinar polling
public type MeetingAndWebinarPollingObject5 record {
    # The information about the poll's questions
    WebinarswebinarIdpollsQuestions[] questions?;
    # Whether meeting participants answer poll questions anonymously. 
    #
    # This value defaults to `false`
    boolean anonymous = false;
    # The type of poll. 
    # * `1` - Poll. 
    # * `2` - Advanced Poll. This feature must be enabled in your Zoom account. 
    # * `3` - Quiz. This feature must be enabled in your Zoom account. 
    #
    # This value defaults to `1`
    @jsondata:Name {value: "poll_type"}
    1|2|3 pollType?;
    # The poll's title, up to 64 characters
    @constraint:String {maxLength: 64}
    string title?;
};

# The information about meeting and webinar polling
public type MeetingAndWebinarPollingObject4 record {
    # The information about the poll's questions
    MeetingsmeetingIdpollsQuestions[] questions?;
    # Whether meeting participants answer poll questions anonymously. 
    #
    # This value defaults to `false`
    boolean anonymous = false;
    # The type of poll: 
    # * `1` &mdash; Poll. 
    # * `2` &mdash; Advanced Poll. This feature must be enabled in your Zoom account. 
    # * `3` &mdash; Quiz. This feature must be enabled in your Zoom account. 
    #
    # This value defaults to `1`
    @jsondata:Name {value: "poll_type"}
    1|2|3 pollType?;
    # The poll's title, up to 64 characters
    @constraint:String {maxLength: 64}
    string title?;
};

# [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar
public type InlineResponse20114SettingsQuestionAndAnswer record {
    # If simulive webinar, 
    #
    # * `true` - allow auto-reply to attendees. 
    #
    # * `false` - don't allow auto-reply to the attendees
    @jsondata:Name {value: "allow_auto_reply"}
    boolean allowAutoReply?;
    # * `true` - Allow participants to send questions without providing their name to the host, co-host, and panelists.
    #
    # * `false` - Do not allow anonymous questions
    @jsondata:Name {value: "allow_anonymous_questions"}
    boolean allowAnonymousQuestions?;
    # Indicate whether you want attendees to be able to view only answered questions, or view all questions.
    #
    # * `only` - Attendees are able to view answered questions only.
    #
    # * `all` - Attendees are able to view all questions submitted in the Q&amp;A
    @jsondata:Name {value: "answer_questions"}
    "only"|"all" answerQuestions?;
    # * `true`: Enable [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
    #
    # * `false`: Disable Q&amp;A for webinar. If not provided, the default value will be based on the user's setting
    boolean enable?;
    # * `true` - Allow participants to submit questions.
    #
    # * `false` - Do not allow submit questions
    @jsondata:Name {value: "allow_submit_questions"}
    boolean allowSubmitQuestions?;
    # * `true` - Attendees can answer questions or leave a comment in the question thread.
    #
    # * `false` - Attendees can not answer questions or leave a comment in the question thread
    @jsondata:Name {value: "attendees_can_comment"}
    boolean attendeesCanComment?;
    # If `allow_auto_reply` = true, the text to be included in the automatic response. 
    @jsondata:Name {value: "auto_reply_text"}
    string autoReplyText?;
    # * `true` - Attendees can click the thumbs up button to bring popular questions to the top of the Q&amp;A window.
    #
    # * `false` - Attendees can not click the thumbs up button on questions
    @jsondata:Name {value: "attendees_can_upvote"}
    boolean attendeesCanUpvote?;
};

public type PollspollIdBody1 MeetingAndWebinarPollingObject2;

public type InlineResponse20062InlineResponse20062AllOf12 record {
    # List of webinar objects
    InlineResponse20062Webinars[] webinars?;
};

# Represents the Queries record for the operation: reportSignInSignOutActivities
public type ReportSignInSignOutActivitiesQueries record {
    # Next page token is used to paginate through large result sets
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # Start date for which you would like to view the activity logs report. Using the `from` and `to` parameters, specify a monthly date range for the report as the API only provides one month worth of data in one request. The specified date range should fall within the last six months
    string 'from?;
    # End date up to which you would like to view the activity logs report
    string to?;
    # The number of records to be returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize?;
};

public type InlineResponse20069Panelists record {
    *PanelistsAllOf11;
    *PanelistsPanelistsAllOf112;
    *PanelistsPanelistsPanelistsAllOf1123;
    *PanelistsPanelistsPanelistsPanelistsAllOf11234;
};

# Occurrence object. This object is only returned for Recurring Webinars
public type InlineResponse2016Occurrences record {
    # Duration
    int duration?;
    # Start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences
    @jsondata:Name {value: "occurrence_id"}
    string occurrenceId?;
    # Occurrence status
    string status?;
};

# Poll List
public type PollList PollListAllOf1;

# Represents the Queries record for the operation: meetings
public type MeetingsQueries record {
    # The page number of the current page in the returned records
    @http:Query {name: "page_number"}
    int pageNumber?;
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # The timezone to assign to the `from` and `to` value. For a list of supported timezones and their formats, see our [timezone list](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)
    string timezone?;
    # The start date
    string 'from?;
    # The end date
    string to?;
    # The type of meeting. 
    # * `scheduled` - All valid previous (unexpired) meetings, live meetings, and upcoming scheduled meetings. 
    # * `live` - All the ongoing meetings. 
    # * `upcoming` - All upcoming meetings, including live meetings. 
    # * `upcoming_meetings` - All upcoming meetings, including live meetings. 
    # * `previous_meetings` - All the previous meetings
    "scheduled"|"live"|"upcoming"|"upcoming_meetings"|"previous_meetings" 'type = "scheduled";
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

public type MeetingsmeetingIdSettingsMeetingInvitees record {
    # The invitee's email address
    string email?;
};

public type InlineResponse20026Questions record {
    @jsondata:Name {value: "question_details"}
    InlineResponse20026QuestionDetails[] questionDetails?;
    # The user's name. If `anonymous` option is enabled for the Q&amp;A, the participant's information is be kept anonymous and the value of `name` field is `Anonymous Attendee`
    string name?;
    # The user's email address. If the user is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details
    string email?;
};

# Represents the Queries record for the operation: reportWebinarParticipants
public type ReportWebinarParticipantsQueries record {
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # The additional query parameters to include. 
    # * `registrant_id` - Include the registrant's ID in the API response. The registrant ID is the webinar participant's unique ID
    @http:Query {name: "include_fields"}
    "registrant_id" includeFields?;
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

public type InlineResponse20064NameTags record {
    # The name tag's accent color
    @jsondata:Name {value: "accent_color"}
    string accentColor?;
    # The name tag's background color
    @jsondata:Name {value: "background_color"}
    string backgroundColor?;
    # The name tag's name
    string name?;
    # The name tag's ID
    string id?;
    # The name tag's text color
    @jsondata:Name {value: "text_color"}
    string textColor?;
    # Whether the file is the default name tag or not
    @jsondata:Name {value: "is_default"}
    boolean isDefault?;
};

public type InlineResponse20064VirtualBackgrounds record {
    # The virtual background's file name
    string name?;
    # The virtual background's file ID
    string id?;
    # Whether the file is the default virtual background file
    @jsondata:Name {value: "is_default"}
    boolean isDefault?;
};

public type MeetingsmeetingIdSettingsGlobalDialInNumbers record {
    # Country code, such as BR
    string country?;
    # Phone number, such as +1 2332357613
    string number?;
    # City of the number, if any, such as Chicago
    string city?;
    # Full name of country, such as Brazil
    @jsondata:Name {value: "country_name"}
    string countryName?;
    # Type of number. 
    "toll"|"tollfree" 'type?;
};

public type UserIdUserIdUserIdOneOf123 "me";

# Panelist base object
public type PanelistsAllOf1 record {
    # The panelist's full name.
    #
    # **Note:** This value cannot exceed more than 12 Chinese characters
    string name?;
    # Panelist's email. See the [email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for return value details
    string email?;
};

public type InlineResponse20059QuestionDetails record {
    # Answer submitted by the user
    string answer?;
    # Date and time when the answer to the poll was submitted
    @jsondata:Name {value: "date_time"}
    string dateTime?;
    # Question asked during the poll
    string question?;
    # Unique identifier of the poll
    @jsondata:Name {value: "polling_id"}
    string pollingId?;
};

# The meeting summary object
public type InlineResponse20012Summaries record {
    # The ID of the user who is set as the meeting host
    @jsondata:Name {value: "meeting_host_id"}
    string meetingHostId?;
    # Meeting topic
    @jsondata:Name {value: "meeting_topic"}
    string meetingTopic?;
    # The summary's start date and time
    @jsondata:Name {value: "summary_start_time"}
    string summaryStartTime?;
    # The date and time at which the meeting summary was last modified
    @jsondata:Name {value: "summary_last_modified_time"}
    string summaryLastModifiedTime?;
    # [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-) - the meeting's unique identifier in **long** format, represented as int64 data type in JSON, also known as the meeting number
    @jsondata:Name {value: "meeting_id"}
    int meetingId?;
    # The meeting host's email address
    @jsondata:Name {value: "meeting_host_email"}
    string meetingHostEmail?;
    # Unique meeting ID. Each meeting instance generates its own meeting UUID. After a meeting ends, a new UUID is generated for the next instance of the meeting. Retrieve a list of UUIDs from past meeting instances using the [**List past meeting instances**](/docs/api-reference/zoom-api/methods#operation/pastMeetings) API. [Double encode](/docs/api/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a `/` or contains `//` in it
    @jsondata:Name {value: "meeting_uuid"}
    string meetingUuid?;
    # The summary's end date and time
    @jsondata:Name {value: "summary_end_time"}
    string summaryEndTime?;
    # The date and time at which the meeting summary was created
    @jsondata:Name {value: "summary_created_time"}
    string summaryCreatedTime?;
    # The meeting's start date and time
    @jsondata:Name {value: "meeting_start_time"}
    string meetingStartTime?;
    # The meeting's end date and time
    @jsondata:Name {value: "meeting_end_time"}
    string meetingEndTime?;
};

public type PollspollIdBody MeetingAndWebinarPollingObject;

# Occurrence object. This object is only returned for recurring meetings
public type InlineResponse20013Occurrences record {
    # Duration
    int duration?;
    # Start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # Occurrence ID. The unique identifier for an occurrence of a recurring meeting. [Recurring meetings](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings) can have a maximum of 50 occurrences
    @jsondata:Name {value: "occurrence_id"}
    string occurrenceId?;
    # Occurrence status. 
    # `available` - Available occurrence.  
    # `deleted` -  Deleted occurrence
    "available"|"deleted" status?;
};

public type InlineResponse20112AllOf1 record {
    # Tracking Field ID
    string id?;
};

public type WebinarswebinarIdregistrantsquestionsCustomQuestions record {
    # An array of answer choices. Can't be used for short answer type
    string[] answers?;
    # Custom question
    string title?;
    # The question-answer type
    "short"|"single_radio"|"single_dropdown"|"multiple" 'type?;
    # State whether or not a registrant is required to answer the custom question
    boolean required?;
};

public type InlineResponse20057AllOf1 record {
    # Array of tracking fields
    @jsondata:Name {value: "tracking_fields"}
    TrackingField3[] trackingFields?;
    # The number of all records available across pages
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
};

# The H.323/SIP device object
public type TheH323SIPDeviceObject3 record {
    # Device protocol:  
    # `H.323` - H.323.  
    # `SIP` - SIP
    "H.323"|"SIP" protocol;
    # Device encryption:  
    # `auto` - auto.  
    # `yes` - yes.  
    # `no` - no
    "auto"|"yes"|"no" encryption;
    # Device IP
    string ip;
    # Device name
    @constraint:String {maxLength: 64}
    string name;
};

# The H.323/SIP device object
public type TheH323SIPDeviceObject2 record {
    # Device protocol:  
    # `H.323` - H.323.  
    # `SIP` - SIP
    "H.323"|"SIP" protocol;
    # Device encryption:  
    # `auto` - auto.  
    # `yes` - yes.  
    # `no` - no
    "auto"|"yes"|"no" encryption;
    # Device IP
    string ip;
    # Device name
    @constraint:String {maxLength: 64}
    string name;
};

# Represents the Queries record for the operation: webinarToken
public type WebinarTokenQueries record {
    # The webinar token type: 
    # * `closed_caption_token` &mdash; The third-party closed caption API token. 
    #
    # This defaults to `closed_caption_token`
    "closed_caption_token" 'type = "closed_caption_token";
};

public type InlineResponse20046CustomAttributes record {
    # Name of the custom attribute
    string name?;
    # Value of the custom attribute
    string value?;
    # Identifier for the custom attribute
    string 'key?;
};

# Tracking Field
public type TrackingField record {
    # Array of recommended values
    @jsondata:Name {value: "recommended_values"}
    string[] recommendedValues?;
    # Tracking Field Visible
    boolean visible?;
    # Label/ Name for the tracking field
    string 'field?;
    # Tracking Field Required
    boolean required?;
};

# The meeting's livestream status
public type LivestreamStatusBody record {
    # The meeting's livestreaming settings
    MeetingsmeetingIdlivestreamstatusSettings settings?;
    # The meeting's livestream status.
    # * `start` - Start a livestream.
    # * `stop` - Stop an ongoing livestream.
    # * `mode` - Control a livestream view at runtime
    "start"|"stop"|"mode" action?;
};

public type WebinarsAllOf1 record {
    # The webinar's duration, in minutes
    int duration?;
    # The webinar's start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # The URL to join the webinar
    @jsondata:Name {value: "join_url"}
    string joinUrl?;
    # The webinar's [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)
    string timezone?;
    # Whether the webinar is `simulive`
    @jsondata:Name {value: "is_simulive"}
    boolean isSimulive?;
    # The webinar's creation time
    @jsondata:Name {value: "created_at"}
    string createdAt?;
    # The webinar's topic
    string topic?;
    # The webinar ID
    int id?;
    # The webinar type. 
    # * `5` - A webinar. 
    # * `6` - A recurring webinar without a fixed time. 
    # * `9` - A recurring webinar with a fixed time
    5|6|9 'type = 5;
    # Webinar description. The agenda length gets truncated to 250 characters when you list all webinars for a user. To view the complete agenda, retrieve details for a single webinar, use the [**Get a webinar**](/docs/api-reference/zoom-api/methods#operation/webinar) API
    string agenda?;
    # The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID
    string uuid?;
    # The host's ID
    @jsondata:Name {value: "host_id"}
    string hostId?;
};

public type InlineResponse20044TelephonyUsage record {
    # [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in &quot;**long**&quot; format(represented as int64 data type in JSON), also known as the meeting number
    @jsondata:Name {value: "meeting_id"}
    int meetingId?;
    # Call leg end time
    @jsondata:Name {value: "end_time"}
    string endTime?;
    # Meeting type
    @jsondata:Name {value: "meeting_type"}
    string meetingType?;
    # User department
    string dept?;
    # Call type
    "toll-free"|"call-out"|"call-in"|"US toll-number"|"global toll-number"|"premium"|"premium call-in"|"Toll" 'type?;
    # Meeting UUID
    string uuid?;
    # The user ID of the meeting host
    @jsondata:Name {value: "host_id"}
    string hostId?;
    # Call leg duration
    int duration?;
    # Call leg start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # Total cost (USD) for Call Out. Calculated as plan rate by duration
    decimal total?;
    # Calling rate for the telephone call
    decimal rate?;
    # Caller's call-in number
    @jsondata:Name {value: "call_in_number"}
    string callInNumber?;
    # The number that is signaled to Zoom. 
    @jsondata:Name {value: "signaled_number"}
    string signaledNumber?;
    # Country name
    @jsondata:Name {value: "country_name"}
    string countryName?;
    # Toll-free telephone number. 
    @jsondata:Name {value: "phone_number"}
    string phoneNumber?;
    # User display name
    @jsondata:Name {value: "host_name"}
    string hostName?;
    # User email
    @jsondata:Name {value: "host_email"}
    string hostEmail?;
};

# The webinar's [sign language interpretation settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar). Make sure to add the language in the web portal in order to use it in the API. See link for details. 
#
# **Note:** If this feature is not enabled on the host's account, this setting will **not** be applied to the webinar
public type WebinarswebinarIdSettingsSignLanguageInterpretation record {
    # Whether to enable [sign language interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar) for the webinar
    boolean enable?;
    # Information about the webinar's sign language interpreters
    MeetingsmeetingIdSettingsSignLanguageInterpretationInterpreters[] interpreters?;
};

# Information about the webinar survey
public type WebinarSurveyObject record {
    # Whether the **Show in the browser when the webinar ends** option is enabled. 
    # * `true` - Enabled. 
    # * `false` - Disabled. 
    #
    # This value defaults to `true`
    @jsondata:Name {value: "show_in_the_browser"}
    boolean showInTheBrowser = true;
    @jsondata:Name {value: "custom_survey"}
    WebinarSurveyObjectCustomSurvey customSurvey?;
    # Whether the **Show the link on the follow-up email** option is enabled. 
    # * `true` - Enabled. 
    # * `false` - Disabled. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "show_in_the_follow_up_email"}
    boolean showInTheFollowUpEmail = false;
    # The link to the third party webinar survey
    @jsondata:Name {value: "third_party_survey"}
    string thirdPartySurvey?;
};

# Represents the Queries record for the operation: deleteWebinarChatMessageById
public type DeleteWebinarChatMessageByIdQueries record {
    # The live webinar chat file's universally unique identifier (UUID), in base64-encoded format. Separate multiple values with commas
    @http:Query {name: "file_ids"}
    string fileIds?;
};

public type InlineResponse201 record {
    # Registrant ID
    @jsondata:Name {value: "registrant_id"}
    string registrantId?;
    # Share URL for the on-demand recording. This includes the &ldquo;tk&rdquo; token for the registrant. This is similar to the token that Zoom returns in the URL response to join a registered meeting, for example: `url?tk=xxxx`. Except while the meeting registration token can be used to join the meeting, this token can only be used to watch the recording
    @jsondata:Name {value: "share_url"}
    string shareUrl?;
    # Meeting Topic
    string topic?;
    # [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in &quot;**long**&quot; format(represented as int64 data type in JSON), also known as the meeting number
    int id?;
};

# Meeting invitation details
public type MeetingInvitation record {
    # Meeting invitation
    string invitation?;
    # A list of SIP phone addresses
    @jsondata:Name {value: "sip_links"}
    string[] sipLinks?;
};

public type InlineResponse200 record {
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.
    #
    # **Note:** if you use `next_page_token` as a parameter, your other request parameters should be changeless to make sure that the large result set is what you want. For example, if your `to` parameter is for a future time, Zoom resets this value to the current time and returns this value in the response body, along with the `next_page_token` value. Use these same `to` and `next_page_token` values in requests for the remaining results set; otherwise you will get an invalid token error
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The total number of returned meeting records
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # The queried start date
    string 'from?;
    # Information about the meeting or webinar
    InlineResponse200Meetings[] meetings?;
    # The queried end date
    string to?;
    # The number of records returned within a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize?;
};

# Represents the Queries record for the operation: recordingGet
public type RecordingGetQueries record {
    # Include fields in the response. Currently, only accepts `download_access_token` to get this token field and value for downloading the meeting's recordings. The `download_access_token` requires **View the recording content** enabled for the role authorizing the account. Use the format `include_fields=download_access_token`
    @http:Query {name: "include_fields"}
    string includeFields?;
    # The `download_access_token` Time to Live (TTL) value. This parameter is only valid if the `include_fields` query parameter contains the value `download_access_token`
    @constraint:Int {minValue: 0, maxValue: 604800}
    int ttl?;
};

# Pagination Object
public type RegistrationList2AllOf1 record {
    # **Deprecated** This field will be deprecated. We will no longer support this field in a future release. Instead, use `next_page_token` for pagination
    #
    # # Deprecated
    @jsondata:Name {value: "page_number"}
    @deprecated
    int pageNumber = 1;
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The total number of all the records available across pages
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # The number of pages returned for the request made
    @jsondata:Name {value: "page_count"}
    int pageCount?;
    # The number of records returned with a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize = 30;
};

# The H.323/SIP device object
public type TheH323SIPDeviceObject1 record {
    # Device protocol.  
    # `H.323` - H.323.  
    # `SIP` - SIP
    "H.323"|"SIP" protocol;
    # Device encryption:  
    # `auto` - auto.  
    # `yes` - yes.  
    # `no` - no
    "auto"|"yes"|"no" encryption;
    # Device IP
    string ip;
    # Device name
    @constraint:String {maxLength: 64}
    string name;
};

# The webinar's [sign language interpretation settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar). Make sure to add the language in the web portal in order to use it in the API. See link for details. 
#
# **Note:** If this feature is not enabled on the host's account, this setting will **not** be applied to the webinar
public type UsersuserIdwebinarsSettingsSignLanguageInterpretation record {
    # Whether to enable [sign language interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar) for the webinar. If not provided, the default value will be based on the user's setting
    boolean enable?;
    # Information about the webinar's sign language interpreters
    UsersuserIdwebinarsSettingsSignLanguageInterpretationInterpreters[] interpreters?;
};

# Pagination object
public type InlineResponse20049AllOf1 record {
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The number of all records available across pages
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # The number of pages returned for the request made
    @jsondata:Name {value: "page_count"}
    int pageCount?;
    # The number of records returned within a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize = 30;
};

public type InlineResponse20043InlineResponse20043AllOf12 record {
    # Array of operation log objects
    @jsondata:Name {value: "operation_logs"}
    InlineResponse20043OperationLogs[] operationLogs?;
};

public type InlineResponse20019Questions record {
    # Whether participants must answer the question. 
    # * `true` - The participant must answer the question. 
    # * `false` - The participant does not need to answer the question. 
    #
    # **Note:** 
    # * When the poll's `type` value is `1` (Poll), this value defaults to `true`. 
    # * When the poll's `type` value is the `2` (Advanced Poll) or `3` (Quiz) values, this value defaults to `false`
    @jsondata:Name {value: "answer_required"}
    boolean answerRequired = false;
    # The allowed minimum number of characters. This field only applies to `short_answer` and `long_answer` polls. You must provide at least a one-character minimum value
    @jsondata:Name {value: "answer_min_character"}
    int answerMinCharacter?;
    # The rating scale's minimum value. This value cannot be less than zero. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_min_value"}
    int ratingMinValue?;
    # The poll question's available answers. This field requires a **minimum** of two answers. 
    #
    # * For `single` and `multiple` polls, you can only provide a maximum of 10 answers. 
    # * For `matching` polls, you can only provide a maximum of 16 answers. 
    # * For `rank_order` polls, you can only provide a maximum of seven answers
    @constraint:Array {minLength: 2}
    string[] answers?;
    # The poll's question and answer type. 
    # * `single` - Single choice. 
    # * `multiple` - Multiple choice. 
    # * `matching` - Matching. 
    # * `rank_order` - Rank order. 
    # * `short_answer` - Short answer. 
    # * `long_answer` - Long answer. 
    # * `fill_in_the_blank` - Fill in the blank. 
    # * `rating_scale` - Rating scale
    "single"|"multiple"|"matching"|"rank_order"|"short_answer"|"long_answer"|"fill_in_the_blank"|"rating_scale" 'type?;
    # The allowed maximum number of characters. This field only applies to `short_answer` and `long_answer` polls. 
    # * For `short_answer` polls, a maximum of 500 characters. 
    # * For `long_answer` polls, a maximum of 2,000 characters
    @jsondata:Name {value: "answer_max_character"}
    int answerMaxCharacter?;
    # The rating scale's maximum value, up to a maximum value of 10. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_max_value"}
    int ratingMaxValue?;
    # The poll question's correct answer(s). This field is required if the poll's `type` value is `3` (Quiz). 
    #
    # For `single` and `matching` polls, this field only accepts one answer
    @jsondata:Name {value: "right_answers"}
    string[] rightAnswers?;
    # Whether to display the radio selection as a drop-down box. 
    # * `true` - Show as a drop-down box. 
    # * `false` - Do not show as a drop-down box. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "show_as_dropdown"}
    boolean showAsDropdown = false;
    # The low score label for the `rating_min_value` field. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_min_label"}
    string ratingMinLabel?;
    # Whether the correct answer is case sensitive. This field only applies to `fill_in_the_blank` polls: 
    # * `true` &mdash; The answer is case-sensitive. 
    # * `false` &mdash; The answer is not case-sensitive. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "case_sensitive"}
    boolean caseSensitive = false;
    # The poll question, up to 1024 characters. 
    #
    # For `fill_in_the_blank` polls, this field is the poll's question. For each value that the user must fill in, ensure that there are the same number of `right_answers` values
    @constraint:String {maxLength: 1024}
    string name?;
    # The high score label for the `rating_max_value` field. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_max_label"}
    string ratingMaxLabel?;
    # The information about the prompt questions. This field only applies to `matching` and `rank_order` polls. You **must** provide a minimum of two prompts, up to a maximum of 10 prompts
    MeetingsmeetingIdbatchPollsPrompts[] prompts?;
};

public type PanelistsAllOf11 record {
    # Panelist's ID
    string id?;
};

# Pagination Object
public type RegistrationList1AllOf1 record {
    # **Deprecated.** This field is deprecated. We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination
    #
    # # Deprecated
    @jsondata:Name {value: "page_number"}
    @deprecated
    int pageNumber = 1;
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The total number of all the records available across pages
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # The number of pages returned for the request made
    @jsondata:Name {value: "page_count"}
    int pageCount?;
    # The number of records returned with a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize = 30;
};

# Represents the Queries record for the operation: webinarUpdate
public type WebinarUpdateQueries record {
    # Webinar occurrence ID. Support change of agenda, start time, duration, and settings `host_video`, `panelist_video`, `hd_video, watermark`, `auto_recording`
    @http:Query {name: "occurrence_id"}
    string occurrenceId?;
};

public type PollsAllOf11 record {
    # The poll ID
    string id?;
    # The status of the webinar poll:
    # `notstart` - Poll not started
    # `started` - Poll started
    # `ended` - Poll ended
    # `sharing` - Sharing poll results
    # `deactivated` - Poll deactivated
    "notstart"|"started"|"ended"|"sharing"|"deactivated" status?;
};

public type InlineResponse20047CustomKeys record {
    # The custom key's value
    @constraint:String {maxLength: 256}
    string value?;
    # The custom key name
    @constraint:String {maxLength: 64}
    string 'key?;
};

# Meeting registrant questions
public type MeetingRegistrantQuestions1 record {
    # Array of custom questions for registrants
    @jsondata:Name {value: "custom_questions"}
    InlineResponse20020CustomQuestions[] customQuestions?;
    # Array of registrant questions
    InlineResponse20020Questions[] questions?;
};

public type InlineResponse2012Prompts record {
    # The question prompt's title
    @jsondata:Name {value: "prompt_question"}
    string promptQuestion?;
    # The question prompt's correct answers
    @jsondata:Name {value: "prompt_right_answers"}
    string[] promptRightAnswers?;
};

public type UsersuserIdwebinarsTrackingFields record {
    # Tracking fields type
    string 'field;
    # Tracking fields value
    string value?;
};

public type ZpaAssignmentBody record {
    # The device's mac address
    @jsondata:Name {value: "mac_address"}
    string macAddress;
    # The device's manufacturer
    string vendor;
    # The extension number
    @jsondata:Name {value: "extension_number"}
    string extensionNumber?;
};

public type MeetingIdOneOf1 int;

public type InlineResponse20024InlineResponse20024AllOf12 record {
    # Array of meeting participant objects
    InlineResponse20024Participants[] participants?;
};

# List of webinars
public type WebinarInstances WebinarInstancesAllOf1;

public type H323SIPDeviceListH323SIPDeviceListAllOf12 record {
    # List of H.323/SIP Device objects
    H323SIPDeviceListDevices[] devices?;
};

public type UserId UserIdOneOf1|UserIdUserIdOneOf12|UserIdUserIdUserIdOneOf123;

# Statistics about archive files, by file extension
public type InlineResponse2001StatisticByFileExtension record {
    # The number of vtt files
    @jsondata:Name {value: "vtt_file_count"}
    int vttFileCount?;
    # The number of m4a files
    @jsondata:Name {value: "m4a_file_count"}
    int m4aFileCount?;
    # The number of mp4 files
    @jsondata:Name {value: "mp4_file_count"}
    int mp4FileCount?;
    # The number of json files
    @jsondata:Name {value: "json_file_count"}
    int jsonFileCount?;
    # The number of txt files
    @jsondata:Name {value: "txt_file_count"}
    int txtFileCount?;
};

# The webinar's [language interpretation settings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0064768). Make sure to add the language in the web portal in order to use it in the API. See link for details. 
#
# **Note:** This feature is only available for certain Webinar add-on, Education, and Business and higher plans. If this feature is not enabled on the host's account, this setting will **not** be applied to the webinar. This is not supported for simulive webinars
public type InlineResponse20063SettingsLanguageInterpretation record {
    # Whether to enable [language interpretation](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0064768) for the webinar
    boolean enable?;
    # Information about the webinar's language interpreters
    MeetingsmeetingIdSettingsLanguageInterpretationInterpreters[] interpreters?;
};

public type InlineResponse20034CloudRecordingStorage record {
    # Date of the usage
    string date?;
    # Free storage
    @jsondata:Name {value: "free_usage"}
    string freeUsage?;
    # Storage used on the date
    string usage?;
    # Paid storage
    @jsondata:Name {value: "plan_usage"}
    string planUsage?;
};

# Name tag information
public type BrandingNameTagsBody record {
    # Whether to set the name tag as the new default for all panelists or not. This includes panelists not currently assigned a default name tag
    @jsondata:Name {value: "set_default_for_all_panelists"}
    boolean setDefaultForAllPanelists = true;
    # The name tag's accent color
    @jsondata:Name {value: "accent_color"}
    string accentColor;
    # The name tag's background color
    @jsondata:Name {value: "background_color"}
    string backgroundColor;
    # The name tag's name.
    #
    # **Note:** This value cannot exceed more than 50 characters
    string name;
    # The name tag's text color
    @jsondata:Name {value: "text_color"}
    string textColor;
    # Whether set the name tag as the default name tag or not
    @jsondata:Name {value: "is_default"}
    boolean isDefault = false;
};

public type InlineResponse20031ActivityLogs record {
    # The client interface type using which the activity was performed
    @jsondata:Name {value: "client_type"}
    string clientType?;
    # The IP address of the user's device
    @jsondata:Name {value: "ip_address"}
    string ipAddress?;
    # Time during which the activity occurred
    string time?;
    # The type of activity. 
    # * `Sign in` &mdash; Sign in activity by user. 
    # * `Sign out` &mdash; Sign out activity by user
    "Sign in"|"Sign out" 'type?;
    # Zoom client version of the user
    string version?;
    # Email address of the user used for the activity
    string email?;
};

public type SipPhonesPhonesBody record {
    # Defined a set of basic components of SIP network architecture, including proxy_server, register_server and transport_protocol
    SipPhonesphonesServer server;
    # The password generated for the user in the SIP account
    string password;
    # The email address of the user to associate with the SIP Phone. Can add `.pc`, `.mobile`, `.pad` at the end of the email, such as `user@example.com.pc`, to add accounts for different platforms for the same user
    @jsondata:Name {value: "user_email"}
    string userEmail;
    @jsondata:Name {value: "server_3"}
    SipPhonesphonesServer server3?;
    # The number to dial for checking voicemail
    @jsondata:Name {value: "voice_mail"}
    string voiceMail?;
    @jsondata:Name {value: "server_2"}
    SipPhonesphonesServer server2?;
    # The phone number associated with the user in the SIP account
    @jsondata:Name {value: "user_name"}
    string userName;
    # The name or IP address of your provider's SIP domain, such as example.com. 
    @constraint:String {maxLength: 64}
    string domain;
    # The displayed phone number associated with the user can be either in extension format or E.164 format. You can specify the displayed number when the dialable number differs from the SIP username
    @jsondata:Name {value: "display_number"}
    string displayNumber?;
    # The authorization name of the user that is registered for SIP phone
    @jsondata:Name {value: "authorization_name"}
    string authorizationName;
    # The number of minutes after which the SIP registration of the Zoom client user expires, and the client will auto register to the SIP server
    @jsondata:Name {value: "registration_expire_time"}
    int registrationExpireTime = 60;
};

# Represents the Queries record for the operation: listSipPhones
public type ListSipPhonesQueries record {
    # **Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination
    @http:Query {name: "page_number"}
    int pageNumber = 1;
    # A user's user name or email address. If this parameter is provided, only the SIP phone system integration enabled for that specific user will be returned. Otherwise, all SIP phones on an account will be returned
    @http:Query {name: "search_key"}
    string searchKey?;
    # The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize?;
};

public type InlineResponse20051Questions record {
    # Array of questions from the user
    @jsondata:Name {value: "question_details"}
    InlineResponse20051QuestionDetails[] questionDetails?;
    # The user ID of the user who asked the question. This value returns blank for external users
    @jsondata:Name {value: "user_id"}
    string userId?;
    # Participant's display name.  
    #
    #
    # If anonymous [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer) option is enabled and if a participant submits the Q&amp;A without providing their name, the value of the `name` field will be &quot;Anonymous Attendee&quot;
    string name?;
    # Participant's email. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details
    string email?;
};

# Send follow-up email to absentees
public type UsersuserIdwebinarsSettingsFollowUpAbsenteesEmailNotification record {
    # * `true` - Send follow-up email to absentees.
    #
    # * `false` - Do not send follow-up email to absentees
    boolean enable?;
    # `0` - No plan.  
    # `1` - Send 1 days after the scheduled end date.  
    # `2` - Send 2 days after the scheduled end date.  
    # `3` - Send 3 days after the scheduled end date.  
    # `4` - Send 4 days after the scheduled end date.  
    # `5` - Send 5 days after the scheduled end date.  
    # `6` - Send 6 days after the scheduled end date.  
    # `7` - Send 7 days after the scheduled end date
    0|1|2|3|4|5|6|7 'type?;
};

public type MeetingRegistrant record {
    *MeetingRegistrantAllOf1;
    *MeetingRegistrantMeetingRegistrantAllOf12;
    *MeetingRegistrantMeetingRegistrantMeetingRegistrantAllOf123;
    # The registrant's registration status.
    # * `approved` - The registrant is approved to join the meeting. 
    # * `pending` - The registrant's registration is pending.
    # * `denied` - The registrant was declined to join the meeting
    "approved"|"pending"|"denied" status?;
};

public type MeetingsAllOf1 record {
    # Meeting duration
    int duration?;
    # Meeting start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # URL using which participants can join a meeting
    @jsondata:Name {value: "join_url"}
    string joinUrl?;
    # Timezone to format the meeting start time. 
    string timezone?;
    # Time of creation
    @jsondata:Name {value: "created_at"}
    string createdAt?;
    # Meeting topic
    string topic?;
    # Meeting ID - also known as the meeting number in long (int64) format
    int id?;
    # Meeting types.  
    # `1` - Instant meeting.  
    # `2` - Scheduled meeting.  
    # `3` - Recurring meeting with no fixed time.  
    # `8` - Recurring meeting with fixed time
    1|2|3|8 'type?;
    # Meeting description. The length of agenda gets truncated to 250 characters when you list all of a user's meetings. To view a meeting's complete agenda, or to retrieve details for a single meeting, use the [**Get a meeting**](/docs/api-reference/zoom-api/methods#operation/meeting) API
    string agenda?;
    # [Personal meeting ID](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi). This field is only returned if PMI was used to schedule the meeting
    string pmi?;
    # Unique Meeting ID. Each meeting instance will generate its own Meeting UUID
    string uuid?;
    # ID of the user who is set as the meeting's host
    @jsondata:Name {value: "host_id"}
    string hostId?;
};

# Recurrence object. Use this object only for a meeting with type `8`, a recurring meeting with a fixed time. 
public type InlineResponse20013Recurrence record {
    # Select the final date when the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with `end_times`.)
    @jsondata:Name {value: "end_date_time"}
    string endDateTime?;
    # Select how many times the meeting should recur before it is canceled. If `end_times` is set to 0, it means there is no end time. The maximum number of recurrences is 60. Cannot be used with `end_date_time`
    @jsondata:Name {value: "end_times"}
    int endTimes = 1;
    # Use this field only if you're scheduling a recurring meeting of type `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.**   
    # `-1` - Last week of the month.  
    # `1` - First week of the month.  
    # `2` - Second week of the month.  
    # `3` - Third week of the month.  
    # `4` - Fourth week of the month
    @jsondata:Name {value: "monthly_week"}
    -1|1|2|3|4 monthlyWeek?;
    # Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. 
    #
    #
    # `1` - Sunday.  
    # `2` - Monday.  
    # `3` - Tuesday.  
    # `4` -  Wednesday.  
    # `5` - Thursday.  
    # `6` - Friday.  
    # `7` - Saturday
    @jsondata:Name {value: "monthly_week_day"}
    1|2|3|4|5|6|7 monthlyWeekDay?;
    # Define the interval when the meeting should recur. For instance, to schedule a meeting that recurs every two months, you must set this field's value as `2` and the `type` parameter's value as `3`. 
    #
    # For a daily meeting, the maximum interval you can set is `99` days. For a weekly meeting the maximum interval that you can set is  of `50` weeks. For a monthly meeting, there is a maximum of `10` months.
    @jsondata:Name {value: "repeat_interval"}
    int repeatInterval?;
    # Use this field only if you're scheduling a recurring meeting of type `3` to state the day in a month when the meeting should recur. The value range is from 1 to 31.
    #
    # For example, for a meeting to recur on 23rd of each month, provide `23` as this field's value and `1` as the `repeat_interval` field's value. Instead, to have the meeting to recur every three months on 23rd of the month, change the `repeat_interval` field's value to `3`
    @jsondata:Name {value: "monthly_day"}
    int monthlyDay = 1;
    # Recurring meeting types. 
    # `1` - Daily.  
    # `2` - Weekly.  
    # `3` - Monthly
    1|2|3 'type;
    # This field is required if you're scheduling a recurring meeting of type `2` to state which days of the week the meeting should repeat.   
    #
    # The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `1` as this field's value.  
    #
    # **Note** To have the meeting occur on multiple days of a week, provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `1,3` as this field's value.
    #
    #
    # `1`  - Sunday.   
    # `2` - Monday.  
    # `3` - Tuesday.  
    # `4` -  Wednesday.  
    # `5` -  Thursday.  
    # `6` - Friday.  
    # `7` - Saturday
    @jsondata:Name {value: "weekly_days"}
    "1"|"2"|"3"|"4"|"5"|"6"|"7" weeklyDays = "1";
};

# Pagination object
public type InlineResponse20028AllOf1 record {
    # The page number of the current results
    @jsondata:Name {value: "page_number"}
    int pageNumber = 1;
    # Use the next page token to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The total number of all the records available across pages
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # The number of pages returned for the request made
    @jsondata:Name {value: "page_count"}
    int pageCount?;
    # The number of records returned with a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize = 30;
};

public type WebinarIdStatusBody record {
    "end" action?;
};

public type UsersuserIdmeetingTemplatesAllOf1 record {
    # If the field is set to `true`, the recurrence meeting template will be saved as the scheduled meeting
    @jsondata:Name {value: "save_recurrence"}
    boolean saveRecurrence = false;
    # The meeting ID - the meeting number in long (int64) format
    @jsondata:Name {value: "meeting_id"}
    int meetingId?;
    # The template name
    string name?;
    # Overwrite an existing meeting template if the template is created from same existing meeting
    boolean overwrite = false;
};

public type InlineResponse20062Webinars WebinarsAllOf1;

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # Provides Auth configurations needed when communicating with a remote HTTP endpoint.
    http:BearerTokenConfig|http:OAuth2RefreshTokenGrantConfig|ApiKeysConfig auth;
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    http:ClientHttp1Settings http1Settings = {};
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings = {};
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 30;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with Redirection
    http:FollowRedirects followRedirects?;
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache = {};
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with cookies
    http:CookieConfig cookieConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits = {};
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Provides settings related to client socket configuration
    http:ClientSocketConfig socketConfig = {};
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
    # Enables relaxed data binding on the client side. When enabled, `nil` values are treated as optional, 
    # and absent fields are handled as `nilable` types. Enabled by default.
    boolean laxDataBinding = true;
|};

public type InlineResponse20036TrackingFields record {
    # The label of the tracking field
    string 'field?;
    # The value of the tracking field
    string value?;
};

# Send reminder email to attendees and panelists
public type UsersuserIdwebinarsSettingsAttendeesAndPanelistsReminderEmailNotification record {
    # * `true`: Send reminder email to attendees and panelists.
    #
    # * `false`: Do not send reminder email to attendees and panelists
    boolean enable?;
    # `0` - No plan.  
    # `1` - Send 1 hour before webinar.  
    # `2` - Send 1 day before webinar.  
    # `3` - Send 1 hour and 1 day before webinar.  
    # `4` - Send 1 week before webinar.  
    # `5` - Send 1 hour and 1 week before webinar.  
    # `6` - Send 1 day and 1 week before webinar.  
    # `7` - Send 1 hour, 1 day and 1 week before webinar
    0|1|2|3|4|5|6|7 'type?;
};

# Webinar object
public type UserIdWebinarsBody record {
    # Create webinar settings
    UsersuserIdwebinarsSettings settings?;
    # The timezone to assign to the `start_time` value. This field is only used for scheduled or recurring webinars with a fixed time.
    #
    # For a list of supported timezones and their formats, see our [timezone list](/docs/api/references/abbreviations/#timezones)
    string timezone?;
    # The previously recorded file's ID for `simulive`
    @jsondata:Name {value: "record_file_id"}
    string recordFileId?;
    # The email address or user ID of the user to schedule a webinar for
    @jsondata:Name {value: "schedule_for"}
    string scheduleFor?;
    # Webinar types.
    # `5` - Webinar.  
    # `6` - Recurring webinar with no fixed time.  
    # `9` - Recurring webinar with a fixed time
    5|6|9 'type = 5;
    # Webinar description
    string agenda?;
    # Webinar duration in minutes. Used for scheduled webinars only
    int duration?;
    # Recurrence object. Use this object only for a webinar of type `9`, a recurring webinar with fixed time. 
    RecurrenceWebinar recurrence?;
    # Webinar start time. We support two formats for `start_time` - local time and GMT.  
    #
    #
    # To set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`.
    #
    # To set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone [ID](/docs/api/references/abbreviations/#timezones) in the `timezone` field OR leave it blank and the timezone set on your Zoom account will be used. You can also set the time as UTC as the timezone field.
    #
    # The `start_time` should only be used for scheduled and / or recurring webinars with fixed time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # The webinar passcode. By default, it can be up to 10 characters in length and may contain alphanumeric characters as well as special characters like !, @, #, and others..
    #
    # **Note**:
    # - If the account owner or administrator has configured [Passcode Requirement](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0063160#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode **must** meet those requirements. You can retrieve the requirements using the [**Get user settings**](/docs/api/users/#tag/users/GET/users/{userId}/settings) API or the [**Get account settings**](/docs/api/accounts/#tag/accounts/GET/accounts/{accountId}/settings) API.
    # - If the **Passcode** user setting is enabled and `default_passcode` is not explicitly set to `false`, a passcode will be automatically generated when one is not provided.
    # - If the **Passcode** setting is enabled and [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, a passcode will be automatically generated when one is not provided
    @constraint:String {maxLength: 10}
    string password?;
    # Determines whether to automatically generate a passcode for the webinar when no passcode is provided and the user's **Passcode** setting is enabled. Defaults to `true`. When set to `false`, webinars will only have a passcode if one is explicitly provided
    @jsondata:Name {value: "default_passcode"}
    boolean defaultPasscode = true;
    # Tracking fields
    @jsondata:Name {value: "tracking_fields"}
    UsersuserIdwebinarsTrackingFields[] trackingFields?;
    # Whether to set the webinar simulive
    @jsondata:Name {value: "is_simulive"}
    boolean isSimulive?;
    # Whether to transition a simulive webinar to live. The host must be present at the time of transition
    @jsondata:Name {value: "transition_to_live"}
    boolean transitionToLive?;
    # Webinar topic
    string topic?;
    # The webinar template ID to schedule a webinar using a [webinar template](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates) or a [admin webinar template](https://support.zoom.us/hc/en-us/articles/8137753618957-Configuring-admin-webinar-templates). For a list of webinar templates, use the [**List webinar templates**](/docs/api/rest/reference/zoom-api/methods#operation/listWebinarTemplates) API
    @jsondata:Name {value: "template_id"}
    string templateId?;
};

# Represents the Queries record for the operation: getArchivedFileStatistics
public type GetArchivedFileStatisticsQueries record {
    # The query start date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `to` query parameter value cannot exceed seven days
    string 'from?;
    # The query end date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `from` query parameter value cannot exceed seven days
    string to?;
};

public type MeetingRegistrantAllOf1 record {
    string id?;
};

# Information about custom questions
public type WebinarswebinarIdregistrantsCustomQuestions record {
    # The custom question's title
    string title?;
    # The custom question's response value. This has a limit of 128 characters
    @constraint:String {maxLength: 128}
    string value?;
};

# Information about the cloud recording registrations
public type CloudRecordingRegistrationList record {
    # **Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination
    #
    # # Deprecated
    @jsondata:Name {value: "page_number"}
    @deprecated
    int pageNumber = 1;
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The total number of all the records available across pages
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # The number of pages returned for the request made
    @jsondata:Name {value: "page_count"}
    int pageCount?;
    # The number of records returned with a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize = 30;
    # Information about the cloud recording registrants
    record {
        string id?;
        string zip?;
        string country?;
        @jsondata:Name {value: "custom_questions"}
        record {string title?; string value?;}[] customQuestions?;
        @jsondata:Name {value: "purchasing_time_frame"}
        ""|"Within a month"|"1-3 months"|"4-6 months"|"More than 6 months"|"No timeframe" purchasingTimeFrame?;
        string address?;
        string comments?;
        string city?;
        string org?;
        @jsondata:Name {value: "last_name"}
        string lastName?;
        @jsondata:Name {value: "no_of_employees"}
        ""|"1-20"|"21-50"|"51-100"|"101-250"|"251-500"|"501-1,000"|"1,001-5,000"|"5,001-10,000"|"More than 10,000" noOfEmployees?;
        string industry?;
        string phone?;
        @jsondata:Name {value: "role_in_purchase_process"}
        ""|"Decision Maker"|"Evaluator/Recommender"|"Influencer"|"Not involved" roleInPurchaseProcess?;
        string state?;
        @jsondata:Name {value: "first_name"}
        string firstName;
        @jsondata:Name {value: "job_title"}
        string jobTitle?;
        string email;
        "approved"|"denied"|"pending" status?;
    }[] registrants?;
};

# Represents the Queries record for the operation: recordingDelete
public type RecordingDeleteQueries record {
    # The recording delete actions:  
    # `trash` - Move recording to trash.  
    # `delete` - Delete recording permanently
    "trash"|"delete" action = "trash";
};

public type RegistrantsQuestionsBody2 WebinarRegistrantQuestions;

public type RegistrantsQuestionsBody1 MeetingRegistrantQuestions;

# Represents the Queries record for the operation: GetZpaDeviceListProfileSettingOfaUser
public type GetZpaDeviceListProfileSettingOfaUserQueries record {
    # The user's ID or email address. For user-level apps, pass `me` as the value for `user_id`
    @http:Query {name: "user_id"}
    string userId?;
};

# Recurrence object. Use this object only for a meeting with type `8`, a recurring meeting with fixed time. 
public type MeetingsmeetingIdRecurrence record {
    # Select the final date when the meeting recurs before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. Cannot be used with `end_times`
    @jsondata:Name {value: "end_date_time"}
    string endDateTime?;
    # Select how many times the meeting should recur before it is canceled. If `end_times` is set to 0, it means there is no end time. The maximum number of recurrences is 60. Cannot be used with `end_date_time`
    @jsondata:Name {value: "end_times"}
    int endTimes = 1;
    # Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.   
    # `-1` - Last week of the month.  
    # `1` - First week of the month.  
    # `2` - Second week of the month.  
    # `3` - Third week of the month.  
    # `4` - Fourth week of the month
    @jsondata:Name {value: "monthly_week"}
    -1|1|2|3|4 monthlyWeek?;
    # Use this field only if you're scheduling a recurring meeting of type `3` to state a specific day in a week when a monthly meeting should recur. To use this field, you must also use the `monthly_week` field. 
    #
    #
    # `1` - Sunday.  
    # `2` - Monday.  
    # `3` - Tuesday.  
    # `4` -  Wednesday.  
    # `5` - Thursday.  
    # `6` - Friday.  
    # `7` - Saturday
    @jsondata:Name {value: "monthly_week_day"}
    1|2|3|4|5|6|7 monthlyWeekDay?;
    # Define the interval when the meeting should recur. For instance, to schedule a meeting that recurs every two months, set this field's value as `2` and the `type` parameter's value to `3`. 
    #
    # For a daily meeting, the maximum interval is `99` days. For a weekly meeting, the maximum interval is `50` weeks. For a monthly meeting, the maximum value is `10` months.
    @jsondata:Name {value: "repeat_interval"}
    int repeatInterval?;
    # Use this field **only if you're scheduling a recurring meeting of type** `3` to state the day in a month when the meeting should recur. The value range is from 1 to 31.
    #
    # For instance, if the meeting should recur on 23rd of each month, provide `23` as this field's value and `1` as the `repeat_interval` field's value. If the meeting should recur every three months on 23rd of the month, change the `repeat_interval` field's value to `3`
    @jsondata:Name {value: "monthly_day"}
    int monthlyDay = 1;
    # Recurrence meeting types. 
    # `1` - Daily.  
    # `2` - Weekly.  
    # `3` - Monthly
    1|2|3 'type;
    # This field is required if you're scheduling a recurring meeting of type `2`, to state which days of the week the meeting should repeat.   
    #
    # Thiw field's value could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `1` as this field's value.  
    #
    # **Note** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `1,3` as this field's value.
    #
    #
    # `1`  - Sunday.   
    # `2` - Monday.  
    # `3` - Tuesday.  
    # `4` -  Wednesday.  
    # `5` -  Thursday.  
    # `6` - Friday.  
    # `7` - Saturday
    @jsondata:Name {value: "weekly_days"}
    "1"|"2"|"3"|"4"|"5"|"6"|"7" weeklyDays = "1";
};

public type UsersuserIdmeetingsSettingsAuthenticationException record {
    # The participant's name
    string name?;
    # The participant's email address
    string email?;
};

# Represents the Queries record for the operation: deleteMeetingChatMessageById
public type DeleteMeetingChatMessageByIdQueries record {
    # The live webinar chat file's universally unique identifier, in base64-encoded format. Separate multiple values with commas
    @http:Query {name: "file_ids"}
    string fileIds?;
};

public type InlineResponse20120AllOf1 record {
    # The webinar poll ID
    string id?;
    # The status of the webinar poll:  
    # `notstart` - Poll not started  
    # `started` - Poll started  
    # `ended` - Poll ended  
    # `sharing` - Sharing poll results
    "notstart"|"started"|"ended"|"sharing" status?;
};

# Update the live stream session's settings.  **Only** settings for a stopped live stream can be updated
public type WebinarswebinarIdlivestreamstatusSettings record {
    # Display the name of the active speaker during a live stream
    @jsondata:Name {value: "active_speaker_name"}
    boolean activeSpeakerName?;
    # Display the live stream's name
    @jsondata:Name {value: "display_name"}
    string displayName?;
};

# Invite links response
public type InviteLinks1 record {
    # The attendee list
    @constraint:Array {maxLength: 500, minLength: 1}
    InviteLinks1Attendees[] attendees?;
};

# Invite Links
public type InviteLinks2 record {
    # The attendees list
    @constraint:Array {maxLength: 500, minLength: 1}
    MeetingsmeetingIdinviteLinksAttendees[] attendees?;
    # The invite link's expiration time, in seconds. 
    #
    # This value defaults to `7200`
    @constraint:Int {minValue: 0, maxValue: 7776000}
    int ttl = 7200;
};

public type InlineResponse20073TrackingSources record {
    # Number of visitors who visited the registration page from this source
    @jsondata:Name {value: "visitor_count"}
    int visitorCount?;
    # Number of registrations made from this source
    @jsondata:Name {value: "registration_count"}
    int registrationCount?;
    # Unique Identifier of the tracking source
    string id?;
    # Tracking URL. The URL that was shared for the registration
    @jsondata:Name {value: "tracking_url"}
    string trackingUrl?;
    # Name of the source (platform) where the registration URL was shared
    @jsondata:Name {value: "source_name"}
    string sourceName?;
};

public type MeetingsmeetingIdSettingsResources record {
    # The permission levels for users to access the whiteboard. 
    # * `editor` - Users with link access can edit the board. 
    # * `commenter` - Users with link access can comment on the board. 
    # * `viewer` - Users with link access can view the board
    @jsondata:Name {value: "permission_level"}
    "editor"|"commenter"|"viewer" permissionLevel = "editor";
    # The resource type
    @jsondata:Name {value: "resource_type"}
    "whiteboard" resourceType?;
    # The resource ID
    @jsondata:Name {value: "resource_id"}
    string resourceId?;
};

public type InlineResponse2017AllOf1 record {
    # The template name
    string name?;
    # The template ID
    string id?;
};

# The pagination object
public type InlineResponse2006InlineResponse2006AllOf12 record {
    # The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The number of all records available across pages
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # The number of pages returned for the request made
    @jsondata:Name {value: "page_count"}
    int pageCount?;
    # The number of records returned within a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize = 30;
};

# List of TSP accounts
public type TSPAccountsList record {
    # List of dial in numbers
    @jsondata:Name {value: "dial_in_numbers"}
    UsersuserIdtspDialInNumbers[] dialInNumbers?;
    # Conference code. A numeric value, with a length less than 16
    @jsondata:Name {value: "conference_code"}
    string conferenceCode;
    # Leader PIN: numeric value, length is less than 16
    @jsondata:Name {value: "leader_pin"}
    string leaderPin;
    # Telephony bridge
    @jsondata:Name {value: "tsp_bridge"}
    "US_TSP_TB"|"EU_TSP_TB" tspBridge?;
};

public type InlineResponse20051AnswerDetails record {
    # Content submission time
    @jsondata:Name {value: "create_time"}
    string createTime?;
    # The user ID of the user who answered the question. This value returns blank for external users
    @jsondata:Name {value: "user_id"}
    string userId?;
    # User display name, including the host or participant. 
    string name?;
    # Type of answer
    "default"|"host_answered_publicly"|"host_answered_privately"|"participant_commented"|"host_answered" 'type = "default";
    # Participant's email. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details
    string email?;
    # The answer from the host or the comment from a participant
    @constraint:String {maxLength: 1024}
    string content?;
};

# Represents the Queries record for the operation: reportUpcomingEvents
public type ReportUpcomingEventsQueries record {
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # The group ID. To get a group ID, use the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API. 
    #
    # **Note:** The API response will only contain meetings where the host is a member of the queried group ID
    @http:Query {name: "group_id"}
    string groupId?;
    # Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once
    string 'from;
    # End date
    string to;
    # The type of event to query. 
    # * `meeting` &mdash; A meeting event. 
    # * `webinar` &mdash; A webinar event. 
    # * `all` &mdash; Both meeting and webinar events.
    #
    # This value defaults to `all`
    "meeting"|"webinar"|"all" 'type = "all";
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

# Represents the Queries record for the operation: reportMeetingactivitylogs
public type ReportMeetingactivitylogsQueries record {
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # An operator's name or email
    @http:Query {name: "search_key"}
    string searchKey?;
    # Activity type. 
    # -1 - All activities. 
    # 0 - Meeting created. 
    # 1 - Meeting started. 
    # 2 - User joined. 
    # 3 - User left. 
    # 4 - Remote control. 
    # 5 - In-meeting chat. 
    # 9 - Meeting ended
    @http:Query {name: "activity_type"}
    "All Activities"|"Meeting Created"|"Meeting Started"|"User Join"|"User Left"|"Remote Control"|"In-Meeting Chat"|"Meeting Ended" activityType = "All Activities";
    # The start date in 'yyyy-MM-dd'format. The date range defined by the `from` and `to` parameters should only be one month, as the report includes only one month's worth of data at once
    string 'from;
    # The end date 'yyyy-MM-dd' format
    string to;
    # The meeting's number
    @http:Query {name: "meeting_number"}
    string meetingNumber?;
    # The number of records to be returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

public type InlineResponse20032BillingReports record {
    # End date of the billing period
    @jsondata:Name {value: "end_date"}
    string endDate?;
    # Total tax amount for this billing period
    @jsondata:Name {value: "tax_amount"}
    string taxAmount?;
    # Total billing amount for this billing period
    @jsondata:Name {value: "total_amount"}
    string totalAmount?;
    # Unique Identifier of the report. Use this ID to retrieve billing invoice via the &quot;Get Billing Invoices API&quot;. 
    #
    # You can also use this ID to export a CSV file of the billing report from this URL: `https://zoom.us/account/report/billing/export?id={id}`
    string id?;
    # Type of the billing report. The value should be either of the following:  
    #
    # `0` - Detailed Billing Reports
    # `1` - Custom Billing Reports
    0|1 'type?;
    # Start date of the billing period
    @jsondata:Name {value: "start_date"}
    string startDate?;
};

# Create webinar settings
public type UsersuserIdwebinarsSettings record {
    # Zoom will open a survey page in attendees' browsers after leaving the webinar
    @jsondata:Name {value: "post_webinar_survey"}
    boolean postWebinarSurvey?;
    # Specify the authentication type for users to join a Webinar with`meeting_authentication` setting set to `true`. The value of this field can be retrieved from the `id` field within `authentication_options` array in the response of [**Get user settings**](/docs/api/rest/reference/zoom-api/methods#operation/userSettings) API
    @jsondata:Name {value: "authentication_option"}
    string authenticationOption?;
    # Set the email language.
    # `en-US`,`de-DE`,`es-ES`,`fr-FR`,`id-ID`,`jp-JP`,`nl-NL`,`pl-PL`,`pt-PT`,`ru-RU`,`tr-TR`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`
    @jsondata:Name {value: "email_language"}
    string emailLanguage?;
    # Whether to allow the host and co-hosts to fully control the mute state of participants. Not supported for simulive webinar. If not provided, the default value will be based on the user's setting
    @jsondata:Name {value: "allow_host_control_participant_mute_state"}
    boolean allowHostControlParticipantMuteState?;
    @jsondata:Name {value: "sign_language_interpretation"}
    UsersuserIdwebinarsSettingsSignLanguageInterpretation signLanguageInterpretation?;
    # Whether to always send 1080p video to attendees. This value defaults to `false`.(Not supported for simulive webinar.)
    @jsondata:Name {value: "send_1080p_video_to_attendees"}
    boolean send1080pVideoToAttendees = false;
    # Show social share buttons on the registration page
    @jsondata:Name {value: "show_share_button"}
    boolean showShareButton?;
    # Default to HD video.(Not supported for simulive webinar.)
    @jsondata:Name {value: "hd_video"}
    boolean hdVideo = false;
    # Registration types. Only used for recurring webinars with a fixed time.  
    # `1` - Attendees register once and can attend any of the webinar sessions.  
    # `2` - Attendees need to register for each session in order to attend.  
    # `3` - Attendees register once and can choose one or more sessions to attend
    @jsondata:Name {value: "registration_type"}
    1|2|3 registrationType = 1;
    # Contact email for registration
    @jsondata:Name {value: "contact_email"}
    string contactEmail?;
    # Allow attendees to join from multiple devices
    @jsondata:Name {value: "allow_multiple_devices"}
    boolean allowMultipleDevices?;
    # Only [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) users can join meeting if the value of this field is set to `true`
    @jsondata:Name {value: "meeting_authentication"}
    boolean meetingAuthentication?;
    # Survey URL for post webinar survey
    @jsondata:Name {value: "survey_url"}
    string surveyUrl?;
    # Alternative host emails or IDs. Multiple values separated by comma
    @jsondata:Name {value: "alternative_hosts"}
    string alternativeHosts?;
    # Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher
    @jsondata:Name {value: "alternative_host_update_polls"}
    boolean alternativeHostUpdatePolls?;
    @jsondata:Name {value: "follow_up_absentees_email_notification"}
    UsersuserIdwebinarsSettingsFollowUpAbsenteesEmailNotification followUpAbsenteesEmailNotification?;
    # Add audio watermark that identifies the participants. Not supported for simulive webinar. If not provided, the default value will be based on the user's setting
    @jsondata:Name {value: "add_audio_watermark"}
    boolean addAudioWatermark?;
    # Determine how participants can join the audio portion of the meeting.(Not supported for simulive webinar.)
    "both"|"telephony"|"voip"|"thirdParty" audio = "both";
    # Enable practice session
    @jsondata:Name {value: "practice_session"}
    boolean practiceSession = false;
    # Only signed-in users with specified domains can join meetings.
    #
    # **This field is deprecated and will not be supported in future.**   
    #
    # Instead of this field, use the `authentication_domains` field for this webinar. 
    #
    # # Deprecated
    @jsondata:Name {value: "enforce_login_domains"}
    @deprecated
    string enforceLoginDomains?;
    # List of global dial-in countries
    @jsondata:Name {value: "global_dial_in_countries"}
    string[] globalDialInCountries?;
    # Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number
    @jsondata:Name {value: "registrants_restrict_number"}
    int registrantsRestrictNumber = 0;
    @jsondata:Name {value: "question_and_answer"}
    UsersuserIdwebinarsSettingsQuestionAndAnswer questionAndAnswer?;
    # Contact name for registration
    @jsondata:Name {value: "contact_name"}
    string contactName?;
    @jsondata:Name {value: "attendees_and_panelists_reminder_email_notification"}
    UsersuserIdwebinarsSettingsAttendeesAndPanelistsReminderEmailNotification attendeesAndPanelistsReminderEmailNotification?;
    # Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field
    @jsondata:Name {value: "registrants_email_notification"}
    boolean registrantsEmailNotification?;
    # The default value is `2`. To enable registration required, set the approval type to `0` or `1`.  Values include:  
    #
    #
    # `0` - Automatically approve.  
    # `1` - Manually approve.  
    # `2` - No registration required
    @jsondata:Name {value: "approval_type"}
    0|1|2 approvalType = 2;
    # Close registration after event date
    #
    # # Deprecated
    @jsondata:Name {value: "close_registration"}
    @deprecated
    boolean closeRegistration?;
    # Automatic recording. Not supported for simulive webinar.   
    # `local` - Record on local.  
    # `cloud` -  Record on cloud.  
    # `none` - Disabled
    @jsondata:Name {value: "auto_recording"}
    "local"|"cloud"|"none" autoRecording = "none";
    # Start video when host joins webinar.(Not supported for simulive webinar.)
    @jsondata:Name {value: "host_video"}
    boolean hostVideo?;
    @jsondata:Name {value: "language_interpretation"}
    UsersuserIdwebinarsSettingsLanguageInterpretation languageInterpretation?;
    # Start video when panelists join webinar. Not supported for simulive webinar
    @jsondata:Name {value: "panelists_video"}
    boolean panelistsVideo?;
    # Add watermark that identifies the viewing participant. Not supported for simulive webinar. If not provided, the default value will be based on the user's setting
    @jsondata:Name {value: "add_watermark"}
    boolean addWatermark?;
    # Only signed-in users can join this meeting. 
    #
    # **This field is deprecated and will not be supported in future.**   
    #
    # Instead of this field, use the `meeting_authentication`, `authentication_option`, or `authentication_domains` fields to establish the authentication mechanism for this Webinar. 
    #
    # # Deprecated
    @jsondata:Name {value: "enforce_login"}
    @deprecated
    boolean enforceLogin?;
    # Make the webinar on-demand. Not supported for simulive webinar
    @jsondata:Name {value: "on_demand"}
    boolean onDemand = false;
    # Whether HD video for attendees is enabled. This value defaults to `false`.(Not supported for simulive webinar.)
    @jsondata:Name {value: "hd_video_for_attendees"}
    boolean hdVideoForAttendees = false;
    # Send invitation email to panelists. If `false`, do not send invitation email to panelists
    @jsondata:Name {value: "panelists_invitation_email_notification"}
    boolean panelistsInvitationEmailNotification?;
    # Require panelists to authenticate to join. If not provided, the default value will be based on the user's setting
    @jsondata:Name {value: "panelist_authentication"}
    boolean panelistAuthentication?;
    # Whether the **Webinar Session Branding** setting is enabled. This setting lets hosts visually customize a webinar by setting a session background. This also lets hosts set Virtual Background and apply name tags to hosts, alternative hosts, panelists, interpreters, and speakers
    @jsondata:Name {value: "enable_session_branding"}
    boolean enableSessionBranding?;
    # Third party audio conference info
    @jsondata:Name {value: "audio_conference_info"}
    string audioConferenceInfo?;
    # Meeting authentication domains. This option allows you to specify the rule so that Zoom users whose email address contains a certain domain can join the webinar. You can either provide multiple comma-separated domains, use a wildcard for listing domains, or use both methods
    @jsondata:Name {value: "authentication_domains"}
    string authenticationDomains?;
    @jsondata:Name {value: "follow_up_attendees_email_notification"}
    UsersuserIdwebinarsSettingsFollowUpAttendeesEmailNotification followUpAttendeesEmailNotification?;
    # Whether to include guest's email addresses in webinars' attendee reports
    @jsondata:Name {value: "email_in_attendee_report"}
    boolean emailInAttendeeReport?;
};

public type PollList1Polls record {
    *PollsAllOf11;
    *MeetingAndWebinarPollingObject8;
};

# Pagination Object
public type InlineResponse20047AllOf1 record {
    # **Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination
    #
    # # Deprecated
    @jsondata:Name {value: "page_number"}
    @deprecated
    int pageNumber = 1;
    # The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The total number of all the records available across pages
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # The number of pages returned for the request made
    @jsondata:Name {value: "page_count"}
    int pageCount?;
    # The number of records returned with a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize = 30;
};

public type BrandingVirtualBackgroundsBody record {
    # Whether to set the virtual background file as the new default for all panelists. This includes panelists not currently assigned a default virtual background
    @jsondata:Name {value: "set_default_for_all_panelists"}
    boolean setDefaultForAllPanelists = true;
    # Whether set the file as the default virtual background file
    boolean default = false;
    # The vvirtual background's file path, in binary format
    record {byte[] fileContent; string fileName;} file;
};

public type InlineResponse20114TrackingFields record {
    # Tracking fields type
    string 'field?;
    # Tracking fields value
    string value?;
};

public type MeetingInstancesMeetings MeetingsAllOf12;

# [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar
public type InlineResponse20063SettingsQuestionAndAnswer record {
    # If simulive webinar, 
    #
    # * `true` - allow auto-reply to attendees. 
    #
    # * `false` - don't allow auto-reply to the attendees
    @jsondata:Name {value: "allow_auto_reply"}
    boolean allowAutoReply?;
    # * `true` - Allow participants to send questions without providing their name to the host, co-host, and panelists.
    #
    # * `false` - Do not allow anonymous questions
    @jsondata:Name {value: "allow_anonymous_questions"}
    boolean allowAnonymousQuestions?;
    # Indicate whether you want attendees to be able to view answered questions only or view all questions.
    #
    # * `only` - Attendees are able to view answered questions only.
    #
    # *  `all` - Attendees are able to view all questions submitted in the Q&amp;A
    @jsondata:Name {value: "answer_questions"}
    "only"|"all" answerQuestions?;
    # * `true` - Enable [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
    #
    # * `false` - Disable Q&amp;A for webinar
    boolean enable?;
    # * `true` - Allow participants to submit questions.
    #
    # * `false` - Do not allow submit questions
    @jsondata:Name {value: "allow_submit_questions"}
    boolean allowSubmitQuestions?;
    # * `true` - Attendees can answer questions or leave a comment in the question thread.
    #
    # * `false` - Attendees can not answer questions or leave a comment in the question thread
    @jsondata:Name {value: "attendees_can_comment"}
    boolean attendeesCanComment?;
    # If `allow_auto_reply` = true, the text to be included in the automatic response. 
    @jsondata:Name {value: "auto_reply_text"}
    string autoReplyText?;
    # * `true` - Attendees can click the thumbs up button to bring popular questions to the top of the Q&amp;A window.
    #
    # * `false` - Attendees can not click the thumbs up button on questions
    @jsondata:Name {value: "attendees_can_upvote"}
    boolean attendeesCanUpvote?;
};

# The meeting's [sign language interpretation settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar). Make sure to add the language in the web portal in order to use it in the API. See link for details. 
#
# **Note:** If this feature is not enabled on the host's account, this setting will **not** be applied to the meeting
public type InlineResponse20013SettingsSignLanguageInterpretation record {
    # Whether to enable [sign language interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar) for the meeting
    boolean enable?;
    # Information about the meeting's sign language interpreters
    UsersuserIdwebinarsSettingsSignLanguageInterpretationInterpreters[] interpreters?;
};

# [Q&amp;A](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065237) for meeting
public type MeetingsmeetingIdSettingsQuestionAndAnswer record {
    # Indicate whether you want attendees to be able to view answered questions only or view all questions.
    #
    # * `answered` - Attendees are able to view answered questions only.
    #
    # *  `all` - Attendees are able to view all questions submitted in the Q&amp;A
    @jsondata:Name {value: "question_visibility"}
    "answered"|"all" questionVisibility?;
    # * `true` - Allow participants to send questions without providing their name to the host, co-host, and panelists..
    #
    # * `false` - Do not allow anonymous questions.(Not supported for simulive meeting.)
    @jsondata:Name {value: "allow_anonymous_questions"}
    boolean allowAnonymousQuestions?;
    # * `true` - Enable [Q&amp;A](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065237) for meeting.
    #
    # * `false` - Disable Q&amp;A for meeting
    boolean enable?;
    # * `true`: Allow participants to submit questions.
    #
    # * `false`: Do not allow submit questions
    @jsondata:Name {value: "allow_submit_questions"}
    boolean allowSubmitQuestions?;
    # * `true` - Attendees can answer questions or leave a comment in the question thread.
    #
    # * `false` - Attendees can not answer questions or leave a comment in the question thread
    @jsondata:Name {value: "attendees_can_comment"}
    boolean attendeesCanComment?;
    # * `true` - Attendees can click the thumbs up button to bring popular questions to the top of the Q&amp;A window.
    #
    # * `false` - Attendees can not click the thumbs up button on questions
    @jsondata:Name {value: "attendees_can_upvote"}
    boolean attendeesCanUpvote?;
};

# List of users
public type RegistrationList record {
    *RegistrationListAllOf1;
    *RegistrationListRegistrationListAllOf12;
};

public type MeetingsmeetingIdSettingsCustomKeys record {
    # Value of the custom key associated with the user
    @constraint:String {maxLength: 256}
    string value?;
    # Custom key associated with the user
    @constraint:String {maxLength: 64}
    string 'key?;
};

public type PollList1AllOf1 record {
    # The number of all records available across pages
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # An array of polls
    PollList1Polls[] polls?;
};

public type InlineResponse2002PhysicalFiles record {
    # The physical file's name
    @jsondata:Name {value: "file_name"}
    string fileName?;
    # The physical file's unique ID
    @jsondata:Name {value: "file_id"}
    string fileId?;
    # The URL to download the the archive file. 
    #
    # **OAuth apps** 
    #
    # If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](/docs/integrations/oauth/) to download the file. For example: 
    #
    # `https://{{base-domain}}/rec/archive/attached/download/xxx--header 'Authorization: Bearer {{OAuth-access-token}}'` 
    @jsondata:Name {value: "download_url"}
    string downloadUrl?;
    # The physical file's size, in bytes
    @jsondata:Name {value: "file_size"}
    int fileSize?;
};

# Information about the registrant
public type MeetingsmeetingIdrecordingsregistrantsAllOf1 record {
    # The registrant's ZIP or postal code
    string zip?;
    # The registrant's two-letter [country code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries)
    string country?;
    # Information about custom questions
    @jsondata:Name {value: "custom_questions"}
    MeetingsmeetingIdrecordingsregistrantsCustomQuestions[] customQuestions?;
    # The registrant's purchasing time frame. 
    # * `Within a month` 
    # * `1-3 months` 
    # * `4-6 months` 
    # * `More than 6 months` 
    # * `No timeframe`
    @jsondata:Name {value: "purchasing_time_frame"}
    ""|"Within a month"|"1-3 months"|"4-6 months"|"More than 6 months"|"No timeframe" purchasingTimeFrame?;
    # The registrant's address
    string address?;
    # The registrant's questions and comments
    string comments?;
    # The registrant's city
    string city?;
    # The registrant's organization
    string org?;
    # The registrant's last name
    @jsondata:Name {value: "last_name"}
    string lastName?;
    # The registrant's number of employees. 
    # * `1-20` 
    # * `21-50` 
    # * `51-100` 
    # * `101-250` 
    # * `251-500` 
    # * `501-1,000` 
    # * `1,001-5,000` 
    # * `5,001-10,000` 
    # * `More than 10,000`
    @jsondata:Name {value: "no_of_employees"}
    ""|"1-20"|"21-50"|"51-100"|"101-250"|"251-500"|"501-1,000"|"1,001-5,000"|"5,001-10,000"|"More than 10,000" noOfEmployees?;
    # The registrant's industry
    string industry?;
    # The registrant's phone number
    string phone?;
    # The registrant's role in the purchase process. 
    # * `Decision Maker` 
    # * `Evaluator/Recommender` 
    # * `Influencer` 
    # * `Not involved`
    @jsondata:Name {value: "role_in_purchase_process"}
    ""|"Decision Maker"|"Evaluator/Recommender"|"Influencer"|"Not involved" roleInPurchaseProcess?;
    # The registrant's state or province
    string state?;
    # The registrant's first name
    @jsondata:Name {value: "first_name"}
    string firstName;
    # The registrant's job title
    @jsondata:Name {value: "job_title"}
    string jobTitle?;
    # The registrant's email address. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for return value details
    @constraint:String {maxLength: 128}
    string email;
    # The registrant's status. 
    # * `approved` - Registrant is approved. 
    # * `denied` - Registrant is denied. 
    # * `pending` - Registrant is waiting for approval
    "approved"|"denied"|"pending" status?;
};

public type WebinarRegistrantWebinarRegistrantWebinarRegistrantAllOf123 record {
    @jsondata:Name {value: "join_url"}
    string joinUrl?;
    @jsondata:Name {value: "create_time"}
    string createTime?;
    string status?;
};

# Enable customers to leverage services that require customization of the FROM header to identify the caller. Use this field if you pass the `participant.invite.room_system_callout` value for the `method` field and the `h323` value for the `call_type` field
public type LiveMeetingsmeetingIdeventsParamsH323Headers record {
    # Custom name that will be used within the h323 Header
    @jsondata:Name {value: "from_display_name"}
    string fromDisplayName?;
    # Custom remote name that will be used within the meeting
    @jsondata:Name {value: "to_display_name"}
    string toDisplayName?;
};

public type MeetingsmeetingIdregistrantsquestionsQuestions record {
    # Indicates whether or not the displayed fields are required to be filled out by registrants
    boolean required?;
    # The question's field name
    @jsondata:Name {value: "field_name"}
    "last_name"|"address"|"city"|"country"|"zip"|"state"|"phone"|"industry"|"org"|"job_title"|"purchasing_time_frame"|"role_in_purchase_process"|"no_of_employees"|"comments" fieldName?;
};

public type UsersuserIdmeetingsTrackingFields record {
    # The tracking field's label
    string 'field;
    # The tracking field's value
    string value?;
};

# Represents the Queries record for the operation: Getzdmgroupinfo
public type GetzdmgroupinfoQueries record {
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period token is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # The total number of records returned from a single API call.
    # Default - 30.
    # Max -100
    @http:Query {name: "page_size"}
    int pageSize?;
};

public type TSPAccountDialInNumbers record {
    # Dial-in number: length is less than 16
    @constraint:String {maxLength: 16, minLength: 1}
    string number?;
    # Country code
    @constraint:String {maxLength: 6}
    string code?;
    # Country Label, if passed, will display in place of code
    @jsondata:Name {value: "country_label"}
    string countryLabel?;
    # Dial-in number types:  
    # `toll` - Toll number.  
    # `tollfree` -Toll free number.   
    # `media_link` - Media link phone number. This is used for PSTN integration instead of a paid bridge number
    "toll"|"tollfree"|"media_link" 'type?;
};

public type InlineResponse20013SettingsGlobalDialInNumbers record {
    # Country code, such as BR
    string country?;
    # Phone number, such as +1 2332357613
    string number?;
    # City of the number, if any. For example, Chicago
    string city?;
    # Full name of country, such as Brazil
    @jsondata:Name {value: "country_name"}
    string countryName?;
    # Type of number. 
    "toll"|"tollfree" 'type?;
};

public type InlineResponse20034InlineResponse20034AllOf12 record {
    # Array of cloud usage objects
    @jsondata:Name {value: "cloud_recording_storage"}
    InlineResponse20034CloudRecordingStorage[] cloudRecordingStorage?;
};

# Information about the webinar survey
public type WebinarSurveyObject1 record {
    # Whether the **Show in the browser when the webinar ends** option is enabled. 
    # * `true` - Enabled. 
    # * `false` - Disabled. 
    #
    # This value defaults to `true`
    @jsondata:Name {value: "show_in_the_browser"}
    boolean showInTheBrowser = true;
    @jsondata:Name {value: "custom_survey"}
    WebinarswebinarIdsurveyCustomSurvey customSurvey?;
    # Whether the **Show the link on the follow-up email** option is enabled. 
    # * `true` - Enabled. 
    # * `false` - Disabled. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "show_in_the_follow_up_email"}
    boolean showInTheFollowUpEmail = false;
    # The link to the third party webinar survey
    @jsondata:Name {value: "third_party_survey"}
    string thirdPartySurvey?;
};

# Represents the Queries record for the operation: reportCloudRecording
public type ReportCloudRecordingQueries record {
    # The group ID. To get a group ID, use the [**List groups**](/api-reference/zoom-api/methods#operation/groups) API. 
    #
    # **Note:** The API response will only contain users who are members of the queried group ID
    @http:Query {name: "group_id"}
    string groupId?;
    # Start date in 'yyyy-mm-dd' format. The date range defined by the &quot;from&quot; and &quot;to&quot; parameters should only be one month as the report includes only one month worth of data at once
    string 'from;
    # End date
    string to;
};

public type InlineResponse2002ArchiveFiles record {
    # The file path to the on-premise account archive file. 
    #
    # **Note:** The API only returns this field for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). It does **not** return the `download_url` field
    @jsondata:Name {value: "file_path"}
    string filePath?;
    # The leave time for the generated recording file. If this value is returned when the individual value is true, then it is the recording file's participant leave time. When the individual value is false, it returns the leave time for the archiving gateway
    @jsondata:Name {value: "participant_leave_time"}
    string participantLeaveTime;
    # The region where the file is stored. This field returns only `Enable Distributed Compliance Archiving` op feature is enabled
    @jsondata:Name {value: "storage_location"}
    "US"|"AU"|"BR"|"CA"|"EU"|"IN"|"JP"|"SG"|"CH" storageLocation?;
    # Whether the archive file is an individual recording file. 
    # * `true` - An individual recording file. 
    # * `false` - An entire meeting file
    boolean individual;
    # The archived file's encryption fingerprint, using the SHA256 hash algorithm
    @jsondata:Name {value: "encryption_fingerprint"}
    string encryptionFingerprint;
    # The number of `TXT` or `JSON` file messages. This field returns only when the `file_extension` is `JSON` or `TXT`
    @jsondata:Name {value: "number_of_messages"}
    int numberOfMessages?;
    # Whether to auto delete the archived file.
    #
    # **Prerequisites:** 
    #
    # * The "Tag Archiving Files for Deletion" feature must be enabled in OP. Contact [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003) to open
    @jsondata:Name {value: "auto_delete"}
    boolean autoDelete?;
    # The join time for the generated recording file. If this value is returned when the individual value is true, then it is the recording file's participant join time. When the individual value is false, it returns the join time for the archiving gateway
    @jsondata:Name {value: "participant_join_time"}
    string participantJoinTime;
    # The archived file's size, in bytes
    @jsondata:Name {value: "file_size"}
    int fileSize;
    # The archive file's type. 
    # * `MP4` - Video file. 
    # * `M4A` - Audio-only file. 
    # * `CHAT` - A TXT file containing in-meeting chat messages. 
    # * `CC` - A file containing the closed captions of the recording, in VTT file format. 
    # * `CHAT_MESSAGE` - A JSON file encoded in base64 format containing chat messages. The file also includes waiting room chats, deleted messages, meeting emojis and non-verbal feedback.  
    # *  `TRANSCRIPT` - A JSON file include audio transcript wording. 
    # * `SUB_GROUP_MEMBER_LOG` - A JSON file containing records of members entering and leaving the subgroup
    @jsondata:Name {value: "file_type"}
    "MP4"|"M4A"|"CHAT"|"CC"|"CHAT_MESSAGE"|"TRANSCRIPT"|"SUB_GROUP_MEMBER_LOG" fileType;
    # The archive file's recording type. 
    # * `shared_screen_with_speaker_view` 
    # * `audio_only` 
    # * `chat_file` 
    # * `closed_caption` 
    # * `chat_message` 
    # * `audio_transcript` 
    #
    # For more information, read our [Managing and sharing cloud recordings](https://support.zoom.us/hc/en-us/articles/205347605-Managing-and-sharing-cloud-recordings#h_9898497b-e736-4980-a749-d55608f10773) documentation
    @jsondata:Name {value: "recording_type"}
    "shared_screen_with_speaker_view"|"audio_only"|"chat_file"|"closed_caption"|"chat_message"|"audio_transcript" recordingType;
    # The URL to download the the archive file. 
    #
    # **OAuth apps** 
    #
    # If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](/docs/integrations/oauth/) to download the file. For example: 
    #
    # `https://{{base-domain}}/rec/archive/download/xxx--header 'Authorization: Bearer {{OAuth-access-token}}'` 
    #
    # **Note:** This field does **not** return for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). Instead, this API will return the `file_path` field
    @jsondata:Name {value: "download_url"}
    string downloadUrl;
    # The archived file's extension
    @jsondata:Name {value: "file_extension"}
    string fileExtension;
    # The archive file's unique ID
    string id;
    # The individual recording file's participant email address. This value is returned when the `individual` value is `true`. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](/docs/api/using-zoom-apis/#email-address-display-rules) for details
    @jsondata:Name {value: "participant_email"}
    string participantEmail?;
    # The archived file's processing status. 
    # * `completed` - The processing of the file is complete. 
    # * `processing` - The file is processing. 
    # * `failed` - The processing of the file failed
    "completed"|"processing"|"failed" status;
};

# Information about the registrant
public type WebinarswebinarIdregistrantsAllOf1 record {
    # The registrant's ZIP or postal code
    string zip?;
    # The registrant's two-letter [country code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries)
    string country?;
    # Information about custom questions
    @jsondata:Name {value: "custom_questions"}
    WebinarswebinarIdregistrantsCustomQuestions[] customQuestions?;
    # The registrant's purchasing time frame: 
    # * `Within a month` 
    # * `1-3 months` 
    # * `4-6 months` 
    # * `More than 6 months` 
    # * `No timeframe`
    @jsondata:Name {value: "purchasing_time_frame"}
    ""|"Within a month"|"1-3 months"|"4-6 months"|"More than 6 months"|"No timeframe" purchasingTimeFrame?;
    # The registrant's address
    string address?;
    # The registrant's questions and comments
    string comments?;
    # The registrant's city
    string city?;
    # The registrant's organization
    string org?;
    # The registrant's last name
    @jsondata:Name {value: "last_name"}
    string lastName?;
    # The registrant's number of employees: 
    # * `1-20` 
    # * `21-50` 
    # * `51-100` 
    # * `101-500` 
    # * `500-1,000` 
    # * `1,001-5,000` 
    # * `5,001-10,000` 
    # * `More than 10,000`
    @jsondata:Name {value: "no_of_employees"}
    ""|"1-20"|"21-50"|"51-100"|"101-500"|"500-1,000"|"1,001-5,000"|"5,001-10,000"|"More than 10,000" noOfEmployees?;
    # The registrant's industry
    string industry?;
    # The registrant's phone number
    string phone?;
    # The registrant's role in the purchase process: 
    # * `Decision Maker` 
    # * `Evaluator/Recommender` 
    # * `Influencer` 
    # * `Not involved`
    @jsondata:Name {value: "role_in_purchase_process"}
    ""|"Decision Maker"|"Evaluator/Recommender"|"Influencer"|"Not involved" roleInPurchaseProcess?;
    # The registrant's state or province
    string state?;
    # The registrant's first name
    @jsondata:Name {value: "first_name"}
    string firstName;
    # The registrant's job title
    @jsondata:Name {value: "job_title"}
    string jobTitle?;
    # The registrant's email address
    @constraint:String {maxLength: 128}
    string email;
};

# Defined a set of basic components of SIP network architecture, including proxy_server, register_server and transport_protocol
public type SipPhonesphonesServer record {
    # The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server
    @jsondata:Name {value: "proxy_server"}
    string proxyServer?;
    # The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address
    @jsondata:Name {value: "register_server"}
    string registerServer?;
    # Protocols supported by the SIP provider.  
    # The value must be either `UDP`, `TCP`, `TLS`, `AUTO`
    @jsondata:Name {value: "transport_protocol"}
    "UDP"|"TCP"|"TLS"|"AUTO" transportProtocol?;
};

# TSP account of the user
public type TSPAccount record {
    # List of dial in numbers
    @jsondata:Name {value: "dial_in_numbers"}
    TSPAccountDialInNumbers[] dialInNumbers?;
    # Conference code: numeric value, length is less than 16
    @jsondata:Name {value: "conference_code"}
    string conferenceCode;
    # Leader PIN. A numeric value, with a length of less than 16
    @jsondata:Name {value: "leader_pin"}
    string leaderPin;
    # The TSP account's ID
    string id?;
    # Telephony bridge
    @jsondata:Name {value: "tsp_bridge"}
    "US_TSP_TB"|"EU_TSP_TB" tspBridge?;
};

public type InlineResponse20028Meetings MeetingsAllOf1;

public type InlineResponse20044AllOf1 record {
    # The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The total number of all the records available across pages. This field does **not** return if the `query_date_type` parameter is the `meeting_start_time` or `meeting_end_time` value
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # Start date for this report
    string 'from?;
    # End date for this report
    string to?;
    # The number of pages returned for the request made. This field does **not** return if the `query_date_type` parameter is the `meeting_start_time` or `meeting_end_time` value
    @jsondata:Name {value: "page_count"}
    int pageCount?;
    # The number of records returned with a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize?;
};

public type WebinarInstancesAllOf1 record {
    # List of ended webinar instances
    WebinarInstancesWebinars[] webinars?;
};

public type InlineResponse2018SettingsGlobalDialInNumbers record {
    # The country code, such as BR
    string country?;
    # A phone number, such as +1 2332357613
    string number?;
    # City of the number, such as Chicago
    string city?;
    # Full name of country, such as Brazil
    @jsondata:Name {value: "country_name"}
    string countryName?;
    # Type of number
    "toll"|"tollfree" 'type?;
};

# The device policy
public type InlineResponse2009Policy record {
    @jsondata:Name {value: "call_control"}
    InlineResponse2009PolicyCallControl callControl?;
    @jsondata:Name {value: "hot_desking"}
    InlineResponse2009PolicyHotDesking hotDesking?;
};

public type UserIdMeetingTemplatesBody UsersuserIdmeetingTemplatesAllOf1;

public type InlineResponse20061Templates record {
    # The webinar template's name
    string name?;
    # The webinar template's ID
    string id?;
    # The webinar template type.  `1`: Webinar template    `2`: Admin webinar template
    int 'type?;
};

public type MeetingsmeetingIdinviteLinksAttendees record {
    # Whether to disable participant audio when joining the meeting. If not provided or set to `false`, the participant audio will follow the meeting's default settings
    @jsondata:Name {value: "disable_audio"}
    boolean disableAudio = false;
    # User display name
    @constraint:String {maxLength: 64}
    string name;
    # Whether to disable participant video when joining the meeting. If not provided or set to `false`, the participant video will follow the meeting's default settings
    @jsondata:Name {value: "disable_video"}
    boolean disableVideo = false;
};

# The list of approved or blocked users from specific countries or regions who can join the meeting
public type UsersuserIdmeetingsSettingsApprovedOrDeniedCountriesOrRegions record {
    # Whether to allow or block users from specific countries or regions.
    # * `approve` - Allow users from specific countries or regions to join the meeting. If you select this setting, include the approved countries or regions in the `approved_list` field. 
    # * `deny` - Block users from specific countries or regions from joining the meeting. If you select this setting, include the blocked countries or regions in the `denied_list` field
    "approve"|"deny" method?;
    # Whether to enable the [**Approve or block entry for users from specific countries/regions**](https://support.zoom.us/hc/en-us/articles/360060086231-Approve-or-block-entry-for-users-from-specific-countries-regions) setting
    boolean enable?;
    # The list of approved countries or regions
    @jsondata:Name {value: "approved_list"}
    string[] approvedList?;
    # The list of blocked countries or regions
    @jsondata:Name {value: "denied_list"}
    string[] deniedList?;
};

public type InlineResponse200ArchiveFiles record {
    # The file path to the on-premise account archive file. 
    #
    # **Note:** The API only returns this field for [Zoom on-premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). It does **not** return the `download_url` field
    @jsondata:Name {value: "file_path"}
    string filePath?;
    # The leave time for the generated recording file. If this value is returned when the individual value is `true`, it is the recording file's participant leave time. When the individual value is `false`, it returns the leave time for the archiving gateway
    @jsondata:Name {value: "participant_leave_time"}
    string participantLeaveTime;
    # The region where the file is stored. This field returns only `Enable Distributed Compliance Archiving` op feature is enabled
    @jsondata:Name {value: "storage_location"}
    "US"|"AU"|"BR"|"CA"|"EU"|"IN"|"JP"|"SG"|"CH" storageLocation?;
    # Whether the archive file is an individual recording file. 
    # * `true` - An individual recording file. 
    # * `false` - An entire meeting file
    boolean individual;
    # The archived file's encryption fingerprint, using the SHA256 hash algorithm
    @jsondata:Name {value: "encryption_fingerprint"}
    string encryptionFingerprint;
    # The number of `TXT` or `JSON` file messages. This field returns only when the `file_extension` is `JSON` or `TXT`
    @jsondata:Name {value: "number_of_messages"}
    int numberOfMessages?;
    # Whether to auto delete the archived file.
    #
    # **Prerequisites:** 
    #
    # Enable the "Tag Archiving Files for Deletion" feature in OP. Contact [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003) to open
    @jsondata:Name {value: "auto_delete"}
    boolean autoDelete?;
    # The join time for the generated recording file. If this value is returned when the individual value is `true`, it is the recording file's participant join time. When the individual value is `false`, it returns the join time for the archiving gateway
    @jsondata:Name {value: "participant_join_time"}
    string participantJoinTime;
    # The archived file's size, in bytes
    @jsondata:Name {value: "file_size"}
    int fileSize;
    # The archive file's type. 
    # * `MP4` - Video file. 
    # * `M4A` - Audio-only file. 
    # * `CHAT` - A TXT file containing in-meeting chat messages. 
    # * `CC` - A file containing the closed captions of the recording, in VTT file format. 
    # *  `CHAT_MESSAGE` - A JSON file encoded in base64 format containing chat messages. The file also includes waiting room chats, deleted messages, meeting emojis and non-verbal feedback. 
    # *  `TRANSCRIPT` - A JSON file include audio transcript wording. 
    # * `SUB_GROUP_MEMBER_LOG` - A json file containing records of members entering and leaving the subgroup
    @jsondata:Name {value: "file_type"}
    "MP4"|"M4A"|"CHAT"|"CC"|"CHAT_MESSAGE"|"TRANSCRIPT"|"SUB_GROUP_MEMBER_LOG" fileType;
    # The archive file's recording type. 
    # * `shared_screen_with_speaker_view` 
    # * `audio_only` 
    # * `chat_file` 
    # * `closed_caption` 
    # * `chat_message` 
    # * `audio_transcript` 
    #
    # For more information, read our [Managing and sharing cloud recordings](https://support.zoom.us/hc/en-us/articles/205347605-Managing-and-sharing-cloud-recordings#h_9898497b-e736-4980-a749-d55608f10773) documentation
    @jsondata:Name {value: "recording_type"}
    "shared_screen_with_speaker_view"|"audio_only"|"chat_file"|"closed_caption"|"chat_message"|"audio_transcript" recordingType;
    # The URL to download the the archive file. 
    #
    # **OAuth apps** 
    #
    # If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](/docs/integrations/oauth/) to download the file. For example, `https://{{base-domain}}/rec/archive/download/xxx--header 'Authorization: Bearer {{OAuth-access-token}}'` 
    #
    # **Note:** This field does **not** return for [Zoom on-premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). Instead, this API will return the `file_path` field
    @jsondata:Name {value: "download_url"}
    string downloadUrl;
    # The archived file's extension
    @jsondata:Name {value: "file_extension"}
    string fileExtension;
    # The archive file's unique ID
    string id;
    # The individual recording file's participant email address. This value is returned when the `individual` value is `true`. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](/docs/api/using-zoom-apis/#email-address-display-rules) for details
    @jsondata:Name {value: "participant_email"}
    string participantEmail?;
    # The archived file's processing status. 
    # * `completed` - The processing of the file is complete. 
    # * `processing` - The file is processing. 
    # * `failed` - The processing of the file failed
    "completed"|"processing"|"failed" status;
};

# Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time. 
public type RecurrenceWebinar2 record {
    # Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. Can't be used with `end_times`
    @jsondata:Name {value: "end_date_time"}
    string endDateTime?;
    # Select how many times the webinar will recur before it is canceled. The maximum number of recurring is 60. Can't be used with `end_date_time`
    @jsondata:Name {value: "end_times"}
    int endTimes = 1;
    # Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.**   
    # `-1` - Last week of the month.  
    # `1` - First week of the month.  
    # `2` - Second week of the month.  
    # `3` - Third week of the month.  
    # `4` - Fourth week of the month
    @jsondata:Name {value: "monthly_week"}
    -1|1|2|3|4 monthlyWeek?;
    # Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field.   
    # `1` - Sunday.  
    # `2` - Monday.  
    # `3` - Tuesday.  
    # `4` -  Wednesday.  
    # `5` - Thursday.  
    # `6` - Friday.  
    # `7` - Saturday
    @jsondata:Name {value: "monthly_week_day"}
    1|2|3|4|5|6|7 monthlyWeekDay?;
    # Define the interval when the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. 
    #
    # For a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months
    @jsondata:Name {value: "repeat_interval"}
    int repeatInterval?;
    # Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month the webinar should recur. The value range is from 1 to 31.
    #
    # For instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`
    @jsondata:Name {value: "monthly_day"}
    int monthlyDay?;
    # Recurrence webinar types. 
    # `1` - Daily.  
    # `2` - Weekly.  
    # `3` - Monthly
    1|2|3 'type;
    # Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat.   
    # The value for this field could be a number between `1` to `7` in string format. For instance, if the Webinar should recur on Sunday, provide `1` as the value of this field.
    #
    # **Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the webinar should recur on Sundays and Tuesdays, provide `1,3` as the value of this field.
    #
    #
    # `1` - Sunday.   
    # `2` - Monday.  
    # `3` - Tuesday.  
    # `4` -  Wednesday.  
    # `5` -  Thursday.  
    # `6` - Friday.  
    # `7` - Saturday.
    @jsondata:Name {value: "weekly_days"}
    string weeklyDays?;
};

# The meeting's [sign language interpretation settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar). Make sure to add the language in the web portal in order to use it in the API. See link for details. 
#
# **Note:** If this feature is not enabled on the host's account, this setting will **not** be applied to the meeting
public type MeetingsmeetingIdSettingsSignLanguageInterpretation record {
    # Whether to enable [sign language interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar) for the meeting
    boolean enable?;
    # Information about the meeting's sign language interpreters
    MeetingsmeetingIdSettingsSignLanguageInterpretationInterpreters[] interpreters?;
};

# Invite links
public type InviteLinks record {
    # The attendees list
    @constraint:Array {maxLength: 500, minLength: 1}
    MeetingsmeetingIdinviteLinksAttendees[] attendees?;
    # The invite link's expiration time, in seconds. 
    #
    # This value defaults to `7200`
    @constraint:Int {minValue: 0, maxValue: 7776000}
    int ttl = 7200;
};

# The webinar's [language interpretation settings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0064768). Make sure to add the language in the web portal in order to use it in the API. See link for details. 
#
# **Note:** This feature is only available for certain Webinar add-on, Education, and Business and higher plans. If this feature is not enabled on the host's account, this setting will **not** be applied to the webinar. This is not supported for simulive webinars
public type UsersuserIdwebinarsSettingsLanguageInterpretation record {
    # Whether to enable [language interpretation](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0064768) for the webinar. If not provided, the default value will be based on the user's setting
    boolean enable?;
    # Information about the webinar's language interpreters
    MeetingsmeetingIdSettingsLanguageInterpretationInterpreters[] interpreters?;
};

# Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time. 
public type RecurrenceWebinar1 record {
    # Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with `end_times`.)
    @jsondata:Name {value: "end_date_time"}
    string endDateTime?;
    # Select how many times the webinar will recur before it is canceled. The maximum number of recurring is 60. Cannot be used with `end_date_time`
    @jsondata:Name {value: "end_times"}
    int endTimes = 1;
    # Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.**   
    # `-1` - Last week of the month.  
    # `1` - First week of the month.  
    # `2` - Second week of the month.  
    # `3` - Third week of the month.  
    # `4` - Fourth week of the month
    @jsondata:Name {value: "monthly_week"}
    -1|1|2|3|4 monthlyWeek?;
    # Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field.   
    # `1` - Sunday.  
    # `2` - Monday.  
    # `3` - Tuesday.  
    # `4` -  Wednesday.  
    # `5` - Thursday.  
    # `6` - Friday.  
    # `7` - Saturday
    @jsondata:Name {value: "monthly_week_day"}
    1|2|3|4|5|6|7 monthlyWeekDay?;
    # Define the interval when the webinar should recur. For instance, to schedule a webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`. 
    #
    # For a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months
    @jsondata:Name {value: "repeat_interval"}
    int repeatInterval?;
    # Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month, the webinar should recur. The value range is from 1 to 31.
    #
    # For instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`
    @jsondata:Name {value: "monthly_day"}
    int monthlyDay?;
    # Recurrence webinar types.  
    # `1` - Daily.  
    # `2` - Weekly.  
    # `3` - Monthly
    1|2|3 'type;
    # Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat.   
    # The value for this field could be a number between `1` to `7` in string format. For instance, if the Webinar should recur on Sunday, provide `1` as the value of this field.    
    #
    # **Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the Webinar should recur on Sundays and Tuesdays provide `1,3` as the value of this field.
    #
    #
    # `1`  - Sunday.   
    # `2` - Monday.  
    # `3` - Tuesday.  
    # `4` -  Wednesday.  
    # `5` -  Thursday.  
    # `6` - Friday.  
    # `7` - Saturday.
    @jsondata:Name {value: "weekly_days"}
    string weeklyDays?;
};

public type RegistrantsQuestionsBody RecordingRegistrantQuestions1;

# Information about the meeting survey
public type MeetingSurveyObject record {
    # Whether the **Show in the browser when the meeting ends** option is enabled. 
    # * `true` - Enabled. 
    # * `false` - Disabled. 
    #
    # This value defaults to `true`
    @jsondata:Name {value: "show_in_the_browser"}
    boolean showInTheBrowser = true;
    @jsondata:Name {value: "custom_survey"}
    MeetingsmeetingIdsurveyCustomSurvey customSurvey?;
    # The link to the third party meeting survey
    @jsondata:Name {value: "third_party_survey"}
    string thirdPartySurvey?;
};

public type PanelistsPanelistsPanelistsAllOf1123 record {
    # Join URL
    @jsondata:Name {value: "join_url"}
    string joinUrl?;
};

public type InlineResponse20071Questions record {
    # State whether the selected fields are required or optional
    boolean required?;
    # Field name
    @jsondata:Name {value: "field_name"}
    "last_name"|"address"|"city"|"country"|"zip"|"state"|"phone"|"industry"|"org"|"job_title"|"purchasing_time_frame"|"role_in_purchase_process"|"no_of_employees"|"comments" fieldName?;
};

public type InlineResponse2018TrackingFields record {
    # Indicates whether the [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) is visible in the meeting scheduling options in the Zoom Web Portal or not.
    #
    # `true`: Tracking field is visible.   
    #
    #
    # `false`: Tracking field is not visible to the users in the meeting options in the Zoom Web Portal but the field was used while scheduling this meeting via API. An invisible tracking field can be used by users while scheduling meetings via API only. 
    boolean visible?;
    # The tracking field's label
    string 'field?;
    # The tracking field's value
    string value?;
};

# Represents the Queries record for the operation: analytics_summary
public type AnalyticsSummaryQueries record {
    # The start date for the monthly range to query. The maximum range can be a month. If you do not provide this value, this defaults to the current date
    string 'from?;
    # The end date for the monthly range to query. The maximum range can be a month
    string to?;
};

public type PanelistsPanelistsPanelistsPanelistsAllOf11234 record {
    # The panelist's name to display in the name tag
    @jsondata:Name {value: "name_tag_name"}
    string nameTagName?;
    # The pronouns to display in the name tag
    @jsondata:Name {value: "name_tag_pronouns"}
    string nameTagPronouns?;
    # The description for the name tag, such as the person's title
    @jsondata:Name {value: "name_tag_description"}
    string nameTagDescription?;
    # The virtual background's ID
    @jsondata:Name {value: "virtual_background_id"}
    string virtualBackgroundId?;
    # The name tag ID to bind
    @jsondata:Name {value: "name_tag_id"}
    string nameTagId?;
};

# The meeting's [language interpretation settings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0064768). Make sure to add the language in the web portal in order to use it in the API. See link for details.
#
# **Note:** This feature is only available for certain Meeting add-on, Education, and Business and higher plans. If this feature is not enabled on the host's account, this setting will **not** be applied to the meeting
public type MeetingsmeetingIdSettingsLanguageInterpretation record {
    # Whether to enable [language interpretation](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0064768) for the meeting
    boolean enable?;
    # Information about the meeting's language interpreters
    MeetingsmeetingIdSettingsLanguageInterpretationInterpreters[] interpreters?;
};

public type PollsAllOf1 record {
    # The poll ID
    string id?;
    # The meeting poll's status.
    # `notstart` - Poll not started
    # `started` - Poll started
    # `ended` - Poll ended
    # `sharing` - Sharing poll results
    # `deactivated` - Poll deactivated
    "notstart"|"started"|"ended"|"sharing"|"deactivated" status?;
};

public type InlineResponse20020CustomQuestions record {
    # Answer choices for the question. Can not be used for `short` question type as this type of question requires registrants to type out the answer
    string[] answers?;
    # Title of the custom question
    string title?;
    # Type of the question being asked
    "short"|"single" 'type?;
    # Whether or not the custom question is required to be answered by participants or not
    boolean required?;
};

# Statistics about archive files, by file status
public type InlineResponse2001StatisticByFileStatus record {
    # The number of processing files
    @jsondata:Name {value: "processing_file_count"}
    int processingFileCount?;
    # The number of failed files
    @jsondata:Name {value: "failed_file_count"}
    int failedFileCount?;
    # The number of completed files
    @jsondata:Name {value: "completed_file_count"}
    int completedFileCount?;
};

public type RegistrationList2RegistrationList2AllOf12 record {
    # List of registrant objects
    RegistrationList2Registrants[] registrants?;
};

# The participant's RTMS app settings
public type LiveMeetingsmeetingIdrtmsAppstatusSettings record {
    # The participant's user ID. This field is optional. If not provided, the user ID will be automatically obtained from the authentication token. This value matches the `id` field in the [**Get a user**](/docs/api/users/#tag/users/GET/users/{userId}) API response. Use this field if you pass the `start` or `stop` value for the `action` field
    @jsondata:Name {value: "participant_user_id"}
    string participantUserId?;
    # The unique identifier of the authorized app, configured in the Account Settings under **Allow apps to access meeting content**. This app must have host approval to access in-meeting content. Use this field if you pass the `start` or `stop` value for the `action` field
    @jsondata:Name {value: "client_id"}
    string clientId;
};

# The information about meeting and webinar polling
public type TheMeetingAndWebinarPollingObject record {
    # The information about the poll's questions
    MeetingsmeetingIdpollsQuestions[] questions?;
    # Whether meeting participants answer poll questions anonymously. 
    #
    # This value defaults to `false`
    boolean anonymous = false;
    # The type of poll: 
    # * `1` &mdash; Poll. 
    # * `2` &mdash; Advanced Poll. This feature must be enabled in your Zoom account. 
    # * `3` &mdash; Quiz. This feature must be enabled in your Zoom account. 
    #
    # This value defaults to `1`
    @jsondata:Name {value: "poll_type"}
    1|2|3 pollType?;
    # The poll's title, up to 64 characters
    @constraint:String {maxLength: 64}
    string title?;
};

public type InlineResponse2006InlineResponse2006InlineResponse2006AllOf123 record {
    # List of recordings
    InlineResponse2006Meetings[] meetings?;
};

# Pagination object
public type InlineResponse20039AllOf1 record {
    # The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The number of all records available across pages
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # The number of pages returned for the request made
    @jsondata:Name {value: "page_count"}
    int pageCount?;
    # The number of records returned within a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize = 30;
};

# Represents the Queries record for the operation: meetingDelete
public type MeetingDeleteQueries record {
    # `true`: Notify registrants about the meeting cancellation via email. 
    #
    # `false`: Do not send any email notification to meeting registrants. 
    #
    # The default value of this field is `false`
    @http:Query {name: "cancel_meeting_reminder"}
    boolean cancelMeetingReminder?;
    # The meeting or webinar occurrence ID
    @http:Query {name: "occurrence_id"}
    string occurrenceId?;
    # `true`: Notify host and alternative host about the meeting cancellation via email.
    # `false`: Do not send any email notification
    @http:Query {name: "schedule_for_reminder"}
    boolean scheduleForReminder?;
};

# Represents the Queries record for the operation: reportDaily
public type ReportDailyQueries record {
    # Month for this report
    int month?;
    # Year for this report
    int year?;
    # The group ID. To get a group ID, use the [**List groups**](/docs/api/users/#tag/groups/GET/groups) API. 
    #
    # **Note:** The API response will only contain users who are members of the queried group ID
    @http:Query {name: "group_id"}
    string groupId?;
};

public type InlineResponse20036CustomFields record {
    # The custom attribute's value
    string value?;
    # The custom attribute's name
    string 'key?;
};

# The meeting's livestreaming settings
public type MeetingsmeetingIdlivestreamstatusSettings record {
    # The layout of the meeting's livestream. Use this field if you pass the `start` or `mode` value for the `action` field.
    # * `follow_host` - Follow host view.
    # * `gallery_view` - Gallery view.
    # * `speaker_view` - Speaker view
    "follow_host"|"gallery_view"|"speaker_view" layout = "follow_host";
    # Whether to display the name of the active speaker during a meeting's livestream. Use this field if you pass the `start` value for the `action` field
    @jsondata:Name {value: "active_speaker_name"}
    boolean activeSpeakerName?;
    # The display name of the meeting's livestream. Use this field if you pass the `start` value for the `action` field
    @jsondata:Name {value: "display_name"}
    string displayName?;
    # The livestream's closed caption type for this session. Use this field if you pass the `start` or `mode` value for the `action` field.
    # * `burnt-in` - Burnt in captions.
    # * `embedded` - Embedded captions.
    # * `off` - Turn off captions
    @jsondata:Name {value: "close_caption"}
    "burnt-in"|"embedded"|"off" closeCaption = "burnt-in";
};

public type WebinarRegistrantAllOf1 record {
    string id?;
};

# Represents the Queries record for the operation: recordingDeleteOne
public type RecordingDeleteOneQueries record {
    # The recording delete actions. 
    # `trash` - Move recording to trash.  
    # `delete` - Delete recording permanently
    "trash"|"delete" action = "trash";
};

# Name tag information
public type NameTagsnameTagIdBody record {
    # Whether to set the name tag as the new default for all panelists or not, including panelists not currently assigned a default name tag
    @jsondata:Name {value: "set_default_for_all_panelists"}
    boolean setDefaultForAllPanelists = true;
    # The name tag's accent color
    @jsondata:Name {value: "accent_color"}
    string accentColor?;
    # The name tag's background color
    @jsondata:Name {value: "background_color"}
    string backgroundColor?;
    # The name tag's name.
    #
    # **Note:** This value cannot exceed more than 50 characters
    string name?;
    # The name tag's text color
    @jsondata:Name {value: "text_color"}
    string textColor?;
    # Whether set the name tag as the default name tag or not
    @jsondata:Name {value: "is_default"}
    boolean isDefault = false;
};

# user object
public type InlineResponse20046Users record {
    # Number of meeting minutes for user
    @jsondata:Name {value: "meeting_minutes"}
    int meetingMinutes?;
    # User display name
    @jsondata:Name {value: "user_name"}
    string userName?;
    # Number of meetings for user
    int meetings?;
    # User department
    string dept?;
    # User ID
    string id?;
    # User type
    int 'type?;
    # User email
    string email?;
    # Custom attributes that have been assigned to the user
    @jsondata:Name {value: "custom_attributes"}
    InlineResponse20046CustomAttributes[] customAttributes?;
    # Number of participants in meetings for user
    int participants?;
};

# Represents the Queries record for the operation: meetingToken
public type MeetingTokenQueries record {
    # The meeting token type. 
    # * `closed_caption_token` - The third-party closed caption API token. 
    #
    # This defaults to `closed_caption_token`
    "closed_caption_token" 'type = "closed_caption_token";
};

public type MeetingsmeetingIdpollsQuestions record {
    # Whether participants must answer the question: 
    # * `true` &mdash; The participant must answer the question. 
    # * `false` &mdash; The participant does not need to answer the question. 
    #
    # **Note:** 
    # * When the poll's `type` value is `1` (Poll), this value defaults to `true`. 
    # * When the poll's `type` value is the `2` (Advanced Poll) or `3` (Quiz) values, this value defaults to `false`
    @jsondata:Name {value: "answer_required"}
    boolean answerRequired = false;
    # The allowed minimum number of characters. This field only applies to `short_answer` and `long_answer` polls. You must provide at least a **one** character minimum value
    @jsondata:Name {value: "answer_min_character"}
    int answerMinCharacter?;
    # The rating scale's minimum value. This value cannot be less than zero. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_min_value"}
    int ratingMinValue?;
    # The poll question's available answers. This field requires a **minimum** of two answers. 
    #
    # * For `single` and `multiple` polls, you can only provide a maximum of 10 answers. 
    # * For `matching` polls, you can only provide a maximum of 16 answers. 
    # * For `rank_order` polls, you can only provide a maximum of seven answers
    @constraint:Array {minLength: 2}
    string[] answers?;
    # The poll's question and answer type: 
    # * `single` &mdash; Single choice. 
    # * `multiple` &mdash; Multiple choice. 
    # * `matching` &mdash; Matching. 
    # * `rank_order` &mdash; Rank order. 
    # * `short_answer` &mdash; Short answer. 
    # * `long_answer` &mdash; Long answer. 
    # * `fill_in_the_blank` &mdash; Fill in the blank. 
    # * `rating_scale` &mdash; Rating scale
    "single"|"multiple"|"matching"|"rank_order"|"short_answer"|"long_answer"|"fill_in_the_blank"|"rating_scale" 'type?;
    # The allowed maximum number of characters. This field only applies to `short_answer` and `long_answer` polls: 
    # * For `short_answer` polls, a maximum of 500 characters. 
    # * For `long_answer` polls, a maximum of 2,000 characters
    @jsondata:Name {value: "answer_max_character"}
    int answerMaxCharacter?;
    # The rating scale's maximum value, up to a maximum value of 10. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_max_value"}
    int ratingMaxValue?;
    # The poll question's correct answer(s). This field is **required** if the poll's `type` value is `3` (Quiz). 
    #
    # For `single` and `matching` polls, this field only accepts one answer
    @jsondata:Name {value: "right_answers"}
    string[] rightAnswers?;
    # Whether to display the radio selection as a drop-down box: 
    # * `true` &mdash; Show as a drop-down box. 
    # * `false` &mdash; Do not show as a drop-down box. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "show_as_dropdown"}
    boolean showAsDropdown = false;
    # The low score label for the `rating_min_value` field. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_min_label"}
    string ratingMinLabel?;
    # Whether the correct answer is case sensitive. This field only applies to `fill_in_the_blank` polls: 
    # * `true` &mdash; The answer is case-sensitive. 
    # * `false` &mdash; The answer is not case-sensitive. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "case_sensitive"}
    boolean caseSensitive = false;
    # The poll question, up to 1024 characters. 
    #
    # For `fill_in_the_blank` polls, this field is the poll's question. For each value that the user must fill in, ensure that there are the same number of `right_answers` values
    @constraint:String {maxLength: 1024}
    string name?;
    # The high score label for the `rating_max_value` field. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_max_label"}
    string ratingMaxLabel?;
    # The information about the prompt questions. This field only applies to `matching` and `rank_order` polls. You **must** provide a minimum of two prompts, up to a maximum of 10 prompts
    MeetingsmeetingIdbatchPollsPrompts[] prompts?;
};

public type InlineResponse20049InlineResponse20049AllOf12 record {
    # Information about the webinar participant
    InlineResponse20049Participants[] participants?;
};

public type PollsQuestions record {
    # Whether participants must answer the question: 
    # * `true` &mdash; The participant must answer the question. 
    # * `false` &mdash; The participant does not need to answer the question. 
    #
    # **Note:** 
    # * When the poll's `type` value is `1` (Poll), this value defaults to `true`. 
    # * When the poll's `type` value is the `2` (Advanced Poll) or `3` (Quiz) values, this value defaults to `false`
    @jsondata:Name {value: "answer_required"}
    boolean answerRequired = false;
    # The allowed minimum number of characters. This field only applies to `short_answer` and `long_answer` polls. You must provide at least a **one** character minimum value
    @jsondata:Name {value: "answer_min_character"}
    int answerMinCharacter?;
    # The rating scale's minimum value. This value cannot be less than zero. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_min_value"}
    int ratingMinValue?;
    # The poll question's available answers. This field requires a **minimum** of two answers. 
    #
    # * For `single` and `multiple` polls, you can only provide a maximum of 10 answers. 
    # * For `matching` polls, you can only provide a maximum of 16 answers. 
    # * For `rank_order` polls, you can only provide a maximum of seven answers
    @constraint:Array {minLength: 2}
    string[] answers?;
    # The poll's question and answer type: 
    # * `single` &mdash; Single choice. 
    # * `multiple` &mdash; Multiple choice. 
    # * `matching` &mdash; Matching. 
    # * `rank_order` &mdash; Rank order. 
    # * `short_answer` &mdash; Short answer. 
    # * `long_answer` &mdash; Long answer. 
    # * `fill_in_the_blank` &mdash; Fill in the blank. 
    # * `rating_scale` &mdash; Rating scale
    "single"|"multiple"|"matching"|"rank_order"|"short_answer"|"long_answer"|"fill_in_the_blank"|"rating_scale" 'type?;
    # The allowed maximum number of characters. This field only applies to `short_answer` and `long_answer` polls: 
    # * For `short_answer` polls, a maximum of 500 characters. 
    # * For `long_answer` polls, a maximum of 2,000 characters
    @jsondata:Name {value: "answer_max_character"}
    int answerMaxCharacter?;
    # The rating scale's maximum value, up to a maximum value of 10. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_max_value"}
    int ratingMaxValue?;
    # The poll question's correct answer(s). This field is **required** if the poll's `type` value is `3` (Quiz). 
    #
    # For `single` and `matching` polls, this field only accepts one answer
    @jsondata:Name {value: "right_answers"}
    string[] rightAnswers?;
    # Whether to display the radio selection as a drop-down box: 
    # * `true` &mdash; Show as a drop-down box. 
    # * `false` &mdash; Do not show as a drop-down box. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "show_as_dropdown"}
    boolean showAsDropdown = false;
    # The low score label for the `rating_min_value` field. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_min_label"}
    string ratingMinLabel?;
    # Whether the correct answer is case sensitive. This field only applies to `fill_in_the_blank` polls: 
    # * `true` &mdash; The answer is case-sensitive. 
    # * `false` &mdash; The answer is not case-sensitive. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "case_sensitive"}
    boolean caseSensitive = false;
    # The poll question, up to 1024 characters. 
    #
    # For `fill_in_the_blank` polls, this field is the poll's question. For each value that the user must fill in, ensure that there are the same number of `right_answers` values
    @constraint:String {maxLength: 1024}
    string name?;
    # The high score label for the `rating_max_value` field. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_max_label"}
    string ratingMaxLabel?;
    # Information about the prompt questions. This field only applies to `matching` and `rank_order` polls. You **must** provide a minimum of two prompts, up to a maximum of 10 prompts
    MeetingsmeetingIdbatchPollsPrompts[] prompts?;
};

public type InlineResponse200PhysicalFiles record {
    # The physical file's name
    @jsondata:Name {value: "file_name"}
    string fileName?;
    # The physical file's unique ID
    @jsondata:Name {value: "file_id"}
    string fileId?;
    # The URL to download the the archive file. 
    #
    # **OAuth apps** 
    #
    # If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](/docs/integrations/oauth/) to download the file. 
    #
    # Example: 
    #
    # `https://{{base-domain}}/rec/archive/attached/download/xxx--header 'Authorization: Bearer {{OAuth-access-token}}'` 
    @jsondata:Name {value: "download_url"}
    string downloadUrl?;
    # The physical file's size, in bytes
    @jsondata:Name {value: "file_size"}
    int fileSize?;
};

# Webinar live stream
public type WebinarIdLivestreamBody record {
    # The webinar live stream page's URL
    @jsondata:Name {value: "page_url"}
    string pageUrl;
    # The number of pixels in each dimension that the video camera can display, required when a user enables 1080p. Use a value of `720p` or `1080p`
    string resolution?;
    # The webinar live stream name and key
    @jsondata:Name {value: "stream_key"}
    string streamKey;
    # The webinar live stream URL
    @jsondata:Name {value: "stream_url"}
    string streamUrl;
};

# Meeting settings
public type MeetingsmeetingIdSettings record {
    @jsondata:Name {value: "breakout_room"}
    MeetingsmeetingIdSettingsBreakoutRoom breakoutRoom?;
    # Whether to allow the host and co-hosts to fully control the mute state of participants
    @jsondata:Name {value: "allow_host_control_participant_mute_state"}
    boolean allowHostControlParticipantMuteState = false;
    # The summary template ID used to generate a meeting summary based on a predefined template. To get available summary templates, use the **Get user summary templates** API. To enable this feature for your account, please [contact Zoom Support](https://support.zoom.com/hc/en)
    @jsondata:Name {value: "summary_template_id"}
    string summaryTemplateId?;
    # Custom keys and values assigned to the meeting
    @jsondata:Name {value: "custom_keys"}
    MeetingsmeetingIdSettingsCustomKeys[] customKeys?;
    # Global dial-in countries or regions
    @jsondata:Name {value: "global_dial_in_numbers"}
    MeetingsmeetingIdSettingsGlobalDialInNumbers[] globalDialInNumbers?;
    # Show social share buttons on the meeting registration page.
    # This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting)
    @jsondata:Name {value: "show_share_button"}
    boolean showShareButton?;
    # Whether to send registrants an email confirmation.
    # * `true` - Send a confirmation email.
    # * `false` - Do not send a confirmation email
    @jsondata:Name {value: "registrants_confirmation_email"}
    boolean registrantsConfirmationEmail?;
    @jsondata:Name {value: "approved_or_denied_countries_or_regions"}
    MeetingsmeetingIdSettingsApprovedOrDeniedCountriesOrRegions approvedOrDeniedCountriesOrRegions?;
    @jsondata:Name {value: "continuous_meeting_chat"}
    MeetingsmeetingIdSettingsContinuousMeetingChat continuousMeetingChat?;
    # Allow attendees to join the meeting from multiple devices. This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting)
    @jsondata:Name {value: "allow_multiple_devices"}
    boolean allowMultipleDevices?;
    # `true`- Only authenticated users can join meetings
    @jsondata:Name {value: "meeting_authentication"}
    boolean meetingAuthentication?;
    # A semicolon-separated list of the meeting's alternative hosts' email addresses or IDs
    @jsondata:Name {value: "alternative_hosts"}
    string alternativeHosts?;
    # Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher
    @jsondata:Name {value: "alternative_host_update_polls"}
    boolean alternativeHostUpdatePolls?;
    # Enable the device testing
    @jsondata:Name {value: "device_testing"}
    boolean deviceTesting = false;
    # Start video when participants join the meeting
    @jsondata:Name {value: "participant_video"}
    boolean participantVideo?;
    # The type of calendar integration used to schedule the meeting. 
    # * `1` - [Zoom Outlook add-in](https://support.zoom.us/hc/en-us/articles/360031592971-Getting-started-with-Outlook-plugin-and-add-in) 
    # * `2` - [Zoom for Google Workspace add-on](https://support.zoom.us/hc/en-us/articles/360020187492-Using-the-Zoom-for-Google-Workspace-add-on)
    #
    # Works with the `private_meeting` field to determine whether to share details of meetings
    @jsondata:Name {value: "calendar_type"}
    1|2 calendarType?;
    # Host meeting in India
    #
    # # Deprecated
    @jsondata:Name {value: "in_meeting"}
    @deprecated
    boolean inMeeting = false;
    # Mute participants upon entry
    @jsondata:Name {value: "mute_upon_entry"}
    boolean muteUponEntry = false;
    # List of global dial-in countries
    @jsondata:Name {value: "global_dial_in_countries"}
    string[] globalDialInCountries?;
    @jsondata:Name {value: "question_and_answer"}
    MeetingsmeetingIdSettingsQuestionAndAnswer questionAndAnswer?;
    # Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings
    @jsondata:Name {value: "join_before_host"}
    boolean joinBeforeHost = false;
    # Whether the **Allow host to save video order** feature is enabled
    @jsondata:Name {value: "host_save_video_order"}
    boolean hostSaveVideoOrder?;
    # Add a watermark when viewing a shared screen
    boolean watermark = false;
    # Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.**   
    #
    #
    #
    # `0` - Automatically approve.  
    # `1` - Manually approve.  
    # `2` - No registration required
    @jsondata:Name {value: "approval_type"}
    0|1|2 approvalType = 2;
    # Close registration after the event date
    @jsondata:Name {value: "close_registration"}
    boolean closeRegistration = false;
    # Whether to set the meeting as an internal meeting
    @jsondata:Name {value: "internal_meeting"}
    boolean internalMeeting = false;
    # The participants added here will receive unique meeting invite links and bypass authentication
    @jsondata:Name {value: "authentication_exception"}
    MeetingsmeetingIdSettingsAuthenticationException[] authenticationException?;
    # If the value of `join_before_host` field is set to true, use this field to indicate time limits for a participant to join a meeting before a host.
    #
    # *  `0` - Allow participant to join anytime.
    # *  `5` - Allow participant to join 5 minutes before meeting start time.
    # * `10` - Allow participant to join 10 minutes before meeting start time.
    # * `15` - Allow participant to join 15 minutes before meeting start time
    @jsondata:Name {value: "jbh_time"}
    0|5|10|15 jbhTime?;
    # Third party audio conference info
    @jsondata:Name {value: "audio_conference_info"}
    string audioConferenceInfo?;
    # If user has configured [Sign Into Zoom with Specified Domains](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated
    @jsondata:Name {value: "authentication_domains"}
    string authenticationDomains?;
    # Defines who will receive a summary after this meeting. This field is applicable only when `auto_start_meeting_summary` is set to `true`.
    # * `1` - Only meeting host.
    # * `2` - Only meeting host, co-hosts, and alternative hosts.
    # * `3` - Only meeting host and meeting invitees in our organization.
    # * `4` - All meeting invitees including those outside of our organization
    @jsondata:Name {value: "who_will_receive_summary"}
    1|2|3|4 whoWillReceiveSummary?;
    # A list of the meeting's invitees
    @jsondata:Name {value: "meeting_invitees"}
    MeetingsmeetingIdSettingsMeetingInvitees[] meetingInvitees?;
    # Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features such cloud recording and phone/SIP/H.323 dial-in, will be **automatically disabled**.   
    #
    # `enhanced_encryption` - Enhanced encryption. Encryption is stored in the cloud if you enable this option.   
    #
    #
    # `e2ee` - [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the features join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions
    @jsondata:Name {value: "encryption_type"}
    "enhanced_encryption"|"e2ee" encryptionType?;
    # Meeting authentication option ID
    @jsondata:Name {value: "authentication_option"}
    string authenticationOption?;
    @jsondata:Name {value: "sign_language_interpretation"}
    MeetingsmeetingIdSettingsSignLanguageInterpretation signLanguageInterpretation?;
    # Whether to disable the participant video during a meeting. To enable this feature for your account, [contact Zoom Support](https://support.zoom.us/hc/en-us)
    @jsondata:Name {value: "disable_participant_video"}
    boolean disableParticipantVideo = false;
    # Whether the [**Focus Mode** feature](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode) is enabled when the meeting starts
    @jsondata:Name {value: "focus_mode"}
    boolean focusMode?;
    # Registration type. Used for recurring meeting with fixed time only.
    # `1` - Attendees register once and can attend any of the occurrences.  
    # `2` - Attendees need to register for each occurrence to attend.  
    # `3` - Attendees register once and can choose one or more occurrences to attend
    @jsondata:Name {value: "registration_type"}
    1|2|3 registrationType = 1;
    # Contact email for registration
    @jsondata:Name {value: "contact_email"}
    string contactEmail?;
    # Enable waiting room
    @jsondata:Name {value: "waiting_room"}
    boolean waitingRoom = false;
    # Determine how participants can join the audio portion of the meeting.  
    # `both` - Both Telephony and VoIP.  
    # `telephony` - Telephony only.  
    # `voip` - VoIP only.  
    # `thirdParty` - Third party audio conference
    "both"|"telephony"|"voip"|"thirdParty" audio = "both";
    # Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)
    @jsondata:Name {value: "authentication_name"}
    string authenticationName?;
    # Only signed in users with specified domains can join meetings.
    #
    # **This field is deprecated and will not be supported in the future.**    
    #
    # As an alternative, use the `meeting_authentication`, `authentication_option`. and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting
    #
    # # Deprecated
    @jsondata:Name {value: "enforce_login_domains"}
    @deprecated
    string enforceLoginDomains?;
    # Defines who can ask questions about this meeting's transcript. This field is applicable only when `auto_start_ai_companion_questions` is set to `true`.
    # * `1` - All participants and invitees.
    # * `2` - All participants only from when they join.
    # * `3` - Only meeting host.
    # * `4` - Participants and invitees in our organization.
    # * `5` - Participants in our organization only from when they join
    @jsondata:Name {value: "who_can_ask_questions"}
    1|2|3|4|5 whoCanAskQuestions?;
    # Contact name for registration
    @jsondata:Name {value: "contact_name"}
    string contactName?;
    # Host the meeting in China
    #
    # # Deprecated
    @jsondata:Name {value: "cn_meeting"}
    @deprecated
    boolean cnMeeting = false;
    # Whether to send registrants email notifications about their registration approval, cancellation, or rejection.
    #
    # * `true` - Send an email notification.
    # * `false` - Do not send an email notification.
    #
    # Set this value to `true` to also use the `registrants_confirmation_email` parameter
    @jsondata:Name {value: "registrants_email_notification"}
    boolean registrantsEmailNotification?;
    # Flag to determine whether to send email notifications to alternative hosts, default value is true
    @jsondata:Name {value: "alternative_hosts_email_notification"}
    boolean alternativeHostsEmailNotification = true;
    # Use a [personal meeting ID (PMI)](/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi). Only used for scheduled meetings and recurring meetings with no fixed time
    @jsondata:Name {value: "use_pmi"}
    boolean usePmi = false;
    # The meeting's resources
    MeetingsmeetingIdSettingsResources[] resources?;
    # Automatic recording. 
    # `local` - Record on local.  
    # `cloud` -  Record on cloud.  
    # `none` - Disabled
    @jsondata:Name {value: "auto_recording"}
    "local"|"cloud"|"none" autoRecording = "none";
    # Start video when the host joins the meeting
    @jsondata:Name {value: "host_video"}
    boolean hostVideo?;
    @jsondata:Name {value: "language_interpretation"}
    MeetingsmeetingIdSettingsLanguageInterpretation languageInterpretation?;
    # Only signed in users can join this meeting.
    #
    # **This field is deprecated and will not be supported in the future.**    
    #
    # As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting
    #
    # # Deprecated
    @jsondata:Name {value: "enforce_login"}
    @deprecated
    boolean enforceLogin?;
    # Whether to automatically start meeting summary
    @jsondata:Name {value: "auto_start_meeting_summary"}
    boolean autoStartMeetingSummary = false;
    # Whether to automatically start AI Companion questions
    @jsondata:Name {value: "auto_start_ai_companion_questions"}
    boolean autoStartAiCompanionQuestions = false;
    # Whether to set the meeting as a participant focused meeting
    @jsondata:Name {value: "participant_focused_meeting"}
    boolean participantFocusedMeeting = false;
    # Whether the meeting is set as private
    @jsondata:Name {value: "private_meeting"}
    boolean privateMeeting?;
    # Whether to include authenticated guest's email addresses in meetings' attendee reports
    @jsondata:Name {value: "email_in_attendee_report"}
    boolean emailInAttendeeReport?;
    # Whether to send email notifications to [alternative hosts](https://support.zoom.us/hc/en-us/articles/208220166) and [users with scheduling privileges](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-privilege). This value defaults to `true`
    @jsondata:Name {value: "email_notification"}
    boolean emailNotification = true;
};

public type InlineResponse20019 record {
    *InlineResponse20019AllOf1;
    *MeetingAndWebinarPollingObject7;
};

public type InlineResponse20060Questions record {
    @jsondata:Name {value: "question_details"}
    InlineResponse20060QuestionDetails[] questionDetails?;
    # Name of the user. If `anonymous` option is enabled for the Q&amp;A, the participant's information will be kept anonymous and the value of `name` field will be `Anonymous Attendee`
    string name?;
    # Email address of the user. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details
    string email?;
};

# Webinar Registrant Questions
public type WebinarRegistrantQuestions1 record {
    # Array of Registrant Custom Questions
    @jsondata:Name {value: "custom_questions"}
    InlineResponse20071CustomQuestions[] customQuestions?;
    # Array of registration fields whose values should be provided by registrants during registration
    InlineResponse20071Questions[] questions?;
};

public type InlineResponse2003InlineResponse2003AllOf12 record {
    # The cloud recording's password.
    # Include fields in the response. The password field requires the user role of the authorized account to enable the `View Recording Content` permission
    string password?;
    # The cloud recording's passcode to be used in the URL. Directly splice this recording's passcode in `play_url` or `share_url` with `?pwd=` to access and play. Example: 'https://zoom.us/rec/share/**************?pwd=yNYIS408EJygs7rE5vVsJwXIz4-VW7MH'
    @jsondata:Name {value: "recording_play_passcode"}
    string recordingPlayPasscode?;
    # The JWT token to download the meeting's recording. This response only returns if the `download_access_token` is included in the `include_fields` query parameter
    @jsondata:Name {value: "download_access_token"}
    string downloadAccessToken?;
};

public type InlineResponse20056DialInNumbers record {
    # Dial-in number. Length is less than 16
    @constraint:String {maxLength: 16, minLength: 1}
    string number?;
    # Country code
    @constraint:String {maxLength: 6}
    string code?;
    # Country label, if passed, will display in place of code
    @jsondata:Name {value: "country_label"}
    string countryLabel?;
    # Dial-in number types. 
    # `toll` - Toll number.  
    # `tollfree` - Toll free number.  
    #
    # `media_link` - Media link
    "toll"|"tollfree"|"media_link" 'type?;
};

public type WebinarIdBatchRegistrantsBody record {
    WebinarswebinarIdbatchRegistrantsRegistrants[] registrants?;
    # If a meeting was scheduled with approval_type `1` (manual approval), but you want to automatically approve registrants added via this API, set the value of this field to `true`. 
    #
    # You **cannot** use this field to change approval setting for a meeting that was originally scheduled with approval_type `0` (automatic approval)
    @jsondata:Name {value: "auto_approve"}
    boolean autoApprove?;
};

public type InlineResponse2008Groups record {
    # The ZDM group's unique ID
    @jsondata:Name {value: "zdm_group_id"}
    string zdmGroupId?;
    # The ZDM group's name
    string name?;
    # The ZDM group's describe
    string description?;
};

# Information about the **Enable continuous meeting chat** feature
public type UsersuserIdmeetingsSettingsContinuousMeetingChat record {
    # Whether to enable the **Automatically add meeting participants** setting
    #
    # # Deprecated
    @jsondata:Name {value: "auto_add_meeting_participants"}
    @deprecated
    boolean autoAddMeetingParticipants?;
    # Whether to enable the **Enable continuous meeting chat** setting. The default value is based on user settings. When the **Enable continuous meeting chat** setting is enabled, the default value is true. When the setting is disabled, the default value is false
    boolean enable?;
    # Whether to enable the **Automatically add invited external users** setting
    #
    # # Deprecated
    @jsondata:Name {value: "auto_add_invited_external_users"}
    @deprecated
    boolean autoAddInvitedExternalUsers?;
    # Who is added to the continuous meeting chat. Invitees are users added during scheduling. Participants are users who join the meeting.
    # * `all_users` - For all users, including external invitees and meeting participants.
    # * `org_invitees_and_participants` - Only for meeting invitees and participants in your organization.
    # * `org_invitees` - Only for meeting invitees in your organization
    @jsondata:Name {value: "who_is_added"}
    "all_users"|"org_invitees_and_participants"|"org_invitees" whoIsAdded?;
};

public type MeetingIdPollsBody TheMeetingAndWebinarPollingObject;

public type MeetingId1MeetingId1OneOf12 string;

public type LiveMeetingsmeetingIdeventsParamsSipHeadersAdditionalHeaders record {
    # Additional custom SIP header's value
    @constraint:String {maxLength: 256}
    string value?;
    # Additional custom SIP header's key
    @constraint:String {maxLength: 32}
    string 'key?;
};

public type InlineResponse20052SurveyAnswers record {
    # The participant's display name. **Allow participants to answer questions anonymously** setting is enabled for a [survey](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0057559), the participant's survey information is kept anonymous and the `name` field will return the &quot;Anonymous Attendee&quot; value
    string name?;
    # The participant's last name. If the **Allow participants to answer questions anonymously** setting is enabled for a [survey](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0057559), the participant's survey information is kept anonymous and the `last_name` field will return the &quot;Anonymous Attendee&quot; value
    @jsondata:Name {value: "last_name"}
    string lastName?;
    # The participant's first name. If the **Allow participants to answer questions anonymously** setting is enabled for a [survey](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0057559), the participant's survey information is kept anonymous and the `first_name` field will return the &quot;Anonymous Attendee&quot; value
    @jsondata:Name {value: "first_name"}
    string firstName?;
    # The participant's email address
    string email?;
    # Information about the user's questions and answers
    @jsondata:Name {value: "answer_details"}
    InlineResponse20052AnswerDetails[] answerDetails?;
};

# Represents the Queries record for the operation: webinarAbsentees
public type WebinarAbsenteesQueries record {
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # The meeting or webinar occurrence ID
    @http:Query {name: "occurrence_id"}
    string occurrenceId?;
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

public type WebinarswebinarIdsurveyCustomSurveyQuestions record {
    # The low score label used for the `rating_min_value` field, up to 50 characters. 
    #
    # This field only applies to the `rating_scale` survey
    @jsondata:Name {value: "rating_min_label"}
    string ratingMinLabel?;
    # Whether participants must answer the question. 
    # * `true` - The participant must answer the question. 
    # * `false` - The participant does not need to answer the question. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "answer_required"}
    boolean answerRequired = false;
    # The allowed minimum number of characters. This field only applies to `short_answer` and `long_answer` questions. You must provide at least a **one** character minimum value
    @jsondata:Name {value: "answer_min_character"}
    int answerMinCharacter?;
    # The rating scale's minimum value. This value can't be less than zero. 
    #
    # This field only applies to the `rating_scale` survey
    @jsondata:Name {value: "rating_min_value"}
    int ratingMinValue?;
    # The survey question, up to 420 characters
    string name?;
    # The survey question's available answers. This field requires a **minimum** of two answers. 
    #
    # * For `single` and `multiple` questions, you can only provide a maximum of 50 answers. 
    # * For `matching` polls, you can only provide a maximum of 16 answers. 
    # * For `rank_order` polls, you can only provide a maximum of seven answers
    @constraint:Array {minLength: 2}
    WebinarswebinarIdsurveyCustomSurveyQuestionsAnswersItemsString[] answers?;
    # The survey's question and answer type. 
    # * `single` - Single choice. 
    # * `multiple` - Multiple choice. 
    # * `matching` - Matching. 
    # * `rank_order` - Rank order 
    # * `short_answer` - Short answer 
    # * `long_answer` - Long answer. 
    # * `fill_in_the_blank` - Fill in the blank 
    # * `rating_scale` - Rating scale
    "single"|"multiple"|"matching"|"rank_order"|"short_answer"|"long_answer"|"fill_in_the_blank"|"rating_scale" 'type?;
    # The high score label used for the `rating_max_value` field, up to 50 characters. 
    #
    # This field only applies to the `rating_scale` survey
    @jsondata:Name {value: "rating_max_label"}
    string ratingMaxLabel?;
    # The allowed maximum number of characters. This field only applies to `short_answer` and `long_answer` questions. 
    # * For `short_answer` question, a maximum of 500 characters. 
    # * For `long_answer` question, a maximum of 2,000 characters
    @jsondata:Name {value: "answer_max_character"}
    int answerMaxCharacter?;
    # The rating scale's maximum value, up to a maximum value of 10. 
    #
    # This field only applies to the `rating_scale` survey
    @jsondata:Name {value: "rating_max_value"}
    int ratingMaxValue?;
    # Whether to display the radio selection as a drop-down box. 
    # * `true` - Show as a drop-down box. 
    # * `false` - Do not show as a drop-down box. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "show_as_dropdown"}
    boolean showAsDropdown = false;
    # Information about the prompt questions. This field only applies to `matching` and `rank_order` questions. You **must** provide a minimum of two prompts, up to a maximum of 10 prompts
    @constraint:Array {maxLength: 10, minLength: 2}
    MeetingsmeetingIdsurveyCustomSurveyPrompts[] prompts?;
};

# Information about the meeting's encoded SIP URI
public type InlineResponse20021 record {
    # This value identifies the meeting participant. It is automatically embedded in the SIP URI if the API caller has a CRC (Conference Room Connector) plan
    @jsondata:Name {value: "participant_identifier_code"}
    string participantIdentifierCode?;
    # Whether the API caller has a CRC (Conference Room Connector) plan
    @jsondata:Name {value: "paid_crc_plan_participant"}
    boolean paidCrcPlanParticipant?;
    # The meeting's encoded SIP URI
    @jsondata:Name {value: "sip_dialing"}
    string sipDialing?;
    # The number of seconds the encoded SIP URI is valid before it expires
    @jsondata:Name {value: "expire_in"}
    int expireIn?;
};

public type InlineResponse20020 MeetingRegistrantQuestions1;

public type InlineResponse20023 record {
    # The user's email address
    @jsondata:Name {value: "user_email"}
    string userEmail?;
    # The number of meeting participants
    @jsondata:Name {value: "participants_count"}
    int participantsCount?;
    # The total number of minutes attended by the meeting's host and participants
    @jsondata:Name {value: "total_minutes"}
    int totalMinutes?;
    # The user's display name
    @jsondata:Name {value: "user_name"}
    string userName?;
    # The meeting's end date and time
    @jsondata:Name {value: "end_time"}
    string endTime?;
    # The meeting host's department
    string dept?;
    # Whether the meeting was created directly through Zoom or via an API request: 
    # * If the meeting was created via an OAuth app, this field returns the OAuth app's name. 
    # * If the meeting was created via JWT or the Zoom Web Portal, this returns the `Zoom` value
    string 'source?;
    # The meeting type. 
    # * `0` - A prescheduled meeting. 
    # * `1` - An instant meeting. 
    # * `2` - A scheduled meeting. 
    # * `3` - A recurring meeting with no fixed time. 
    # * `4` - A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). 
    # * `7` - A [PAC (personal audio conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. 
    # * `8` - A recurring meeting with a fixed time
    0|1|2|3|4|7|8 'type?;
    # The meeting's UUID. You must [double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) this value if the meeting UUID begins with a `/` character or contains the `//` character
    string uuid?;
    # The host's ID
    @jsondata:Name {value: "host_id"}
    string hostId?;
    # The meeting's duration, in minutes
    int duration?;
    # The meeting's start date and time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # The meeting's topic
    string topic?;
    # The [meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID)
    int id?;
};

# Information about the meeting token
public type InlineResponse20022 record {
    # The generated meeting token
    string token?;
};

public type InlineResponse20025 record {
    # The start time of the meeting
    @jsondata:Name {value: "start_time"}
    string startTime?;
    InlineResponse20025Questions[] questions?;
    # [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in **long** format(represented as int64 data type in JSON), also known as the meeting number
    int id?;
    # Meeting UUID
    string uuid?;
};

public type InlineResponse20054Phones record {
    # Defined a set of basic components of SIP network architecture, including proxy_server, register_server and transport_protocol
    SipPhonesphonesServer server?;
    # The password generated for the user in the SIP account
    string password?;
    # The email address of the user to associate with the SIP Phone. Can add `.pc`, `.mobile`, `.pad` at the end of the email (for example, `user@example.com.pc`) to add accounts for different platforms for the same user
    @jsondata:Name {value: "user_email"}
    string userEmail?;
    @jsondata:Name {value: "server_3"}
    SipPhonesphonesServer server3?;
    # The number to dial for checking voicemail
    @jsondata:Name {value: "voice_mail"}
    string voiceMail?;
    @jsondata:Name {value: "server_2"}
    SipPhonesphonesServer server2?;
    # The phone number associated with the user in the SIP account. 
    @jsondata:Name {value: "user_name"}
    string userName?;
    # The name or IP address of your provider's SIP domain
    string domain?;
    # The displayed phone number associated with the user can be either in extension format or E.164 format. You can specify the displayed number when the dialable number differs from the SIP username
    @jsondata:Name {value: "display_number"}
    string displayNumber?;
    # The authorization name of the user that is registered for SIP phone
    @jsondata:Name {value: "authorization_name"}
    string authorizationName?;
    # The SIP phone ID
    @jsondata:Name {value: "phone_id"}
    string phoneId?;
    # The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server. 
    @jsondata:Name {value: "registration_expire_time"}
    int registrationExpireTime?;
};

public type InlineResponse20024 record {
    *InlineResponse20024AllOf1;
    *InlineResponse20024InlineResponse20024AllOf12;
};

public type InlineResponse20027 record {
    InlineResponse20027Templates[] templates?;
    # Total records found for this request
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
};

public type InlineResponse20026 record {
    # The meeting's start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    InlineResponse20026Questions[] questions?;
    # [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in **long** format, represented as int64 data type in JSON, also known as the meeting number
    int id?;
    # Meeting UUID
    string uuid?;
};

public type InlineResponse20029 record {
    # The total number of all records available across all pages
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # List of upcoming meeting objects
    InlineResponse20029Meetings[] meetings?;
};

# Approve or block users from specific regions/countries from joining this meeting. 
public type InlineResponse20013SettingsApprovedOrDeniedCountriesOrRegions record {
    # Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting.   
    #
    #
    # `approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.  
    #
    #
    # `deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`
    "approve"|"deny" method?;
    # `true` - Setting enabled to either allow users or block users from specific regions to join your meetings.   
    #
    #
    # `false` - Setting disabled
    boolean enable?;
    # List of countries/regions from where participants can join this meeting. 
    @jsondata:Name {value: "approved_list"}
    string[] approvedList?;
    # List of countries or regions from where participants can not join this meeting. 
    @jsondata:Name {value: "denied_list"}
    string[] deniedList?;
};

public type MeetingsmeetingIdSettingsLanguageInterpretationInterpreters record {
    # A comma-separated list of the interpreter's languages. The string must contain exactly two country IDs.
    #
    # Only system-supported languages are allowed: `US` (English), `CN` (Chinese), `JP` (Japanese), `DE` (German), `FR` (French), `RU` (Russian), `PT` (Portuguese), `ES` (Spanish), and `KR` (Korean).
    #
    # For example, to set an interpreter translating from English to Chinese, use `US,CN`
    #
    # # Deprecated
    @deprecated
    string languages?;
    # A comma-separated list of the interpreter's languages. The string must contain exactly two languages.
    #
    # To get this value, use the `language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](/docs/api/users/#tag/users/GET/users/{userId}/settings) API response.
    #
    # **languages**: System-supported languages include `English`, `Chinese`, `Japanese`, `German`, `French`, `Russian`, `Portuguese`, `Spanish`, and `Korean`.
    #
    # **custom_languages**: User-defined languages added by the user.
    #
    # For example, an interpreter translating between English and French should use `English,French`
    @jsondata:Name {value: "interpreter_languages"}
    string interpreterLanguages?;
    # The interpreter's email address
    string email?;
};

public type InlineResponse20028 record {
    *InlineResponse20028AllOf1;
    *InlineResponse20028InlineResponse20028AllOf12;
};

public type InlineResponse200Meetings record {
    # Information about the physical files
    @jsondata:Name {value: "physical_files"}
    InlineResponse200PhysicalFiles[] physicalFiles?;
    # The meeting or webinar's [timezone](/docs/api/references/abbreviations/#timezones)
    string timezone;
    # The total size of the archive file, in bytes
    @jsondata:Name {value: "total_size"}
    int totalSize;
    # Whether the meeting or webinar is internal or external. 
    # * `internal` - An internal meeting or webinar. 
    # * `external` - An external meeting or webinar. 
    #
    # The `id`, `host_id`, and `topic` PII (Personal Identifiable Information) values in this response are removed when this value is `external`
    @jsondata:Name {value: "meeting_type"}
    "internal"|"external" meetingType;
    # The number of archived files returned in the API call response
    @jsondata:Name {value: "recording_count"}
    int recordingCount;
    # Whether the room is a [breakout room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms)
    @jsondata:Name {value: "is_breakout_room"}
    boolean isBreakoutRoom;
    # The type of archived meeting or webinar. 
    #
    # Meeting recordings use these archive types. 
    # * `1` - Instant meeting. 
    # * `2` - Scheduled meeting. 
    # * `3` - A recurring meeting with no fixed time. 
    # * `4` - A meeting created via PMI (Personal Meeting ID). 
    # * `7` - A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). 
    # * `8` - Recurring meeting with a fixed time. 
    #
    # Webinar recordings use these archive types. 
    # * `5` - A webinar. 
    # * `6` - A recurring webinar without a fixed time. 
    # * `9` - A recurring webinar with a fixed time. 
    #
    # If the recording is **not** from a meeting or webinar: 
    #
    # * `100` - A [breakout room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms)
    1|2|3|4|5|6|7|8|9|100 'type;
    # The recorded meeting or webinar instance's universally unique identifier (UUID). Each meeting or webinar instance generates a UUID
    string uuid;
    # The ID of the user set as the host of the archived meeting or webinar
    @jsondata:Name {value: "host_id"}
    string hostId;
    # The meeting or webinar's scheduled duration
    int duration;
    # The meeting or webinar's start time
    @jsondata:Name {value: "start_time"}
    string startTime;
    # The meeting or webinar's archive completion time
    @jsondata:Name {value: "complete_time"}
    record {}|"" completeTime;
    # Primary group IDs of participants who belong to your account. Each group ID is separated by a comma
    @jsondata:Name {value: "group_id"}
    string groupId?;
    # The user's account name
    @jsondata:Name {value: "account_name"}
    string accountName;
    # The meeting or webinar topic
    string topic;
    # The meeting or webinar ID, either `meetingId` or `webinarId`
    int id;
    # The parent meeting's universally unique ID (UUID). Each meeting or webinar instance generates a UUID. If the `is_breakout_room` value is `true`, the API returns this value
    @jsondata:Name {value: "parent_meeting_id"}
    string parentMeetingId?;
    # The meeting or webinar's duration, in seconds
    @jsondata:Name {value: "duration_in_second"}
    int durationInSecond;
    # Information about the archive files
    @jsondata:Name {value: "archive_files"}
    InlineResponse200ArchiveFiles[] archiveFiles;
    # The archive's processing status. 
    # * `completed` - The archive's processing is complete. 
    # * `processing` - The archive is processing
    "completed"|"processing" status;
};

# The participant's RTMS app status
public type RtmsAppStatusBody record {
    # The participant's RTMS app settings
    LiveMeetingsmeetingIdrtmsAppstatusSettings settings?;
    # The participant's RTMS app status.
    # * `start` - Start an RTMS.
    # * `stop` - Stop an ongoing RTMS
    "start"|"stop" action?;
};

# DateTime Object
public type InlineResponse2006AllOf1 record {
    # The start date
    string 'from?;
    # The end date
    string to?;
};

# [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar
public type WebinarswebinarIdSettingsQuestionAndAnswer record {
    # If simulive webinar, 
    #
    # * `true` - allow auto-reply to attendees. 
    #
    # * `false` - don't allow auto-reply to the attendees
    @jsondata:Name {value: "allow_auto_reply"}
    boolean allowAutoReply?;
    # * `true` - Allow participants to send questions without providing their name to the host, co-host, and panelists..
    #
    # * `false` - Do not allow anonymous questions
    @jsondata:Name {value: "allow_anonymous_questions"}
    boolean allowAnonymousQuestions?;
    # Indicate whether you want attendees to be able to view answered questions only or view all questions.
    #
    # * `only` - Attendees are able to view answered questions only.
    #
    # *  `all` - Attendees are able to view all questions submitted in the Q&amp;A
    @jsondata:Name {value: "answer_questions"}
    "only"|"all" answerQuestions?;
    # * `true` - Enable [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
    #
    # * `false` - Disable Q&amp;A for webinar
    boolean enable?;
    # * `true` - Allow participants to submit questions.
    #
    # * `false` - Do not allow submit questions
    @jsondata:Name {value: "allow_submit_questions"}
    boolean allowSubmitQuestions?;
    # * `true` - Attendees can answer questions or leave a comment in the question thread.
    #
    # * `false` - Attendees can't answer questions or leave a comment in the question thread
    @jsondata:Name {value: "attendees_can_comment"}
    boolean attendeesCanComment?;
    # If `allow_auto_reply` = true, the text to be included in the automatic response. 
    @jsondata:Name {value: "auto_reply_text"}
    string autoReplyText?;
    # * `true` - Attendees can click the thumbs up button to bring popular questions to the top of the Q&amp;A window.
    #
    # * `false` - Attendees can't click the thumbs up button on questions
    @jsondata:Name {value: "attendees_can_upvote"}
    boolean attendeesCanUpvote?;
};

# Represents the Queries record for the operation: webinarRegistrantStatus
public type WebinarRegistrantStatusQueries record {
    # The meeting or webinar occurrence ID
    @http:Query {name: "occurrence_id"}
    string occurrenceId?;
};

# Occurrence object. This object is only returned for recurring webinars
public type InlineResponse2018Occurrences record {
    # Duration
    int duration?;
    # Start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # Occurrence ID. The unique identifier for an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences
    @jsondata:Name {value: "occurrence_id"}
    string occurrenceId?;
    # Occurrence status. 
    # `available` - Available occurrence.  
    # `deleted` -  Deleted occurrence
    "available"|"deleted" status?;
};

# Represents the Queries record for the operation: listDevices
public type ListDevicesQueries record {
    # Filter devices by status.   
    # Device Status:  
    # `0` - offline.  
    # `1` - online.  
    # `-1` - unlink
    @http:Query {name: "device_status"}
    -1|0|1 deviceStatus = -1;
    # Filter devices by model
    @http:Query {name: "device_model"}
    string deviceModel?;
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # Filter devices by enrollment of ZDM (Zoom Device Management)
    @http:Query {name: "is_enrolled_in_zdm"}
    boolean isEnrolledInZdm = true;
    # Filter devices by device type.  
    # Device Type:  
    # `-1` - All Zoom Room device(0,1,2,3,4,6).  
    # `0` - Zoom Rooms Computer.  
    # `1` - Zoom Rooms Controller.  
    # `2` - Zoom Rooms Scheduling Display.  
    # `3` - Zoom Rooms Control System.  
    # `4` -  Zoom Rooms Whiteboard.  
    # `5` - Zoom Phone Appliance.  
    # `6` - Zoom Rooms Computer (with Controller)
    @http:Query {name: "device_type"}
    -1|0|1|2|3|4|5|6 deviceType = -1;
    # Filter devices by vendor
    @http:Query {name: "device_vendor"}
    string deviceVendor?;
    # Filter devices by name or serial number
    @http:Query {name: "search_text"}
    string searchText?;
    # Filter devices by platform operating system
    @http:Query {name: "platform_os"}
    "win"|"mac"|"ipad"|"iphone"|"android"|"linux" platformOs?;
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

# Information about the webinar's [wallpaper] file
public type InlineResponse20064Wallpaper record {
    # The wallpaper's file ID
    string id?;
};

public type RegistrantsRegistrantsRegistrantsAllOf1223 record {
    # The URL that an approved registrant can use to join the meeting or webinar
    @jsondata:Name {value: "join_url"}
    string joinUrl?;
    # The time when the registrant registered
    @jsondata:Name {value: "create_time"}
    string createTime?;
    # The status of the registrant's registration.   
    # `approved` - User has been successfully approved for the webinar.  
    # `pending` -  The registration is still pending.  
    # `denied` - User has been denied from joining the webinar
    string status?;
};

public type MeetingsAllOf12 record {
    # Start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # Meeting UUID. Unique meeting ID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). [Double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.
    string uuid?;
};

# The recording meeting object
public type MeetingsAllOf11 record {
    # The cloud recording's passcode to be used in the URL. 
    # Include fields in the response. The password field requires the user role of the authorized account to enable the **View Recording Content** permission to be returned.
    # This recording's passcode can be directly spliced in `play_url` or `share_url` with `?pwd=` to access and play. For example, 'https://zoom.us/rec/share/**************?pwd=yNYIS408EJygs7rE5vVsJwXIz4-VW7MH'. If you want to use this field, please contact Zoom support
    @jsondata:Name {value: "recording_play_passcode"}
    string recordingPlayPasscode?;
    # The total file size of the recording. This includes the `recording_files` and `participant_audio_files` files
    @jsondata:Name {value: "total_size"}
    int totalSize?;
    # Auto-delete status of a meeting's [cloud recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).  
    #
    # Prerequisite: To get the auto-delete status, the host of the recording must have the recording setting **Delete cloud recordings after a specified number of days** enabled. 
    @jsondata:Name {value: "auto_delete"}
    boolean autoDelete?;
    # Number of recording files returned in the response of this API call. This includes the `recording_files` and  `participant_audio_files` files
    @jsondata:Name {value: "recording_count"}
    int recordingCount?;
    # The recording's associated type of meeting or webinar: 
    #
    # If the recording is of a meeting: 
    # * `1` - Instant meeting. 
    # * `2` - Scheduled meeting. 
    # * `3` - A recurring meeting with no fixed time. 
    # * `4` - A meeting created viaPersonal Meeting ID (PMI). 
    # * `7` - A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). 
    # * `8` - Recurring meeting with a fixed time. 
    #
    # If the recording is of a webinar: 
    # * `5` - A webinar. 
    # * `6` - A recurring webinar without a fixed time 
    # * `9` - A recurring webinar with a fixed time.
    #
    # If the recording is **not** from a meeting or webinar: 
    #
    # * `99` - A recording uploaded via the [**Recordings**](https://zoom.us/recording) interface on the Zoom Web Portal
    "1"|"2"|"3"|"4"|"5"|"6"|"7"|"8"|"9"|"99" 'type?;
    # Unique Meeting Identifier. Each instance of the meeting will have its own UUID
    string uuid?;
    # ID of the user set as host of meeting
    @jsondata:Name {value: "host_id"}
    string hostId?;
    # Meeting duration
    int duration?;
    # The time when the meeting started
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # The date when the recording will be auto-deleted when `auto_delete` is `true`. Otherwise, no date will be returned
    @jsondata:Name {value: "auto_delete_date"}
    string autoDeleteDate?;
    # Unique Identifier of the user account
    @jsondata:Name {value: "account_id"}
    string accountId?;
    # Meeting topic
    string topic?;
    # Meeting ID - also known as the meeting number
    int id?;
    @jsondata:Name {value: "recording_files"}
    record {
        @jsondata:Name {value: "file_path"}
        string filePath?;
        @jsondata:Name {value: "play_url"}
        string playUrl?;
        @jsondata:Name {value: "meeting_id"}
        string meetingId?;
        @jsondata:Name {value: "file_size"}
        decimal fileSize?;
        @jsondata:Name {value: "recording_end"}
        string recordingEnd?;
        @jsondata:Name {value: "file_type"}
        "MP4"|"M4A"|"CHAT"|"TRANSCRIPT"|"CSV"|"TB"|"CC"|"CHAT_MESSAGE"|"SUMMARY" fileType?;
        @jsondata:Name {value: "recording_type"}
        "shared_screen_with_speaker_view(CC)"|"shared_screen_with_speaker_view"|"shared_screen_with_gallery_view"|"active_speaker"|"gallery_view"|"shared_screen"|"audio_only"|"audio_transcript"|"chat_file"|"poll"|"host_video"|"closed_caption"|"timeline"|"thumbnail"|"audio_interpretation"|"summary"|"summary_next_steps"|"summary_smart_chapters"|"sign_interpretation"|"production_studio" recordingType?;
        @jsondata:Name {value: "download_url"}
        string downloadUrl?;
        @jsondata:Name {value: "file_extension"}
        "MP4"|"M4A"|"TXT"|"VTT"|"CSV"|"JSON"|"JPG" fileExtension?;
        string id?;
        @jsondata:Name {value: "deleted_time"}
        string deletedTime?;
        @jsondata:Name {value: "recording_start"}
        string recordingStart?;
        "completed" status?;
    }[] recordingFiles?;
};

public type InlineResponse20030 record {
    # Information about the PAC accounts
    @jsondata:Name {value: "pac_accounts"}
    InlineResponse20030PacAccounts[] pacAccounts?;
};

public type InlineResponse2009PolicyHotDesking record {
    # The device's status, either `online` or `offline`
    "online"|"offline" status?;
};

public type InlineResponse20032 record {
    @jsondata:Name {value: "billing_reports"}
    InlineResponse20032BillingReports[] billingReports?;
    # Currency of the billed amount
    string currency?;
};

public type RegistrantsRegistrantsRegistrantsAllOf123 record {
    # The URL that an approved registrant can use to join the meeting or webinar
    @jsondata:Name {value: "join_url"}
    string joinUrl?;
    # The time when the registrant registered
    @jsondata:Name {value: "create_time"}
    string createTime?;
    # The participant PIN code is used to authenticate audio participants before they join the meeting
    @jsondata:Name {value: "participant_pin_code"}
    int participantPinCode?;
    # The status of the registrant's registration.   
    # `approved` - User has been successfully approved for the webinar.  
    # `pending` - The registration is still pending.  
    # `denied` - User has been denied from joining the webinar
    string status?;
};

# Report object
public type InlineResponse20031 record {
    # The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # Array of activity logs
    @jsondata:Name {value: "activity_logs"}
    InlineResponse20031ActivityLogs[] activityLogs?;
    # Start date from which you want the activity logs report to be generated
    string 'from?;
    # End date until which you want the activity logs report to be generated
    string to?;
    # The number of records returned with a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize?;
};

public type InlineResponse20034 record {
    *InlineResponse20034AllOf1;
    *InlineResponse20034InlineResponse20034AllOf12;
};

public type InlineResponse20033 record {
    InlineResponse20033Invoices[] invoices?;
    # Currency of the billed amount in the invoice
    string currency?;
};

public type RegistrationList1RegistrationList1AllOf12 record {
    # List of registrant objects
    RegistrationList1Registrants[] registrants?;
};

public type InlineResponse20036 record {
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # Array of history meetings
    @jsondata:Name {value: "history_meetings"}
    InlineResponse20036HistoryMeetings[] historyMeetings?;
    # The number of records returned with a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize?;
};

# Information about the meeting registrant
public type MeetingIdRegistrantsBody record {
    *MeetingsmeetingIdregistrantsAllOf1;
    *MeetingsmeetingIdregistrantsmeetingsmeetingIdregistrantsAllOf12;
    *MeetingsmeetingIdregistrantsmeetingsmeetingIdregistrantsmeetingsmeetingIdregistrantsAllOf123;
};

public type InlineResponse20035 record {
    # Month for this report
    int month?;
    # Year for this report
    int year?;
    # Array of date objects
    InlineResponse20035Dates[] dates?;
};

public type InlineResponse20038 record {
    # User email
    @jsondata:Name {value: "user_email"}
    string userEmail?;
    # Number of meeting participants
    @jsondata:Name {value: "participants_count"}
    int participantsCount?;
    # Number of meeting minutes. This represents the total amount of meeting minutes attended by each participant including the host, for meetings hosted by the user. For instance if there were one host(named A) and one participant(named B) in a meeting, the value of total_minutes would be calculated as below:
    #
    # **total_minutes** = Total Meeting Attendance Minutes of A + Total Meeting Attendance Minutes of B
    @jsondata:Name {value: "total_minutes"}
    int totalMinutes?;
    # User display name
    @jsondata:Name {value: "user_name"}
    string userName?;
    # Meeting end time
    @jsondata:Name {value: "end_time"}
    string endTime?;
    # Custom keys and values assigned to the meeting
    @jsondata:Name {value: "custom_keys"}
    InlineResponse20038CustomKeys[] customKeys?;
    # Department of the host
    string dept?;
    # Meeting type
    int 'type?;
    # Meeting UUID. Each meeting instance will generate its own UUID(i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). [Double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it
    string uuid?;
    # Meeting duration
    int duration?;
    # Meeting start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # Tracking fields
    @jsondata:Name {value: "tracking_fields"}
    InlineResponse20038TrackingFields[] trackingFields?;
    # Meeting topic
    string topic?;
    # [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in &quot;**long**&quot; format(represented as int64 data type in JSON), also known as the meeting number
    int id?;
};

# Report object
public type InlineResponse20037 record {
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # Array of meeting activity logs
    @jsondata:Name {value: "meeting_activity_logs"}
    InlineResponse20037MeetingActivityLogs[] meetingActivityLogs?;
    # The number of records returned with a single API call
    @jsondata:Name {value: "page_size"}
    decimal pageSize = 30;
};

# Provides API key configurations needed when communicating with a remote HTTP endpoint.
public type ApiKeysConfig record {|
    string authorization;
|};

public type InlineResponse20039 record {
    *InlineResponse20039AllOf1;
    *InlineResponse20039InlineResponse20039AllOf12;
};

# The meeting's [sign language interpretation settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar). Make sure to add the language in the web portal in order to use it in the API. See link for details. 
#
# **Note:** If this feature is not enabled on the host's account, this setting will **not** be applied to the meeting
public type UsersuserIdmeetingsSettingsSignLanguageInterpretation record {
    # Whether to enable [sign language interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar) for the meeting. If not provided, the default value will be based on the user's setting
    boolean enable?;
    # Information about the meeting's sign language interpreters
    MeetingsmeetingIdSettingsSignLanguageInterpretationInterpreters[] interpreters?;
};

public type MeetingsmeetingIdregistrantsstatusRegistrants record {
    string id?;
    string email?;
};

# Represents the Queries record for the operation: meeting
public type MeetingQueries record {
    # Set this field's value to `true` to view meeting details of all previous occurrences of a [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings). 
    @http:Query {name: "show_previous_occurrences"}
    boolean showPreviousOccurrences?;
    # Meeting occurrence ID. Provide this field to view meeting details of a particular occurrence of the [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings)
    @http:Query {name: "occurrence_id"}
    string occurrenceId?;
};

public type InlineResponse20040Questions record {
    # Information about the user's questions and answers
    @jsondata:Name {value: "question_details"}
    InlineResponse20050QuestionDetails[] questionDetails?;
    # The participant's display name. If the **Allow participants to answer questions anonymously** setting is enabled for a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet), the participant's polling information is kept anonymous and the `name` field will return the &quot;Anonymous Attendee&quot; value
    string name?;
    # The participant's last name. If the **Allow participants to answer questions anonymously** setting is enabled for a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet), the participant's polling information is kept anonymous and the `last_name` field will return the &quot;Anonymous Attendee&quot; value
    @jsondata:Name {value: "last_name"}
    string lastName?;
    # The participant's first name. If the **Allow participants to answer questions anonymously** setting is enabled for a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet), the participant's polling information is kept anonymous and the `first_name` field will return the &quot;Anonymous Attendee&quot; value
    @jsondata:Name {value: "first_name"}
    string firstName?;
    # The participant's email address
    string email?;
};

public type RegistrationListRegistrationListAllOf12 record {
    # List of registrant objects
    RegistrationListRegistrants[] registrants?;
};

public type InlineResponse20058Participants record {
    # Participant duration, in seconds, calculated by subtracting the `leave_time` from the `join_time` for the `user_id`. If the participant leaves and rejoins the same meeting, they will be assigned a different `user_id` and Zoom displays their new duration in a separate object. Note that because of this, the duration may not reflect the total time the user was in the meeting
    int duration?;
    # Email address of the participant. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details
    @jsondata:Name {value: "user_email"}
    string userEmail?;
    # The participant's leave time
    @jsondata:Name {value: "leave_time"}
    string leaveTime?;
    # The participant's ID. This ID is assigned to the participant upon joining the webinar and is only valid for that webinar
    @jsondata:Name {value: "user_id"}
    string userId?;
    # Whether failover occurred during the webinar
    boolean failover?;
    # The participant's unique registrant ID. This field only returns if you pass the `registrant_id` value for the `include_fields` query parameter. 
    #
    # This field does not return if the `type` query parameter is the `live` value
    @jsondata:Name {value: "registrant_id"}
    string registrantId?;
    # The participant's name
    string name?;
    # The participant's unique identifier
    string id?;
    # Whether the webinar participant is an internal user
    @jsondata:Name {value: "internal_user"}
    boolean internalUser = false;
    # The participant's join time
    @jsondata:Name {value: "join_time"}
    string joinTime?;
    # The participant's status. 
    # * `in_meeting` - In a meeting. 
    # * `in_waiting_room` - In a waiting room
    "in_meeting"|"in_waiting_room" status?;
};

public type WebinarswebinarIdSettingsLanguageInterpretationInterpreters record {
    # A comma-separated list of the interpreter's languages. The string must contain exactly two country IDs.
    #
    # Only system-supported languages are allowed: `US` (English), `CN` (Chinese), `JP` (Japanese), `DE` (German), `FR` (French), `RU` (Russian), `PT` (Portuguese), `ES` (Spanish), and `KR` (Korean).
    #
    # For example, to set an interpreter translating from English to Chinese, use `US,CN`
    #
    # # Deprecated
    @deprecated
    string languages?;
    # A comma-separated list of the interpreter's languages. The string must contain exactly two languages.
    #
    # To get this value, use the `language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](https://developers.zoom.us/docs/api/users/#tag/users/GET/users/{userId}/settings) API response.
    #
    # **languages**: System-supported languages include `English`, `Chinese`, `Japanese`, `German`, `French`, `Russian`, `Portuguese`, `Spanish`, and `Korean`.
    #
    # **custom_languages**: User-defined languages added by the user.
    #
    # For example, an interpreter translating between English and French should use `English,French`
    @jsondata:Name {value: "interpreter_languages"}
    string interpreterLanguages?;
    # The interpreter's email address
    string email?;
};

public type WebinarswebinarIdregistrantswebinarswebinarIdregistrantsAllOf12 record {
    # The registrant's language preference for confirmation emails: 
    # * `en-US` - English (US) 
    # * `de-DE` - German (Germany) 
    # * `es-ES` - Spanish (Spain) 
    # * `fr-FR` - French (France) 
    # * `jp-JP` - Japanese 
    # * `pt-PT` - Portuguese (Portugal) 
    # * `ru-RU` - Russian 
    # * `zh-CN` - Chinese (PRC) 
    # * `zh-TW` - Chinese (Taiwan) 
    # * `ko-KO` - Korean 
    # * `it-IT` - Italian (Italy) 
    # * `vi-VN` - Vietnamese 
    # * `pl-PL` - Polish 
    # * `Tr-TR` - Turkish
    "en-US"|"de-DE"|"es-ES"|"fr-FR"|"jp-JP"|"pt-PT"|"ru-RU"|"zh-CN"|"zh-TW"|"ko-KO"|"it-IT"|"vi-VN"|"pl-PL"|"Tr-TR" language?;
    # The tracking source's unique identifier
    @jsondata:Name {value: "source_id"}
    string sourceId?;
};

public type InlineResponse20050QuestionDetails record {
    # The user's given answer
    string answer?;
    # The date and time at which the user answered the poll question
    @jsondata:Name {value: "date_time"}
    string dateTime?;
    # The poll question
    string question?;
    # The poll's ID
    @jsondata:Name {value: "polling_id"}
    string pollingId?;
};

public type InlineResponse20041 record {
    # Meeting start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # Array of meeting question objects
    InlineResponse20041Questions[] questions?;
    # The meeting ID in `long` format, represented as int64 data type in JSON. Also known as the meeting number
    int id?;
    # The meeting UUID. Each meeting instance will generate its own UUID - for example, after a meeting ends, a new UUID will be generated for the next instance of the meeting. Double-encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//'
    string uuid?;
};

# List of TSP accounts
public type TSPAccountsList1 record {
    # List of dial in numbers
    @jsondata:Name {value: "dial_in_numbers"}
    InlineResponse20056DialInNumbers[] dialInNumbers?;
    # Conference code: numeric value, length is less than 16
    @jsondata:Name {value: "conference_code"}
    string conferenceCode;
    # Leader PIN. Mumeric value, length is less than 16
    @jsondata:Name {value: "leader_pin"}
    string leaderPin;
    # The TSP account's ID
    "1"|"2" id?;
    # Telephony bridge
    @jsondata:Name {value: "tsp_bridge"}
    "US_TSP_TB"|"EU_TSP_TB" tspBridge?;
};

public type MeetingsmeetingIdrecordingsregistrantsquestionsCustomQuestions record {
    # Answer choices for the question. Cannot be used with short answer type
    string[] answers?;
    # The question's title
    string title?;
    # The type of registration question and answers
    "short"|"single"|"multiple" 'type?;
    # Whether registrants are required to answer custom questions or not
    boolean required?;
};

public type InlineResponse20040 record {
    # The meeting's start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # Information about the meeting questions
    InlineResponse20040Questions[] questions?;
    # The [meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID)
    int id?;
    # The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID
    string uuid?;
};

# List of TSP accounts
public type TSPAccountsList2 record {
    # List of dial in numbers
    @jsondata:Name {value: "dial_in_numbers"}
    UsersuserIdtspDialInNumbers[] dialInNumbers?;
    # Conference code: numeric value, length is less than 16
    @jsondata:Name {value: "conference_code"}
    string conferenceCode;
    # Leader PIN: numeric value, length is less than 16
    @jsondata:Name {value: "leader_pin"}
    string leaderPin;
    # Telephony bridge
    @jsondata:Name {value: "tsp_bridge"}
    "US_TSP_TB"|"EU_TSP_TB" tspBridge?;
};

public type InlineResponse20043 record {
    *InlineResponse20043AllOf1;
    *InlineResponse20043InlineResponse20043AllOf12;
};

public type InlineResponse20042 record {
    # The meeting's start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # The survey's ID
    @jsondata:Name {value: "survey_id"}
    string surveyId?;
    # The meeting ID
    @jsondata:Name {value: "meeting_id"}
    int meetingId?;
    # The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID
    @jsondata:Name {value: "meeting_uuid"}
    string meetingUuid?;
    # Information about the survey questions and answers
    @jsondata:Name {value: "survey_answers"}
    InlineResponse20052SurveyAnswers[] surveyAnswers?;
    # The name of survey
    @jsondata:Name {value: "survey_name"}
    string surveyName?;
};

public type InlineResponse20045 InlineResponse20045AllOf1;

public type InlineResponse20044 record {
    *InlineResponse20044AllOf1;
    *InlineResponse20044InlineResponse20044AllOf12;
};

public type InlineResponse20047 record {
    *InlineResponse20047AllOf1;
    *InlineResponse20047InlineResponse20047AllOf12;
    # The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
};

# Represents the Queries record for the operation: webinar
public type WebinarQueries record {
    # Set the value of this field to `true` if you would like to view Webinar details of all previous occurrences of a recurring Webinar
    @http:Query {name: "show_previous_occurrences"}
    boolean showPreviousOccurrences?;
    # Unique identifier for an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences. When you create a recurring Webinar using [**Create a webinar**](/docs/api-reference/zoom-api/methods#operation/webinarCreate) API, you can retrieve the Occurrence ID from the response of the API call
    @http:Query {name: "occurrence_id"}
    string occurrenceId?;
};

public type InlineResponse20046 record {
    *InlineResponse20046AllOf1;
    *InlineResponse20046InlineResponse20046AllOf12;
};

public type InlineResponse20049 record {
    *InlineResponse20049AllOf1;
    *InlineResponse20049InlineResponse20049AllOf12;
};

public type InlineResponse20048 record {
    # User email
    @jsondata:Name {value: "user_email"}
    string userEmail?;
    # Number of meeting participants
    @jsondata:Name {value: "participants_count"}
    int participantsCount?;
    # Number of Webinar minutes. This represents the total amount of Webinar minutes attended by each participant including the host, for a Webinar hosted by the user. For instance if there were one host(named A) and one participant(named B) in a Webinar, the value of total_minutes would be calculated as below:
    #
    # **total_minutes** = Total Webinar Attendance Minutes of A + Total Webinar Attendance Minutes of B
    @jsondata:Name {value: "total_minutes"}
    int totalMinutes?;
    # User display name
    @jsondata:Name {value: "user_name"}
    string userName?;
    # Meeting end time
    @jsondata:Name {value: "end_time"}
    string endTime?;
    # Custom keys and values assigned to the meeting
    @jsondata:Name {value: "custom_keys"}
    InlineResponse20038CustomKeys[] customKeys?;
    # Department of the host
    string dept?;
    # Meeting type
    int 'type?;
    # Webinar UUID. Each webinar instance will generate its own UUID(i.e., after a meeting ends, a new UUID will be generated when the next instance of the webinar starts). [double encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid) the UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it
    string uuid?;
    # Meeting duration
    int duration?;
    # Meeting start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # Tracking fields
    @jsondata:Name {value: "tracking_fields"}
    InlineResponse20038TrackingFields[] trackingFields?;
    # Meeting topic
    string topic?;
    # [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in &quot;**long**&quot; format(represented as int64 data type in JSON), also known as the meeting number
    int id?;
};

public type RegistrationList1Registrants record {
    *RegistrantsAllOf11;
    *RegistrantsRegistrantsAllOf112;
    *RegistrantsRegistrantsRegistrantsAllOf1123;
    # The registrant's status. 
    # * `approved` - Registrant is approved. 
    # * `denied` - Registrant is denied. 
    # * `pending` - Registrant is waiting for approval
    "approved"|"denied"|"pending" status?;
};

# Information about the meeting's settings
public type UsersuserIdmeetingsSettings record {
    @jsondata:Name {value: "breakout_room"}
    UsersuserIdmeetingsSettingsBreakoutRoom breakoutRoom?;
    # Whether to allow the host and co-hosts to fully control the mute state of participants. If not provided, the default value will be based on the user's setting
    @jsondata:Name {value: "allow_host_control_participant_mute_state"}
    boolean allowHostControlParticipantMuteState?;
    # The summary template ID used to generate a meeting summary based on a predefined template. To get available summary templates, use the **Get user summary templates** API. If not provided, the default value will be based on the user's setting. To enable this feature for your account, please [contact Zoom Support](https://support.zoom.com/hc/en)
    @jsondata:Name {value: "summary_template_id"}
    string summaryTemplateId?;
    # Add additional meeting [data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars). Provide this value as an array of [country codes](/docs/api/references/abbreviations/#countries) for the countries available as data center regions in the [**Account Profile**](https://zoom.us/account/setting) interface but have been opted out of in the [user settings](https://zoom.us/profile).
    #
    # For example, the data center regions selected in your [**Account Profile**](https://zoom.us/account) are `Europe`, `Hong Kong SAR`, `Australia`, `India`, `Japan`, `China`, `United States`, and `Canada`. However, in the [**My Profile**](https://zoom.us/profile) settings, you did **not** select `India` and `Japan` for meeting and webinar traffic routing.
    #
    # To include `India` and `Japan` as additional data centers, use the `[IN, TY]` value for this field
    @jsondata:Name {value: "additional_data_center_regions"}
    string[] additionalDataCenterRegions?;
    # Whether to include social media sharing buttons on the meeting's registration page. This setting is only applied to meetings with registration enabled
    @jsondata:Name {value: "show_share_button"}
    boolean showShareButton?;
    # Whether to send registrants an email confirmation. 
    # * `true` - Send a confirmation email. 
    # * `false` - Do not send a confirmation email
    @jsondata:Name {value: "registrants_confirmation_email"}
    boolean registrantsConfirmationEmail?;
    @jsondata:Name {value: "approved_or_denied_countries_or_regions"}
    UsersuserIdmeetingsSettingsApprovedOrDeniedCountriesOrRegions approvedOrDeniedCountriesOrRegions?;
    @jsondata:Name {value: "continuous_meeting_chat"}
    UsersuserIdmeetingsSettingsContinuousMeetingChat continuousMeetingChat?;
    # Whether to allow attendees to join a meeting from multiple devices. This setting is only applied to meetings with registration enabled
    @jsondata:Name {value: "allow_multiple_devices"}
    boolean allowMultipleDevices?;
    # If true, only [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) users can join the meeting
    @jsondata:Name {value: "meeting_authentication"}
    boolean meetingAuthentication?;
    # A semicolon-separated list of the meeting's alternative hosts' email addresses or IDs
    @jsondata:Name {value: "alternative_hosts"}
    string alternativeHosts?;
    # Whether the **Allow alternative hosts to add or edit polls** feature is enabled. This requires Zoom version 5.8.0 or higher
    @jsondata:Name {value: "alternative_host_update_polls"}
    boolean alternativeHostUpdatePolls?;
    # Enable the device testing
    @jsondata:Name {value: "device_testing"}
    boolean deviceTesting = false;
    # Whether to start meetings with the participant video on
    @jsondata:Name {value: "participant_video"}
    boolean participantVideo?;
    # The type of calendar integration used to schedule the meeting.
    # * `1` - [Zoom Outlook add-in](https://support.zoom.us/hc/en-us/articles/360031592971-Getting-started-with-Outlook-plugin-and-add-in) 
    # * `2` - [Zoom for Google Workspace add-on](https://support.zoom.us/hc/en-us/articles/360020187492-Using-the-Zoom-for-Google-Workspace-add-on)
    #
    # Works with the `private_meeting` field to determine whether to share details of meetings or not
    @jsondata:Name {value: "calendar_type"}
    1|2 calendarType?;
    # Whether to host the meeting in India (IN). This value defaults to `false`
    #
    # # Deprecated
    @jsondata:Name {value: "in_meeting"}
    @deprecated
    boolean inMeeting = false;
    # Whether to mute participants upon entry
    @jsondata:Name {value: "mute_upon_entry"}
    boolean muteUponEntry = false;
    # A list of available global dial-in countries
    @jsondata:Name {value: "global_dial_in_countries"}
    string[] globalDialInCountries?;
    @jsondata:Name {value: "question_and_answer"}
    UsersuserIdmeetingsSettingsQuestionAndAnswer questionAndAnswer?;
    # Whether participants can join the meeting before its host. This field is only used for scheduled meetings (`2`) or recurring meetings (`3` and `8`). This value defaults to `false`.
    #
    # If the [**Waiting Room** feature](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room) is enabled, this setting is **disabled**
    @jsondata:Name {value: "join_before_host"}
    boolean joinBeforeHost = false;
    # Whether the **Allow host to save video order** feature is enabled
    @jsondata:Name {value: "host_save_video_order"}
    boolean hostSaveVideoOrder?;
    # Whether to add a watermark when viewing a shared screen. If not provided, the default value will be based on the user's setting
    boolean watermark?;
    # Enable meeting registration approval.
    # * `0` - Automatically approve registration.
    # * `1` - Manually approve registration.
    # * `2` - No registration required.
    #
    # This value defaults to `2`
    @jsondata:Name {value: "approval_type"}
    0|1|2 approvalType = 2;
    # Whether to close registration after the event date. This value defaults to `false`
    @jsondata:Name {value: "close_registration"}
    boolean closeRegistration = false;
    # Whether to push meeting changes to the calendar. 
    #
    # To enable this feature, configure the **Configure Calendar and Contacts Service** in the user's profile page of the Zoom web portal and enable the **Automatically sync Zoom calendar events information bi-directionally between Zoom and integrated calendars.** setting in the **Settings** page of the Zoom web portal.
    # * `true` - Push meeting changes to the calendar.
    # * `false` - Do not push meeting changes to the calendar
    @jsondata:Name {value: "push_change_to_calendar"}
    boolean pushChangeToCalendar = false;
    # Whether to set the meeting as an internal meeting
    @jsondata:Name {value: "internal_meeting"}
    boolean internalMeeting = false;
    # A list of participants who can bypass meeting authentication. These participants will receive a unique meeting invite
    @jsondata:Name {value: "authentication_exception"}
    UsersuserIdmeetingsSettingsAuthenticationException[] authenticationException?;
    # If the value of the `join_before_host` field is `true`, this field indicates the time limits when a participant can join a meeting before the meeting's host.
    #
    # * `0` - Allow the participant to join the meeting at anytime.
    # * `5` - Allow the participant to join 5 minutes before the meeting's start time.
    # * `10` - Allow the participant to join 10 minutes before the meeting's start time.
    # * `15` - Allow the participant to join 15 minutes before the meeting's start time
    @jsondata:Name {value: "jbh_time"}
    0|5|10|15 jbhTime?;
    # Third party audio conference information
    @jsondata:Name {value: "audio_conference_info"}
    string audioConferenceInfo?;
    # The meeting's authenticated domains. Only Zoom users whose email address contains an authenticated domain can join the meeting. Comma-separate multiple domains or use a wildcard for listing domains
    @jsondata:Name {value: "authentication_domains"}
    string authenticationDomains?;
    # Defines who will receive a summary after this meeting. This field is applicable only when `auto_start_meeting_summary` is set to `true`.
    #
    # * `1` - Only meeting host.
    #
    # * `2` - Only meeting host, co-hosts, and alternative hosts.
    #
    # * `3` - Only meeting host and meeting invitees in our organization.
    #
    # * `4` - All meeting invitees including those outside of our organization. If not provided, the default value will be based on the user's setting
    @jsondata:Name {value: "who_will_receive_summary"}
    1|2|3|4 whoWillReceiveSummary?;
    # A list of the meeting's invitees
    @jsondata:Name {value: "meeting_invitees"}
    UsersuserIdmeetingsSettingsMeetingInvitees[] meetingInvitees?;
    # The type of [end-to-end (E2EE) encryption](https://support.zoom.us/hc/en-us/articles/360048660871) to use for the meeting. 
    # * `enhanced_encryption` - Enhanced encryption. Encryption is stored in the cloud when you enable this option. 
    # * `e2ee` - End-to-end encryption. The encryption key is stored on your local device and **cannot** be obtained by anyone else. When you use E2EE encryption, [certain features](https://support.zoom.us/hc/en-us/articles/360048660871), such as cloud recording or phone and SIP/H.323 dial-in, are **disabled**
    @jsondata:Name {value: "encryption_type"}
    "enhanced_encryption"|"e2ee" encryptionType?;
    # If the `meeting_authentication` value is `true`, the type of authentication required for users to join a meeting.
    #
    # To get this value, use the `authentication_options` array's `id` value in the [**Get user settings**](/docs/api-reference/zoom-api/methods#operation/userSettings) API response
    @jsondata:Name {value: "authentication_option"}
    string authenticationOption?;
    @jsondata:Name {value: "sign_language_interpretation"}
    UsersuserIdmeetingsSettingsSignLanguageInterpretation signLanguageInterpretation?;
    # Whether to disable the participant video during meeting. To enable this feature for your account, please [contact Zoom Support](https://support.zoom.us/hc/en-us)
    @jsondata:Name {value: "disable_participant_video"}
    boolean disableParticipantVideo = false;
    # Whether to enable the [**Focus Mode** feature](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode) when the meeting starts
    @jsondata:Name {value: "focus_mode"}
    boolean focusMode?;
    # The meeting's registration type. 
    # * `1` - Attendees register once and can attend any meeting occurrence. 
    # * `2` - Attendees must register for each meeting occurrence. 
    # * `3` - Attendees register once and can select one or more meeting occurrences to attend.
    #
    # This field is only for recurring meetings with fixed times (`8`). This value defaults to `1`
    @jsondata:Name {value: "registration_type"}
    1|2|3 registrationType = 1;
    # The contact email address for meeting registration
    @jsondata:Name {value: "contact_email"}
    string contactEmail?;
    # Whether to enable the [**Waiting Room** feature](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room). If this value is `true`, this **disables** the `join_before_host` setting
    @jsondata:Name {value: "waiting_room"}
    boolean waitingRoom?;
    # How participants join the audio portion of the meeting.
    # * `both` - Both telephony and VoIP. 
    # * `telephony` - Telephony only. 
    # * `voip` - VoIP only. 
    # * `thirdParty` - Third party audio conference
    "both"|"telephony"|"voip"|"thirdParty" audio = "both";
    # Defines who can ask questions about this meeting's transcript. This field is applicable only when `auto_start_ai_companion_questions` is set to `true`.
    #
    # * `1` - All participants and invitees.
    #
    # * `2` - All participants only from when they join.
    #
    # * `3` - Only meeting host.
    #
    # * `4` - Participants and invitees in our organization.
    #
    # * `5` - Participants in our organization only from when they join. If not provided, the default value will be based on the user's setting
    @jsondata:Name {value: "who_can_ask_questions"}
    1|2|3|4|5 whoCanAskQuestions?;
    # The contact name for meeting registration
    @jsondata:Name {value: "contact_name"}
    string contactName?;
    # Whether to host the meeting in China (CN). This value defaults to `false`
    #
    # # Deprecated
    @jsondata:Name {value: "cn_meeting"}
    @deprecated
    boolean cnMeeting = false;
    # Whether to send registrants email notifications about their registration approval, cancellation, or rejection.
    #
    # * `true` - Send an email notification.
    # * `false` - Do not send an email notification.
    #
    # Set this value to `true` to also use the `registrants_confirmation_email` parameter
    @jsondata:Name {value: "registrants_email_notification"}
    boolean registrantsEmailNotification?;
    # Whether to send email notifications to alternative hosts. This value defaults to `true`
    @jsondata:Name {value: "alternative_hosts_email_notification"}
    boolean alternativeHostsEmailNotification = true;
    # Whether to use a [Personal Meeting ID (PMI)](/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi) instead of a generated meeting ID. This field is only used for scheduled meetings (`2`), instant meetings (`1`), or recurring meetings with no fixed time (`3`). This value defaults to `false`
    @jsondata:Name {value: "use_pmi"}
    boolean usePmi = false;
    # The meeting's resources
    MeetingsmeetingIdSettingsResources[] resources?;
    # The automatic recording settings. 
    # * `local` - Record the meeting locally. 
    # * `cloud` - Record the meeting to the cloud. 
    # * `none` - Auto-recording disabled.
    #
    # This value defaults to `none`
    @jsondata:Name {value: "auto_recording"}
    "local"|"cloud"|"none" autoRecording = "none";
    # Whether to start meetings with the host video on
    @jsondata:Name {value: "host_video"}
    boolean hostVideo?;
    @jsondata:Name {value: "language_interpretation"}
    UsersuserIdmeetingsSettingsLanguageInterpretation languageInterpretation?;
    # Whether to automatically start a meeting summary. If not provided, the default value will be based on the user's setting
    @jsondata:Name {value: "auto_start_meeting_summary"}
    boolean autoStartMeetingSummary?;
    # Whether to automatically start AI Companion questions. If not provided, the default value will be based on the user's setting
    @jsondata:Name {value: "auto_start_ai_companion_questions"}
    boolean autoStartAiCompanionQuestions?;
    # Whether to set the meeting as a participant focused meeting
    @jsondata:Name {value: "participant_focused_meeting"}
    boolean participantFocusedMeeting = false;
    # Whether to set the meeting as private
    @jsondata:Name {value: "private_meeting"}
    boolean privateMeeting?;
    # Whether to include authenticated guest's email addresses in meetings' attendee reports
    @jsondata:Name {value: "email_in_attendee_report"}
    boolean emailInAttendeeReport?;
    # Whether to send email notifications to [alternative hosts](https://support.zoom.us/hc/en-us/articles/208220166) and [users with scheduling privileges](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-privilege). This value defaults to `true`
    @jsondata:Name {value: "email_notification"}
    boolean emailNotification = true;
};

public type InlineResponse20039InlineResponse20039AllOf12 record {
    # Array of meeting participant objects
    InlineResponse20039Participants[] participants?;
};

# Recurrence object. Use this object only for a meeting with type `8`, a recurring meeting with fixed time. 
public type WebinarswebinarIdRecurrence record {
    # Select the final date when the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. Cannot be used with `end_times`
    @jsondata:Name {value: "end_date_time"}
    string endDateTime?;
    # Select how many times the webinar will recur before it is canceled. The maximum number of recurring is 60. Cannot be used with `end_date_time`
    @jsondata:Name {value: "end_times"}
    int endTimes = 1;
    # Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.**   
    # `-1` - Last week of the month.  
    # `1` - First week of the month.  
    # `2` - Second week of the month.  
    # `3` - Third week of the month.  
    # `4` - Fourth week of the month
    @jsondata:Name {value: "monthly_week"}
    -1|1|2|3|4 monthlyWeek?;
    # Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field. 
    #
    #
    # `1` - Sunday.  
    # `2` - Monday.  
    # `3` - Tuesday.  
    # `4` -  Wednesday.  
    # `5` - Thursday.  
    # `6` - Friday.  
    # `7` - Saturday
    @jsondata:Name {value: "monthly_week_day"}
    1|2|3|4|5|6|7 monthlyWeekDay?;
    # Define the interval when the meeting should recur. If you would like to schedule a meeting that recurs every two months, set the value of this field as `2` and the value of the `type` parameter as `3`. 
    #
    # For a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.
    @jsondata:Name {value: "repeat_interval"}
    int repeatInterval?;
    # Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.
    #
    # If you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. If you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`
    @jsondata:Name {value: "monthly_day"}
    int monthlyDay = 1;
    # Recurrence meeting types. 
    # `1` - Daily.  
    # `2` - Weekly.  
    # `3` - Monthly
    1|2|3 'type;
    # This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat.   
    #
    # The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `1` as the value of this field.  
    #
    # **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `1,3` as the value of this field.
    #
    #
    # `1`  - Sunday.   
    # `2` - Monday.  
    # `3` - Tuesday.  
    # `4` -  Wednesday.  
    # `5` -  Thursday.  
    # `6` - Friday.  
    # `7` - Saturday
    @jsondata:Name {value: "weekly_days"}
    "1"|"2"|"3"|"4"|"5"|"6"|"7" weeklyDays = "1";
};

# Represents the Queries record for the operation: webinarRegistrantCreate
public type WebinarRegistrantCreateQueries record {
    # A comma-separated list of webinar occurrence IDs. Get this value with the [Get a webinar](/docs/api/rest/reference/zoom-api/methods/#operation/webinar) API. Make sure the `registration_type` is 3 if updating multiple occurrences with this API
    @http:Query {name: "occurrence_ids"}
    string occurrenceIds?;
};

public type InlineResponse20013SettingsMeetingInvitees record {
    # Whether the meeting invitee is an internal user
    @jsondata:Name {value: "internal_user"}
    boolean internalUser = false;
    # The invitee's email address
    string email?;
};

# The poll List
public type PollList1 PollList1AllOf1;

public type InlineResponse20019AllOf1 record {
    # The meeting poll ID
    string id?;
    # The meeting poll's status.
    # `notstart` - Poll not started
    # `started` - Poll started
    # `ended` - Poll ended
    # `sharing` - Sharing poll results
    # `deactivated` - Poll deactivated
    "notstart"|"started"|"ended"|"sharing"|"deactivated" status?;
};

# Enable customers to leverage services that require customization of the FROM header to identify the caller. Use this field if you pass the `participant.invite.room_system_callout` value for the `method` field and the `sip` value for the `call_type` field
public type LiveMeetingsmeetingIdeventsParamsSipHeaders record {
    # Custom URI that will be used within the SIP Header. The URI must start with 'sip:' or 'sips:' as a valid URI based on parameters defined by the platform
    @jsondata:Name {value: "from_uri"}
    string fromUri?;
    # Ability to add 1 to 10 custom headers, each of which has a maximum length of 256 bytes to comply with SIP standards.  Custom headers would leverage header names starting with 'X-' per SIP guidelines
    @jsondata:Name {value: "additional_headers"}
    LiveMeetingsmeetingIdeventsParamsSipHeadersAdditionalHeaders[] additionalHeaders?;
    # Custom name that will be used within the SIP Header
    @jsondata:Name {value: "from_display_name"}
    string fromDisplayName?;
    # Custom remote name that will be used within the meeting
    @jsondata:Name {value: "to_display_name"}
    string toDisplayName?;
};

public type InlineResponse20043OperationLogs record {
    # Operation detail
    @jsondata:Name {value: "operation_detail"}
    string operationDetail?;
    # Action
    string action?;
    # Category type
    @jsondata:Name {value: "category_type"}
    string categoryType?;
    # The time at which the operation was performed
    string time?;
    # The user who performed the operation
    string operator?;
};

public type InlineResponse20050 record {
    # The webinar's start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # Information about the webinar questions
    InlineResponse20050Questions[] questions?;
    # The webinar ID
    int id?;
    # The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID
    string uuid?;
};

# Represents the Queries record for the operation: Listmeetingsummaries
public type ListmeetingsummariesQueries record {
    # The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # The start date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to retrieve the creation date range of the meeting summaries
    string 'from?;
    # The end date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to retrieve the creation date range of the meeting summaries
    string to?;
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

public type InlineResponse20038CustomKeys record {
    # Value of the custom key associated with the user
    @constraint:String {maxLength: 256}
    string value?;
    # Custom key associated with the user
    @constraint:String {maxLength: 64}
    string 'key?;
};

public type InlineResponse20052 record {
    # The webinar's start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # The survey's ID
    @jsondata:Name {value: "survey_id"}
    string surveyId?;
    # The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID
    @jsondata:Name {value: "webinar_uuid"}
    string webinarUuid?;
    # The webinar ID
    @jsondata:Name {value: "webinar_id"}
    int webinarId?;
    # Information about the survey questions and answers
    @jsondata:Name {value: "survey_answers"}
    InlineResponse20052SurveyAnswers[] surveyAnswers?;
    # The name of survey
    @jsondata:Name {value: "survey_name"}
    string surveyName?;
};

public type InlineResponse20051 record {
    # Webinar start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # Array of webinar question objects
    InlineResponse20051Questions[] questions?;
    # Webinar ID in `long` format, represented as int64 data type in JSON. Also known as the webinar number
    int id?;
    # Webinar UUID. Each webinar instance will generate its own UUID - after a webinar ends, a new UUID will be generated for the next instance of the webinar. Double-encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it
    string uuid?;
};

public type InlineResponse20054 record {
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # SIP phones object
    @constraint:Array {maxLength: 300}
    InlineResponse20054Phones[] phones?;
    # The number of records returned within a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize = 30;
};

public type InlineResponse20053 record {
    # The page number of the current results
    @jsondata:Name {value: "page_number"}
    int pageNumber?;
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The total number of all the records available across pages
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # SIP phones object
    InlineResponse20053Phones[] phones?;
    # The number of pages returned for the request made
    @jsondata:Name {value: "page_count"}
    int pageCount?;
    # The number of records returned within a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize?;
};

# Details of firmware that the vendor can upgrade
public type InlineResponse20010FirmwareVersions record {
    # The device's manufacturer
    string vendor?;
    # The device's model name
    string model?;
    # The package version
    string version?;
    # The prompt information for this version
    @jsondata:Name {value: "warn_info"}
    string warnInfo?;
};

public type InlineResponse20056 record {
    @jsondata:Name {value: "tsp_accounts"}
    TSPAccountsList1[] tspAccounts?;
};

public type InlineResponse20055 record {
    # Control restriction on account users adding a TSP number outside of account's dial in numbers
    @jsondata:Name {value: "dial_in_number_unrestricted"}
    boolean dialInNumberUnrestricted?;
    # Control restriction on account users being able to modify their TSP credentials
    @jsondata:Name {value: "modify_credential_forbidden"}
    boolean modifyCredentialForbidden?;
    @jsondata:Name {value: "dial_in_numbers"}
    InlineResponse20055DialInNumbers[] dialInNumbers?;
    # For master account, extend its TSP setting to all sub accounts. For sub account, extend TSP setting from master account
    @jsondata:Name {value: "master_account_setting_extended"}
    boolean masterAccountSettingExtended?;
    # Enable Telephony Service Provider for account users
    boolean enable?;
    # Telephony Service Provider
    @jsondata:Name {value: "tsp_provider"}
    string tspProvider?;
    # Telephony bridge zone
    @jsondata:Name {value: "tsp_bridge"}
    "US_TSP_TB"|"EU_TSP_TB" tspBridge?;
    # Enable TSP feature for account. This has to be enabled to use any other tsp settings/features
    @jsondata:Name {value: "tsp_enabled"}
    boolean tspEnabled?;
};

public type InlineResponse20058 record {
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The total number of records available across all pages
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # The number of pages returned for this request
    @jsondata:Name {value: "page_count"}
    int pageCount?;
    # The total number of records returned from a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize = 30;
    InlineResponse20058Participants[] participants?;
};

# Tracking field list
public type InlineResponse20057 InlineResponse20057AllOf1;

public type InlineResponse20059 record {
    # The webinar's start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    InlineResponse20059Questions[] questions?;
    # Webinar ID in **long** format, represented as int64 data type in JSON, also known as the webinar number
    int id?;
    # Webinar UUID
    string uuid?;
};

public type WebinarswebinarIdregistrantsquestionsQuestions record {
    # State whether the selected fields are required or optional
    boolean required?;
    # Field name
    @jsondata:Name {value: "field_name"}
    "last_name"|"address"|"city"|"country"|"zip"|"state"|"phone"|"industry"|"org"|"job_title"|"purchasing_time_frame"|"role_in_purchase_process"|"no_of_employees"|"comments" fieldName?;
};

public type MeetingsmeetingIdbatchPollsPolls record {
    # The information about the poll's questions
    MeetingsmeetingIdbatchPollsQuestions[] questions?;
    # Whether to allow meeting participants to answer poll questions anonymously: 
    # * `true` &mdash; Anonymous polls enabled. 
    # * `false` &mdash; Participants cannot answer poll questions anonymously. 
    #
    # This value defaults to `false`
    boolean anonymous = false;
    # The type of poll: 
    # * `1` &mdash; Poll. 
    # * `2` &mdash; Advanced Poll. This feature must be enabled in your Zoom account. 
    # * `3` &mdash; Quiz. This feature must be enabled in your Zoom account. 
    #
    # This value defaults to `1`
    @jsondata:Name {value: "poll_type"}
    1|2|3 pollType = 1;
    # The poll's title, up to 64 characters
    @constraint:String {maxLength: 64}
    string title?;
};

public type WebinarRegistrant record {
    *WebinarRegistrantAllOf1;
    *WebinarRegistrantWebinarRegistrantAllOf12;
    *WebinarRegistrantWebinarRegistrantWebinarRegistrantAllOf123;
    # The registrant's status: 
    # * `approved` &mdash; Registrant is approved. 
    # * `denied` &mdash; Registrant is denied. 
    # * `pending` &mdash; Registrant is waiting for approval
    "approved"|"denied"|"pending" status?;
};

public type InlineResponse2009DeviceInfos record {
    # The device ID
    @jsondata:Name {value: "device_id"}
    string deviceId?;
    # The device's manufacturer
    string vendor?;
    # The device type
    @jsondata:Name {value: "device_type"}
    string deviceType?;
    # The device's model name
    string model?;
    # The device's status, either `online` or `offline`
    "online"|"offline" status?;
    # The device policy
    InlineResponse2009Policy policy?;
};

# Represents the Queries record for the operation: deleteWebinarBrandingNameTag
public type DeleteWebinarBrandingNameTagQueries record {
    # A comma-separated list of the name tag IDs to delete
    @http:Query {name: "name_tag_ids"}
    string nameTagIds?;
};

public type DevicesBody record {
    # The Zoom Room's ID. Only for Zoom Room devices
    @jsondata:Name {value: "room_id"}
    string roomId?;
    # The ZDM group ID
    @jsondata:Name {value: "zdm_group_id"}
    string zdmGroupId?;
    # The device's name
    @jsondata:Name {value: "device_name"}
    string deviceName;
    # User email for assigning the Zoom Phone device. Only for Zoom Phone devices
    @jsondata:Name {value: "user_email"}
    string userEmail?;
    # The device's mac address
    @jsondata:Name {value: "mac_address"}
    string macAddress;
    # The device's manufacturer
    string vendor;
    # The extension number
    @jsondata:Name {value: "extension_number"}
    string extensionNumber?;
    # The device's serial number
    @jsondata:Name {value: "serial_number"}
    string serialNumber;
    # The device's model
    string model;
    # Device type.  
    # `0` - Zoom Rooms computer.  
    # `1` - Zoom Rooms controller.  
    # `5` - Zoom Phone appliance
    @jsondata:Name {value: "device_type"}
    0|1|5 deviceType;
    # The name of the tag
    string tag?;
};

public type InlineResponse20026QuestionDetails record {
    # An answer submitted for the question. The value is 'live answered' if this is a live answer
    string answer?;
    # A question asked during the Q&amp;A
    string question?;
};

# Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4)
public type InlineResponse2018SettingsBreakoutRoom record {
    # Create a room or rooms
    MeetingsmeetingIdSettingsBreakoutRoomRooms[] rooms?;
    # Set this field's value to `true` to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option
    boolean enable?;
};

public type InlineResponse20052AnswerDetails record {
    # The survey question
    string question?;
    # The user's given answer
    string answer?;
    # The date and time at which the user answered the survey question
    @jsondata:Name {value: "date_time"}
    string dateTime?;
    # The question's ID
    @jsondata:Name {value: "question_id"}
    string questionId?;
};

# List of Meetings
public type MeetingInstances MeetingInstancesAllOf1;

public type InlineResponse2009PolicyCallControl record {
    # This field lets the call control feature to the current device. Configure the desk phone devices to enable call control, which lets users perform desk phone's call control actions from the Zoom desktop client, including making and accepting calls. 
    # * `unsupported` 
    # * `on` 
    # * `off`
    "unsupported"|"on"|"off" status?;
};

# Pagination object
public type InlineResponse20024AllOf1 record {
    # The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The number of all records available across pages
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # The number of pages returned for the request made
    @jsondata:Name {value: "page_count"}
    int pageCount?;
    # The number of records returned within a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize = 30;
};

public type InlineResponse20034AllOf1 record {
    # Start date for this report
    string 'from?;
    # End date for this report
    string to?;
};

public type WebinarSurveyObjectCustomSurveyQuestions record {
    # The low score label used for the `rating_min_value` field, up to 50 characters. 
    #
    # This field only applies to the `rating_scale` survey
    @jsondata:Name {value: "rating_min_label"}
    string ratingMinLabel?;
    # Whether participants must answer the question. 
    # * `true` - The participant must answer the question. 
    # * `false` - The participant does not need to answer the question. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "answer_required"}
    boolean answerRequired = false;
    # The allowed minimum number of characters. This field only applies to `short_answer` and `long_answer` questions. You must provide at least a **one** character minimum value
    @jsondata:Name {value: "answer_min_character"}
    int answerMinCharacter?;
    # The rating scale's minimum value. This value cannot be less than zero. 
    #
    # This field only applies to the `rating_scale` survey
    @jsondata:Name {value: "rating_min_value"}
    int ratingMinValue?;
    # The survey question, up to 420 characters
    string name?;
    # The survey question's available answers. This field requires a **minimum** of two answers. 
    #
    # * For `single` and `multiple` questions, you can only provide a maximum of 50 answers. 
    # * For `matching` polls, you can only provide a maximum of 16 answers. 
    # * For `rank_order` polls, you can only provide a maximum of seven answers
    @constraint:Array {minLength: 2}
    WebinarSurveyObjectCustomSurveyQuestionsAnswersItemsString[] answers?;
    # The survey's question and answer type. 
    # * `single` - Single choice. 
    # * `multiple` - Multiple choice. 
    # * `matching` - Matching. 
    # * `rank_order` - Rank order 
    # * `short_answer` - Short answer 
    # * `long_answer` - Long answer. 
    # * `fill_in_the_blank` - Fill in the blank 
    # * `rating_scale` - Rating scale
    "single"|"multiple"|"matching"|"rank_order"|"short_answer"|"long_answer"|"fill_in_the_blank"|"rating_scale" 'type?;
    # The high score label used for the `rating_max_value` field, up to 50 characters. 
    #
    # This field only applies to the `rating_scale` survey
    @jsondata:Name {value: "rating_max_label"}
    string ratingMaxLabel?;
    # The allowed maximum number of characters. This field only applies to `short_answer` and `long_answer` questions. 
    # * For `short_answer` question, a maximum of 500 characters. 
    # * For `long_answer` question, a maximum of 2,000 characters
    @jsondata:Name {value: "answer_max_character"}
    int answerMaxCharacter?;
    # The rating scale's maximum value, up to a maximum value of 10. 
    #
    # This field only applies to the `rating_scale` survey
    @jsondata:Name {value: "rating_max_value"}
    int ratingMaxValue?;
    # Whether to display the radio selection as a drop-down box. 
    # * `true` - Show as a drop-down box. 
    # * `false` - Do not show as a drop-down box. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "show_as_dropdown"}
    boolean showAsDropdown = false;
    # Information about the prompt questions. This field only applies to `matching` and `rank_order` questions. You **must** provide a minimum of two prompts, up to a maximum of 10 prompts
    @constraint:Array {maxLength: 10, minLength: 2}
    MeetingsmeetingIdsurveyCustomSurveyPrompts[] prompts?;
};

public type MeetingIdStatusBody record {
    # `end` - End a meeting.  
    #
    # `recover` - [Recover](https://support.zoom.us/hc/en-us/articles/360038297111-Recover-a-deleted-meeting) a deleted meeting
    "end"|"recover" action?;
};

public type WebinarIdSurveyBody WebinarSurveyObject1;

# Represents the Queries record for the operation: Gethistorymeetingandwebinarlist
public type GethistorymeetingandwebinarlistQueries record {
    # The type of date to query.
    # * `start_time` - Query by meeting's start time. 
    # * `end_time` - Query by meeting's end time. 
    #
    # This value defaults to `start_time`
    @http:Query {name: "date_type"}
    "start_time"|"end_time" dateType?;
    # The keywords of meeting topic or meeting ID
    @http:Query {name: "search_key"}
    string searchKey?;
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # The group ID. To get a group ID, use the [**List groups**](/docs/api/rest/reference/user/methods/#operation/groups) API. 
    #
    # **Note:** The API response will only contain users who are members of the queried group ID
    @http:Query {name: "group_id"}
    string groupId?;
    # The meeting type to query. 
    # - `all` - rerturn meetings and webinars 
    # - `meeting` - only return meetings 
    # - `webinar` - only return webinars
    @http:Query {name: "meeting_type"}
    "meeting"|"webinar"|"all" meetingType?;
    # The start date in `yyyy-mm-dd` format. The date range defined by the `from` and `to` parameters should only be one month, as the report includes only one month worth of data at once
    string 'from;
    # The end date `yyyy-MM-dd` format
    string to;
    # Query meetings that have this type of report.
    # - `all` - all meetings
    # - `poll` - meetings with poll data 
    # - `survey` - meetings with survey data 
    # - `qa` - meetings with Q&A data 
    # - `resource` - meetings with resource link data 
    # - `reaction` - meetings with reaction data
    @http:Query {name: "report_type"}
    "all"|"poll"|"survey"|"qa"|"resource"|"reaction" reportType?;
    # The number of records to be returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize?;
};

public type InlineResponse2015AllOf1 record {
    # The meeting poll ID
    string id?;
    # The status of the meeting poll:  
    # `notstart` - Poll not started  
    # `started` - Poll started  
    # `ended` - Poll ended  
    # `sharing` - Sharing poll results
    "notstart"|"started"|"ended"|"sharing" status?;
};

public type MeetingIdSipDialingBody record {
    # If customers desire that a passcode be embedded in the SIP URI dial string, they must supply the passcode. Zoom will not validate the passcode
    string passcode?;
};

# The webinar's [language interpretation settings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0064768). Make sure to add the language in the web portal in order to use it in the API. See link for details. 
#
# **Note:** This feature is only available for certain Webinar add-on, Education, and Business and higher plans. If this feature is not enabled on the host's account, this setting will **not** be applied to the webinar. This is not supported for simulive webinars
public type WebinarswebinarIdSettingsLanguageInterpretation record {
    # Whether to enable [language interpretation](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0064768) for the webinar
    boolean enable?;
    # Information about the webinar's language interpreters
    WebinarswebinarIdSettingsLanguageInterpretationInterpreters[] interpreters?;
};

public type InlineResponse2019 record {
    # The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address
    @jsondata:Name {value: "register_server3"}
    string registerServer3?;
    # The email address of the user to associate with the SIP Phone. Can add `.win`, `.mac`, `.android`, `.ipad`, `.iphone`, `.linux`, `.pc`, `.mobile`, `.pad` at the end of the email (for example, `user@example.com.mac`) to add accounts for different platforms for the same user
    @jsondata:Name {value: "user_email"}
    string userEmail?;
    # Protocols supported by the SIP provider.  
    # The value must be either `UDP`, `TCP`, `TLS`, `AUTO`
    @jsondata:Name {value: "transport_protocol3"}
    "UDP"|"TCP"|"TLS"|"AUTO" transportProtocol3?;
    # The phone number associated with the user in the SIP account
    @jsondata:Name {value: "user_name"}
    string userName?;
    # The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address
    @jsondata:Name {value: "register_server2"}
    string registerServer2?;
    # Protocols supported by the SIP provider.  
    # The value must be either `UDP`, `TCP`, `TLS`, `AUTO`
    @jsondata:Name {value: "transport_protocol2"}
    "UDP"|"TCP"|"TLS"|"AUTO" transportProtocol2?;
    # The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server
    @jsondata:Name {value: "proxy_server"}
    string proxyServer?;
    # The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty
    @jsondata:Name {value: "proxy_server2"}
    string proxyServer2?;
    # The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty
    @jsondata:Name {value: "proxy_server3"}
    string proxyServer3?;
    # The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server
    @jsondata:Name {value: "registration_expire_time"}
    int registrationExpireTime = 60;
    # The password generated for the user in the SIP account
    string password?;
    # The number to dial for checking voicemail
    @jsondata:Name {value: "voice_mail"}
    string voiceMail?;
    # The name or IP address of your provider's SIP domain (example: CDC.WEB). 
    @constraint:String {maxLength: 64}
    string domain?;
    # The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address
    @jsondata:Name {value: "register_server"}
    string registerServer?;
    # The SIP phone ID
    string id?;
    # The authorization name of the user that is registered for SIP phone
    @jsondata:Name {value: "authorization_name"}
    string authorizationName?;
    # Protocols supported by the SIP provider.  
    # The value must be either `UDP`, `TCP`, `TLS`, `AUTO`
    @jsondata:Name {value: "transport_protocol"}
    "UDP"|"TCP"|"TLS"|"AUTO" transportProtocol?;
};

public type PollListAllOf1 record {
    # The number of all records available across pages
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # An array of polls
    PollListPolls[] polls?;
};

public type InlineResponse20041QuestionDetails record {
    # The given answer. If this is a live answer, the value is 'live answered'.
    # **Note:** All answers will be returned together and separated by semicolons. For more detailed answer information, please see the "answer_details" field
    #
    # # Deprecated
    @deprecated
    string answer?;
    # Asked question
    string question?;
    # Question create time
    @jsondata:Name {value: "create_time"}
    string createTime?;
    # Question status.
    # If not supported, the value will be `default`
    @jsondata:Name {value: "question_status"}
    "default"|"open"|"dismissed"|"answered"|"deleted" questionStatus?;
    # Question UUID
    @jsondata:Name {value: "question_id"}
    string questionId?;
    # Array of answers from the user
    @jsondata:Name {value: "answer_details"}
    InlineResponse20041AnswerDetails[] answerDetails?;
};

public type InlineResponse20041AnswerDetails record {
    # Content submit time
    @jsondata:Name {value: "create_time"}
    string createTime?;
    # The user ID of the user who answered the question. This value returns blank for external users
    @jsondata:Name {value: "user_id"}
    string userId?;
    # User display name, including the host or participant
    string name?;
    # Type of answer
    "default"|"host_answered_publicly"|"host_answered_privately"|"participant_commented"|"host_answered" 'type = "default";
    # Participant's email. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details
    string email?;
    # The answer from host or the comment from participant
    @constraint:String {maxLength: 1024}
    string content?;
};

public type UserIdUserIdOneOf12 string;

# The edited summary content
#
# # Deprecated
@deprecated
public type InlineResponse20018EditedSummary record {
    # The user edited summary overview
    @jsondata:Name {value: "summary_overview"}
    string summaryOverview?;
    # The user edited summary details
    @jsondata:Name {value: "summary_details"}
    string summaryDetails?;
    # The user edited next steps
    @jsondata:Name {value: "next_steps"}
    string[] nextSteps?;
};

# Represents the Queries record for the operation: webinars
public type WebinarsQueries record {
    # **Deprecated** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination
    @http:Query {name: "page_number"}
    int pageNumber = 1;
    # The type of webinar. 
    # * `scheduled` - All valid previous (unexpired) webinars, live webinars, and upcoming scheduled webinars. 
    # * `upcoming` - All upcoming webinars, including live webinars
    "scheduled"|"upcoming" 'type = "scheduled";
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

# The summary detail object
public type InlineResponse20018SummaryDetails record {
    # The summary content
    string summary?;
    # The summary label
    string label?;
};

public type MeetingsmeetingIdSettingsBreakoutRoomRooms record {
    # The breakout room's name
    string name?;
    # Email addresses of the participants who are to be assigned to the breakout room
    string[] participants?;
};

public type MeetingsmeetingIdTrackingFields record {
    # Tracking fields type
    string 'field?;
    # Tracking fields value
    string value?;
};

# Information about custom questions
public type MeetingsmeetingIdrecordingsregistrantsCustomQuestions record {
    # The title of the custom question
    string title?;
    # The custom question's response value. This has a limit of 128 characters
    @constraint:String {maxLength: 128}
    string value?;
};

public type MeetingId MeetingIdOneOf1|MeetingIdMeetingIdOneOf12;

public type InlineResponse20111 record {
    *InlineResponse20111AllOf1;
    *TSPAccountsList2;
};

# The history meeting detail
public type InlineResponse20036HistoryMeetings record {
    # The maximum number of online viewers at the same time during the webinar, excluding panelists
    @jsondata:Name {value: "max_concurrent_views"}
    int maxConcurrentViews?;
    # The meeting's create date and time
    @jsondata:Name {value: "create_time"}
    string createTime?;
    # The [meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in &quot;**long**&quot; format(represented as int64 data type in JSON), also known as the meeting number
    @jsondata:Name {value: "meeting_id"}
    int meetingId?;
    # The custom attributes that the host is assigned
    @jsondata:Name {value: "custom_fields"}
    InlineResponse20036CustomFields[] customFields?;
    # The meeting unique universal identifier (UUID). Double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it
    @jsondata:Name {value: "meeting_uuid"}
    string meetingUuid?;
    # The meeting's end date and time
    @jsondata:Name {value: "end_time"}
    string endTime?;
    # The host's display name
    @jsondata:Name {value: "host_display_name"}
    string hostDisplayName?;
    # Whether the meeting was created directly through Zoom or via an API request: 
    # * If the meeting was created via an OAuth app, this field returns the OAuth app's name. 
    # * If the meeting was created via JWT or the Zoom Web Portal, this returns the `Zoom` value
    string 'source?;
    # The meeting type, either Meeting or Webinar
    "Meeting"|"Webinar" 'type?;
    # The total duration of all participants, in minutes
    @jsondata:Name {value: "total_participant_minutes"}
    int totalParticipantMinutes?;
    # The meeting's duration, in minutes
    int duration?;
    # The meeting's start date and time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # The tracking fields and values assigned to the meeting
    @jsondata:Name {value: "tracking_fields"}
    InlineResponse20036TrackingFields[] trackingFields?;
    @jsondata:Name {value: "feature_used"}
    InlineResponse20036FeatureUsed featureUsed?;
    # The meeting's topic
    string topic?;
    # The host's department
    string department?;
    # The host's email address
    @jsondata:Name {value: "host_email"}
    string hostEmail?;
    # The number of meeting participants
    int participants?;
    # The host's groups
    @constraint:Array {maxLength: 200}
    string[] group?;
    # This value shows how many people viewed the webinar on their computer. It does not include panelists or attendees who only listened by phone. Viewers who joined the meeting multiple times or from multiple devices are counted only once
    @jsondata:Name {value: "unique_viewers"}
    int uniqueViewers?;
};

public type InlineResponse20110 record {
    # Defined a set of basic components of SIP network architecture, including proxy_server, register_server and transport_protocol
    SipPhonesphonesServer server?;
    # The password generated for the user in the SIP account
    string password?;
    # The email address of the user to associate with the SIP Phone. Can add `.pc`, `.mobile`, `.pad` at the end of the email (for example, `user@example.com.mac`) to add accounts for different platforms for the same user
    @jsondata:Name {value: "user_email"}
    string userEmail?;
    @jsondata:Name {value: "server_3"}
    SipPhonesphonesServer server3?;
    # The number to dial for checking voicemail
    @jsondata:Name {value: "voice_mail"}
    string voiceMail?;
    @jsondata:Name {value: "server_2"}
    SipPhonesphonesServer server2?;
    # The phone number associated with the user in the SIP account
    @jsondata:Name {value: "user_name"}
    string userName?;
    # The name or IP address of your provider's SIP domain (example: CDC.WEB). 
    @constraint:String {maxLength: 64}
    string domain?;
    # The displayed phone number associated with the user can be either in extension format or E.164 format. You can specify the displayed number when the dialable number differs from the SIP username
    @jsondata:Name {value: "display_number"}
    string displayNumber?;
    # The authorization name of the user that is registered for SIP phone
    @jsondata:Name {value: "authorization_name"}
    string authorizationName?;
    # The SIP phone ID
    @jsondata:Name {value: "phone_id"}
    string phoneId?;
    # The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server
    @jsondata:Name {value: "registration_expire_time"}
    int registrationExpireTime = 60;
};

# Meeting object
public type MeetingsmeetingIdBody record {
    # Meeting settings
    MeetingsmeetingIdSettings settings?;
    # Whether to create a prescheduled meeting through the [GSuite app](https://support.zoom.us/hc/en-us/articles/360020187492-Zoom-for-GSuite-add-on). This **only** supports the meeting `type` value of `2` - scheduled meetings- and `3` - recurring meetings with no fixed time. 
    # * `true` - Create a prescheduled meeting. 
    # * `false` - Create a regular meeting
    @jsondata:Name {value: "pre_schedule"}
    boolean preSchedule = false;
    # The timezone to assign to the `start_time` value. Only use this field for scheduled or recurring meetings with a fixed time.
    #
    # For a list of supported timezones and their formats, see our [timezone list](/docs/api/references/abbreviations/#timezones)
    string timezone?;
    # The email address or `userId` of the user to schedule a meeting for
    @jsondata:Name {value: "schedule_for"}
    string scheduleFor?;
    # The type of meeting. 
    # * `1` - An instant meeting. 
    # * `2` - A scheduled meeting. 
    # * `3` - A recurring meeting with no fixed time. 
    # * `8` - A recurring meeting with fixed time. 
    # * `10` - A screen share only meeting
    1|2|3|8|10 'type = 2;
    # Meeting description
    @constraint:String {maxLength: 2000}
    string agenda?;
    # Meeting duration in minutes. Used for scheduled meetings only
    int duration?;
    # Recurrence object. Use this object only for a meeting with type `8`, a recurring meeting with fixed time. 
    MeetingsmeetingIdRecurrence recurrence?;
    # Meeting start time. When using a format like `yyyy-MM-dd'T'HH:mm:ss'Z'`, always use GMT time. When using a format like `yyyy-MM-dd'T'HH:mm:ss`, use local time and specify the time zone. Only used for scheduled meetings and recurring meetings with a fixed time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # The passcode required to join the meeting. By default, a passcode can **only** have a maximum length of 10 characters and only contain alphanumeric characters and the `@`, `-`, `_`, and `*` characters.
    #
    # **Note:**
    # * If the account owner or administrator has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode **must** meet those requirements. 
    # * If passcode requirements are enabled, use the [**Get user settings**](/docs/api/users/#tag/users/GET/users/{userId}/settings) API or the [**Get account settings**](/docs/api/accounts/#tag/accounts/GET/accounts/{accountId}/settings) API to get the requirements.
    # * If the **Require a passcode when scheduling new meetings** account setting is enabled and locked, a passcode will be automatically generated if one is not provided
    @constraint:String {maxLength: 10}
    string password?;
    # Tracking fields
    @jsondata:Name {value: "tracking_fields"}
    MeetingsmeetingIdTrackingFields[] trackingFields?;
    # Meeting topic
    @constraint:String {maxLength: 200}
    string topic?;
    # Unique identifier of the meeting template. 
    #
    # [Schedule the meeting from a meeting template](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates#h_86f06cff-0852-4998-81c5-c83663c176fb). Retrieve this field's value by calling the [List meeting templates](/docs/api/rest/reference/zoom-api/methods/#operation/listMeetingTemplates) API
    @jsondata:Name {value: "template_id"}
    string templateId?;
};

public type InlineResponse20113 InlineResponse20113AllOf1;

public type MeetingId1OneOf1 int;

public type InlineResponse20112 record {
    *InlineResponse20112AllOf1;
    *TrackingField4;
};

public type InlineResponse20115 record {
    InlineResponse20115Registrants[] registrants?;
};

# Represents the Queries record for the operation: recordingsList
public type RecordingsListQueries record {
    # The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # The query metadata of the recording if using an on-premise meeting connector for the meeting
    string mc = "false";
    # The meeting ID
    @http:Query {name: "meeting_id"}
    int meetingId?;
    # The type of cloud recording to retrieve from the trash. 
    #
    # *   `meeting_recordings`: List all meeting recordings from the trash.  
    # *  `recording_file`: List all individual recording files from the trash. 
    @http:Query {name: "trash_type"}
    string trashType = "meeting_recordings";
    # The start date in 'yyyy-mm-dd' UTC format for the date range where you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. 
    #
    # For example, if you make the API request on June 30, 2020, without providing the `from` and `to` parameters, by default the value of 'from' field will be `2020-06-30` and the value of the 'to' field will be `2020-07-01`. 
    #
    # **Note**: The `trash` files cannot be filtered by date range and thus, the `from` and `to` fields should not be used for trash files
    string 'from?;
    # The end date in 'yyyy-mm-dd' 'yyyy-mm-dd' UTC format. 
    string to?;
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
    # The query trash.
    # * `true` - List recordings from trash.  
    # * `false` - Do not list recordings from the trash.  
    #
    # The default value is `false`. If you set it to `true`, you can use the `trash_type` property to indicate the type of Cloud recording that you need to retrieve. 
    boolean trash = false;
};

# Webinar object
public type InlineResponse20114 record {
    # Array of occurrence objects
    InlineResponse20114Occurrences[] occurrences?;
    # H.323/SIP room system passcode
    @jsondata:Name {value: "h323_passcode"}
    string h323Passcode?;
    # Time zone to format `start_time`
    string timezone?;
    #
    # The `start_url` of a webinar is a URL using which a host or an alternative host can start the webinar. This URL should only be used by the host of the meeting and should not be shared with anyone other than the host of the webinar. 
    #
    # The expiration time for the `start_url` field listed in the response of the [**Create a webinar**](/docs/api/rest/reference/zoom-api/methods#operation/webinarCreate) API is two hours for all regular users. 
    #
    # For users created using the `custCreate` option via the [**Create users**](/docs/api/rest/reference/zoom-api/methods#operation/userCreate) API, the expiration time of the `start_url` field is 90 days.
    #
    # For security reasons, to retrieve the latest value for the `start_url` field programmatically after expiry, call the [**Get a webinar**](/docs/api/rest/reference/zoom-api/methods#operation/webinar) API and refer to the value of the `start_url` field in the response.  
    #
    #
    #
    @jsondata:Name {value: "start_url"}
    string startUrl?;
    # Create time
    @jsondata:Name {value: "created_at"}
    string createdAt?;
    # The previously recorded file's ID for `simulive`
    @jsondata:Name {value: "record_file_id"}
    string recordFileId?;
    # Webinar types.  
    # `5` - Webinar.  
    # `6` - Recurring webinar with no fixed time.  
    # `9` - Recurring webinar with a fixed time
    5|6|9 'type = 5;
    # Specify whether or not registrants of this webinar should receive confirmation emails
    @jsondata:Name {value: "registrants_confirmation_email"}
    boolean registrantsConfirmationEmail?;
    # Unique identifier of a webinar. Each webinar instance will generate its own UUID. Ror example, after a webinar ends, a new UUID will be generated for the next instance of the Webinar). Once a Webinar ends, the value of the UUID for the same webinar will be different from when it was scheduled
    string uuid?;
    # Webinar duration
    int duration?;
    # The webinar passcode. By default, it can be up to 10 characters in length and may contain alphanumeric characters as well as special characters such as !, @, #, etc
    @constraint:String {maxLength: 10}
    string password?;
    # Webinar ID in **long** format, represented as int64 data type in JSON. Also known as the webinar number
    int id?;
    # Email address of the meeting host
    @jsondata:Name {value: "host_email"}
    string hostEmail?;
    # Webinar settings
    InlineResponse20114Settings settings?;
    # URL to join the webinar. Only share this URL with the users who should be invited to the Webinar
    @jsondata:Name {value: "join_url"}
    string joinUrl?;
    # Webinar agenda
    string agenda?;
    # ID of the user set as host of the webinar
    @jsondata:Name {value: "host_id"}
    string hostId?;
    # Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time. 
    RecurrenceWebinar2 recurrence?;
    # Webinar start time in GMT/UTC
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # Tracking fields
    @jsondata:Name {value: "tracking_fields"}
    InlineResponse20114TrackingFields[] trackingFields?;
    # Whether the webinar is `simulive`
    @jsondata:Name {value: "is_simulive"}
    boolean isSimulive?;
    # The platform through which the meeting was created.
    # * `other` - Created through another platform.
    # * `open_api` - Created through Open API.
    # * `web_portal` - Created through the web portal
    @jsondata:Name {value: "creation_source"}
    "other"|"open_api"|"web_portal" creationSource?;
    # Whether to transition a simulive webinar to live. The host must be present at the time of transition
    @jsondata:Name {value: "transition_to_live"}
    boolean transitionToLive?;
    # Encrypted passcode for third party endpoints (H323/SIP)
    @jsondata:Name {value: "encrypted_passcode"}
    string encryptedPasscode?;
    # Webinar topic
    @constraint:String {maxLength: 200}
    string topic?;
    # Unique identifier of the webinar template. Use this field only if you would like to [schedule the webinar using an existing template](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates#schedule). The value of this field can be retrieved from [**List webinar templates**](/docs/api/rest/reference/zoom-api/methods#operation/listWebinarTemplates) API.
    # You must provide the user ID of the host instead of the email address in the `userId` path parameter in order to use a template for scheduling a Webinar
    @jsondata:Name {value: "template_id"}
    string templateId?;
};

public type InlineResponse20117 record {
    # The virtual background file's size, in bytes
    int size?;
    # The virtual background file's name
    string name?;
    # The virtual background file's ID
    string id?;
    # Whether the file is the default virtual background file
    @jsondata:Name {value: "is_default"}
    boolean isDefault?;
    # The virtual background file's file type. 
    # * `image` - An image file
    "image" 'type?;
};

public type InlineResponse20116 record {
    # The name tag's accent color
    @jsondata:Name {value: "accent_color"}
    string accentColor?;
    # The name tag's background_color color
    @jsondata:Name {value: "background_color"}
    string backgroundColor?;
    # The name tag's name
    string name?;
    # The name tag's ID
    string id?;
    # The name tag's text color
    @jsondata:Name {value: "text_color"}
    string textColor?;
    # Whether the name tag is the default name tag or not
    @jsondata:Name {value: "is_default"}
    boolean isDefault?;
};

public type InlineResponse20119 record {
    # The time when the panelist was added
    @jsondata:Name {value: "updated_at"}
    string updatedAt?;
    # Webinar ID
    string id?;
};

public type InlineResponse20118 record {
    # The wallpaper file's size, in bytes
    int size?;
    # The wallpaper file's name
    string name?;
    # The wallpaper file's ID
    string id?;
    # The wallpaper file's file type. 
    # * `image` - An image file
    "image" 'type?;
};

# Registrant
public type RegistrantsRegistrantsAllOf112 record {
    # The registrant's ZIP or postal code
    string zip?;
    # The registrant's two-letter ISO [country code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries)
    string country?;
    # Information about custom questions
    @jsondata:Name {value: "custom_questions"}
    RegistrantsRegistrantsAllOf12_custom_questions[] customQuestions?;
    # The registrant's purchasing time frame. 
    # * `Within a month` 
    # * `1-3 months` 
    # * `4-6 months` 
    # * `More than 6 months` 
    # * `No timeframe`
    @jsondata:Name {value: "purchasing_time_frame"}
    ""|"Within a month"|"1-3 months"|"4-6 months"|"More than 6 months"|"No timeframe" purchasingTimeFrame?;
    # The registrant's address
    string address?;
    # The registrant's questions and comments
    string comments?;
    # The registrant's city
    string city?;
    # The registrant's organization
    string org?;
    # The registrant's last name
    @jsondata:Name {value: "last_name"}
    string lastName?;
    # The registrant's number of employees. 
    # * `1-20` 
    # * `21-50` 
    # * `51-100` 
    # * `101-250` 
    # * `251-500` 
    # * `501-1,000` 
    # * `1,001-5,000` 
    # * `5,001-10,000` 
    # * `More than 10,000`
    @jsondata:Name {value: "no_of_employees"}
    ""|"1-20"|"21-50"|"51-100"|"101-250"|"251-500"|"501-1,000"|"1,001-5,000"|"5,001-10,000"|"More than 10,000" noOfEmployees?;
    # The registrant's industry
    string industry?;
    # The registrant's phone number
    string phone?;
    # The registrant's role in the purchase process. 
    # * `Decision Maker` 
    # * `Evaluator/Recommender` 
    # * `Influencer` 
    # * `Not involved`
    @jsondata:Name {value: "role_in_purchase_process"}
    ""|"Decision Maker"|"Evaluator/Recommender"|"Influencer"|"Not involved" roleInPurchaseProcess?;
    # The registrant's state or province
    string state?;
    # The registrant's first name
    @jsondata:Name {value: "first_name"}
    string firstName;
    # The registrant's job title
    @jsondata:Name {value: "job_title"}
    string jobTitle?;
    # The registrant's email address. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for return value details
    string email;
    # The registrant's status. 
    # * `approved` - Registrant is approved. 
    # * `denied` - Registrant is denied. 
    # * `pending` - Registrant is waiting for approval
    "approved"|"denied"|"pending" status?;
};

# Pagination Object
public type H323SIPDeviceListAllOf1 record {
    # **Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination
    #
    # # Deprecated
    @jsondata:Name {value: "page_number"}
    @deprecated
    int pageNumber = 1;
    # The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The total number of all the records available across pages
    @jsondata:Name {value: "total_records"}
    int totalRecords?;
    # The number of pages returned for the request made
    @jsondata:Name {value: "page_count"}
    int pageCount?;
    # The number of records returned with a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize = 30;
};

public type InlineResponse20025Questions record {
    @jsondata:Name {value: "question_details"}
    InlineResponse20025QuestionDetails[] questionDetails?;
    # Name of the user who submitted answers to the poll. If `anonymous` option is enabled for a poll, the participant's polling information will be kept anonymous and the value of `name` field will be `Anonymous Attendee`
    string name?;
    # Email address of the user who submitted answers to the poll. If the user is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details
    string email?;
};

public type InlineResponse20038TrackingFields record {
    # Tracking fields type
    string 'field?;
    # Tracking fields value
    string value?;
};

public type InlineResponse20055DialInNumbers record {
    # Dial-in number, length is less than 16
    @constraint:String {maxLength: 16}
    string number?;
    # Country Code
    string code?;
    # Dial-in number type
    string 'type?;
};

# Represents the Queries record for the operation: meetingLocalRecordingJoinToken
public type MeetingLocalRecordingJoinTokenQueries record {
    # Whether to bypass the waiting room
    @http:Query {name: "bypass_waiting_room"}
    boolean bypassWaitingRoom?;
};

# Represents the Queries record for the operation: listArchivedFiles
public type ListArchivedFilesQueries record {
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # Deprecated. Please use 'group_ids' for querying
    #
    # # Deprecated
    @http:Query {name: "group_id"}
    @deprecated
    string groupId?;
    # The group IDs. To get a group ID, use the [List groups](/docs/api/rest/reference/scim-api/methods/#operation/groupSCIM2List) API.
    # (The maximum number of supported groups for filtering is 7.)
    @http:Query {name: "group_ids"}
    string groupIds?;
    # The query start date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `to` query parameter value cannot exceed seven days
    string 'from?;
    # The query end date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value and the `from` query parameter value cannot exceed seven days
    string to?;
    # The type of query date.
    # * `meeting_start_time` 
    # * `archive_complete_time` 
    #
    # This value defaults to `meeting_start_time`
    @http:Query {name: "query_date_type"}
    "meeting_start_time"|"archive_complete_time" queryDateType = "meeting_start_time";
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

# Information about the registrant
public type MeetingsmeetingIdregistrantsAllOf1 record {
    # The registrant's ZIP or postal code
    string zip?;
    # The registrant's two-letter [country code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries)
    string country?;
    # Information about custom questions
    @jsondata:Name {value: "custom_questions"}
    MeetingsmeetingIdrecordingsregistrantsCustomQuestions[] customQuestions?;
    # The registrant's purchasing time frame: 
    # * `Within a month` 
    # * `1-3 months` 
    # * `4-6 months` 
    # * `More than 6 months` 
    # * `No timeframe`
    @jsondata:Name {value: "purchasing_time_frame"}
    ""|"Within a month"|"1-3 months"|"4-6 months"|"More than 6 months"|"No timeframe" purchasingTimeFrame?;
    # The registrant's address
    string address?;
    # The registrant's questions and comments
    string comments?;
    # The registrant's city
    string city?;
    # The registrant's organization
    string org?;
    # The registrant's last name
    @jsondata:Name {value: "last_name"}
    string lastName?;
    # The registrant's number of employees: 
    # * `1-20` 
    # * `21-50` 
    # * `51-100` 
    # * `101-500` 
    # * `500-1,000` 
    # * `1,001-5,000` 
    # * `5,001-10,000` 
    # * `More than 10,000`
    @jsondata:Name {value: "no_of_employees"}
    ""|"1-20"|"21-50"|"51-100"|"101-500"|"500-1,000"|"1,001-5,000"|"5,001-10,000"|"More than 10,000" noOfEmployees?;
    # The registrant's industry
    string industry?;
    # The registrant's phone number
    string phone?;
    # The registrant's role in the purchase process: 
    # * `Decision Maker` 
    # * `Evaluator/Recommender` 
    # * `Influencer` 
    # * `Not involved`
    @jsondata:Name {value: "role_in_purchase_process"}
    ""|"Decision Maker"|"Evaluator/Recommender"|"Influencer"|"Not involved" roleInPurchaseProcess?;
    # The registrant's state or province
    string state?;
    # The registrant's first name
    @jsondata:Name {value: "first_name"}
    string firstName;
    # The registrant's job title
    @jsondata:Name {value: "job_title"}
    string jobTitle?;
    # The registrant's email address
    @constraint:String {maxLength: 128}
    string email;
};

public type InlineResponse20071CustomQuestions record {
    # An array of answer choices. Can't be used for short answer type
    string[] answers?;
    # Custom question
    string title?;
    # The question-answer type
    "short"|"single_radio"|"single_dropdown"|"multiple" 'type?;
    # State whether or not the custom question is required to be answered by a registrant
    boolean required?;
};

# Represents the Queries record for the operation: webinarDelete
public type WebinarDeleteQueries record {
    # The meeting or webinar occurrence ID
    @http:Query {name: "occurrence_id"}
    string occurrenceId?;
    # `true` - Notify panelists and registrants about the webinar cancellation via email. 
    #
    # `false` - Do not send any email notification to webinar registrants and panelists. 
    #
    # The default value of this field is `false`
    @http:Query {name: "cancel_webinar_reminder"}
    boolean cancelWebinarReminder?;
};

public type InlineResponse20120 record {
    *InlineResponse20120AllOf1;
    *MeetingAndWebinarPollingObject5;
};

# Information about the webinar's encoded SIP URI
public type InlineResponse20122 record {
    # This value identifies the webinar participant. It is automatically embedded in the SIP URI if the API caller has a CRC plan
    @jsondata:Name {value: "participant_identifier_code"}
    string participantIdentifierCode?;
    # Whether the API caller has a Conference Room Connector (CRC) plan
    @jsondata:Name {value: "paid_crc_plan_participant"}
    boolean paidCrcPlanParticipant?;
    # The webinar's encoded SIP URI
    @jsondata:Name {value: "sip_dialing"}
    string sipDialing?;
    # The number of seconds the encoded SIP URI is valid before it expires
    @jsondata:Name {value: "expire_in"}
    int expireIn?;
};

public type InlineResponse20121 record {
    # Array of occurrence objects
    InlineResponse20121Occurrences[] occurrences?;
    # The webinar's start time
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # The URL the registrant can use to join the webinar
    @jsondata:Name {value: "join_url"}
    string joinUrl?;
    # The registrant's ID
    @jsondata:Name {value: "registrant_id"}
    string registrantId?;
    # The webinar's topic
    @constraint:String {maxLength: 200}
    string topic?;
    # The webinar's ID
    int id?;
};

public type MeetingIdMeetingIdOneOf12 string;

# Represents the Queries record for the operation: reportUsers
public type ReportUsersQueries record {
    # The page number of the current page in the returned records
    @http:Query {name: "page_number"}
    int pageNumber = 1;
    # The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # The group ID. To get a group ID, use the [**List groups**](/docs/api/rest/reference/user/methods/#operation/groups) API. 
    #
    # **Note:** The API response will only contain users who are members of the queried group ID
    @http:Query {name: "group_id"}
    string groupId?;
    # Start date in 'yyyy-mm-dd' format. The date range defined by the `from` and `to` parameters should only be one month as the report includes only one month worth of data at once
    string 'from;
    # End date
    string to;
    # Active or inactive hosts.  
    # `active` - Active hosts.   
    # `inactive` - Inactive hosts
    "active"|"inactive" 'type?;
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};

# Registrant
public type RegistrantsRegistrantsAllOf122 record {
    # The registrant's ZIP or postal code
    string zip?;
    # The registrant's two-letter ISO [country code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries)
    string country?;
    # Information about custom questions
    @jsondata:Name {value: "custom_questions"}
    RegistrantsRegistrantsAllOf12_custom_questions[] customQuestions?;
    # The registrant's purchasing time frame. 
    # * `Within a month.` 
    # * `1-3 months.` 
    # * `4-6 months.` 
    # * `More than 6 months.` 
    # * `No timeframe.`
    @jsondata:Name {value: "purchasing_time_frame"}
    ""|"Within a month"|"1-3 months"|"4-6 months"|"More than 6 months"|"No timeframe" purchasingTimeFrame?;
    # The registrant's address
    string address?;
    # The registrant's questions and comments
    string comments?;
    # The registrant's city
    string city?;
    # The registrant's organization
    string org?;
    # The registrant's last name
    @jsondata:Name {value: "last_name"}
    string lastName?;
    # The registrant's number of employees. 
    # * `1-20` 
    # * `21-50` 
    # * `51-100` 
    # * `101-250` 
    # * `251-500` 
    # * `501-1,000` 
    # * `1,001-5,000` 
    # * `5,001-10,000` 
    # * `More than 10,000`
    @jsondata:Name {value: "no_of_employees"}
    ""|"1-20"|"21-50"|"51-100"|"101-250"|"251-500"|"501-1,000"|"1,001-5,000"|"5,001-10,000"|"More than 10,000" noOfEmployees?;
    # The registrant's industry
    string industry?;
    # The registrant's phone number
    string phone?;
    # The registrant's role in the purchase process. 
    # * `Decision maker` 
    # * `Evaluator/Recommender.` 
    # * `Influencer.` 
    # * `Not involved.`
    @jsondata:Name {value: "role_in_purchase_process"}
    ""|"Decision Maker"|"Evaluator/Recommender"|"Influencer"|"Not involved" roleInPurchaseProcess?;
    # The registrant's state or province
    string state?;
    # The registrant's first name
    @jsondata:Name {value: "first_name"}
    string firstName;
    # The registrant's job title
    @jsondata:Name {value: "job_title"}
    string jobTitle?;
    # The registrant's email address. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for return value details
    string email;
    # The registrant's status. 
    # * `approved` - Registrant is approved. 
    # * `denied` - Registrant is denied. 
    # * `pending` - Registrant is waiting for approval
    "approved"|"denied"|"pending" status?;
};

# The information about meeting and webinar polling
public type MeetingAndWebinarPollingObject record {
    # The information about the poll's questions
    MeetingsmeetingIdpollspollIdQuestions[] questions?;
    # Whether meeting participants answer poll questions anonymously. 
    #
    # This value defaults to `false`
    boolean anonymous = false;
    # The type of poll. 
    # * `1` - Poll. 
    # * `2` - Advanced Poll. This feature must be enabled in your Zoom account. 
    # * `3` - Quiz. This feature must be enabled in your Zoom account. 
    #
    # This value defaults to `1`
    @jsondata:Name {value: "poll_type"}
    1|2|3 pollType?;
    # The poll's title, up to 64 characters
    @constraint:String {maxLength: 64}
    string title?;
};

# Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4)
public type MeetingsmeetingIdSettingsBreakoutRoom record {
    # Create room(s)
    MeetingsmeetingIdSettingsBreakoutRoomRooms[] rooms?;
    # Set this field's value to `true` to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option
    boolean enable?;
};

public type InlineResponse20035Dates record {
    # Date for this object
    string date?;
    # Number of meeting minutes on this date
    @jsondata:Name {value: "meeting_minutes"}
    int meetingMinutes?;
    # Number of meetings on this date
    int meetings?;
    # Number of new users on this date
    @jsondata:Name {value: "new_users"}
    int newUsers?;
    # Number of participants on this date
    int participants?;
};

public type SipPhonesBody record {
    # The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address
    @jsondata:Name {value: "register_server3"}
    string registerServer3?;
    # The email address of the user to associate with the SIP Phone. Can add `.win`, `.mac`, `.android`, `.ipad`, `.iphone`, `.linux`, `.pc`, `.mobile`, `.pad` at the end of the email (for example, `user@example.com.mac`) to add accounts for different platforms for the same user
    @jsondata:Name {value: "user_email"}
    string userEmail;
    # Protocols supported by the SIP provider.  
    # The value must be either `UDP`, `TCP`, `TLS`, `AUTO`
    @jsondata:Name {value: "transport_protocol3"}
    "UDP"|"TCP"|"TLS"|"AUTO" transportProtocol3?;
    # The phone number associated with the user in the SIP account
    @jsondata:Name {value: "user_name"}
    string userName;
    # The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address
    @jsondata:Name {value: "register_server2"}
    string registerServer2?;
    # Protocols supported by the SIP provider.  
    # The value must be either `UDP`, `TCP`, `TLS`, `AUTO`
    @jsondata:Name {value: "transport_protocol2"}
    "UDP"|"TCP"|"TLS"|"AUTO" transportProtocol2?;
    # The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server
    @jsondata:Name {value: "proxy_server"}
    string proxyServer;
    # The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty
    @jsondata:Name {value: "proxy_server2"}
    string proxyServer2?;
    # The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty
    @jsondata:Name {value: "proxy_server3"}
    string proxyServer3?;
    # The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server
    @jsondata:Name {value: "registration_expire_time"}
    int registrationExpireTime = 60;
    # The password generated for the user in the SIP account
    string password;
    # The number to dial for checking voicemail
    @jsondata:Name {value: "voice_mail"}
    string voiceMail?;
    # The name or IP address of your provider's SIP domain (example: CDC.WEB). 
    @constraint:String {maxLength: 64}
    string domain;
    # The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address
    @jsondata:Name {value: "register_server"}
    string registerServer;
    # The authorization name of the user that is registered for SIP phone
    @jsondata:Name {value: "authorization_name"}
    string authorizationName;
    # Protocols supported by the SIP provider.  
    # The value must be either `UDP`, `TCP`, `TLS`, `AUTO`
    @jsondata:Name {value: "transport_protocol"}
    "UDP"|"TCP"|"TLS"|"AUTO" transportProtocol?;
};

public type UsersuserIdtspDialInNumbers record {
    # Dial-in number: length is less than 16
    @constraint:String {maxLength: 16, minLength: 1}
    string number?;
    # Country code
    @constraint:String {maxLength: 6}
    string code?;
    # Country Label, if passed, will display in place of code
    @jsondata:Name {value: "country_label"}
    string countryLabel?;
    # Dial-in number types:  
    # `toll` - Toll number.  
    # `tollfree` -Toll free number.  
    #
    # `media_link` - Media link
    "toll"|"tollfree"|"media_link" 'type?;
};

public type H323SIPDeviceListDevices record {
    *DevicesAllOf1;
    *TheH323SIPDeviceObject3;
};

# Represents the Queries record for the operation: meetingregistrantdelete
public type MeetingregistrantdeleteQueries record {
    # The meeting occurrence ID
    @http:Query {name: "occurrence_id"}
    string occurrenceId?;
};

public type RegistrantsRegistrantsRegistrantsAllOf1123 record {
    # The URL that an approved registrant can use to join the meeting or webinar
    @jsondata:Name {value: "join_url"}
    string joinUrl?;
    # The time when the registrant registered
    @jsondata:Name {value: "create_time"}
    string createTime?;
    # The status of the registrant's registration.
    # `approved` - User has been successfully approved for the webinar.  
    # `pending` -  The registration is still pending.  
    # `denied` - User has been denied from joining the webinar
    string status?;
};

public type MeetingsmeetingIdpollspollIdQuestions record {
    # Whether participants must answer the question. 
    # * `true` - The participant must answer the question. 
    # * `false` - The participant does not need to answer the question. 
    #
    # **Note:** 
    # * When the poll's `type` value is `1` (Poll), this value defaults to `true`. 
    # * When the poll's `type` value is the `2` (Advanced Poll) or `3` (Quiz) values, this value defaults to `false`
    @jsondata:Name {value: "answer_required"}
    boolean answerRequired = false;
    # The allowed minimum number of characters. This field only applies to `short_answer` and `long_answer` polls. You must provide at least a one character minimum value
    @jsondata:Name {value: "answer_min_character"}
    int answerMinCharacter?;
    # The rating scale's minimum value. This value cannot be less than zero. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_min_value"}
    int ratingMinValue?;
    # The poll question's available answers. This field requires a **minimum** of two answers. 
    #
    # * For `single` and `multiple` polls, you can only provide a maximum of 10 answers. 
    # * For `matching` polls, you can only provide a maximum of 16 answers. 
    # * For `rank_order` polls, you can only provide a maximum of seven answers
    @constraint:Array {minLength: 2}
    string[] answers?;
    # The poll's question and answer type. 
    # * `single` - Single choice. 
    # * `multiple` - Multiple choice. 
    # * `matching` - Matching. 
    # * `rank_order` - Rank order. 
    # * `short_answer` - Short answer. 
    # * `long_answer` - Long answer. 
    # * `fill_in_the_blank` - Fill in the blank. 
    # * `rating_scale` - Rating scale
    "single"|"multiple"|"matching"|"rank_order"|"short_answer"|"long_answer"|"fill_in_the_blank"|"rating_scale" 'type?;
    # The allowed maximum number of characters. This field only applies to `short_answer` and `long_answer` polls. 
    # * For `short_answer` polls, a maximum of 500 characters. 
    # * For `long_answer` polls, a maximum of 2,000 characters
    @jsondata:Name {value: "answer_max_character"}
    int answerMaxCharacter?;
    # The rating scale's maximum value, up to a maximum value of 10. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_max_value"}
    int ratingMaxValue?;
    # The poll question's correct answer(s). This field is **required** if the poll's `type` value is `3` (Quiz). 
    #
    # For `single` and `matching` polls, this field only accepts one answer
    @jsondata:Name {value: "right_answers"}
    string[] rightAnswers?;
    # Whether to display the radio selection as a drop-down box. 
    # * `true` - Show as a drop-down box. 
    # * `false` - Do not show as a drop-down box. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "show_as_dropdown"}
    boolean showAsDropdown = false;
    # The low score label for the `rating_min_value` field. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_min_label"}
    string ratingMinLabel?;
    # Whether the correct answer is case sensitive. This field only applies to `fill_in_the_blank` polls: 
    # * `true` - The answer is case-sensitive. 
    # * `false` - The answer is not case-sensitive. 
    #
    # This value defaults to `false`
    @jsondata:Name {value: "case_sensitive"}
    boolean caseSensitive = false;
    # The poll question, up to 1024 characters. 
    #
    # For `fill_in_the_blank` polls, this field is the poll's question. For each value that the user must fill in, ensure that there are the same number of `right_answers` values
    @constraint:String {maxLength: 1024}
    string name?;
    # The high score label for the `rating_max_value` field. 
    #
    # This field only applies to the `rating_scale` poll
    @jsondata:Name {value: "rating_max_label"}
    string ratingMaxLabel?;
    # The information about the prompt questions. This field only applies to `matching` and `rank_order` polls. You must provide a minimum of two prompts, up to a maximum of 10 prompts
    MeetingsmeetingIdbatchPollsPrompts[] prompts?;
};

public type InlineResponse20050Questions record {
    # Information about the user's questions and answers
    @jsondata:Name {value: "question_details"}
    InlineResponse20050QuestionDetails[] questionDetails?;
    # The participant's display name. **Allow participants to answer questions anonymously** setting is enabled for a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet), the participant's polling information is kept anonymous and the `name` field will return the &quot;Anonymous Attendee&quot; value
    string name?;
    # The participant's last name. If the **Allow participants to answer questions anonymously** setting is enabled for a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet), the participant's polling information is kept anonymous and the `last_name` field will return the &quot;Anonymous Attendee&quot; value
    @jsondata:Name {value: "last_name"}
    string lastName?;
    # The participant's first name. If the **Allow participants to answer questions anonymously** setting is enabled for a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet), the participant's polling information is kept anonymous and the `first_name` field will return the &quot;Anonymous Attendee&quot; value
    @jsondata:Name {value: "first_name"}
    string firstName?;
    # The participant's email address
    string email?;
};

public type MeetingsmeetingIdrecordingsregistrantsstatusRegistrants record {
    string id?;
};

# Information about the version list
public type InlineResponse20010 record {
    # List of app versions that can be upgraded
    @jsondata:Name {value: "app_versions"}
    string[] appVersions?;
    # List of firmware that can be upgraded
    @jsondata:Name {value: "firmware_versions"}
    InlineResponse20010FirmwareVersions[] firmwareVersions?;
};

public type InlineResponse20012 record {
    # The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
    @jsondata:Name {value: "next_page_token"}
    string nextPageToken?;
    # The start date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to retrieve the creation date range of the meeting summaries
    string 'from?;
    # The end date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to retrieve the creation date range of the meeting summaries
    string to?;
    # The number of records returned with a single API call
    @jsondata:Name {value: "page_size"}
    int pageSize = 30;
    # List of meeting summary objects
    InlineResponse20012Summaries[] summaries?;
};

# Information about the device
public type InlineResponse20011 record {
    # The Zoom Room's ID
    @jsondata:Name {value: "room_id"}
    string roomId?;
    # Whether the device is connected to ZDM (Zoom Device Management)
    @jsondata:Name {value: "connected_to_zdm"}
    boolean connectedToZdm?;
    # Filter devices by status.  
    # Device Status:  
    # `0` - offline.  
    # `1` - online.  
    # `-1` - unlink
    @jsondata:Name {value: "device_status"}
    -1|0|1 deviceStatus?;
    # Whether the device is enrolled in ZDM (Zoom Device Management)
    @jsondata:Name {value: "enrolled_in_zdm"}
    boolean enrolledInZdm?;
    # The phone device's owner
    @jsondata:Name {value: "user_email"}
    string userEmail?;
    # The device's unique identifier
    @jsondata:Name {value: "device_id"}
    string deviceId?;
    # App version of Zoom Rooms
    @jsondata:Name {value: "app_version"}
    string appVersion?;
    # The device's serial number
    @jsondata:Name {value: "serial_number"}
    string serialNumber?;
    # Filter devices by device type.  
    # Device Type:  
    # `-1` - All Zoom Room device(0,1,2,3,4,6).  
    # `0` - Zoom Rooms Computer.  
    # `1` - Zoom Rooms Controller.  
    # `2` - Zoom Rooms Scheduling Display.  
    # `3` - Zoom Rooms Control System.  
    # `4` - Zoom Rooms Whiteboard.  
    # `5` - Zoom Phone Appliance.  
    # `6` - Zoom Rooms Computer (with Controller)
    @jsondata:Name {value: "device_type"}
    0|1|2|3|4|5|6 deviceType?;
    # The time when the device was last online
    @jsondata:Name {value: "last_online"}
    string lastOnline?;
    # The device's platform
    @jsondata:Name {value: "platform_os"}
    string platformOs?;
    # The Zoom Room's name
    @jsondata:Name {value: "room_name"}
    string roomName?;
    # The name of the device
    @jsondata:Name {value: "device_name"}
    string deviceName?;
    # The device's MAC address
    @jsondata:Name {value: "mac_address"}
    string macAddress?;
    # The device's manufacturer
    string vendor?;
    # The SDK version
    @jsondata:Name {value: "sdk_version"}
    string sdkVersion?;
    # The device's model
    string model?;
    # The tag's name
    string tag?;
};

public type PhonesphoneIdBody record {
    # Defined a set of basic components of SIP network architecture, including proxy_server, register_server and transport_protocol
    SipPhonesphonesServer server?;
    # The password generated for the user in the SIP account
    string password?;
    @jsondata:Name {value: "server_3"}
    SipPhonesphonesServer server3?;
    # The number to dial for checking voicemail
    @jsondata:Name {value: "voice_mail"}
    string voiceMail?;
    @jsondata:Name {value: "server_2"}
    SipPhonesphonesServer server2?;
    # The phone number associated with the user in the SIP account
    @jsondata:Name {value: "user_name"}
    string userName?;
    # The name or IP address of your provider's SIP domain, such as example.com. 
    @constraint:String {maxLength: 64}
    string domain?;
    # The displayed phone number associated with the user can be either in extension format or E.164 format. You can specify the displayed number when the dialable number differs from the SIP username
    @jsondata:Name {value: "display_number"}
    string displayNumber?;
    # The authorization name of the user that is registered for SIP phone
    @jsondata:Name {value: "authorization_name"}
    string authorizationName?;
    # The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server
    @jsondata:Name {value: "registration_expire_time"}
    int registrationExpireTime = 60;
};

# Information about the meeting's join token
public type InlineResponse20014 record {
    # The number of seconds the join token is valid for before it expires. This value always returns `120`
    @jsondata:Name {value: "expire_in"}
    120 expireIn?;
    # The join token
    string token?;
};

# Meeting object
public type InlineResponse20013 record {
    # Array of occurrence objects
    InlineResponse20013Occurrences[] occurrences?;
    # The URL to join the chat
    @jsondata:Name {value: "chat_join_url"}
    string chatJoinUrl?;
    # The ID of the user who scheduled this meeting on behalf of the host
    @jsondata:Name {value: "assistant_id"}
    string assistantId?;
    # The timezone to format the meeting start time
    string timezone?;
    # The `start_url` of a meeting is a URL that a host or an alternative host can start the meeting. 
    #
    # The expiration time for the `start_url` field listed in the response of the [**Create a meeting**](/docs/api/rest/reference/zoom-api/methods#operation/meetingCreate) API is two hours for all regular users. 
    #
    # For users created using the `custCreate` option via the [**Create users**](/docs/api/rest/reference/zoom-api/methods#operation/userCreate) API, the expiration time of the `start_url` field is 90 days.
    #
    # For security reasons, to retrieve the updated value for the `start_url` field programmatically after the expiry time, you must call the [**Get a meeting](/docs/api/rest/reference/zoom-api/methods#operation/meeting) API and refer to the value of the `start_url` field in the response.  
    # This URL should only be used by the host of the meeting and **should not be shared with anyone other than the host** of the meeting as anyone with this URL will be able to login to the Zoom Client as the host of the meeting
    @jsondata:Name {value: "start_url"}
    string startUrl?;
    # The creation time. 
    @jsondata:Name {value: "created_at"}
    string createdAt?;
    # The type of meeting. 
    # * `1` - An instant meeting. 
    # * `2` - A scheduled meeting. 
    # * `3` - A recurring meeting with no fixed time. 
    # * `4` - A PMI Meeting. 
    # * `8` - A recurring meeting with fixed time. 
    # * `10` - A screen share only meeting
    1|2|3|4|8|10 'type = 2;
    # Unique meeting ID. Each meeting instance generates its own meeting UUID - after a meeting ends, a new UUID is generated for the next instance of the meeting. Retrieve a list of UUIDs from past meeting instances using the [**List past meeting instances**](/docs/api/rest/reference/zoom-api/methods#operation/pastMeetings) API. [Double encode](/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a `/` or contains `//` in it
    string uuid?;
    # [Personal meeting ID (PMI)](/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi). Only used for scheduled meetings and recurring meetings with no fixed time
    string pmi?;
    # The meeting duration
    int duration?;
    # Meeting passcode
    string password?;
    # [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in **long** format, represented as int64 data type in JSON, also known as the meeting number
    int id?;
    # The meeting host's email address
    @jsondata:Name {value: "host_email"}
    string hostEmail?;
    # Encrypted passcode for third party endpoints (H323/SIP)
    @jsondata:Name {value: "encrypted_password"}
    string encryptedPassword?;
    # Meeting settings
    InlineResponse20013Settings settings?;
    # The URL for participants to join the meeting. This URL should only be shared with users invited to the meeting
    @jsondata:Name {value: "join_url"}
    string joinUrl?;
    # Password for participants to join the meeting via [PSTN](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)
    @jsondata:Name {value: "pstn_password"}
    string pstnPassword?;
    # Whether the prescheduled meeting was created via the [GSuite app](https://support.zoom.us/hc/en-us/articles/360020187492-Zoom-for-GSuite-add-on). This **only** supports the meeting `type` value of `2` (scheduled meetings) and `3` (recurring meetings with no fixed time). 
    # * `true` - A GSuite prescheduled meeting. 
    # * `false` - A regular meeting
    @jsondata:Name {value: "pre_schedule"}
    boolean preSchedule = false;
    # The meeting description
    @constraint:String {maxLength: 2000}
    string agenda?;
    # The ID of the user who is set as the meeting host
    @jsondata:Name {value: "host_id"}
    string hostId?;
    # Recurrence object. Use this object only for a meeting with type `8`, a recurring meeting with a fixed time. 
    InlineResponse20013Recurrence recurrence?;
    # Meeting start time in GMT or UTC. Start time will not be returned if the meeting is an **instant** meeting. 
    @jsondata:Name {value: "start_time"}
    string startTime?;
    # The meeting dynamic host key
    @jsondata:Name {value: "dynamic_host_key"}
    string dynamicHostKey?;
    # Tracking fields
    @jsondata:Name {value: "tracking_fields"}
    InlineResponse20013TrackingFields[] trackingFields?;
    # The platform used when creating the meeting.
    # * `other` - Created through another platform.
    # * `open_api` - Created through Open API.
    # * `web_portal` - Created through the web portal
    @jsondata:Name {value: "creation_source"}
    "other"|"open_api"|"web_portal" creationSource?;
    # H.323/SIP room system passcode
    @jsondata:Name {value: "h323_password"}
    string h323Password?;
    # Meeting topic
    string topic?;
    # Meeting status
    "waiting"|"started" status?;
};

public type InlineResponse20053Phones record {
    # The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address
    @jsondata:Name {value: "register_server3"}
    string registerServer3?;
    # The email address of the user to associate with the SIP Phone. Can add `.win`, `.mac`, `.android`, `.ipad`, `.iphone`, `.linux`, `.pc`, `.mobile`, `.pad` at the end of the email (for example, `user@example.com.mac`) to add accounts for different platforms for the same user
    @jsondata:Name {value: "user_email"}
    string userEmail?;
    # Protocols supported by the SIP provider.  
    # The value must be either `UDP`, `TCP`, `TLS`, `AUTO`
    @jsondata:Name {value: "transport_protocol3"}
    "UDP"|"TCP"|"TLS"|"AUTO" transportProtocol3?;
    # The phone number associated with the user in the SIP account. 
    @jsondata:Name {value: "user_name"}
    string userName?;
    # The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address
    @jsondata:Name {value: "register_server2"}
    string registerServer2?;
    # Protocols supported by the SIP provider.  
    # The value must be either `UDP`, `TCP`, `TLS`, `AUTO`
    @jsondata:Name {value: "transport_protocol2"}
    "UDP"|"TCP"|"TLS"|"AUTO" transportProtocol2?;
    # The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty
    @jsondata:Name {value: "proxy_server"}
    string proxyServer?;
    # The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty
    @jsondata:Name {value: "proxy_server2"}
    string proxyServer2?;
    # The IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty
    @jsondata:Name {value: "proxy_server3"}
    string proxyServer3?;
    # The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server. 
    @jsondata:Name {value: "registration_expire_time"}
    int registrationExpireTime?;
    # The password generated for the user in the SIP account
    string password?;
    # The number to dial for checking voicemail
    @jsondata:Name {value: "voice_mail"}
    string voiceMail?;
    # The name or IP address of your provider's SIP domain
    string domain?;
    # The IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address
    @jsondata:Name {value: "register_server"}
    string registerServer?;
    # The authorization name of the user that is registered for SIP phone
    @jsondata:Name {value: "authorization_name"}
    string authorizationName?;
    # The SIP phone ID
    string id?;
    # Protocols supported by the SIP provider.  
    # The value must be either `UDP`, `TCP`, `TLS`, `AUTO`
    @jsondata:Name {value: "transport_protocol"}
    "UDP"|"TCP"|"TLS"|"AUTO" transportProtocol?;
};

# Information about the meeting's local recorder join token
public type InlineResponse20016 record {
    # The number of seconds the join token is valid for before it expires. This value always returns `120`
    @jsondata:Name {value: "expire_in"}
    120 expireIn?;
    # The join token
    string token?;
};

# Information about the meeting's local archive token
public type InlineResponse20015 record {
    # The number of seconds the archive token is valid for before it expires. This value always returns `120`
    @jsondata:Name {value: "expire_in"}
    120 expireIn?;
    # The archive token
    string token?;
};

public type InlineResponse20018 record {
    # The ID of the user who is set as the meeting host
    @jsondata:Name {value: "meeting_host_id"}
    string meetingHostId?;
    # The meeting topic
    @jsondata:Name {value: "meeting_topic"}
    string meetingTopic?;
    # The user email of the user who last modified the meeting summary
    @jsondata:Name {value: "summary_last_modified_user_email"}
    string summaryLastModifiedUserEmail?;
    # The summary's start date and time
    @jsondata:Name {value: "summary_start_time"}
    string summaryStartTime?;
    # The date and time when the meeting summary was last modified
    @jsondata:Name {value: "summary_last_modified_time"}
    string summaryLastModifiedTime?;
    # [The meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-) 
    # The meeting's unique identifier in **long** format, represented as int64 data type in JSON. Also known as the meeting number
    @jsondata:Name {value: "meeting_id"}
    int meetingId?;
    # The unique meeting ID. 
    #
    # Each meeting instance generates its own meeting UUID. After a meeting ends, a new UUID is generated for the next instance of the meeting.
    #
    # Use the [**List past meeting instances**](/docs/api-reference/zoom-api/methods#operation/pastMeetings) API to retrieve a list of UUIDs from past meeting instances. [Double encode](/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a `/` or contains `//` in it
    @jsondata:Name {value: "meeting_uuid"}
    string meetingUuid?;
    @jsondata:Name {value: "edited_summary"}
    InlineResponse20018EditedSummary editedSummary?;
    # The summary's end date and time
    @jsondata:Name {value: "summary_end_time"}
    string summaryEndTime?;
    # The date and time when the meeting summary was created
    @jsondata:Name {value: "summary_created_time"}
    string summaryCreatedTime?;
    # The meeting's end date and time
    @jsondata:Name {value: "meeting_end_time"}
    string meetingEndTime?;
    # The user ID of the user who last modified the meeting summary
    @jsondata:Name {value: "summary_last_modified_user_id"}
    string summaryLastModifiedUserId?;
    # The next steps
    #
    # # Deprecated
    @jsondata:Name {value: "next_steps"}
    @deprecated
    string[] nextSteps?;
    # The summary overview
    #
    # # Deprecated
    @jsondata:Name {value: "summary_overview"}
    @deprecated
    string summaryOverview?;
    # The summary content details
    #
    # # Deprecated
    @jsondata:Name {value: "summary_details"}
    @deprecated
    InlineResponse20018SummaryDetails[] summaryDetails?;
    # The complete meeting summary in Markdown format. This unified field is used for all summaries. For compatibility, the legacy fields `summary_overview`, `summary_details`, `next_steps`, and `edited_summary` are still returned, but are deprecated and will not be supported in the future
    @jsondata:Name {value: "summary_content"}
    string summaryContent?;
    # The summary title
    @jsondata:Name {value: "summary_title"}
    string summaryTitle?;
    # The meeting host's email address
    @jsondata:Name {value: "meeting_host_email"}
    string meetingHostEmail?;
    # The meeting's start date and time
    @jsondata:Name {value: "meeting_start_time"}
    string meetingStartTime?;
};

public type InlineResponse20017 record {
    # Live streaming page URL. This is the URL using which anyone can view the livestream of the meeting
    @jsondata:Name {value: "page_url"}
    string pageUrl?;
    # The number of pixels in each dimension that the video camera can display
    string resolution?;
    # Stream Key
    @jsondata:Name {value: "stream_key"}
    string streamKey?;
    # Stream URL
    @jsondata:Name {value: "stream_url"}
    string streamUrl?;
};

# Represents the Queries record for the operation: webinarRegistrants
public type WebinarRegistrantsQueries record {
    # **Deprecated** This field will be deprecated. We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination
    @http:Query {name: "page_number"}
    int pageNumber = 1;
    # Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes
    @http:Query {name: "next_page_token"}
    string nextPageToken?;
    # The meeting or webinar occurrence ID
    @http:Query {name: "occurrence_id"}
    string occurrenceId?;
    # The tracking source ID for the registrants. Useful if you share the webinar registration page in multiple locations. See [Creating source tracking links for webinar registration](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-source-tracking-links-for-webinar-registration) for details
    @http:Query {name: "tracking_source_id"}
    string trackingSourceId?;
    # Query by the registrant's status. 
    # * `pending` - The registration is pending. 
    # * `approved` - The registrant is approved. 
    # * `denied` - The registration is denied
    "pending"|"approved"|"denied" status = "approved";
    # The number of records returned within a single API call
    @http:Query {name: "page_size"}
    int pageSize = 30;
};
